C****************************************************************
C****************************************************************
C**VIB
C****************************************************************
C****************************************************************
      SUBROUTINE CONTRA(NB,MB,H,XQ,V,OMEGA,SUP4,XK,SK,YK,MODE,NVF,
     1NMODE,EVAL,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL TRIAT,LINEAR
      DIMENSION NVF(NMODE),MODINT(NMODE),YK(NB,NB),SK(NB,NB)
      DIMENSION H(NB,MB,3),XQ(MB),V(MB),XK(NB,NB),EVAL(MB)
      DIMENSION SUP4(MB)
      COMMON/REACTL/JREACT,IFITRP
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/TYPE/LINEAR
      COMMON/TRIATO/TRIAT
      COMMON/DEGEN/IDEGEN,NDEGEN
      COMMON/VMIN/VMIN
      COMMON/FILASS/IOUT,INP
C**H CONTAINS ORIGINAL PRIMITIVES SIZE NB < MB
      DO IX=1,NB
        DO IY=1,IX
          XK(IY,IX)=0
        END DO
      END DO
C************************************************************
      MD=MODINT(MODE)
C**TEMPORARY
C     IF(JREACT.GT.0.OR.(LINEAR.AND.MODE.GT.NONLIN.AND..NOT.TRIAT))THEN
C       DO I=1,NWSYM
C         DO J=1,NSYM(I)
C           IF(MODE.EQ.ISYM(I,J))N1=I
C           IF(NSMODE.EQ.ISYM(I,J))NT=I
C         END DO
C       END DO
C       IF(N1.EQ.NT)MD=1
C     END IF
C**TEMPORARY
C************************************************************
      CALL THISKE(H,XQ,NB,MB,MODE,XK,MODINT,OMEGA)
      DO M=1,MB/MD
        VV=V(M)
        WRITE(IOUT,*)'V = ',(VV-VMIN)*WAVENM
        DO IRHS=1,NB
          ILINIT=MD-MOD(IRHS,MD)
          X=H(IRHS,M,1)*MD
          DO ILHS=ILINIT,IRHS,MD
            Y=H(ILHS,M,1)
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y*X*VV
          END DO
        END DO
      END DO
      NV=NVF(MODE)
      DO I=1,MD
        IDEGEN=I
        NR=0
        DO IR=IDEGEN,NB,MD
          NR=NR+1
          NL=0
          DO IL=IDEGEN,IR,MD
            NL=NL+1
            SK(NL,NR)=XK(IL,IR)
          END DO
        END DO
        NDEGEN=NR
        CALL DIAG(SK,SK,NB,NDEGEN,-1,SUP4,EVAL,SUP4,NV,NV,SK,NB,NB,SK,
     1  SK,SK,IDUM,IDUM,IDUM)
C**TEMPORARY
        IF(IDEGEN.EQ.1)EVAL0=EVAL(1)*WAVENM
        WRITE(IOUT,*)'EVAL0 = ',EVAL0
        WRITE(IOUT,*)'EVAL = ',(EVAL(K)*WAVENM-EVAL0,K=3-IDEGEN,NDEGEN)
C**TEMPORARY
        CALL REFORM(H,NB,SK,NB,NV,MB,SUP4,XK,SK,MODE,1,EVAL,MODINT)
        NR=0
        DO IR=IDEGEN,NB,MD
          NR=NR+1
          NL=0
          DO IL=IDEGEN,NB,MD
            NL=NL+1
            YK(IL,IR)=SK(NL,NR)
          END DO
        END DO
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE MTZERO(XK,N)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION XK(N,N)
      DO IRHS=1,N
        DO ILHS=1,IRHS
          XK(ILHS,IRHS)=0
        END DO
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE SELECT(ISTAT,NSTAT,NMODE,ISTATE,MK2,IK1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION ISTAT(NSTAT,NMODE)
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      ITHATM=ISTAT(ISTATE,NSMODE)
C     IF(MOD(ITHATM-1,8).EQ.0)RETURN
      MK2=IK1
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THISKE(H,XQ,NN,MM,MODE,XK,MODINT,OMEGA)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION H(NN,MM,3),XQ(MM),XK(NN,NN),MODINT(1)
      COMMON/REACTL/JREACT,IFITRP
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/WHICH/IWHICH
      COMMON/FILASS/IOUT,INP
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
C**ZERO ORDER KINETIC ENERGY TERM
C************************************************************
      MD=MODINT(MODE)
C     IF(JREACT.GT.0.OR.(JREACT.LT.0.AND.MODE.GT.NONLIN))THEN
C       DO I=1,NWSYM
C         DO J=1,NSYM(I)
C           IF(MODE.EQ.ISYM(I,J))N1=I
C           IF(NSMODE.EQ.ISYM(I,J))NT=I
C         END DO
C       END DO
C       IF(N1.EQ.NT)MD=1
C     END IF
C************************************************************
      DO M=1,MM/MD
        Q=XQ(M)
        IF(IWHICH.EQ.0)THEN
          VHARM=OMEGA*OMEGA*Q*Q/2
        ELSE
          VHARM=0
        END IF
        DO IRHS=1,NN
          ILINIT=MD-MOD(IRHS,MD)
          X=(-H(IRHS,M,3)/2+VHARM*H(IRHS,M,1))*MD
          DO ILHS=ILINIT,IRHS,MD
            Y=H(ILHS,M,1)
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y*X
          END DO
        END DO
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THATKE(ISTAT,NSTAT,NMODE,ISTATE,MODE,H,XQ,NN,MM,XK,
     1KXK,MODINT,OMEGA)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK),MODINT(NMODE)
      DIMENSION H(NN,MM,3),XQ(MM)
      COMMON/WHICH/IWHICH
      COMMON/FILASS/IOUT,INP
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
C**ZERO ORDER KINETIC ENERGY TERM
      ITHAT=ISTAT(ISTATE,MODE)
      TERM=0
      MD=MODINT(MODE)
      DO M=1,MM/MD
        Q=XQ(M)
        IF(IWHICH.EQ.0)THEN
          VHARM=OMEGA*OMEGA*Q*Q/2
        ELSE
          VHARM=0
        END IF
        X=-H(ITHAT,M,3)/2+VHARM*H(ITHAT,M,1)
        Y=H(ITHAT,M,1)
        TERM=TERM+Y*X
      END DO
      DO IRLHS=1,KXK
        XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM*MD
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TAUM0(HTAU,XQTAU,NNTAU,MMTAU,XK,OV,KXK,NMODE,VC,VCR,
     1MODINT,MDTAU,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP,VC(3)
      REAL*4 VPR,VCR(3)
      DIMENSION X(3)
      DIMENSION MODINT(NMODE)
      DIMENSION XK(KXK,KXK),OV(KXK,KXK)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/SINCOS/ICS
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(IPRINT.GT.1)THEN
        WRITE(IOUT,*)'Calculating TAUM0'
        CALL TIMIT(1)
        CALL FLUSH(IOUT)
      END IF

      MDT=MODINT(NSMODE)
      MDTAU=MMTAU/MDT
C**LOOP ROUND TAU
      ITAU=INIT-INCTAU
      DO MTAU=1,MDTAU
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720

C***********************************************************

        IF(JCOUPL.GE.0)THEN
          READ(71)VP
        ELSE
          READ(71)VPR
        END IF
        IF(JCOUPC.GE.0)THEN
          READ(81)VC
        ELSE
          READ(81)VCR
        END IF

C***********************************************************

        IF(JCOUPL.GE.0)THEN
          VV=VP*DSTAU(ITAU)
        ELSE
          VV=VPR*DSTAU(ITAU)
        END IF
        DO I=1,3
          X(I)=0
        END DO
        IF(JCOUPC.GE.0)THEN
          DO I=1,3
            X(I)=VC(I)*DSTAU(ITAU)
          END DO
        ELSE
          DO I=1,3
            X(I)=VCR(I)*DSTAU(ITAU)
          END DO
        END IF
        X(3)=X(3)+VV
        DO IRH=1,KXK
          IRHS=2*IRH-(ICS-1)+(2-IND)*(ICS-1)*2
C**EVEN TERMS
          X1E=HTAU(IRHS,MTAU,1,IND)*X(3)*MDT
          X2E=HTAU(IRHS,MTAU,2,IND)*X(2)*MDT
          SR1=HTAU(IRHS,MTAU,1,IND)*DSTAU(ITAU)*MDT
C**ODD TERMS
          X1O=HTAU(IRHS,MTAU,2,IND)*X(1)*MDT
          X2O=HTAU(IRHS,MTAU,1,IND)*X(1)*MDT
          DO ILH=1,IRH
            ILHS=2*ILH-(ICS-1)+(2-IND)*(ICS-1)*2
            Y1=HTAU(ILHS,MTAU,1,IND)
            Y2=HTAU(ILHS,MTAU,2,IND)
            SL1=HTAU(ILHS,MTAU,1,IND)
            XK(ILH,IRH)=XK(ILH,IRH)+(Y1*X1E+Y2*X2E)
            XK(ILH,IRH)=XK(ILH,IRH)+(Y1*X1O+Y2*X2O)
            OV(ILH,IRH)=OV(ILH,IRH)+SR1*SL1
          END DO
        END DO
      END DO
      IF(IPRINT.GT.1)CALL TIMIT(3)
      CALL FLUSH(IOUT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THAT0(NMODE,XK,KXK,VK,VKR,J21,KROT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V,VM(6),VK(J21),VP
      REAL*4 VR,VMR(6),VKR(J21),VPR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION XK(KXK,KXK)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6),FACTS(6)
      COMMON/MUREF/V,VM,VR,VMR
      COMMON/POTREF/VP,VPR
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/FILASS/IOUT,INP

C**POTENTIAL AT REFERENCE
C**ONE-MODE CONSTANTS
      IFACT=0
      IF(ICOUPL.EQ.1)IFACT=1
      IF(ICOUPL.EQ.2)IFACT=-(NMODE-2)
      IF(ICOUPL.EQ.3)THEN
        IFACT=(NMODE-3)*(NMODE-1)
        DO I=2,NMODE-2
          IFACT=IFACT-I
        END DO
      END IF
      IF(ICOUPL.EQ.4)THEN
        IFACT=-(NMODE-4)*(NMODE-3)*(NMODE-1)
        DO I=1,NMODE-4
          IFACT=IFACT-I*(NMODE-3-I)
        END DO
        DO I=1,NMODE-4
          IFACT=IFACT+(NMODE-2)*I
        END DO
        DO I=2,NMODE-2
          IFACT=IFACT+(NMODE-4)*I
        END DO
      END IF
      IF(ICOUPL.EQ.5)IFACT=INTFAC(NMODE,ICOUPL,1)
      IF(ICOUPL.EQ.6)IFACT=INTFAC(NMODE,ICOUPL,1)
      FACTS(1)=IFACT
C**TWO-MODE CONSTANTS
      IFACT=0
      IF(ICOUPL.EQ.2)IFACT=1
      IF(ICOUPL.EQ.3)IFACT=-(NMODE-3)
      IF(ICOUPL.EQ.4)THEN
        IFACT=(NMODE-4)*(NMODE-3)
        DO I=1,NMODE-4
          IFACT=IFACT-I
        END DO
      END IF
      IF(ICOUPL.EQ.5)IFACT=INTFAC(NMODE,ICOUPL,2)
      IF(ICOUPL.EQ.6)IFACT=INTFAC(NMODE,ICOUPL,2)
      FACTS(2)=IFACT
C**THREE-MODE CONSTANTS
      IFACT=0
      IF(ICOUPL.EQ.3)IFACT=1
      IF(ICOUPL.EQ.4)IFACT=-(NMODE-4)
      IF(ICOUPL.EQ.5)IFACT=INTFAC(NMODE,ICOUPL,3)
      IF(ICOUPL.EQ.6)IFACT=INTFAC(NMODE,ICOUPL,3)
      FACTS(3)=IFACT
C**FOUR-MODE CONSTANTS
      IFACT=0
      IF(ICOUPL.EQ.4)IFACT=1
      IF(ICOUPL.EQ.5)IFACT=INTFAC(NMODE,ICOUPL,4)
      IF(ICOUPL.EQ.6)IFACT=INTFAC(NMODE,ICOUPL,4)
      FACTS(4)=IFACT
C**FIVE-MODE CONSTANTS
      IFACT=0
      IF(ICOUPL.EQ.5)IFACT=1
      IF(ICOUPL.EQ.6)IFACT=INTFAC(NMODE,ICOUPL,5)
      FACTS(5)=IFACT
C**SIX-MODE CONSTANTS
      IFACT=0
      IF(ICOUPL.EQ.6)IFACT=1
      FACTS(6)=IFACT
      FACT=1
      DO I=1,ICOUPL
        FACT=FACT-FACTOR(I)*FACTS(I)
      END DO

      FACT=1
      DO I=1,ICOUPL
        FACT=FACT-FACTOR(I)*FACTS(I)
      END DO
C**INTRINSIC
      IF(MOLINC.GT.0)FACT=1
C**INTRINSIC

C**POTENTIAL
      DO IRLHS=1,KXK
        IF(JCOUPL.GE.0)XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+VP*FACT
        IF(JCOUPL.LT.0)XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+VRP*FACT
      END DO

C**CORIOLIS AT REFERENCE
C**ONE-MODE CONSTANTS
      IFACT=0
      IF(ICOUPC.EQ.1)IFACT=1
      IF(ICOUPC.EQ.2)IFACT=-(NMODE-2)
      IF(ICOUPC.EQ.3)THEN
        IFACT=(NMODE-3)*(NMODE-1)
        DO I=2,NMODE-2
          IFACT=IFACT-I
        END DO
      END IF
      IF(ICOUPC.EQ.4)THEN
        IFACT=-(NMODE-4)*(NMODE-3)*(NMODE-1)
        DO I=1,NMODE-4
          IFACT=IFACT-I*(NMODE-3-I)
        END DO
        DO I=1,NMODE-4
          IFACT=IFACT+(NMODE-2)*I
        END DO
        DO I=2,NMODE-2
          IFACT=IFACT+(NMODE-4)*I
        END DO
      END IF
      IF(ICOUPC.EQ.5)IFACT=INTFAC(NMODE,ICOUPC,1)
      IF(ICOUPC.EQ.6)IFACT=INTFAC(NMODE,ICOUPC,1)
      FACTS(1)=IFACT
C**TWO-MODE CONSTANTS
      IFACT=0
      IF(ICOUPC.EQ.2)IFACT=1
      IF(ICOUPC.EQ.3)IFACT=-(NMODE-3)
      IF(ICOUPC.EQ.4)THEN
        IFACT=(NMODE-4)*(NMODE-3)
        DO I=1,NMODE-4
          IFACT=IFACT-I
        END DO
      END IF
      IF(ICOUPC.EQ.5)IFACT=INTFAC(NMODE,ICOUPC,2)
      IF(ICOUPC.EQ.6)IFACT=INTFAC(NMODE,ICOUPC,2)
      FACTS(2)=IFACT
C**THREE-MODE CONSTANTS
      IFACT=0
      IF(ICOUPC.EQ.3)IFACT=1
      IF(ICOUPC.EQ.4)IFACT=-(NMODE-4)
      IF(ICOUPC.EQ.5)IFACT=INTFAC(NMODE,ICOUPC,3)
      IF(ICOUPC.EQ.6)IFACT=INTFAC(NMODE,ICOUPC,3)
      FACTS(3)=IFACT
C**FOUR-MODE CONSTANTS
      IFACT=0
      IF(ICOUPC.EQ.4)IFACT=1
      IF(ICOUPC.EQ.5)IFACT=INTFAC(NMODE,ICOUPC,4)
      IF(ICOUPC.EQ.6)IFACT=INTFAC(NMODE,ICOUPC,4)
      FACTS(4)=IFACT
C**FIVE-MODE CONSTANTS
      IFACT=0
      IF(ICOUPC.EQ.5)IFACT=1
      IF(ICOUPC.EQ.6)IFACT=INTFAC(NMODE,ICOUPC,5)
      FACTS(5)=IFACT
C**SIX-MODE CONSTANTS
      IFACT=0
      IF(ICOUPC.EQ.6)IFACT=1
      FACTS(6)=IFACT
      FACT=1
      DO I=1,ICOUPC
        FACT=FACT-FACTOR(I)*FACTS(I)
      END DO
C**INTRINSIC
      IF(MOLINC.GT.0)FACT=1
C**INTRINSIC

C**WATSON
      DO IRLHS=1,KXK
        IF(JCOUPC.GE.0)XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+V*FACT
        IF(JCOUPC.LT.0)XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+VR*FACT
      END DO 
C**ROTATION
      IF(J21.GT.1)THEN
        DO IRLHS=1,KXK
          IF(JCOUPC.GE.0)XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+VK(KROT)*FACT
          IF(JCOUPC.LT.0)XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+VKR(KROT)*FACT
        END DO
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TMIS0(HTAU,XQTAU,NNTAU,MMTAU,XK,KXK,NMODE,VC,VCR,VR,
     1VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP,VC(3),VR(J21)
      REAL*4 VPR,VCR(3),VRR(J21)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION X(3)
      DIMENSION MODINT(NMODE)
      DIMENSION XK(KXK,KXK)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM1B.EQ.1)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TMIS0'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(IFITRP.EQ.0)THEN
        IFACTL=JNTFAC(NMODE,ICOUPL,0)
      ELSE
        IFACTL=JNTFAC(NMODE,IABS(IFITRP)-1,0)
      END IF
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=JNTFAC(NMODE,ICOUPC,0)
      IF(MOLINC.GT.0)IFACTC=1

      KA=K/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      MDT=MODINT(NSMODE)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(NSMODE.EQ.ISYM(I,J))NTSYM=I
        END DO
      END DO
      IF(NTSYM.EQ.1)THEN
        MD=1
      ELSE
        MD=2
      END IF

C**LOOP ROUND TAU
      ITAU=INIT-INCTAU
      DO MTAU=1,MMTAU/MDT
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.0)READ(61)VR
          IF(ICOUPC.GE.0)READ(81)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.0)READ(61)VRR
          IF(ICOUPC.GE.0)READ(81)VCR
        END IF
        IF(JCOUPL.GE.0)THEN
          READ(71)VP
          VV=VP*IFACTL*DSTAU(ITAU)
        ELSE
          READ(71)VPR
          VV=VPR*IFACTL*DSTAU(ITAU)
        END IF
        DO I=1,3
          X(I)=0
        END DO
        IF(JCOUPC.GE.0)THEN
          IF(ICOUPC.GE.0)THEN
            VV=VV+VR(K)*FACTRC*DSTAU(ITAU)
            DO I=1,3
              X(I)=VC(I)*IFACTC*DSTAU(ITAU)
            END DO
          END IF
        ELSE
          IF(ICOUPC.GE.0)THEN
            VV=VV+VRR(K)*FACTRC*DSTAU(ITAU)
            DO I=1,3
              X(I)=VCR(I)*IFACTC*DSTAU(ITAU)
            END DO
          END IF
        END IF
        X(3)=X(3)+VV

C***********************************************************

        DO IRH=1,NNTAU-1+MOD(KA,2)-INCT
          ILINE=MD-MOD(IRH,MD)
          IRHS=IRH+1-MOD(KA,2)+INCT
C**EVEN TERMS
          X1E=HTAU(IRHS,MTAU,1,LMAX)*X(3)*MDT
          X2E=HTAU(IRHS,MTAU,2,LMAX)*X(2)*MDT
C**ODD TERMS
          X1O=HTAU(IRHS,MTAU,2,LMAX)*X(1)*MDT
          X2O=HTAU(IRHS,MTAU,1,LMAX)*X(1)*MDT
          DO ILH=ILINE,IRH,MD
            ILHS=ILH+1-MOD(KA,2)+INCT
            Y1=HTAU(ILHS,MTAU,1,LMAX)
            Y2=HTAU(ILHS,MTAU,2,LMAX)
            XK(ILH,IRH)=XK(ILH,IRH)+(Y1*X1E+Y2*X2E)
            XK(ILH,IRH)=XK(ILH,IRH)+(Y1*X1O+Y2*X2O)
          END DO
        END DO
      END DO
      IF(ITIM1B.EQ.1)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM1B=2
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TVAT0(ISTAT,NSTAT,NMODE,ISTATE,HTAU,XQTAU,
     1NNTAU,MMTAU,XK,KXK,VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP,VC(3),VR(J21)
      REAL*4 VPR,VCR(3),VRR(J21)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION X(3)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM1B.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TVAT0'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(IFITRP.EQ.0)THEN
        IFACTL=JNTFAC(NMODE,ICOUPL,0)
      ELSE
        IFACTL=JNTFAC(NMODE,IABS(IFITRP)-1,0)
      END IF
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=JNTFAC(NMODE,ICOUPC,0)
      IF(MOLINC.GT.0)IFACTC=1

      KA=K/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      MDT=MODINT(NSMODE)
      TERM=0
      ITHATM=ISTAT(ISTATE,NSMODE)+1-MOD(KA,2)+INCT
C**LOOP ROUND TAU
      ITAU=INIT-INCTAU
      DO MTAU=1,MMTAU/MDT
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.0)READ(61)VR
          IF(ICOUPC.GE.0)READ(81)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.0)READ(61)VRR
          IF(ICOUPC.GE.0)READ(81)VCR
        END IF
        IF(JCOUPL.GE.0)THEN
          READ(71)VP
          VV=VP*IFACTL
        ELSE
          READ(71)VPR
          VV=VPR*IFACTL
        END IF
        DO I=1,3
          X(I)=0
        END DO
        IF(JCOUPC.GE.0)THEN
          IF(ICOUPC.GE.0)THEN
            DO I=1,3
              X(I)=VC(I)*IFACTC
            END DO
          END IF
        ELSE
          IF(ICOUPC.GE.0)THEN
            DO I=1,3
              X(I)=VCR(I)*IFACTC
            END DO
          END IF
        END IF
        X(3)=X(3)+VV

C***********************************************************

        Y1=HTAU(ITHATM,MTAU,1,LMAX)
        Y2=HTAU(ITHATM,MTAU,2,LMAX)
C**EVEN TERMS
        X1E=HTAU(ITHATM,MTAU,1,LMAX)*X(3)*MDT
        X2E=HTAU(ITHATM,MTAU,2,LMAX)*X(2)*MDT
        TERM=TERM+(Y1*X1E+Y2*X2E)*DSTAU(ITAU)
C**ODD TERMS
        X1O=HTAU(ITHATM,MTAU,2,LMAX)*X(1)*MDT
        X2O=HTAU(ITHATM,MTAU,1,LMAX)*X(1)*MDT
        TERM=TERM+(Y1*X1O+Y2*X2O)*DSTAU(ITAU)
      END DO
      DO IRLHS=1,KXK
        XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM
      END DO

C**ROTATION
      IF(J21.GT.1.AND.ICOUPC.GE.0)THEN
        TERM=0
C**LOOP ROUND TAU
        ITAU=INIT-INCTAU
        DO MTAU=1,MMTAU/MDT
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
          IF(JCOUPC.GE.0)THEN
            W21=VR(K)*HTAU(ITHATM,MTAU,1,LMAX)*
     1                HTAU(ITHATM,MTAU,1,LMAX)
          ELSE
            W21=VRR(K)*HTAU(ITHATM,MTAU,1,LMAX)*
     1                 HTAU(ITHATM,MTAU,1,LMAX)
          END IF
          TERM=TERM+W21*DSTAU(ITAU)
        END DO
        DO IRLHS=1,KXK
          XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM*MDT*FACTRC
        END DO
      END IF
      IF(ITIM1B.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM1B=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS1(H,XQ,NN,MM,XK,NMODE,MODE,VP,VPR,VC,VCR,VR,VRR,
     1J21,KROT,MODINT,OMEGA,XKAN,MAXQU,MAXPOW,NP1,CP1,JP1,NTOT1,MMX1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM),VC(MM),VR(J21,MM)
      REAL*4 VPR(MM),VCR(MM),VRR(J21,MM)
      DIMENSION MODINT(NMODE)
      DIMENSION H(NN,MM,3),XQ(MM),XK(NN,NN)
C**ANALYTIC
      DIMENSION NP1(NTOT1),CP1(MMX1,NTOT1),JP1(MMX1,NTOT1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP
      MD=MODINT(MODE)
      CALL TDIS1(H,XQ,NN,MM,MM/MD,XK,NMODE,MODE,VP,VPR,VC,VCR,VR,VRR,
     1J21,KROT,MODINT,OMEGA,XKAN,MAXQU,MAXPOW,NP1,CP1,JP1,NTOT1,MMX1)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS1(H,XQ,NN,MH,MM,XK,NMODE,MODE,VP,VPR,VC,VCR,VR,
     1VRR,J21,KROT,MODINT,OMEGA,XKAN,MAXQU,MAXPOW,NP1,CP1,JP1,NTOT1,
     2MMX1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM),VC(MM),VR(J21,MM)
      REAL*4 VPR(MM),VCR(MM),VRR(J21,MM)
      DIMENSION MODINT(NMODE)
CCCC  DIMENSION H(NN,MM,3),XQ(MM),XK(NN,NN)
      DIMENSION H(NN,MH,3),XQ(MM),XK(NN,NN)
C**ANALYTIC
      DIMENSION NP1(NTOT1),CP1(MMX1,NTOT1),JP1(MMX1,NTOT1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP

      IF(ITIM1A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS1'
          CALL TIMIT(1)
        END IF
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,1)
      IFACTL=INTFAC(NMODE,ICOUPL,1)
      IF(MOLINC.GT.0)IFACTL=1
      IF(MOLINC.GT.0)IFACTC=1
      IF(IWHICH.EQ.0)IFACTL=1
      IF(IWHICH.LT.0.AND.MOLINC.LT.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(71)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(71)VPR
      END IF
      IF(JCOUPC.GE.0)THEN
        IF(J21.GT.1.AND.ICOUPC.GT.0)READ(61)VR
        IF(ICOUPC.GT.0)READ(81)VC
      ELSE
        IF(J21.GT.1.AND.ICOUPC.GT.0)READ(61)VRR
        IF(ICOUPC.GT.0)READ(81)VCR
      END IF

C***********************************************************

      MD=MODINT(MODE)

C***********************************************************
      TERM=0
CCCC  DO M=1,MM/MD
      DO M=1,MM
        VV=0
        IF(JCOUPL.GT.0)THEN
          IF(IWHICH.GE.0.OR.MOLINC.LE.0)VV=VP(M)*IFACTL
C**WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
          IF(ICOUPC.GT.0)THEN
            VV=VV+VC(M)*IFACTC
            IF(J21.GT.1)TERM=VR(KROT,M)*IFACTC
          END IF
        ELSE
          IF(IWHICH.GE.0.OR.MOLINC.LE.0)VV=VPR(M)*IFACTL
C**WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
          IF(ICOUPC.GT.0)THEN
            VV=VV+VCR(M)*IFACTC
            IF(J21.GT.1)TERM=VRR(KROT,M)*IFACTC
          END IF
        END IF

C**********************************************************
C**KINETIC ENERGY
        Q=XQ(M)
        IF(IWHICH.EQ.0)THEN
          VHARM=OMEGA*OMEGA*Q*Q/2
        ELSE
          VHARM=0
        END IF
        DO IRHS=1,NN
          ILINE=MD-MOD(IRHS,MD)
          X=(-H(IRHS,M,3)/2+VHARM*H(IRHS,M,1))*MD
          DO ILHS=ILINE,IRHS,MD
            Y=H(ILHS,M,1)
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y*X
          END DO
        END DO

C**********************************************************
        DO IRHS=1,NN
          ILINE=MD-MOD(IRHS,MD)
          X=H(IRHS,M,1)*MD
          DO ILHS=ILINE,IRHS,MD
            Y=H(ILHS,M,1)
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y*X*(VV+TERM)
          END DO
        END DO
      END DO

C**********************************************************
C**POTENTIAL
      IF(IWHICH.LT.0.AND.MOLINC.GT.0)THEN
C**ANALYTIC
        DO IRHS=1,NN
          ILINE=MD-MOD(IRHS,MD)
          DO ILHS=ILINE,IRHS,MD
            Y=0
            DO I=1,NP1(MODE)
              K=JP1(I,MODE)+1
              Y=Y+CP1(I,MODE)*XKAN(ILHS,IRHS,K,MODE)
            END DO
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y
          END DO
        END DO
C**ANALYTIC
      END IF
C**********************************************************

      IF(ITIM1A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM1A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THAT1(ISTAT,NSTAT,NMODE,ISTATE,MODE,H,XQ,NN,MM,XK,KXK,
     1VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,OMEGA,XKAN,MAXQU,MAXPOW,NP1,
     2CP1,JP1,NTOT1,MMX1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM),VC(MM),VR(J21,MM)
      REAL*4 VPR(MM),VCR(MM),VRR(J21,MM)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
      DIMENSION H(NN,MM,3),XQ(MM)
C**ANALYTIC
      DIMENSION NP1(NTOT1),CP1(MMX1,NTOT1),JP1(MMX1,NTOT1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP
      MD=MODINT(MODE)
      CALL TDAT1(ISTAT,NSTAT,NMODE,ISTATE,MODE,H,XQ,NN,MM,MM/MD,XK,KXK,
     1VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,OMEGA,XKAN,MAXQU,MAXPOW,NP1,
     2CP1,JP1,NTOT1,MMX1)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDAT1(ISTAT,NSTAT,NMODE,ISTATE,MODE,H,XQ,NN,MH,MM,XK,
     1KXK,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,OMEGA,XKAN,MAXQU,MAXPOW,
     2NP1,CP1,JP1,NTOT1,MMX1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM),VC(MM),VR(J21,MM)
      REAL*4 VPR(MM),VCR(MM),VRR(J21,MM)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
CCCC  DIMENSION H(NN,MM,3),XQ(MM)
      DIMENSION H(NN,MH,3),XQ(MM)
C**ANALYTIC
      DIMENSION NP1(NTOT1),CP1(MMX1,NTOT1),JP1(MMX1,NTOT1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP

      IF(ITIM1B.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THAT1'
          CALL TIMIT(1)
        END IF
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,1)
      IFACTL=INTFAC(NMODE,ICOUPL,1)
      IF(MOLINC.GT.0)IFACTL=1
      IF(MOLINC.GT.0)IFACTC=1
      IF(IWHICH.EQ.0)IFACTL=1
      IF(IWHICH.LT.0.AND.MOLINC.LT.0)IFACTL=1

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT=ISTAT(ISTATE,MODE)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(71)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(71)VPR
      END IF
      IF(JCOUPC.GE.0)THEN
        IF(J21.GT.1.AND.ICOUPC.GT.0)READ(61)VR
        IF(ICOUPC.GT.0)READ(81)VC
      ELSE
        IF(J21.GT.1.AND.ICOUPC.GT.0)READ(61)VRR
        IF(ICOUPC.GT.0)READ(81)VCR
      END IF

C***********************************************************

      MD=MODINT(MODE)

C***********************************************************
      TERM=0
      IF(JCOUPL.GT.0)THEN
CCCC    DO M=1,MM/MD
        DO M=1,MM
          VV=0
          IF(IWHICH.GE.0.OR.MOLINC.LE.0)VV=VP(M)*IFACTL
C**WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
          IF(ICOUPC.GT.0)VV=VV+VC(M)*IFACTC
          X=VV*H(ITHAT,M,1)
          Y=H(ITHAT,M,1)
          TERM=TERM+Y*X*MD
        END DO
      ELSE
CCCC    DO M=1,MM/MD
        DO M=1,MM
          VV=0
          IF(IWHICH.GE.0.OR.MOLINC.LE.0)VV=VPR(M)*IFACTL
C**WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
          IF(ICOUPC.GT.0)VV=VV+VCR(M)*IFACTC
          X=VV*H(ITHAT,M,1)
          Y=H(ITHAT,M,1)
          TERM=TERM+Y*X*MD
        END DO
      END IF


C**********************************************************
C**KINETIC ENERGY
CCCC  DO M=1,MM/MD
      DO M=1,MM
        Q=XQ(M)
        IF(IWHICH.EQ.0)THEN
          VHARM=OMEGA*OMEGA*Q*Q/2
        ELSE
          VHARM=0
        END IF
        X=-H(ITHAT,M,3)/2+VHARM*H(ITHAT,M,1)
        Y=H(ITHAT,M,1)
        TERM=TERM+Y*X*MD
      END DO

C**********************************************************
C**POTENTIAL
      Y=0
      IF(IWHICH.LT.0.AND.MOLINC.GT.0)THEN
C**ANALYTIC
        DO I=1,NP1(MODE)
          K=JP1(I,MODE)+1
          Y=Y+CP1(I,MODE)*XKAN(ITHAT,ITHAT,K,MODE)
        END DO
C**ANALYTIC
      END IF
      DO IRLHS=1,KXK
        XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM+Y
      END DO

C**********************************************************

C**********************************************************
C**ROTATION
      IF(J21.GT.1.AND.ICOUPC.GT.0)THEN
        TERM=0
        IF(JCOUPC.GE.0)THEN
CCCC      DO M=1,MM/MD
          DO M=1,MM
            TERM=TERM+VR(KROT,M)*H(ITHAT,M,1)*H(ITHAT,M,1)
          END DO
        ELSE
CCCC      DO M=1,MM/MD
          DO M=1,MM
            TERM=TERM+VRR(KROT,M)*H(ITHAT,M,1)*H(ITHAT,M,1)
          END DO
        END IF
        DO IRLHS=1,KXK
          XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM*IFACTC*MD
        END DO
      END IF

      IF(ITIM1B.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM1B=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TVIS1(ISTAT,NSTAT,H,XQ,HTAU,XQTAU,NN,MM,NNTAU,MMTAU,
     1X0,XK,NMODE,ISTATE,MODE,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT,
     2OMEGA)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM),VC(MM,6),VR(J21,MM)
      REAL*4 VPR(MM),VCR(MM,6),VRR(J21,MM)
      DIMENSION X(6),T(6)
      DIMENSION ISTAT(NSTAT,NMODE)
      DIMENSION MODINT(NMODE)
      DIMENSION H(NN,MM,3),XQ(MM),XK(NN,NN)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(7,MM)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE)
      MOD1=MD1
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE.EQ.ISYM(I,J))N1=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      CALL TDVIS1(ISTAT,NSTAT,H,XQ,HTAU,XQTAU,NN,MM,MM/MD1,NNTAU,MMTAU,
     1X0,XK,NMODE,ISTATE,MODE,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT,
     2OMEGA)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDVIS1(ISTAT,NSTAT,H,XQ,HTAU,XQTAU,NN,MH,MM,NNTAU,
     1MMTAU,X0,XK,NMODE,ISTATE,MODE,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT,
     2OMEGA)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM),VC(MM,6),VR(J21,MM)
      REAL*4 VPR(MM),VCR(MM,6),VRR(J21,MM)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION X(6),T(6)
      DIMENSION ISTAT(NSTAT,NMODE)
      DIMENSION MODINT(NMODE)
CCCC  DIMENSION H(NN,MM,3),XQ(MM),XK(NN,NN)
      DIMENSION H(NN,MH,3),XQ(MM),XK(NN,NN)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(7,MM)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM1A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TVIS1'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(IFITRP.EQ.0)THEN
        IFACTL=JNTFAC(NMODE,ICOUPL,1)
      ELSE
        IFACTL=JNTFAC(NMODE,IABS(IFITRP)-1,1)
      END IF
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=JNTFAC(NMODE,ICOUPC,1)
      IF(MOLINC.GT.0)IFACTC=1

      KA=K/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      ITHATM=ISTAT(ISTATE,NSMODE)+1-MOD(KA,2)+INCT
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE)
      MOD1=MD1
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE.EQ.ISYM(I,J))N1=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      MD=MD1*MDT
C**LOOP ROUND TAU
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
CCCC      QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
CCCC      DELTA(4)=+QTAU
CCCC      DELTA(5)=-QTAU
        END IF

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.1)READ(61)VR
          IF(ICOUPC.GE.1)READ(81)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.1)READ(61)VRR
          IF(ICOUPC.GE.1)READ(81)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(71)VP
        ELSE
          READ(71)VPR
        END IF

C***********************************************************

        IF(.NOT.LINEAR)THEN
          T00=HTAU(ITHATM,MTAU,1,LMAX)*DSTAU(ITAU)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(3)=T(1)
          T(4)=T(2)
          T(5)=HTAU(ITHATM,MTAU,2,LMAX)*HTAU(ITHATM,MTAU,2,LMAX)*
     1    DSTAU(ITAU)
          T(6)=T(1)
C**START INTEGRATION OVER SINGLE MODE
CCCC      DO M=1,MM/MD1
          DO M=1,MM
            DO I=1,6
              X(I)=0
            END DO
            IF(JCOUPL.GT.0)THEN
              VV=VP(M)*IFACTL
              IF(ICOUPC.GE.1)THEN
                VV=VV+VR(K,M)*FACTRC
C**NO WATSON TERM IF RPH
                DO I=1,6
                  X(I)=T(I)*VC(M,I)*IFACTC
                END DO
              END IF
              X(6)=X(6)+(VV)*T(6)
            ELSE
              VV=VPR(M)*IFACTL
              IF(ICOUPC.GE.1)THEN
                VV=VV+VRR(K,M)*FACTRC
C**NO WATSON TERM IF RPH
                DO I=1,6
                  X(I)=T(I)*VCR(M,I)*IFACTC
                END DO
              END IF
              X(6)=X(6)+(VV)*T(6)
            END IF
            DO IRHS=1,NN
              ILINE=MOD1-MOD(IRHS,MOD1)
              X1=H(IRHS,M,1)*(2*X(2)+X(5)+X(6))+
     1               H(IRHS,M,2)*(X(1)+X(4))
              X2=H(IRHS,M,1)*(X(1)+X(4))+H(IRHS,M,2)*X(3)
              DO ILHS=ILINE,IRHS,MOD1
                Y1=H(ILHS,M,1)
                Y2=H(ILHS,M,2)
                XK(ILHS,IRHS)=XK(ILHS,IRHS)+(Y1*X1+Y2*X2)*MD
              END DO
            END DO
          END DO
C**END INTEGRATION OVER SINGLE MODE
        ELSE
          T00=HTAU(ITHATM,MTAU,1,LMAX)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(3)=T(1)
          T(4)=T(2)
          T(5)=T00*HTAU(ITHATM,MTAU,3,LMAX)
          T(6)=T(1)
C**START INTEGRATION OVER SINGLE MODE
CCCC      DO M=1,MM/MD1
          DO M=1,MM
            Q=XQ(M)
            IF(JCOUPL.GT.0)THEN
              VV=VP(M)*IFACTL
              IF(ICOUPC.GE.1)THEN
                VV=VV+VR(K,M)*FACTRC
C**(6) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                DO I=1,5
                  X(I)=-T(I)*VC(M,I)*IFACTC
                END DO
              END IF
C**INCLUDE K.E. ONCE FOR TAU
              X(5)=X(5)-T(5)/(8*Q*Q)
C***************************
              X(6)=(VV)*T(6)
            ELSE
              VV=VPR(M)*IFACTL
              IF(ICOUPC.GE.1)THEN
                VV=VV+VRR(K,M)*FACTRC
C**(6) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                DO I=1,5
                  X(I)=-T(I)*VCR(M,I)*IFACTC
                END DO
              END IF
C**INCLUDE K.E. ONCE FOR TAU
              X(5)=X(5)-T(5)/(8*Q*Q)
C***************************
              X(6)=(VV)*T(6)
            END IF

C**********************************************************
C**INCLUDE K.E. ONCE FOR Q
            IF(IWHICH.EQ.0)THEN
              VHARM=OMEGA*OMEGA*Q*Q/2
            ELSE
              VHARM=0
            END IF
            X(3)=X(3)-T(3)/2
            X(6)=X(6)+T(6)*VHARM
C**********************************************************

            DO IRHS=1,NN
              ILINE=MOD1-MOD(IRHS,MOD1)
              X1=H(IRHS,M,1)*(X(2)+X(5)+X(6))
              X2=H(IRHS,M,2)*(X(1)+2*X(4))
              X3=H(IRHS,M,3)*X(3)
              DO ILHS=ILINE,IRHS,MOD1
                Y1=H(ILHS,M,1)
                XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*(X1+X2+X3)*MD
              END DO
            END DO
          END DO
C**END INTEGRATION OVER SINGLE MODE
        END IF
      END DO
      IF(ITIM1A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM1A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TMIS1(ISTAT,NSTAT,H,XQ,HTAU,XQTAU,NN,MM,NNTAU,MMTAU,
     1X0,XK,KXK,NMODE,ISTATE,MODE,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM),VC(MM,6),VR(J21,MM)
      REAL*4 VPR(MM),VCR(MM,6),VRR(J21,MM)
      DIMENSION T(6)
      DIMENSION ISTAT(NSTAT,NMODE)
      DIMENSION MODINT(NMODE)
      DIMENSION H(NN,MM,3),XQ(MM),XK(KXK,KXK)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(7,MM)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE.EQ.ISYM(I,J))N1=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      CALL TDMIS1(ISTAT,NSTAT,H,XQ,HTAU,XQTAU,NN,MM,MM/MD1,NNTAU,MMTAU,
     1X0,XK,KXK,NMODE,ISTATE,MODE,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDMIS1(ISTAT,NSTAT,H,XQ,HTAU,XQTAU,NN,MH,MM,NNTAU,
     1MMTAU,X0,XK,KXK,NMODE,ISTATE,MODE,VP,VPR,VC,VCR,VR,VRR,J21,K,
     2MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM),VC(MM,6),VR(J21,MM)
      REAL*4 VPR(MM),VCR(MM,6),VRR(J21,MM)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION T(6)
      DIMENSION ISTAT(NSTAT,NMODE)
      DIMENSION MODINT(NMODE)
CCCC  DIMENSION H(NN,MM,3),XQ(MM),XK(KXK,KXK)
      DIMENSION H(NN,MH,3),XQ(MM),XK(KXK,KXK)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(7,MM)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM1B.EQ.3)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TMIS1'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(IFITRP.EQ.0)THEN
        IFACTL=JNTFAC(NMODE,ICOUPL,1)
      ELSE
        IFACTL=JNTFAC(NMODE,IABS(IFITRP)-1,1)
      END IF
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=JNTFAC(NMODE,ICOUPC,1)
      IF(MOLINC.GT.0)IFACTC=1

      KA=K/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      ITHAT=ISTAT(ISTATE,MODE)
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE.EQ.ISYM(I,J))N1=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      MDTOT=MD1*MDT
      IF(NT.EQ.1)THEN
        MD=1
      ELSE
        MD=2
      END IF

C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M=1,MM/MD1
      DO M=1,MM
        X00=H(ITHAT,M,1)
        X0(1,M)=X00*H(ITHAT,M,2)
        X0(2,M)=X00*H(ITHAT,M,1)
        X0(3,M)=H(ITHAT,M,2)*H(ITHAT,M,2)
        X0(4,M)=X0(1,M)
        X0(5,M)=X00*H(ITHAT,M,1)
        X0(6,M)=X0(5,M)
        X0(7,M)=H(ITHAT,M,1)*H(ITHAT,M,1)*FACTRC
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**LOOP ROUND TAU
      ITAU=INIT-INCTAU
      DO MTAU=1,MMTAU/MDT
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.1)READ(61)VR
          IF(ICOUPC.GE.1)READ(81)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.1)READ(61)VRR
          IF(ICOUPC.GE.1)READ(81)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(71)VP
        ELSE
          READ(71)VPR
        END IF

C***********************************************************

        DO I=1,6
          T(I)=0
        END DO
C**START INTEGRATION OVER SINGLE MODE
        IF(JCOUPL.GT.0)THEN
CCCC      DO M=1,MM/MD1
          DO M=1,MM
            IF(ICOUPC.GE.1)THEN
              DO I=1,6
                T(I)=T(I)+X0(I,M)*VC(M,I)*IFACTC
              END DO
              T(6)=T(6)+X0(7,M)*VR(K,M)
            END IF
            T(6)=T(6)+X0(6,M)*VP(M)*IFACTL
          END DO
        ELSE
CCCC      DO M=1,MM/MD1
          DO M=1,MM
            IF(ICOUPC.GE.1)THEN
              DO I=1,6
                T(I)=T(I)+X0(I,M)*VCR(M,I)*IFACTC
              END DO
              T(6)=T(6)+X0(7,M)*VRR(K,M)
            END IF
            T(6)=T(6)+X0(6,M)*VPR(M)*IFACTL
          END DO
        END IF
C**END INTEGRATION OVER SINGLE MODE
        DO IRH=1,NNTAU-1+MOD(KA,2)-INCT
          ILINE=MD-MOD(IRH,MD)
          IRHS=IRH+1-MOD(KA,2)+INCT
          X1=(HTAU(IRHS,MTAU,1,LMAX)*(2*T(1)+T(3)+T(6))+
     1           HTAU(IRHS,MTAU,2,LMAX)*(T(2)+T(4)))*DSTAU(ITAU)
          X2=(HTAU(IRHS,MTAU,1,LMAX)*(T(2)+T(4))+
     1           HTAU(IRHS,MTAU,2,LMAX)*T(5))*DSTAU(ITAU)
          DO ILH=ILINE,IRH,MD
            ILHS=ILH+1-MOD(KA,2)+INCT
            Y1=HTAU(ILHS,MTAU,1,LMAX)
            Y2=HTAU(ILHS,MTAU,2,LMAX)
            XK(ILH,IRH)=XK(ILH,IRH)+(Y1*X1+Y2*X2)*MDTOT
          END DO
        END DO
      END DO
      IF(ITIM1B.EQ.3)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
C       CALL FLUSH(IOUT)
        ITIM1B=4
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TVAT1(ISTAT,NSTAT,NMODE,ISTATE,MODE,H,XQ,HTAU,XQTAU,
     1NN,MM,NNTAU,MMTAU,X0,XK,KXK,VP,VPR,VC,VCR,VR,VRR,J21,K,
     2MODINT,OMEGA)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM),VC(MM,6),VR(J21,MM)
      REAL*4 VPR(MM),VCR(MM,6),VRR(J21,MM)
      DIMENSION T(6),TTT(6)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
      DIMENSION H(NN,MM,3),XQ(MM)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(7,MM)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE.EQ.ISYM(I,J))N1=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      CALL TDVAT1(ISTAT,NSTAT,NMODE,ISTATE,MODE,H,XQ,HTAU,XQTAU,
     1NN,MM,MM/MD1,NNTAU,MMTAU,X0,XK,KXK,VP,VPR,VC,VCR,VR,VRR,J21,K,
     2MODINT,OMEGA)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDVAT1(ISTAT,NSTAT,NMODE,ISTATE,MODE,H,XQ,HTAU,XQTAU,
     1NN,MH,MM,NNTAU,MMTAU,X0,XK,KXK,VP,VPR,VC,VCR,VR,VRR,J21,K,
     2MODINT,OMEGA)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM),VC(MM,6),VR(J21,MM)
      REAL*4 VPR(MM),VCR(MM,6),VRR(J21,MM)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION T(6),TTT(6)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
CCCC  DIMENSION H(NN,MM,3),XQ(MM)
      DIMENSION H(NN,MH,3),XQ(MM)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(7,MM)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM1B.EQ.2)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TVAT1'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(IFITRP.EQ.0)THEN
        IFACTL=JNTFAC(NMODE,ICOUPL,1)
      ELSE
        IFACTL=JNTFAC(NMODE,IABS(IFITRP)-1,1)
      END IF
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=JNTFAC(NMODE,ICOUPC,1)
      IF(MOLINC.GT.0)IFACTC=1

      KA=K/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      ITHAT=ISTAT(ISTATE,MODE)
      ITHATM=ISTAT(ISTATE,NSMODE)+1-MOD(KA,2)+INCT
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE.EQ.ISYM(I,J))N1=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      MD=MD1*MDT
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M=1,MM/MD1
      DO M=1,MM
        X00=H(ITHAT,M,1)
        X0(1,M)=X00*H(ITHAT,M,2)
        X0(2,M)=X00*H(ITHAT,M,1)
        IF(.NOT.LINEAR)THEN
          X0(3,M)=H(ITHAT,M,2)*H(ITHAT,M,2)
        ELSE
          X0(3,M)=X00*H(ITHAT,M,3)
        END IF
        X0(4,M)=X0(1,M)
        X0(5,M)=X00*H(ITHAT,M,1)
        X0(6,M)=X0(5,M)
        X0(7,M)=H(ITHAT,M,1)*H(ITHAT,M,1)*FACTRC
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
      TERM=0
C**LOOP ROUND TAU
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
CCCC      QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
CCCC      DELTA(4)=+QTAU
CCCC      DELTA(5)=-QTAU
        END IF

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.1)READ(61)VR
          IF(ICOUPC.GE.1)READ(81)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.1)READ(61)VRR
          IF(ICOUPC.GE.1)READ(81)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(71)VP
        ELSE
          READ(71)VPR
        END IF

C***********************************************************

        IF(.NOT.LINEAR)THEN
          T00=HTAU(ITHATM,MTAU,1,LMAX)*DSTAU(ITAU)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(3)=T(1)
          T(4)=T(2)
          T(5)=HTAU(ITHATM,MTAU,2,LMAX)*HTAU(ITHATM,MTAU,2,LMAX)*
     1    DSTAU(ITAU)
          T(6)=T(1)
C**START INTEGRATION OVER SINGLE MODE
          IF(JCOUPL.GT.0)THEN
CCCC        DO M=1,MM/MD1
            DO M=1,MM
              DO I=1,6
                TTT(I)=0
              END DO
C**NO WATSON TERM IF RPH
              IF(ICOUPC.GE.1)THEN
                DO I=1,6
                  TTT(I)=X0(I,M)*T(I)*VC(M,I)*IFACTC
                END DO
              END IF
              TTT(6)=TTT(6)+X0(6,M)*T(6)*VP(M)*IFACTL
              TERM=TERM+(2*(TTT(1)+TTT(2)+TTT(4))+
     1        TTT(3)+TTT(5)+TTT(6))
            END DO
          ELSE
CCCC        DO M=1,MM/MD1
            DO M=1,MM
              DO I=1,6
                TTT(I)=0
              END DO
C**NO WATSON TERM IF RPH
              IF(ICOUPC.GE.1)THEN
                DO I=1,6
                  TTT(I)=X0(I,M)*T(I)*VCR(M,I)*IFACTC
                END DO
              END IF
              TTT(6)=TTT(6)+X0(6,M)*T(6)*VPR(M)*IFACTL
              TERM=TERM+(2*(TTT(1)+TTT(2)+TTT(4))+
     1        TTT(3)+TTT(5)+TTT(6))
            END DO
          END IF
C**END INTEGRATION OVER SINGLE MODE
        ELSE
          T00=HTAU(ITHATM,MTAU,1,LMAX)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(3)=T(1)
          T(4)=T(2)
          T(5)=T00*HTAU(ITHATM,MTAU,3,LMAX)
          T(6)=T(1)
C**START INTEGRATION OVER SINGLE MODE
          IF(JCOUPL.GT.0)THEN
CCCC        DO M=1,MM/MD1
            DO M=1,MM
              DO I=1,5
                TTT(I)=0
              END DO
              Q=XQ(M)
C**(6) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
              IF(ICOUPC.GE.1)THEN
                DO I=1,5
                  TTT(I)=-X0(I,M)*T(I)*VC(M,I)*IFACTC
                END DO
              END IF

C**********************************************************
C**INCLUDE K.E. ONCE FOR Q
              IF(IWHICH.EQ.0)THEN
                VHARM=OMEGA*OMEGA*Q*Q/2
              ELSE
                VHARM=0
              END IF
              TTT(3)=TTT(3)-X0(3,M)*T(3)/2
              TTT(6)=X0(6,M)*T(6)*VHARM
C**********************************************************

C**INCLUDE K.E. ONCE FOR TAU
              TTT(5)=TTT(5)-T(5)*H(ITHAT,M,1)*H(ITHAT,M,1)/(8*Q*Q)
C***************************
              TTT(6)=TTT(6)+X0(6,M)*T(6)*VP(M)*IFACTL
              TERM=TERM+TTT(1)+TTT(2)+2*TTT(4)+
     1        TTT(3)+TTT(5)+TTT(6)
            END DO
          ELSE
CCCC        DO M=1,MM/MD1
            DO M=1,MM
              DO I=1,5
                TTT(I)=0
              END DO
              Q=XQ(M)
C**(6) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
              IF(ICOUPC.GE.1)THEN
                DO I=1,5
                  TTT(I)=-X0(I,M)*T(I)*VCR(M,I)*IFACTC
                END DO
              END IF

C**********************************************************
C**INCLUDE K.E. ONCE FOR Q
              IF(IWHICH.EQ.0)THEN
                VHARM=OMEGA*OMEGA*Q*Q/2
              ELSE
                VHARM=0
              END IF
              TTT(3)=TTT(3)-X0(3,M)*T(3)/2
              TTT(6)=X0(6,M)*T(6)*VHARM
C**********************************************************

C**INCLUDE K.E. ONCE FOR TAU
              TTT(5)=TTT(5)-T(5)*H(ITHAT,M,1)*H(ITHAT,M,1)/(8*Q*Q)
C***************************
              TTT(6)=TTT(6)+X0(6,M)*T(6)*VPR(M)*IFACTL
              TERM=TERM+TTT(1)+TTT(2)+2*TTT(4)+
     1        TTT(3)+TTT(5)+TTT(6)
            END DO
          END IF
C**END INTEGRATION OVER SINGLE MODE
        END IF
      END DO
      DO IRLHS=1,KXK
        XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM*MD
      END DO

C**ROTATION
      IF(J21.GT.1.AND.ICOUPC.GE.1)THEN
        TERM=0
C**LOOP ROUND TAU
        ITAU=INIT-INCTAU
        DO MTAU=1,MMTAU/MDT
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
          IF(JCOUPL.GT.0)THEN
CCCC        DO M=1,MM/MD1
            DO M=1,MM
              W21=VR(K,M)*X0(7,M)*
     1        HTAU(ITHATM,MTAU,1,LMAX)*HTAU(ITHATM,MTAU,1,LMAX)
            END DO
          ELSE
CCCC        DO M=1,MM/MD1
            DO M=1,MM
              W21=VRR(K,M)*X0(7,M)*
     1        HTAU(ITHATM,MTAU,1,LMAX)*HTAU(ITHATM,MTAU,1,LMAX)
            END DO
          END IF
          TERM=TERM+W21*DSTAU(ITAU)
        END DO
        DO IRLHS=1,KXK
          XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM*MD
        END DO
      END IF
      IF(ITIM1B.EQ.2)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM1B=3
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS2A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,NN1,MM1,NN2,MM2,
     1X0,Y0,XK,NMODE,ISTATE,MODE1,MODE2,VP,VPR,VC,VCR,VR,VRR,J21,KROT,
     2MODINT,XKAN,MAXQU,MAXPOW,NP2,CP2,JP2,NTOT2,MAX2,INDK)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,6),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,6),VRR(J21,MM2,MM1)
      DIMENSION X(4)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION X0(4,MM1),Y0(4,MM2)
C**ANALYTIC
      DIMENSION INDK(1)
      DIMENSION NP2(NTOT2),CP2(MAX2,NTOT2),JP2(MAX2,NTOT2,2)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      CALL TDIS2A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,NN1,MM1,MM1/MD1,NN2,MM2,
     1MM2/MD2,X0,Y0,XK,NMODE,ISTATE,MODE1,MODE2,VP,VPR,VC,VCR,VR,VRR,
     2J21,KROT,MODINT,XKAN,MAXQU,MAXPOW,NP2,CP2,JP2,NTOT2,MAX2,INDK)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS2A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,NN1,MH1,MM1,NN2,MH2,
     1MM2,X0,Y0,XK,NMODE,ISTATE,MODE1,MODE2,VP,VPR,VC,VCR,VR,VRR,J21,
     2KROT,MODINT,XKAN,MAXQU,MAXPOW,NP2,CP2,JP2,NTOT2,MAX2,INDK)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,6),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,6),VRR(J21,MM2,MM1)
      DIMENSION X(4)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION X0(4,MM1),Y0(4,MM2)
C**ANALYTIC
      DIMENSION INDK(1)
      DIMENSION NP2(NTOT2),CP2(MAX2,NTOT2),JP2(MAX2,NTOT2,2)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP

      IF(ITIM2A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS2A'
          CALL TIMIT(1)
        END IF
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,2)
      IFACTL=INTFAC(NMODE,ICOUPL,2)
      IF(MOLINC.GT.0)IFACTL=1
      IF(MOLINC.GT.0)IFACTC=1
      IF(IWHICH.EQ.0)IFACTL=1
      IF(IWHICH.LT.0.AND.MOLINC.LT.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(72)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(72)VPR
      END IF
      IF(JCOUPC.GE.0)THEN
        IF(J21.GT.1.AND.ICOUPC.GT.1)READ(62)VR
        IF(ICOUPC.GT.1)READ(82)VC
      ELSE
        IF(J21.GT.1.AND.ICOUPC.GT.1)READ(62)VRR
        IF(ICOUPC.GT.1)READ(82)VCR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT=ISTAT(ISTATE,MODE2)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MOD1=MD1
      MD2=MODINT(MODE2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      MD=MD1*MD2

      IF(LINEAR)GO TO 1000
C***********************************************************
C**LEFT-RIGHT DIFFERENTIATION
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT,M2,1)*MD
        Y0(1,M2)=Y00*H2(ITHAT,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT,M2,2)
        Y0(3,M2)=H2(ITHAT,M2,2)*H2(ITHAT,M2,2)*MD
        Y0(4,M2)=Y0(1,M2)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        DO I=1,4
          X(I)=0
        END DO
C**INTEGRATE OVER SINGLE STATE (START)
        IF(JCOUPL.GT.0)THEN
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
C**(6) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
            IF(ICOUPC.GT.1)THEN
              DO I=1,4
                X(I)=X(I)+Y0(I,M2)*VC(M2,M1,I+2)*IFACTC
              END DO
              IF(J21.GT.1)X(4)=X(4)+Y0(4,M2)*VR(KROT,M2,M1)*IFACTC
            END IF
            IF(IWHICH.GE.0.OR.MOLINC.LE.0)X(4)=X(4)+
     1      Y0(4,M2)*VP(M2,M1)*IFACTL
          END DO
        ELSE
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
C**(6) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
            IF(ICOUPC.GT.1)THEN
              DO I=1,4
                X(I)=X(I)+Y0(I,M2)*VCR(M2,M1,I+2)*IFACTC
              END DO
              IF(J21.GT.1)X(4)=X(4)+Y0(4,M2)*VRR(KROT,M2,M1)*IFACTC
            END IF
            IF(IWHICH.GE.0.OR.MOLINC.LE.0)X(4)=X(4)+
     1      Y0(4,M2)*VPR(M2,M1)*IFACTL
          END DO
        END IF
C**INTEGRATE OVER SINGLE STATE (END)
        DO IRHS=1,NN1
          ILINE=MOD1-MOD(IRHS,MOD1)
          X1=H1(IRHS,M1,1)*(X(3)+X(4))+
     1       H1(IRHS,M1,2)*X(2)
          X2=H1(IRHS,M1,1)*X(2)+
     1       H1(IRHS,M1,2)*X(1)
          DO ILHS=ILINE,IRHS,MOD1
            Y1=H1(ILHS,M1,1)
            Y2=H1(ILHS,M1,2)
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+(Y1*X1+Y2*X2)
          END DO
        END DO
      END DO
      GO TO 2000

1000  CONTINUE
C***********************************************************
C**RIGHT-ONLY DIFFERENTIATION
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
      DO M2=1,MM2
        Y00=H2(ITHAT,M2,1)*MD
        Y0(1,M2)=Y00*H2(ITHAT,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT,M2,2)
        Y0(3,M2)=Y00*H2(ITHAT,M2,3)
        Y0(4,M2)=H2(ITHAT,M2,1)*H2(ITHAT,M2,1)*MD
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
      DO M1=1,MM1
        X1=0
        X2=0
        X3=0
        W21=0
C**INTEGRATE OVER SINGLE STATE (START)
        IF(JCOUPL.GT.0)THEN
          DO M2=1,MM2
            IF(ICOUPC.GT.1)THEN
              IF(J21.GT.1)W21=W21+VR(KROT,M2,M1)*Y0(4,M2)*IFACTC
              X1=X1-(VC(M2,M1,2)*Y0(2,M2)+VC(M2,M1,5)*Y0(3,M2))
     1        *IFACTC
              X1=X1+VC(M2,M1,6)*Y0(4,M2)*IFACTC
              X2=X2-(VC(M2,M1,1)*Y0(1,M2)+2*VC(M2,M1,4)*Y0(2,M2))
     1        *IFACTC
              X3=X3-VC(M2,M1,3)*Y0(1,M2)*IFACTC
            END IF
            IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1      X1=X1+VP(M2,M1)*Y0(1,M2)*IFACTL
          END DO
        ELSE
          DO M2=1,MM2
            IF(ICOUPC.GT.1)THEN
              IF(J21.GT.1)W21=W21+VRR(KROT,M2,M1)*Y0(4,M2)*IFACTC
              X1=X1-(VCR(M2,M1,2)*Y0(2,M2)+VCR(M2,M1,5)*Y0(3,M2))
     1        *IFACTC
              X1=X1+VCR(M2,M1,6)*Y0(4,M2)*IFACTC
              X2=X2-(VCR(M2,M1,1)*Y0(1,M2)+2*VCR(M2,M1,4)*Y0(2,M2))
     1        *IFACTC
              X3=X3-VCR(M2,M1,3)*Y0(1,M2)*IFACTC
            END IF
            IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1      X1=X1+VPR(M2,M1)*Y0(1,M2)*IFACTL
          END DO
        END IF
C**INTEGRATE OVER SINGLE STATE (END)
        DO IRHS=1,NN1
          XX=X1*H1(IRHS,M1,1)+X2*H1(IRHS,M1,2)+X3*H1(IRHS,M1,3)
          TERM=W21*H1(IRHS,M1,1)+XX
          DO ILHS=1,IRHS
            Y=H1(ILHS,M1,1)
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y*TERM
          END DO
        END DO
      END DO

2000  CONTINUE
C***********************************************************
C**POTENTIAL
      IF(IWHICH.LT.0.AND.MOLINC.GT.0)THEN
C**ANALYTIC
        IND=INDK(MODE1)+MODE2
        DO IRHS=1,NN1
          ILINE=MOD1-MOD(IRHS,MOD1)
          DO ILHS=ILINE,IRHS,MOD1
            Y=0
            DO I=1,NP2(IND)
              K=JP2(I,IND,1)+1
              L=JP2(I,IND,2)+1
              Y=Y+CP2(I,IND)*XKAN(ILHS,IRHS,K,MODE1)*
     1        XKAN(ITHAT,ITHAT,L,MODE2)
            END DO
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y
          END DO
        END DO
C**ANALYTIC
      END IF
C**********************************************************

      IF(ITIM2A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM2A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS2B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,NN1,MM1,NN2,MM2,X0,
     1Y0,XK,NMODE,ISTATE,MODE1,MODE2,VP,VPR,VC,VCR,VR,VRR,J21,KROT,
     2MODINT,XKAN,MAXQU,MAXPOW,NP2,CP2,JP2,NTOT2,MAX2,INDK)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,6),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,6),VRR(J21,MM2,MM1)
      DIMENSION Y(4)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN2,NN2)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION X0(4,MM1),Y0(4,MM2)
C**ANALYTIC
      DIMENSION INDK(1)
      DIMENSION NP2(NTOT2),CP2(MAX2,NTOT2),JP2(MAX2,NTOT2,2)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      CALL TDIS2B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,NN1,MM1,MM1/MD1,NN2,MM2,
     1MM2/MD2,X0,Y0,XK,NMODE,ISTATE,MODE1,MODE2,VP,VPR,VC,VCR,VR,VRR,
     2J21,KROT,MODINT,XKAN,MAXQU,MAXPOW,NP2,CP2,JP2,NTOT2,MAX2,INDK)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS2B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,NN1,MH1,MM1,NN2,MH2,
     1MM2,X0,Y0,XK,NMODE,ISTATE,MODE1,MODE2,VP,VPR,VC,VCR,VR,VRR,J21,
     2KROT,MODINT,XKAN,MAXQU,MAXPOW,NP2,CP2,JP2,NTOT2,MAX2,INDK)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,6),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,6),VRR(J21,MM2,MM1)
      DIMENSION Y(4)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN2,NN2)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION X0(4,MM1),Y0(4,MM2)
C**ANALYTIC
      DIMENSION INDK(1)
      DIMENSION NP2(NTOT2),CP2(MAX2,NTOT2),JP2(MAX2,NTOT2,2)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP

      IF(ITIM2A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS2B'
          CALL TIMIT(1)
        END IF
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,2)
      IFACTL=INTFAC(NMODE,ICOUPL,2)
      IF(MOLINC.GT.0)IFACTL=1
      IF(MOLINC.GT.0)IFACTC=1
      IF(IWHICH.EQ.0)IFACTL=1
      IF(IWHICH.LT.0.AND.MOLINC.LT.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(72)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(72)VPR
      END IF
      IF(JCOUPC.GE.0)THEN
        IF(J21.GT.1.AND.ICOUPC.GT.1)READ(62)VR
        IF(ICOUPC.GT.1)READ(82)VC
      ELSE
        IF(J21.GT.1.AND.ICOUPC.GT.1)READ(62)VRR
        IF(ICOUPC.GT.1)READ(82)VCR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT=ISTAT(ISTATE,MODE1)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MOD2=MD2
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      MD=MD1*MD2

      IF(LINEAR)GO TO 1000
C***********************************************************
C**LEFT-RIGHT DIFFERENTIATION
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT,M1,1)*MD
        X0(1,M1)=H1(ITHAT,M1,2)*H1(ITHAT,M1,2)*MD
        X0(2,M1)=X00*H1(ITHAT,M1,2)
        X0(3,M1)=X00*H1(ITHAT,M1,1)
        X0(4,M1)=X0(3,M1)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        DO I=1,4
          Y(I)=0
        END DO
C**INTEGRATE OVER SINGLE STATE (START)
        IF(JCOUPL.GT.0)THEN
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
C**(6) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
            IF(ICOUPC.GT.1)THEN
              DO I=1,4
                Y(I)=Y(I)+X0(I,M1)*VC(M2,M1,I+2)*IFACTC
              END DO
              IF(J21.GT.1)Y(4)=Y(4)+X0(4,M1)*VR(KROT,M2,M1)*IFACTC
            END IF
            IF(IWHICH.GE.0.OR.MOLINC.LE.0)Y(4)=Y(4)+
     1      X0(4,M1)*VP(M2,M1)*IFACTL
          END DO
        ELSE
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
C**(6) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
            IF(ICOUPC.GT.1)THEN
              DO I=1,4
                Y(I)=Y(I)+X0(I,M1)*VCR(M2,M1,I+2)*IFACTC
              END DO
              IF(J21.GT.1)Y(4)=Y(4)+X0(4,M1)*VRR(KROT,M2,M1)*IFACTC
            END IF
            IF(IWHICH.GE.0.OR.MOLINC.LE.0)Y(4)=Y(4)+
     1      X0(4,M1)*VPR(M2,M1)*IFACTL
          END DO
        END IF
C**INTEGRATE OVER SINGLE STATE (END)
        DO IRHS=1,NN2
          ILINE=MOD2-MOD(IRHS,MOD2)
          X1=H2(IRHS,M2,1)*(Y(1)+Y(4))+
     1       H2(IRHS,M2,2)*Y(2)
          X2=H2(IRHS,M2,1)*Y(2)+
     1       H2(IRHS,M2,2)*Y(3)
          DO ILHS=ILINE,IRHS,MOD2
            Y1=H2(ILHS,M2,1)
            Y2=H2(ILHS,M2,2)
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+(Y1*X1+Y2*X2)
          END DO
        END DO
      END DO
      GO TO 2000

1000  CONTINUE
C***********************************************************
C**RIGHT-ONLY DIFFERENTIATION
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
      DO M1=1,MM1
        X00=H1(ITHAT,M1,1)*MD
        X0(1,M1)=X00*H1(ITHAT,M1,1)
        X0(2,M1)=X00*H1(ITHAT,M1,2)
        X0(3,M1)=X00*H1(ITHAT,M1,3)
        X0(4,M1)=H1(ITHAT,M1,1)*H1(ITHAT,M1,1)*MD
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
      DO M2=1,MM2
        Y1=0
        Y2=0
        Y3=0
        W21=0
C**INTEGRATE OVER SINGLE STATE (START)
        IF(JCOUPL.GT.0)THEN
          DO M1=1,MM1
            IF(ICOUPC.GT.1)THEN
              IF(J21.GT.1)W21=W21+VR(KROT,M2,M1)*X0(4,M1)*IFACTC
              Y1=Y1-(VC(M2,M1,1)*X0(2,M1)+VC(M2,M1,3)*X0(3,M1))
     1        *IFACTC
              Y1=Y1+VC(M2,M1,6)*X0(4,M1)*IFACTC
              Y2=Y2-(VC(M2,M1,2)*X0(1,M1)+2*VC(M2,M1,4)*X0(2,M1))
     1        *IFACTC
              Y3=Y3-VC(M2,M1,5)*X0(1,M1)*IFACTC
            END IF
            IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1      Y1=Y1+VP(M2,M1)*X0(1,M1)*IFACTL
          END DO
        ELSE
          DO M1=1,MM1
            IF(ICOUPC.GT.1)THEN
              IF(J21.GT.1)W21=W21+VRR(KROT,M2,M1)*X0(4,M1)*IFACTC
              Y1=Y1-(VCR(M2,M1,1)*X0(2,M1)+VCR(M2,M1,3)*X0(3,M1))
     1        *IFACTC
              Y1=Y1+VCR(M2,M1,6)*X0(4,M1)*IFACTC
              Y2=Y2-(VCR(M2,M1,2)*X0(1,M1)+2*VCR(M2,M1,4)*X0(2,M1))
     1        *IFACTC
              Y3=Y3-VCR(M2,M1,5)*X0(1,M1)*IFACTC
            END IF
            IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1      Y1=Y1+VPR(M2,M1)*X0(1,M1)*IFACTL
          END DO
        END IF
C**INTEGRATE OVER SINGLE STATE (END)
        DO IRHS=1,NN2
          X=Y1*H2(IRHS,M2,1)+Y2*H2(IRHS,M2,2)+Y3*H2(IRHS,M2,3)
          TERM=W21*H2(IRHS,M2,1)+X
          DO ILHS=1,IRHS
            YY=H2(ILHS,M2,1)
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+YY*TERM
          END DO
        END DO
      END DO

2000  CONTINUE
C***********************************************************
C**POTENTIAL
      IF(IWHICH.LT.0.AND.MOLINC.GT.0)THEN
C**ANALYTIC
        IND=INDK(MODE1)+MODE2
        DO IRHS=1,NN2
          ILINE=MOD2-MOD(IRHS,MOD2)
          DO ILHS=ILINE,IRHS,MOD2
            YY=0
            DO I=1,NP2(IND)
              K=JP2(I,IND,1)+1
              L=JP2(I,IND,2)+1
              YY=YY+CP2(I,IND)*XKAN(ITHAT,ITHAT,K,MODE1)*
     1        XKAN(ILHS,IRHS,L,MODE2)
            END DO
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+YY
          END DO
        END DO
C**ANALYTIC
      END IF
C**********************************************************

      IF(ITIM2A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM2A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THAT2(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,H1,XQ1,H2,
     1XQ2,NN1,MM1,NN2,MM2,X0,Y0,XK,KXK,VP,VPR,VC,VCR,VR,VRR,J21,KROT,
     2MODINT,XKAN,MAXQU,MAXPOW,NP2,CP2,JP2,NTOT2,MAX2,INDK)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,6),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,6),VRR(J21,MM2,MM1)
      DIMENSION TTT(4)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION X0(4,MM1),Y0(4,MM2)
C**ANALYTIC
      DIMENSION INDK(1)
      DIMENSION NP2(NTOT2),CP2(MAX2,NTOT2),JP2(MAX2,NTOT2,2)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      CALL TDAT2(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,H1,XQ1,H2,
     1XQ2,NN1,MM1,MM1/MD1,NN2,MM2,MM2/MD2,X0,Y0,XK,KXK,VP,VPR,VC,VCR,
     2VR,VRR,J21,KROT,MODINT,XKAN,MAXQU,MAXPOW,NP2,CP2,JP2,NTOT2,MAX2,
     3INDK)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDAT2(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,H1,XQ1,H2,
     1XQ2,NN1,MH1,MM1,NN2,MH2,MM2,X0,Y0,XK,KXK,VP,VPR,VC,VCR,VR,VRR,
     2J21,KROT,MODINT,XKAN,MAXQU,MAXPOW,NP2,CP2,JP2,NTOT2,MAX2,INDK)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,6),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,6),VRR(J21,MM2,MM1)
      DIMENSION TTT(4)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION X0(4,MM1),Y0(4,MM2)
C**ANALYTIC
      DIMENSION INDK(1)
      DIMENSION NP2(NTOT2),CP2(MAX2,NTOT2),JP2(MAX2,NTOT2,2)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP

      IF(ITIM2B.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THAT2'
          CALL TIMIT(1)
        END IF
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,2)
      IFACTL=INTFAC(NMODE,ICOUPL,2)
      IF(MOLINC.GT.0)IFACTL=1
      IF(MOLINC.GT.0)IFACTC=1
      IF(IWHICH.EQ.0)IFACTL=1
      IF(IWHICH.LT.0.AND.MOLINC.LT.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(72)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(72)VPR
      END IF
      IF(JCOUPC.GE.0)THEN
        IF(J21.GT.1.AND.ICOUPC.GT.1)READ(62)VR
        IF(ICOUPC.GT.1)READ(82)VC
      ELSE
        IF(J21.GT.1.AND.ICOUPC.GT.1)READ(62)VRR
        IF(ICOUPC.GT.1)READ(82)VCR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      MD=MD1*MD2

      IF(LINEAR)GO TO 1000
C***********************************************************
C**LEFT-RIGHT DIFFERENTIATION
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=H1(ITHAT1,M1,2)*H1(ITHAT1,M1,2)*MD
        X0(2,M1)=X00*H1(ITHAT1,M1,2)
        X0(3,M1)=X00*H1(ITHAT1,M1,1)
        X0(4,M1)=X0(3,M1)
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=H2(ITHAT2,M2,2)*H2(ITHAT2,M2,2)
        Y0(4,M2)=Y0(1,M2)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
      TERM=0
      IF(JCOUPL.GT.0)THEN
CCCC    DO M1=1,MM1/MD1
        DO M1=1,MM1
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
C**(6) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
            DO I=1,4
              TTT(I)=0
            END DO
            IF(ICOUPC.GT.1)THEN
              DO I=1,4
                TTT(I)=X0(I,M1)*Y0(I,M2)*VC(M2,M1,I+2)*IFACTC
              END DO
            END IF
            IF(IWHICH.GE.0.OR.MOLINC.LE.0)TTT(4)=TTT(4)+
     1      X0(4,M1)*Y0(4,M2)*VP(M2,M1)*IFACTL
            TERM=TERM+2*TTT(2)+TTT(1)+TTT(3)+TTT(4)
          END DO
        END DO
      ELSE
CCCC    DO M1=1,MM1/MD1
        DO M1=1,MM1
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
C**(6) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
            DO I=1,4
              TTT(I)=0
            END DO
            IF(ICOUPC.GT.1)THEN
              DO I=1,4
                TTT(I)=X0(I,M1)*Y0(I,M2)*VCR(M2,M1,I+2)*IFACTC
              END DO
            END IF
            IF(IWHICH.GE.0.OR.MOLINC.LE.0)TTT(4)=TTT(4)+
     1      X0(4,M1)*Y0(4,M2)*VPR(M2,M1)*IFACTL
            TERM=TERM+2*TTT(2)+TTT(1)+TTT(3)+TTT(4)
          END DO
        END DO
      END IF
      GO TO 2000

1000  CONTINUE
C***********************************************************
C**RIGHT-ONLY DIFFERENTIATION
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=X00*H1(ITHAT1,M1,1)
        X0(2,M1)=X00*H1(ITHAT1,M1,2)
        X0(3,M1)=X00*H1(ITHAT1,M1,3)
        X0(4,M1)=H1(ITHAT1,M1,1)*H1(ITHAT1,M1,1)*MD
      END DO
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y00*H2(ITHAT2,M2,3)
        Y0(4,M2)=H2(ITHAT2,M2,1)*H2(ITHAT2,M2,1)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
      TERM=0
      IF(JCOUPL.GT.0)THEN
        DO M1=1,MM1
          DO M2=1,MM2
            IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1      X=VP(M2,M1)*X0(1,M1)*Y0(1,M2)*IFACTL
            IF(ICOUPC.GT.1)THEN
              X=X-(VC(M2,M1,1)*X0(2,M1)*Y0(1,M2)+
     1        VC(M2,M1,2)*X0(1,M1)*Y0(2,M2)+
     2        VC(M2,M1,3)*X0(3,M1)*Y0(1,M2)+
     3        2*VC(M2,M1,4)*X0(2,M1)*Y0(2,M2)+
     4        VC(M2,M1,5)*X0(1,M1)*Y0(3,M2))*IFACTC
              X=X+VC(M2,M1,6)*X0(4,M1)*Y0(1,M2)*IFACTC
            END IF
            TERM=TERM+X
          END DO
        END DO
      ELSE
        DO M1=1,MM1
          DO M2=1,MM2
            IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1      X=VPR(M2,M1)*X0(1,M1)*Y0(1,M2)*IFACTL
            IF(ICOUPC.GT.1)THEN
              X=X-(VCR(M2,M1,1)*X0(2,M1)*Y0(1,M2)+
     1        VCR(M2,M1,2)*X0(1,M1)*Y0(2,M2)+
     2        VCR(M2,M1,3)*X0(3,M1)*Y0(1,M2)+
     3        2*VCR(M2,M1,4)*X0(2,M1)*Y0(2,M2)+
     4        VCR(M2,M1,5)*X0(1,M1)*Y0(3,M2))*IFACTC
              X=X+VCR(M2,M1,6)*X0(4,M1)*Y0(1,M2)*IFACTC
            END IF
            TERM=TERM+X
          END DO
        END DO
      END IF

2000  CONTINUE
C***********************************************************
C**POTENTIAL
      Y=0
      IF(IWHICH.LT.0.AND.MOLINC.GT.0)THEN
C**ANALYTIC
        IND=INDK(MODE1)+MODE2
        DO I=1,NP2(IND)
          K=JP2(I,IND,1)+1
          L=JP2(I,IND,2)+1
          Y=Y+CP2(I,IND)*XKAN(ITHAT1,ITHAT1,K,MODE1)*
     1    XKAN(ITHAT2,ITHAT2,L,MODE2)
        END DO
C**ANALYTIC
      END IF

      DO IRLHS=1,KXK
        XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM+Y
      END DO

C**********************************************************

C**ROTATION
      IF(J21.GT.1.AND.ICOUPC.GT.1)THEN
        TERM=0
        IF(JCOUPC.GE.0)THEN
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
CCCC        DO M2=1,MM2/MD2
            DO M2=1,MM2
              TERM=TERM+VR(KROT,M2,M1)*X0(4,M1)*Y0(4,M2)*IFACTC
            END DO
          END DO
        ELSE
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
CCCC        DO M2=1,MM2/MD2
            DO M2=1,MM2
              TERM=TERM+VRR(KROT,M2,M1)*X0(4,M1)*Y0(4,M2)*IFACTC
            END DO
          END DO
        END IF
        DO IRLHS=1,KXK
          XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM
        END DO
      END IF
      IF(ITIM2B.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM2B=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TVIS2A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,HTAU,XQTAU,NN1,MM1,
     1NN2,MM2,NNTAU,MMTAU,X0,Y0,XK,NMODE,ISTATE,MODE1,MODE2,VP,VPR,VC,
     2VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,10),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,10),VRR(J21,MM2,MM1)
      DIMENSION X(10),T(10)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(11,MM1),Y0(11,MM2)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MOD1=MD1
      MD2=MODINT(MODE2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      CALL DVIS2A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,HTAU,XQTAU,NN1,MM1,MM1/MD1,
     1NN2,MM2,MM2/MD2,NNTAU,MMTAU,X0,Y0,XK,NMODE,ISTATE,MODE1,MODE2,VP,
     2VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DVIS2A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,HTAU,XQTAU,NN1,MH1,
     1MM1,NN2,MH2,MM2,NNTAU,MMTAU,X0,Y0,XK,NMODE,ISTATE,MODE1,MODE2,VP,
     2VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,10),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,10),VRR(J21,MM2,MM1)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION X(10),T(10)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(11,MM1),Y0(11,MM2)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM2A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TVIS2A'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(IFITRP.EQ.0)THEN
        IFACTL=JNTFAC(NMODE,ICOUPL,2)
      ELSE
        IFACTL=JNTFAC(NMODE,IABS(IFITRP)-1,2)
      END IF
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=JNTFAC(NMODE,ICOUPC,2)
      IF(MOLINC.GT.0)IFACTC=1

      KA=K/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHATM=ISTAT(ISTATE,NSMODE)+1-MOD(KA,2)+INCT
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MOD1=MD1
      MD2=MODINT(MODE2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      MD=MD1*MD2*MDT
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)*MD
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y0(1,M2)
        Y0(4,M2)=Y0(1,M2)
        Y0(5,M2)=Y0(2,M2)
        Y0(6,M2)=Y0(1,M2)
        IF(.NOT.LINEAR)THEN
          Y0(7,M2)=H2(ITHAT2,M2,2)*H2(ITHAT2,M2,2)*MD
        ELSE
          Y0(7,M2)=Y00*H2(ITHAT2,M2,3)
        END IF
        Y0(8,M2)=Y0(2,M2)
        Y0(9,M2)=Y0(1,M2)
        Y0(10,M2)=Y0(1,M2)
        Y0(11,M2)=H2(ITHAT2,M2,1)*H2(ITHAT2,M2,1)*FACTRC*MD
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**LOOP ROUND TAU
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
CCCC      QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
CCCC      DELTA(4)=+QTAU
CCCC      DELTA(5)=-QTAU
        END IF

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.2)READ(62)VR
          IF(ICOUPC.GE.2)READ(82)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.2)READ(62)VRR
          IF(ICOUPC.GE.2)READ(82)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(72)VP
        ELSE
          READ(72)VPR
        END IF

C***********************************************************

        IF(.NOT.LINEAR)THEN
          T00=HTAU(ITHATM,MTAU,1,LMAX)*DSTAU(ITAU)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(4)=T(1)
          T(5)=T(1)
          T(6)=T(3)
          T(7)=T(1)
          T(8)=T(3)
          T(9)=HTAU(ITHATM,MTAU,2,LMAX)*HTAU(ITHATM,MTAU,2,LMAX)*
     1    DSTAU(ITAU)
          T(10)=T(1)
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
            DO I=1,10
              X(I)=0
            END DO
C**INTEGRATE OVER SINGLE MODE (START)
            IF(JCOUPL.GT.0)THEN
CCCC          DO M2=1,MM2/MD2
              DO M2=1,MM2
C**NO WATSON TERM IF RPH
                IF(ICOUPC.GE.2)THEN
                  DO I=1,10
                    X(I)=X(I)+T(I)*Y0(I,M2)*VC(M2,M1,I)*IFACTC
                  END DO
                  X(10)=X(10)+T(10)*Y0(11,M2)*VR(K,M2,M1)
                END IF
                X(10)=X(10)+T(10)*Y0(10,M2)*VP(M2,M1)*IFACTL
              END DO
            ELSE
CCCC          DO M2=1,MM2/MD2
              DO M2=1,MM2
C**NO WATSON TERM IF RPH
                IF(ICOUPC.GE.2)THEN
                  DO I=1,10
                    X(I)=X(I)+T(I)*Y0(I,M2)*VCR(M2,M1,I)*IFACTC
                  END DO
                  X(10)=X(10)+T(10)*Y0(11,M2)*VRR(K,M2,M1)
                END IF
                X(10)=X(10)+T(10)*Y0(10,M2)*VPR(M2,M1)*IFACTL
              END DO
            END IF
C**INTEGRATE OVER SINGLE MODE (END)
            DO IRHS=1,NN1
              ILINE=MOD1-MOD(IRHS,MOD1)
              X1=H1(IRHS,M1,1)*(2*X(2)+2*X(3)+X(7)+2*X(8)+X(9)+
     1              X(10))+H1(IRHS,M1,2)*(X(1)+X(5)+X(6))
              X2=H1(IRHS,M1,1)*(X(1)+X(5)+X(6))+H1(IRHS,M1,2)*X(4)
              DO ILHS=ILINE,IRHS,MOD1
                Y1=H1(ILHS,M1,1)
                Y2=H1(ILHS,M1,2)
                XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*X1+Y2*X2
              END DO
            END DO
          END DO
        ELSE
          T00=HTAU(ITHATM,MTAU,1,LMAX)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(4)=T(1)
          T(5)=T(1)
          T(6)=T(3)
          T(7)=T(1)
          T(8)=T(3)
          T(9)=T00*HTAU(ITHATM,MTAU,3,LMAX)
          T(10)=T(1)
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
            DO I=1,10
              X(I)=0
            END DO
C**INTEGRATE OVER SINGLE MODE (START)
            IF(JCOUPL.GT.0)THEN
CCCC          DO M2=1,MM2/MD2
              DO M2=1,MM2
C**(10) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                IF(ICOUPC.GE.2)THEN
                  DO I=1,9
                    X(I)=X(I)-T(I)*Y0(I,M2)*VC(M2,M1,I)*IFACTC
                  END DO
                  X(10)=X(10)+T(10)*Y0(11,M2)*VR(K,M2,M1)
                END IF
                X(10)=X(10)+T(10)*Y0(10,M2)*VP(M2,M1)*IFACTL
              END DO
            ELSE
CCCC          DO M2=1,MM2/MD2
              DO M2=1,MM2
C**(10) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                IF(ICOUPC.GE.2)THEN
                  DO I=1,9
                    X(I)=X(I)-T(I)*Y0(I,M2)*VCR(M2,M1,I)*IFACTC
                  END DO
                  X(10)=X(10)+T(10)*Y0(11,M2)*VRR(K,M2,M1)
                END IF
                X(10)=X(10)+T(10)*Y0(10,M2)*VPR(M2,M1)*IFACTL
              END DO
            END IF
C**INTEGRATE OVER SINGLE MODE (END)
            DO IRHS=1,NN1
              ILINE=MOD1-MOD(IRHS,MOD1)
              X1=H1(IRHS,M1,1)*(X(2)+X(3)+X(7)+2*X(8)+X(9)+X(10))
              X2=H1(IRHS,M1,2)*(X(1)+2*X(5)+2*X(6))
              X3=H1(IRHS,M1,3)*X(4)
              DO ILHS=ILINE,IRHS,MOD1
                Y1=H1(ILHS,M1,1)
                XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*(X1+X2+X3)
              END DO
            END DO
          END DO
        END IF
      END DO
      IF(ITIM2A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM2A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TVIS2B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,HTAU,XQTAU,NN1,MM1,
     1NN2,MM2,NNTAU,MMTAU,X0,Y0,XK,NMODE,ISTATE,MODE1,MODE2,VP,VPR,VC,
     2VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,10),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,10),VRR(J21,MM2,MM1)
      DIMENSION Y(10),T(10)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN2,NN2)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION HTAU(NNTAU,MMTAU,3,2),XQTAU(MMTAU)
      DIMENSION X0(11,MM1),Y0(11,MM2)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MOD2=MD2
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      CALL DVIS2B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,HTAU,XQTAU,NN1,MM1,MM1/MD1,
     1NN2,MM2,MM2/MD2,NNTAU,MMTAU,X0,Y0,XK,NMODE,ISTATE,MODE1,MODE2,VP,
     2VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DVIS2B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,HTAU,XQTAU,NN1,MH1,
     1MM1,NN2,MH2,MM2,NNTAU,MMTAU,X0,Y0,XK,NMODE,ISTATE,MODE1,MODE2,VP,
     2VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,10),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,10),VRR(J21,MM2,MM1)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION Y(10),T(10)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN2,NN2)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION HTAU(NNTAU,MMTAU,3,2),XQTAU(MMTAU)
      DIMENSION X0(11,MM1),Y0(11,MM2)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM2A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TVIS2B'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(IFITRP.EQ.0)THEN
        IFACTL=JNTFAC(NMODE,ICOUPL,2)
      ELSE
        IFACTL=JNTFAC(NMODE,IABS(IFITRP)-1,2)
      END IF
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=JNTFAC(NMODE,ICOUPC,2)
      IF(MOLINC.GT.0)IFACTC=1

      KA=K/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHATM=ISTAT(ISTATE,NSMODE)+1-MOD(KA,2)+INCT
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MOD2=MD2
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      MD=MD1*MD2*MDT
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=X00*H1(ITHAT1,M1,2)
        X0(2,M1)=X00*H1(ITHAT1,M1,1)
        X0(3,M1)=X0(2,M1)
        IF(.NOT.LINEAR)THEN
          X0(4,M1)=H1(ITHAT1,M1,2)*H1(ITHAT1,M1,2)*MD
        ELSE
          X0(4,M1)=X00*H1(ITHAT1,M1,3)
        END IF
        X0(5,M1)=X0(1,M1)
        X0(6,M1)=X0(1,M1)
        X0(7,M1)=X0(2,M1)
        X0(8,M1)=X0(2,M1)
        X0(9,M1)=X0(2,M1)
        X0(10,M1)=X0(2,M1)
        X0(11,M1)=H1(ITHAT1,M1,1)*H1(ITHAT1,M1,1)*FACTRC*MD
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**LOOP ROUND TAU
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
CCCC      QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
CCCC      DELTA(4)=+QTAU
CCCC      DELTA(5)=-QTAU
        END IF

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.2)READ(62)VR
          IF(ICOUPC.GE.2)READ(82)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.2)READ(62)VRR
          IF(ICOUPC.GE.2)READ(82)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(72)VP
        ELSE
          READ(72)VPR
        END IF

C***********************************************************

        IF(.NOT.LINEAR)THEN
          T00=HTAU(ITHATM,MTAU,1,LMAX)*DSTAU(ITAU)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(4)=T(1)
          T(5)=T(1)
          T(6)=T(3)
          T(7)=T(1)
          T(8)=T(3)
          T(9)=HTAU(ITHATM,MTAU,2,LMAX)*HTAU(ITHATM,MTAU,2,LMAX)*
     1    DSTAU(ITAU)
          T(10)=T(1)
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
            DO I=1,10
              Y(I)=0
            END DO
C**INTEGRATE OVER SINGLE MODE (START)
            IF(JCOUPL.GT.0)THEN
CCCC          DO M1=1,MM1/MD1
              DO M1=1,MM1
C**NO WATSON TERM IF RPH
                IF(ICOUPC.GE.2)THEN
                  DO I=1,10
                    Y(I)=Y(I)+X0(I,M1)*T(I)*VC(M2,M1,I)*IFACTC
                  END DO
                  Y(10)=Y(10)+X0(11,M1)*T(10)*VR(K,M2,M1)
                END IF
                Y(10)=Y(10)+X0(10,M1)*T(10)*VP(M2,M1)*IFACTL
              END DO
            ELSE
CCCC          DO M1=1,MM1/MD1
              DO M1=1,MM1
C**NO WATSON TERM IF RPH
                IF(ICOUPC.GE.2)THEN
                  DO I=1,10
                    Y(I)=Y(I)+X0(I,M1)*T(I)*VCR(M2,M1,I)*IFACTC
                  END DO
                  Y(10)=Y(10)+X0(11,M1)*T(10)*VRR(K,M2,M1)
                END IF
                Y(10)=Y(10)+X0(10,M1)*T(10)*VPR(M2,M1)*IFACTL
              END DO
            END IF
C**INTEGRATE OVER SINGLE MODE (END)
            DO IRHS=1,NN2
              ILINE=MOD2-MOD(IRHS,MOD2)
              X1=H2(IRHS,M2,1)*(2*Y(1)+2*Y(3)+Y(4)+2*Y(6)+Y(9)+
     1              Y(10))+H2(IRHS,M2,2)*(Y(2)+Y(5)+Y(8))
              X2=H2(IRHS,M2,1)*(Y(2)+Y(5)+Y(8))+H2(IRHS,M2,2)*Y(7)
              DO ILHS=ILINE,IRHS,MOD2
                Y1=H2(ILHS,M2,1)
                Y2=H2(ILHS,M2,2)
                XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*X1+Y2*X2
              END DO
            END DO
          END DO
        ELSE
          T00=HTAU(ITHATM,MTAU,1,LMAX)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(4)=T(1)
          T(5)=T(1)
          T(6)=T(3)
          T(7)=T(1)
          T(8)=T(3)
          T(9)=T00*HTAU(ITHATM,MTAU,3,LMAX)
          T(10)=T(1)
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
            DO I=1,10
              Y(I)=0
            END DO
C**INTEGRATE OVER SINGLE MODE (START)
            IF(JCOUPL.GT.0)THEN
CCCC          DO M1=1,MM1/MD1
              DO M1=1,MM1
C**(10) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                IF(ICOUPC.GE.2)THEN
                  DO I=1,9
                    Y(I)=Y(I)-X0(I,M1)*T(I)*VC(M2,M1,I)*IFACTC
                  END DO
                  Y(10)=Y(10)+X0(11,M1)*T(10)*VR(K,M2,M1)
                END IF
                Y(10)=Y(10)+X0(10,M1)*T(10)*VP(M2,M1)*IFACTL
              END DO
            ELSE
CCCC          DO M1=1,MM1/MD1
              DO M1=1,MM1
C**(10) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                IF(ICOUPC.GE.2)THEN
                  DO I=1,9
                    Y(I)=Y(I)-X0(I,M1)*T(I)*VCR(M2,M1,I)*IFACTC
                  END DO
                  Y(10)=Y(10)+X0(11,M1)*T(10)*VRR(K,M2,M1)
                END IF
                Y(10)=Y(10)+X0(10,M1)*T(10)*VPR(M2,M1)*IFACTL
              END DO
            END IF
C**INTEGRATE OVER SINGLE MODE (END)
            DO IRHS=1,NN2
              ILINE=MOD2-MOD(IRHS,MOD2)
              X1=H2(IRHS,M2,1)*(Y(1)+Y(3)+Y(4)+2*Y(6)+Y(9)+Y(10))
              X2=H2(IRHS,M2,2)*(Y(2)+2*Y(5)+2*Y(8))
              X3=H2(IRHS,M2,3)*Y(7)
              DO ILHS=ILINE,IRHS,MOD2
                Y1=H2(ILHS,M2,1)
                XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*(X1+X2+X3)
              END DO
            END DO
          END DO
        END IF
      END DO
      IF(ITIM2A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM2A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TMIS2(ISTAT,NSTAT,H1,XQ1,H2,XQ2,HTAU,XQTAU,NN1,MM1,
     1NN2,MM2,NNTAU,MMTAU,X0,Y0,XK,KXK,NMODE,ISTATE,MODE1,MODE2,VP,VPR,
     2VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,10),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,10),VRR(J21,MM2,MM1)
      DIMENSION T(10)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION HTAU(NNTAU,MMTAU,3,2),XQTAU(MMTAU)
      DIMENSION X0(11,MM1),Y0(11,MM2)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      CALL TDMIS2(ISTAT,NSTAT,H1,XQ1,H2,XQ2,HTAU,XQTAU,NN1,MM1,MM1/MD1,
     1NN2,MM2,MM2/MD2,NNTAU,MMTAU,X0,Y0,XK,KXK,NMODE,ISTATE,MODE1,
     2MODE2,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDMIS2(ISTAT,NSTAT,H1,XQ1,H2,XQ2,HTAU,XQTAU,NN1,MH1,
     1MM1,NN2,MH2,MM2,NNTAU,MMTAU,X0,Y0,XK,KXK,NMODE,ISTATE,MODE1,
     2MODE2,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,10),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,10),VRR(J21,MM2,MM1)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION T(10)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION HTAU(NNTAU,MMTAU,3,2),XQTAU(MMTAU)
      DIMENSION X0(11,MM1),Y0(11,MM2)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM2B.EQ.1)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TMIS2'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(IFITRP.EQ.0)THEN
        IFACTL=JNTFAC(NMODE,ICOUPL,2)
      ELSE
        IFACTL=JNTFAC(NMODE,IABS(IFITRP)-1,2)
      END IF
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=JNTFAC(NMODE,ICOUPC,2)
      IF(MOLINC.GT.0)IFACTC=1

      KA=K/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      MDTOT=MD1*MD2*MDT
      IF(NT.EQ.1)THEN
        MD=1
      ELSE
        MD=2
      END IF

C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MDTOT
        X0(1,M1)=X00*H1(ITHAT1,M1,2)
        X0(2,M1)=X00*H1(ITHAT1,M1,1)
        X0(3,M1)=X0(2,M1)
        X0(4,M1)=H1(ITHAT1,M1,2)*H1(ITHAT1,M1,2)*MDTOT
        X0(5,M1)=X0(1,M1)
        X0(6,M1)=X0(1,M1)
        X0(7,M1)=X0(2,M1)
        X0(8,M1)=X0(2,M1)
        X0(9,M1)=X0(2,M1)
        X0(10,M1)=X0(2,M1)
        X0(11,M1)=H1(ITHAT1,M1,1)*H1(ITHAT1,M1,1)*FACTRC*MDTOT
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y0(1,M2)
        Y0(4,M2)=Y0(1,M2)
        Y0(5,M2)=Y0(2,M2)
        Y0(6,M2)=Y0(1,M2)
        Y0(7,M2)=H2(ITHAT2,M2,2)*H2(ITHAT2,M2,2)
        Y0(8,M2)=Y0(2,M2)
        Y0(9,M2)=Y0(1,M2)
        Y0(10,M2)=Y0(1,M2)
        Y0(11,M2)=H2(ITHAT2,M2,1)*H2(ITHAT2,M2,1)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**LOOP ROUND TAU
      ITAU=INIT-INCTAU
      DO MTAU=1,MMTAU/MDT
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.2)READ(62)VR
          IF(ICOUPC.GE.2)READ(82)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.2)READ(62)VRR
          IF(ICOUPC.GE.2)READ(82)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(72)VP
        ELSE
          READ(72)VPR
        END IF

C***********************************************************

        DO I=1,10
          T(I)=0
        END DO
C**INTEGRATE OVER SINGLE MODES (START)
        IF(JCOUPL.GT.0)THEN
CCCC      DO M1=1,MM1/MD1
CCCC        DO M2=1,MM2/MD2
          DO M1=1,MM1
            DO M2=1,MM2
              IF(ICOUPC.GE.2)THEN
                DO I=1,10
                  T(I)=T(I)+X0(I,M1)*Y0(I,M2)*VC(M2,M1,I)*IFACTC
                END DO
                T(10)=T(10)+X0(11,M1)*Y0(11,M2)*VR(K,M2,M1)
              END IF
              T(10)=T(10)+X0(10,M1)*Y0(10,M2)*VP(M2,M1)*IFACTL
            END DO
          END DO
        ELSE
CCCC      DO M1=1,MM1/MD1
CCCC        DO M2=1,MM2/MD2
          DO M1=1,MM1
            DO M2=1,MM2
              IF(ICOUPC.GE.2)THEN
                DO I=1,10
                  T(I)=T(I)+X0(I,M1)*Y0(I,M2)*VCR(M2,M1,I)*IFACTC
                END DO
                T(10)=T(10)+X0(11,M1)*Y0(11,M2)*VRR(K,M2,M1)
              END IF
              T(10)=T(10)+X0(10,M1)*Y0(10,M2)*VPR(M2,M1)*IFACTL
            END DO
          END DO
        END IF
C**INTEGRATE OVER SINGLE MODES (END)
        DO IRH=1,NNTAU-1+MOD(KA,2)-INCT
          ILINE=MD-MOD(IRH,MD)
          IRHS=IRH+1-MOD(KA,2)+INCT
          X1=(HTAU(IRHS,MTAU,1,LMAX)*(2*T(1)+2*T(2)+T(4)+2*T(5)+T(7)+
     1    T(10))+HTAU(IRHS,MTAU,2,LMAX)*(T(3)+T(6)+T(8)))*DSTAU(ITAU)
          X2=(HTAU(IRHS,MTAU,1,LMAX)*(T(3)+T(6)+T(8))+
     1    HTAU(IRHS,MTAU,2,LMAX)*T(9))*DSTAU(ITAU)
          DO ILH=ILINE,IRH,MD
            ILHS=ILH+1-MOD(KA,2)+INCT
            Y1=HTAU(ILHS,MTAU,1,LMAX)
            Y2=HTAU(ILHS,MTAU,2,LMAX)
            XK(ILH,IRH)=XK(ILH,IRH)+Y1*X1+Y2*X2
          END DO
        END DO
      END DO
      IF(ITIM2B.EQ.1)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM2B=2
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TVAT2(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,H1,XQ1,H2,
     1XQ2,HTAU,XQTAU,NN1,MM1,NN2,MM2,NNTAU,MMTAU,X0,Y0,XK,KXK,VP,VPR,
     2VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,10),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,10),VRR(J21,MM2,MM1)
      DIMENSION T(10),TTT(10)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION HTAU(NNTAU,MMTAU,3,2),XQTAU(MMTAU)
      DIMENSION X0(11,MM1),Y0(11,MM2)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      CALL TDVAT2(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,H1,XQ1,H2,
     1XQ2,HTAU,XQTAU,NN1,MM1,MM1/MD1,NN2,MM2,MM2/MD2,NNTAU,MMTAU,X0,Y0,
     2XK,KXK,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDVAT2(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,H1,XQ1,H2,
     1XQ2,HTAU,XQTAU,NN1,MH1,MM1,NN2,MH2,MM2,NNTAU,MMTAU,X0,Y0,XK,KXK,
     2VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,10),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,10),VRR(J21,MM2,MM1)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION T(10),TTT(10)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION HTAU(NNTAU,MMTAU,3,2),XQTAU(MMTAU)
      DIMENSION X0(11,MM1),Y0(11,MM2)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM2B.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TVAT2'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(IFITRP.EQ.0)THEN
        IFACTL=JNTFAC(NMODE,ICOUPL,2)
      ELSE
        IFACTL=JNTFAC(NMODE,IABS(IFITRP)-1,2)
      END IF
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=JNTFAC(NMODE,ICOUPC,2)
      IF(MOLINC.GT.0)IFACTC=1

      KA=K/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHATM=ISTAT(ISTATE,NSMODE)+1-MOD(KA,2)+INCT
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      MD=MD1*MD2*MDT
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=X00*H1(ITHAT1,M1,2)
        X0(2,M1)=X00*H1(ITHAT1,M1,1)
        X0(3,M1)=X0(2,M1)
        IF(.NOT.LINEAR)THEN
          X0(4,M1)=H1(ITHAT1,M1,2)*H1(ITHAT1,M1,2)*MD
        ELSE
          X0(4,M1)=X00*H1(ITHAT1,M1,3)
        END IF
        X0(5,M1)=X0(1,M1)
        X0(6,M1)=X0(1,M1)
        X0(7,M1)=X0(2,M1)
        X0(8,M1)=X0(2,M1)
        X0(9,M1)=X0(2,M1)
        X0(10,M1)=X0(2,M1)
        X0(11,M1)=H1(ITHAT1,M1,1)*H1(ITHAT1,M1,1)*FACTRC*MD
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y0(1,M2)
        Y0(4,M2)=Y0(1,M2)
        Y0(5,M2)=Y0(2,M2)
        Y0(6,M2)=Y0(1,M2)
        IF(.NOT.LINEAR)THEN
          Y0(7,M2)=H2(ITHAT2,M2,2)*H2(ITHAT2,M2,2)
        ELSE
          Y0(7,M2)=Y00*H2(ITHAT2,M2,3)
        END IF
        Y0(8,M2)=Y0(2,M2)
        Y0(9,M2)=Y0(1,M2)
        Y0(10,M2)=Y0(1,M2)
        Y0(11,M2)=H2(ITHAT2,M2,1)*H2(ITHAT2,M2,1)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
      TERM=0
C**LOOP ROUND TAU
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
CCCC      QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
CCCC      DELTA(4)=+QTAU
CCCC      DELTA(5)=-QTAU
        END IF

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.2)READ(62)VR
          IF(ICOUPC.GE.2)READ(82)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.2)READ(62)VRR
          IF(ICOUPC.GE.2)READ(82)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(72)VP
        ELSE
          READ(72)VPR
        END IF

C***********************************************************

        IF(.NOT.LINEAR)THEN
          T00=HTAU(ITHATM,MTAU,1,LMAX)*DSTAU(ITAU)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(4)=T(1)
          T(5)=T(1)
          T(6)=T(3)
          T(7)=T(1)
          T(8)=T(3)
          T(9)=HTAU(ITHATM,MTAU,2,LMAX)*HTAU(ITHATM,MTAU,2,LMAX)*
     1    DSTAU(ITAU)
          T(10)=T(1)
C**START INTEGRATION OVER SINGLE MODES
          IF(JCOUPL.GT.0)THEN
CCCC        DO M1=1,MM1/MD1
CCCC          DO M2=1,MM2/MD2
            DO M1=1,MM1
              DO M2=1,MM2
                DO I=1,10
                  TTT(I)=0
                END DO
                IF(ICOUPC.GE.2)THEN
C**NO WATSON TERM IF RPH
                  DO I=1,10
                    TTT(I)=X0(I,M1)*Y0(I,M2)*T(I)*VC(M2,M1,I)*IFACTC
                  END DO
                END IF
                TTT(10)=TTT(10)+X0(10,M1)*Y0(10,M2)*T(10)*VP(M2,M1)*
     1          IFACTL
                TERM=TERM+2*(TTT(1)+TTT(2)+TTT(3)+TTT(5)+TTT(6)+
     1          TTT(8))+TTT(4)+TTT(7)+TTT(9)+TTT(10)
              END DO
            END DO
          ELSE
CCCC        DO M1=1,MM1/MD1
CCCC          DO M2=1,MM2/MD2
            DO M1=1,MM1
              DO M2=1,MM2
                DO I=1,10
                  TTT(I)=0
                END DO
                IF(ICOUPC.GE.2)THEN
C**NO WATSON TERM IF RPH
                  DO I=1,10
                    TTT(I)=X0(I,M1)*Y0(I,M2)*T(I)*VCR(M2,M1,I)*IFACTC
                  END DO
                END IF
                TTT(10)=TTT(10)+X0(10,M1)*Y0(10,M2)*T(10)*VPR(M2,M1)*
     1          IFACTL
                TERM=TERM+2*(TTT(1)+TTT(2)+TTT(3)+TTT(5)+TTT(6)+
     1          TTT(8))+TTT(4)+TTT(7)+TTT(9)+TTT(10)
              END DO
            END DO
          END IF
C**END INTEGRATION OVER SINGLE MODES
        ELSE
          T00=HTAU(ITHATM,MTAU,1,LMAX)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(4)=T(1)
          T(5)=T(1)
          T(6)=T(3)
          T(7)=T(1)
          T(8)=T(3)
          T(9)=T00*HTAU(ITHATM,MTAU,3,LMAX)
          T(10)=T(1)
C**START INTEGRATION OVER SINGLE MODES
          IF(JCOUPL.GT.0)THEN
CCCC        DO M1=1,MM1/MD1
CCCC          DO M2=1,MM2/MD2
            DO M1=1,MM1
              DO M2=1,MM2
                DO I=1,9
                  TTT(I)=0
                END DO
                IF(ICOUPC.GE.2)THEN
C**(10) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                  DO I=1,9
                    TTT(I)=-X0(I,M1)*Y0(I,M2)*T(I)*VC(M2,M1,I)*IFACTC
                  END DO
                END IF
                TTT(10)=X0(10,M1)*Y0(10,M2)*T(10)*VP(M2,M1)*IFACTL
                TERM=TERM+TTT(1)+TTT(2)+TTT(3)+2*(TTT(5)+TTT(6)+
     1          TTT(8))+TTT(4)+TTT(7)+TTT(9)+TTT(10)
              END DO
            END DO
          ELSE
CCCC        DO M1=1,MM1/MD1
CCCC          DO M2=1,MM2/MD2
            DO M1=1,MM1
              DO M2=1,MM2
                DO I=1,9
                  TTT(I)=0
                END DO
                IF(ICOUPC.GE.2)THEN
C**(10) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                  DO I=1,9
                    TTT(I)=-X0(I,M1)*Y0(I,M2)*T(I)*VCR(M2,M1,I)*IFACTC
                  END DO
                END IF
                TTT(10)=X0(10,M1)*Y0(10,M2)*T(10)*VPR(M2,M1)*IFACTL
                TERM=TERM+TTT(1)+TTT(2)+TTT(3)+2*(TTT(5)+TTT(6)+
     1          TTT(8))+TTT(4)+TTT(7)+TTT(9)+TTT(10)
              END DO
            END DO
          END IF
C**END INTEGRATION OVER SINGLE MODES
        END IF
      END DO
      DO IRLHS=1,KXK
        XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM
      END DO

C**ROTATION
      IF(J21.GT.1.AND.ICOUPC.GE.2)THEN
        TERM=0
C**LOOP ROUND TAU
        ITAU=INIT-INCTAU
        DO MTAU=1,MMTAU/MDT
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
          IF(JCOUPL.GT.0)THEN
CCCC        DO M1=1,MM1/MD1
CCCC          DO M2=1,MM2/MD2
            DO M1=1,MM1
              DO M2=1,MM2
                W21=VR(K,M2,M1)*X0(11,M1)*Y0(11,M2)*
     1          HTAU(ITHATM,MTAU,1,LMAX)*HTAU(ITHATM,MTAU,1,LMAX)
              END DO
            END DO
          ELSE
CCCC        DO M1=1,MM1/MD1
CCCC          DO M2=1,MM2/MD2
            DO M1=1,MM1
              DO M2=1,MM2
                W21=VRR(K,M2,M1)*X0(11,M1)*Y0(11,M2)*
     1          HTAU(ITHATM,MTAU,1,LMAX)*HTAU(ITHATM,MTAU,1,LMAX)
              END DO
            END DO
          END IF
          TERM=TERM+W21*DSTAU(ITAU)
        END DO
        DO IRLHS=1,KXK
          XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM
        END DO
      END IF
      IF(ITIM2B.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM2B=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS3A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,NN1,MM1,NN2,
     1MM2,NN3,MM3,X0,Y0,Z0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,VP,VPR,VC,
     2VCR,VR,VRR,J21,KROT,MODINT,XKAN,MAXQU,MAXPOW,NP3,CP3,JP3,NTOT3,
     3MAX3,INDK,INDL)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,10),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,10),VRR(J21,MM3,MM2,MM1)
      DIMENSION X(7)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3)
      DIMENSION X0(7,MM1),Y0(7,MM2),Z0(7,MM3)
C**ANALYTIC
      DIMENSION NP3(NTOT3),CP3(MAX3,NTOT3),JP3(MAX3,NTOT3,3)
      DIMENSION INDK(1),INDL(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      CALL TDIS3A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,NN1,MM1,MM1/MD1,NN2,
     1MM2,MM2/MD2,NN3,MM3,MM3/MD3,X0,Y0,Z0,XK,NMODE,ISTATE,MODE1,MODE2,
     2MODE3,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,XKAN,MAXQU,MAXPOW,NP3,
     3CP3,JP3,NTOT3,MAX3,INDK,INDL)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS3A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,NN1,MH1,MM1,
     1NN2,MH2,MM2,NN3,MH3,MM3,X0,Y0,Z0,XK,NMODE,ISTATE,MODE1,MODE2,
     2MODE3,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,XKAN,MAXQU,MAXPOW,NP3,
     3CP3,JP3,NTOT3,MAX3,INDK,INDL)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,10),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,10),VRR(J21,MM3,MM2,MM1)
      DIMENSION X(7)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
CCCC  DIMENSION H3(NN3,MM3,3),XQ3(MM3)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3)
      DIMENSION X0(7,MM1),Y0(7,MM2),Z0(7,MM3)
C**ANALYTIC
      DIMENSION NP3(NTOT3),CP3(MAX3,NTOT3),JP3(MAX3,NTOT3,3)
      DIMENSION INDK(1),INDL(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP

      IF(ITIM3A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS3A'
          CALL TIMIT(1)
        END IF
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,3)
      IFACTL=INTFAC(NMODE,ICOUPL,3)
      IF(MOLINC.GT.0)IFACTL=1
      IF(MOLINC.GT.0)IFACTC=1
      IF(IWHICH.EQ.0)IFACTL=1
      IF(IWHICH.LT.0.AND.MOLINC.LT.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(73)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(73)VPR
      END IF
      IF(JCOUPC.GE.0)THEN
        IF(J21.GT.1.AND.ICOUPC.GT.2)READ(63)VR
        IF(ICOUPC.GT.2)READ(83)VC
      ELSE
        IF(J21.GT.1.AND.ICOUPC.GT.2)READ(63)VRR
        IF(ICOUPC.GT.2)READ(83)VCR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MOD1=MD1
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      MD=MD1*MD2*MD3

      IF(LINEAR)GO TO 1000
C***********************************************************
C**LEFT-RIGHT DIFFERENTIATION
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)*MD
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y0(1,M2)
        Y0(4,M2)=H2(ITHAT2,M2,2)*H2(ITHAT2,M2,2)*MD
        Y0(5,M2)=Y0(2,M2)
        Y0(6,M2)=Y0(1,M2)
        Y0(7,M2)=Y0(1,M2)
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        Z00=H3(ITHAT3,M3,1)
        Z0(1,M3)=Z00*H3(ITHAT3,M3,1)
        Z0(2,M3)=Z0(1,M3)
        Z0(3,M3)=Z00*H3(ITHAT3,M3,2)
        Z0(4,M3)=Z0(1,M3)
        Z0(5,M3)=Z0(3,M3)
        Z0(6,M3)=H3(ITHAT3,M3,2)*H3(ITHAT3,M3,2)
        Z0(7,M3)=Z0(1,M3)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        DO I=1,7
          X(I)=0
        END DO
C**INTEGRATE OVER SINGLE STATES (START)
        IF(JCOUPL.GT.0)THEN
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
CCCC        DO M3=1,MM3/MD3
            DO M3=1,MM3
              IF(ICOUPC.GT.2)THEN
                DO I=1,7
                  X(I)=X(I)+Y0(I,M2)*Z0(I,M3)*VC(M3,M2,M1,I+3)*IFACTC
                END DO
                IF(J21.GT.1)
     1          X(7)=X(7)+Y0(7,M2)*Z0(7,M3)*VR(KROT,M3,M2,M1)*IFACTC
              END IF
              IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1        X(7)=X(7)+Y0(7,M2)*Z0(7,M3)*VP(M3,M2,M1)*IFACTL
            END DO
          END DO
        ELSE
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
CCCC        DO M3=1,MM3/MD3
            DO M3=1,MM3
              IF(ICOUPC.GT.2)THEN
                DO I=1,7
                  X(I)=X(I)+Y0(I,M2)*Z0(I,M3)*VCR(M3,M2,M1,I+3)*IFACTC
                END DO
                IF(J21.GT.1)
     1          X(7)=X(7)+Y0(7,M2)*Z0(7,M3)*VRR(KROT,M3,M2,M1)*IFACTC
              END IF
              IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1        X(7)=X(7)+Y0(7,M2)*Z0(7,M3)*VPR(M3,M2,M1)*IFACTL
            END DO
          END DO
        END IF
C**INTEGRATE OVER SINGLE STATES (END)
        DO IRHS=1,NN1
          ILINE=MOD1-MOD(IRHS,MOD1)
          X1=H1(IRHS,M1,1)*(X(4)+2*X(5)+X(6)+X(7))+
     1       H1(IRHS,M1,2)*(X(2)+X(3))
          X2=H1(IRHS,M1,1)*(X(2)+X(3))+
     1       H1(IRHS,M1,2)*X(1)
          DO ILHS=ILINE,IRHS,MOD1
            Y1=H1(ILHS,M1,1)
            Y2=H1(ILHS,M1,2)
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*X1+Y2*X2
          END DO
        END DO
      END DO
      GO TO 2000

1000  CONTINUE
C***********************************************************
C**RIGHT-ONLY DIFFERENTIATION
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)*MD
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y00*H2(ITHAT2,M2,3)
        Y0(4,M2)=H2(ITHAT2,M2,1)*H2(ITHAT2,M2,1)*MD
      END DO
      DO M3=1,MM3
        Z00=H3(ITHAT3,M3,1)
        Z0(1,M3)=Z00*H3(ITHAT3,M3,1)
        Z0(2,M3)=Z00*H3(ITHAT3,M3,2)
        Z0(3,M3)=Z00*H3(ITHAT3,M3,3)
        Z0(4,M3)=H3(ITHAT3,M3,1)*H3(ITHAT3,M3,1)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
      DO M1=1,MM1
        X1=0
        X2=0
        X3=0
        W21=0
C**INTEGRATE OVER SINGLE STATES (START)
        IF(JCOUPL.GT.0)THEN
          DO M2=1,MM2
            DO M3=1,MM3
              IF(ICOUPC.GT.2)THEN
                IF(J21.GT.1)
     1          W21=W21+VR(KROT,M3,M2,M1)*Y0(4,M2)*Z0(4,M3)*IFACTC
                X1=X1-(VC(M3,M2,M1,2)*Y0(2,M2)*Z0(1,M3)+
     1          VC(M3,M2,M1,3)*Y0(1,M2)*Z0(2,M3)+
     2          VC(M3,M2,M1,7)*Y0(3,M2)*Z0(1,M3)+
     2          2*VC(M3,M2,M1,8)*Y0(2,M2)*Z0(2,M3)+
     3          VC(M3,M2,M1,9)*Y0(1,M2)*Z0(3,M3))*IFACTC
                X1=X1+VC(M3,M2,M1,10)*Y0(4,M2)*Z0(1,M3)*IFACTC
                X2=X2-(VC(M3,M2,M1,1)*Y0(1,M2)*Z0(1,M3)+
     1          2*VC(M3,M2,M1,5)*Y0(2,M2)*Z0(1,M3)+
     2          2*VC(M3,M2,M1,6)*Y0(1,M2)*Z0(2,M3))*IFACTC
                X3=X3-VC(M3,M2,M1,4)*Y0(1,M2)*Z0(1,M3)*IFACTC
              END IF
              IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1        X1=X1+VP(M3,M2,M1)*Y0(1,M2)*Z0(1,M3)*IFACTL
            END DO
          END DO
        ELSE
          DO M2=1,MM2
            DO M3=1,MM3
              IF(ICOUPC.GT.2)THEN
                IF(J21.GT.1)
     1          W21=W21+VRR(KROT,M3,M2,M1)*Y0(4,M2)*Z0(4,M3)*IFACTC
                X1=X1-(VCR(M3,M2,M1,2)*Y0(2,M2)*Z0(1,M3)+
     1          VCR(M3,M2,M1,3)*Y0(1,M2)*Z0(2,M3)+
     2          VCR(M3,M2,M1,7)*Y0(3,M2)*Z0(1,M3)+
     2          2*VCR(M3,M2,M1,8)*Y0(2,M2)*Z0(2,M3)+
     3          VCR(M3,M2,M1,9)*Y0(1,M2)*Z0(3,M3))*IFACTC
                X1=X1+VCR(M3,M2,M1,10)*Y0(4,M2)*Z0(1,M3)*IFACTC
                X2=X2-(VCR(M3,M2,M1,1)*Y0(1,M2)*Z0(1,M3)+
     1          2*VCR(M3,M2,M1,5)*Y0(2,M2)*Z0(1,M3)+
     2          2*VCR(M3,M2,M1,6)*Y0(1,M2)*Z0(2,M3))*IFACTC
                X3=X3-VCR(M3,M2,M1,4)*Y0(1,M2)*Z0(1,M3)*IFACTC
              END IF
              IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1        X1=X1+VPR(M3,M2,M1)*Y0(1,M2)*Z0(1,M3)*IFACTL
            END DO
          END DO
        END IF
C**INTEGRATE OVER SINGLE STATES (END)
        DO IRHS=1,NN1
          XX=X1*H1(IRHS,M1,1)+X2*H1(IRHS,M1,2)+X3*H1(IRHS,M1,3)
          TERM=W21*H1(IRHS,M1,1)+XX
          DO ILHS=1,IRHS
            Y=H1(ILHS,M1,1)
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y*TERM
          END DO
        END DO
      END DO

2000  CONTINUE
C***********************************************************
C**POTENTIAL
      IF(IWHICH.LT.0.AND.MOLINC.GT.0)THEN
C**ANALYTIC
        IND=INDL(MODE1)+INDK(MODE2)+MODE3
        DO IRHS=1,NN1
          ILINE=MOD1-MOD(IRHS,MOD1)
          DO ILHS=ILINE,IRHS,MOD1
            Y=0
            DO I=1,NP3(IND)
              K=JP3(I,IND,1)+1
              L=JP3(I,IND,2)+1
              N=JP3(I,IND,3)+1
              Y=Y+CP3(I,IND)*XKAN(ILHS,IRHS,K,MODE1)*
     1        XKAN(ITHAT2,ITHAT2,L,MODE2)*XKAN(ITHAT3,ITHAT3,N,MODE3)
            END DO
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y
          END DO
        END DO
C**ANALYTIC
      END IF

C***********************************************************
      IF(ITIM3A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM3A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS3B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,NN1,MM1,NN2,
     1MM2,NN3,MM3,X0,Y0,Z0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,VP,VPR,VC,
     2VCR,VR,VRR,J21,KROT,MODINT,XKAN,MAXQU,MAXPOW,NP3,CP3,JP3,NTOT3,
     3MAX3,INDK,INDL)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,10),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,10),VRR(J21,MM3,MM2,MM1)
      DIMENSION Y(7)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN2,NN2)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3)
      DIMENSION X0(7,MM1),Y0(7,MM2),Z0(7,MM3)
C**ANALYTIC
      DIMENSION NP3(NTOT3),CP3(MAX3,NTOT3),JP3(MAX3,NTOT3,3)
      DIMENSION INDK(1),INDL(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      CALL TDIS3B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,NN1,MM1,MM1/MD1,NN2,
     1MM2,MM2/MD2,NN3,MM3,MM3/MD3,X0,Y0,Z0,XK,NMODE,ISTATE,MODE1,MODE2,
     2MODE3,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,XKAN,MAXQU,MAXPOW,NP3,
     3CP3,JP3,NTOT3,MAX3,INDK,INDL)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS3B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,NN1,MH1,MM1,
     1NN2,MH2,MM2,NN3,MH3,MM3,X0,Y0,Z0,XK,NMODE,ISTATE,MODE1,MODE2,
     2MODE3,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,XKAN,MAXQU,MAXPOW,NP3,
     3CP3,JP3,NTOT3,MAX3,INDK,INDL)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,10),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,10),VRR(J21,MM3,MM2,MM1)
      DIMENSION Y(7)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN2,NN2)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
CCCC  DIMENSION H3(NN3,MM3,3),XQ3(MM3)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3)
      DIMENSION X0(7,MM1),Y0(7,MM2),Z0(7,MM3)
C**ANALYTIC
      DIMENSION NP3(NTOT3),CP3(MAX3,NTOT3),JP3(MAX3,NTOT3,3)
      DIMENSION INDK(1),INDL(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP

      IF(ITIM3A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS3B'
          CALL TIMIT(1)
        END IF
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,3)
      IFACTL=INTFAC(NMODE,ICOUPL,3)
      IF(MOLINC.GT.0)IFACTL=1
      IF(MOLINC.GT.0)IFACTC=1
      IF(IWHICH.EQ.0)IFACTL=1
      IF(IWHICH.LT.0.AND.MOLINC.LT.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(73)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(73)VPR
      END IF
      IF(JCOUPC.GE.0)THEN
        IF(J21.GT.1.AND.ICOUPC.GT.2)READ(63)VR
        IF(ICOUPC.GT.2)READ(83)VC
      ELSE
        IF(J21.GT.1.AND.ICOUPC.GT.2)READ(63)VRR
        IF(ICOUPC.GT.2)READ(83)VCR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT3=ISTAT(ISTATE,MODE3)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MOD2=MD2
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      MD=MD1*MD2*MD3

      IF(LINEAR)GO TO 1000
C***********************************************************
C**LEFT-RIGHT DIFFERENTIATION
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=H1(ITHAT1,M1,2)*H1(ITHAT1,M1,2)*MD
        X0(2,M1)=X00*H1(ITHAT1,M1,2)
        X0(3,M1)=X0(2,M1)
        X0(4,M1)=X00*H1(ITHAT1,M1,1)
        X0(5,M1)=X0(4,M1)
        X0(6,M1)=X0(4,M1)
        X0(7,M1)=X0(4,M1)
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        Z00=H3(ITHAT3,M3,1)
        Z0(1,M3)=Z00*H3(ITHAT3,M3,1)
        Z0(2,M3)=Z0(1,M3)
        Z0(3,M3)=Z00*H3(ITHAT3,M3,2)
        Z0(4,M3)=Z0(1,M3)
        Z0(5,M3)=Z0(3,M3)
        Z0(6,M3)=H3(ITHAT3,M3,2)*H3(ITHAT3,M3,2)
        Z0(7,M3)=Z0(1,M3)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        DO I=1,7
          Y(I)=0
        END DO
C**INTEGRATE OVER SINGLE STATES (START)
        IF(JCOUPL.GT.0)THEN
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
CCCC        DO M3=1,MM3/MD3
            DO M3=1,MM3
              IF(ICOUPC.GT.2)THEN
                DO I=1,7
                  Y(I)=Y(I)+X0(I,M1)*Z0(I,M3)*VC(M3,M2,M1,I+3)*IFACTC
                END DO
                IF(J21.GT.1)
     1          Y(7)=Y(7)+X0(7,M1)*Z0(7,M3)*VR(KROT,M3,M2,M1)*IFACTC
              END IF
              IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1        Y(7)=Y(7)+X0(7,M1)*Z0(7,M3)*VP(M3,M2,M1)*IFACTL
            END DO
          END DO
        ELSE
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
CCCC        DO M3=1,MM3/MD3
            DO M3=1,MM3
              IF(ICOUPC.GT.2)THEN
                DO I=1,7
                  Y(I)=Y(I)+X0(I,M1)*Z0(I,M3)*VCR(M3,M2,M1,I+3)*IFACTC
                END DO
                IF(J21.GT.1)
     1          Y(7)=Y(7)+X0(7,M1)*Z0(7,M3)*VRR(KROT,M3,M2,M1)*IFACTC
              END IF
              IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1        Y(7)=Y(7)+X0(7,M1)*Z0(7,M3)*VPR(M3,M2,M1)*IFACTL
            END DO
          END DO
        END IF
C**INTEGRATE OVER SINGLE STATES (END)
        DO IRHS=1,NN2
          ILINE=MOD2-MOD(IRHS,MOD2)
          X1=H2(IRHS,M2,1)*(Y(1)+2*Y(3)+Y(6)+Y(7))+
     1       H2(IRHS,M2,2)*(Y(2)+Y(5))
          X2=H2(IRHS,M2,1)*(Y(2)+Y(5))+
     1       H2(IRHS,M2,2)*Y(4)
          DO ILHS=ILINE,IRHS,MOD2
            Y1=H2(ILHS,M2,1)
            Y2=H2(ILHS,M2,2)
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*X1+Y2*X2
          END DO
        END DO
      END DO
      GO TO 2000

1000  CONTINUE
C***********************************************************
C**RIGHT-ONLY DIFFERENTIATION
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=X00*H1(ITHAT1,M1,1)
        X0(2,M1)=X00*H1(ITHAT1,M1,2)
        X0(3,M1)=X00*H1(ITHAT1,M1,3)
        X0(4,M1)=H1(ITHAT1,M1,1)*H1(ITHAT1,M1,1)*MD
      END DO
      DO M3=1,MM3
        Z00=H3(ITHAT3,M3,1)
        Z0(1,M3)=Z00*H3(ITHAT3,M3,1)
        Z0(2,M3)=Z00*H3(ITHAT3,M3,2)
        Z0(3,M3)=Z00*H3(ITHAT3,M3,3)
        Z0(4,M3)=H3(ITHAT3,M3,1)*H3(ITHAT3,M3,1)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
      DO M2=1,MM2
        Y1=0
        Y2=0
        Y3=0
        W21=0
C**INTEGRATE OVER SINGLE STATES (START)
        IF(JCOUPL.GT.0)THEN
          DO M1=1,MM1
            DO M3=1,MM3
              IF(ICOUPC.GT.2)THEN
                IF(J21.GT.1)
     1          W21=W21+VR(KROT,M3,M2,M1)*X0(4,M1)*Z0(4,M3)*IFACTC
                Y1=Y1-(VC(M3,M2,M1,1)*X0(2,M1)*Z0(1,M3)+
     1          VC(M3,M2,M1,3)*X0(1,M1)*Z0(2,M3)+
     2          VC(M3,M2,M1,4)*X0(3,M1)*Z0(1,M3)+
     2          2*VC(M3,M2,M1,6)*X0(2,M1)*Z0(2,M3)+
     3          VC(M3,M2,M1,9)*X0(1,M1)*Z0(3,M3))*IFACTC
                Y1=Y1+VC(M3,M2,M1,10)*X0(4,M1)*Z0(1,M3)*IFACTC
                Y2=Y2-(VC(M3,M2,M1,2)*X0(1,M1)*Z0(1,M3)+
     1          2*VC(M3,M2,M1,5)*X0(2,M1)*Z0(1,M3)+
     2          2*VC(M3,M2,M1,8)*X0(1,M1)*Z0(2,M3))*IFACTC
                Y3=Y3-VC(M3,M2,M1,7)*X0(1,M1)*Z0(1,M3)*IFACTC
              END IF
              IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1        Y1=Y1+VP(M3,M2,M1)*X0(1,M1)*Z0(1,M3)*IFACTL
            END DO
          END DO
        ELSE
          DO M1=1,MM1
            DO M3=1,MM3
              IF(ICOUPC.GT.2)THEN
                IF(J21.GT.1)
     1          W21=W21+VRR(KROT,M3,M2,M1)*X0(4,M1)*Z0(4,M3)*IFACTC
                Y1=Y1-(VCR(M3,M2,M1,1)*X0(2,M1)*Z0(1,M3)+
     1          VCR(M3,M2,M1,3)*X0(1,M1)*Z0(2,M3)+
     2          VCR(M3,M2,M1,4)*X0(3,M1)*Z0(1,M3)+
     2          2*VCR(M3,M2,M1,6)*X0(2,M1)*Z0(2,M3)+
     3          VCR(M3,M2,M1,9)*X0(1,M1)*Z0(3,M3))*IFACTC
                Y1=Y1+VCR(M3,M2,M1,10)*X0(4,M1)*Z0(1,M3)*IFACTC
                Y2=Y2-(VCR(M3,M2,M1,2)*X0(1,M1)*Z0(1,M3)+
     1          2*VCR(M3,M2,M1,5)*X0(2,M1)*Z0(1,M3)+
     2          2*VCR(M3,M2,M1,8)*X0(1,M1)*Z0(2,M3))*IFACTC
                Y3=Y3-VCR(M3,M2,M1,7)*X0(1,M1)*Z0(1,M3)*IFACTC
              END IF
              IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1        Y1=Y1+VPR(M3,M2,M1)*X0(1,M1)*Z0(1,M3)*IFACTL
            END DO
          END DO
        END IF
C**INTEGRATE OVER SINGLE STATES (END)
        DO IRHS=1,NN2
          X=Y1*H2(IRHS,M2,1)+Y2*H2(IRHS,M2,2)+Y3*H2(IRHS,M2,3)
          TERM=W21*H2(IRHS,M2,1)+X
          DO ILHS=1,IRHS
            YY=H2(ILHS,M2,1)
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+YY*TERM
          END DO
        END DO
      END DO

2000  CONTINUE
C***********************************************************
C**POTENTIAL
      IF(IWHICH.LT.0.AND.MOLINC.GT.0)THEN
C**ANALYTIC
        IND=INDL(MODE1)+INDK(MODE2)+MODE3
        DO IRHS=1,NN2
          ILINE=MOD2-MOD(IRHS,MOD2)
          DO ILHS=ILINE,IRHS,MOD2
            YY=0
            DO I=1,NP3(IND)
              K=JP3(I,IND,1)+1
              L=JP3(I,IND,2)+1
              N=JP3(I,IND,3)+1
              YY=YY+CP3(I,IND)*XKAN(ITHAT1,ITHAT1,K,MODE1)*
     1        XKAN(ILHS,IRHS,L,MODE2)*XKAN(ITHAT3,ITHAT3,N,MODE3)
            END DO
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+YY
          END DO
        END DO
C**ANALYTIC
      END IF

C***********************************************************
      IF(ITIM3A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM3A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS3C(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,NN1,MM1,NN2,
     1MM2,NN3,MM3,X0,Y0,Z0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,VP,VPR,VC,
     2VCR,VR,VRR,J21,KROT,MODINT,XKAN,MAXQU,MAXPOW,NP3,CP3,JP3,NTOT3,
     3MAX3,INDK,INDL)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,10),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,10),VRR(J21,MM3,MM2,MM1)
      DIMENSION Z(7)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN3,NN3)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3)
      DIMENSION X0(7,MM1),Y0(7,MM2),Z0(7,MM3)
C**ANALYTIC
      DIMENSION NP3(NTOT3),CP3(MAX3,NTOT3),JP3(MAX3,NTOT3,3)
      DIMENSION INDK(1),INDL(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      CALL TDIS3C(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,NN1,MM1,MM1/MD1,NN2,
     1MM2,MM2/MD2,NN3,MM3,MM3/MD3,X0,Y0,Z0,XK,NMODE,ISTATE,MODE1,MODE2,
     2MODE3,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,XKAN,MAXQU,MAXPOW,NP3,
     3CP3,JP3,NTOT3,MAX3,INDK,INDL)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS3C(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,NN1,MH1,MM1,
     1NN2,MH2,MM2,NN3,MH3,MM3,X0,Y0,Z0,XK,NMODE,ISTATE,MODE1,MODE2,
     2MODE3,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,XKAN,MAXQU,MAXPOW,NP3,
     3CP3,JP3,NTOT3,MAX3,INDK,INDL)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,10),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,10),VRR(J21,MM3,MM2,MM1)
      DIMENSION Z(7)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN3,NN3)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
CCCC  DIMENSION H3(NN3,MM3,3),XQ3(MM3)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3)
      DIMENSION X0(7,MM1),Y0(7,MM2),Z0(7,MM3)
C**ANALYTIC
      DIMENSION NP3(NTOT3),CP3(MAX3,NTOT3),JP3(MAX3,NTOT3,3)
      DIMENSION INDK(1),INDL(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP

      IF(ITIM3A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS3C'
          CALL TIMIT(1)
        END IF
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,3)
      IFACTL=INTFAC(NMODE,ICOUPL,3)
      IF(MOLINC.GT.0)IFACTL=1
      IF(MOLINC.GT.0)IFACTC=1
      IF(IWHICH.EQ.0)IFACTL=1
      IF(IWHICH.LT.0.AND.MOLINC.LT.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(73)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(73)VPR
      END IF
      IF(JCOUPC.GE.0)THEN
        IF(J21.GT.1.AND.ICOUPC.GT.2)READ(63)VR
        IF(ICOUPC.GT.2)READ(83)VC
      ELSE
        IF(J21.GT.1.AND.ICOUPC.GT.2)READ(63)VRR
        IF(ICOUPC.GT.2)READ(83)VCR
      END IF
 
C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MOD3=MD3
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      MD=MD1*MD2*MD3

      IF(LINEAR)GO TO 1000
C***********************************************************
C**LEFT-RIGHT DIFFERENTIATION
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=H1(ITHAT1,M1,2)*H1(ITHAT1,M1,2)*MD
        X0(2,M1)=X00*H1(ITHAT1,M1,2)
        X0(3,M1)=X0(2,M1)
        X0(4,M1)=X00*H1(ITHAT1,M1,1)
        X0(5,M1)=X0(4,M1)
        X0(6,M1)=X0(4,M1)
        X0(7,M1)=X0(4,M1)
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y0(1,M2)
        Y0(4,M2)=H2(ITHAT2,M2,2)*H2(ITHAT2,M2,2)
        Y0(5,M2)=Y0(2,M2)
        Y0(6,M2)=Y0(1,M2)
        Y0(7,M2)=Y0(1,M2)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        DO I=1,7
          Z(I)=0
        END DO
C**INTEGRATE OVER SINGLE STATES (START)
        IF(JCOUPL.GT.0)THEN
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
CCCC        DO M2=1,MM2/MD2
            DO M2=1,MM2
              IF(ICOUPC.GT.2)THEN
                DO I=1,7
                  Z(I)=Z(I)+X0(I,M1)*Y0(I,M2)*VC(M3,M2,M1,I+3)*IFACTC
                END DO
                IF(J21.GT.1)
     1          Z(7)=Z(7)+X0(7,M1)*Y0(7,M2)*VR(KROT,M3,M2,M1)*IFACTC
              END IF
              IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1        Z(7)=Z(7)+X0(7,M1)*Y0(7,M2)*VP(M3,M2,M1)*IFACTL
            END DO
          END DO
        ELSE
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
CCCC        DO M2=1,MM2/MD2
            DO M2=1,MM2
              IF(ICOUPC.GT.2)THEN
                DO I=1,7
                  Z(I)=Z(I)+X0(I,M1)*Y0(I,M2)*VCR(M3,M2,M1,I+3)*IFACTC
                END DO
                IF(J21.GT.1)
     1          Z(7)=Z(7)+X0(7,M1)*Y0(7,M2)*VRR(KROT,M3,M2,M1)*IFACTC
              END IF
              IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1        Z(7)=Z(7)+X0(7,M1)*Y0(7,M2)*VPR(M3,M2,M1)*IFACTL
            END DO
          END DO
        END IF
C**INTEGRATE OVER SINGLE STATES (END)
        DO IRHS=1,NN3
          ILINE=MOD3-MOD(IRHS,MOD3)
          X1=H3(IRHS,M3,1)*(Z(1)+2*Z(2)+Z(4)+Z(7))+
     1       H3(IRHS,M3,2)*(Z(3)+Z(5))
          X2=H3(IRHS,M3,1)*(Z(3)+Z(5))+
     1       H3(IRHS,M3,2)*Z(6)
          DO ILHS=ILINE,IRHS,MOD3
            Y1=H3(ILHS,M3,1)
            Y2=H3(ILHS,M3,2)
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*X1+Y2*X2
          END DO
        END DO
      END DO
      GO TO 2000

1000  CONTINUE
C***********************************************************
C**RIGHT-ONLY DIFFERENTIATION
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=X00*H1(ITHAT1,M1,1)
        X0(2,M1)=X00*H1(ITHAT1,M1,2)
        X0(3,M1)=X00*H1(ITHAT1,M1,3)
        X0(4,M1)=H1(ITHAT1,M1,1)*H1(ITHAT1,M1,1)*MD
      END DO
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y00*H2(ITHAT2,M2,3)
        Y0(4,M2)=H2(ITHAT2,M2,1)*H2(ITHAT2,M2,1)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
      DO M3=1,MM3
        Z1=0
        Z2=0
        Z3=0
        W21=0
C**INTEGRATE OVER SINGLE STATES (START)
        IF(JCOUPL.GT.0)THEN
          DO M1=1,MM1
            DO M2=1,MM2
              IF(ICOUPC.GT.2)THEN
                IF(J21.GT.1)
     1          W21=W21+VR(KROT,M3,M2,M1)*X0(4,M1)*Y0(4,M2)*IFACTC
                Z1=Z1-(VC(M3,M2,M1,1)*X0(2,M1)*Y0(1,M2)+
     1          VC(M3,M2,M1,2)*X0(1,M1)*Y0(2,M2)+
     2          VC(M3,M2,M1,4)*X0(3,M1)*Y0(1,M2)+
     2          2*VC(M3,M2,M1,5)*X0(2,M1)*Y0(2,M2)+
     3          VC(M3,M2,M1,7)*X0(1,M1)*Y0(3,M2))*IFACTC
                Z1=Z1+VC(M3,M2,M1,10)*X0(4,M1)*Y0(1,M2)*IFACTC
                Z2=Z2-(VC(M3,M2,M1,3)*X0(1,M1)*Y0(1,M2)+
     1          2*VC(M3,M2,M1,6)*X0(2,M1)*Y0(1,M2)+
     1          2*VC(M3,M2,M1,8)*X0(1,M1)*Y0(2,M2))*IFACTC
                Z3=Z3-VC(M3,M2,M1,9)*X0(1,M1)*Y0(1,M2)*IFACTC
              END IF
              IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1        Z1=Z1+VP(M3,M2,M1)*X0(1,M1)*Y0(1,M2)*IFACTL
            END DO
          END DO
        ELSE
          DO M1=1,MM1
            DO M2=1,MM2
              IF(ICOUPC.GT.2)THEN
                IF(J21.GT.1)
     1          W21=W21+VRR(KROT,M3,M2,M1)*X0(4,M1)*Y0(4,M2)*IFACTC
                Z1=Z1-(VCR(M3,M2,M1,1)*X0(2,M1)*Y0(1,M2)+
     1          VCR(M3,M2,M1,2)*X0(1,M1)*Y0(2,M2)+
     2          VCR(M3,M2,M1,4)*X0(3,M1)*Y0(1,M2)+
     2          2*VCR(M3,M2,M1,5)*X0(2,M1)*Y0(2,M2)+
     3          VCR(M3,M2,M1,7)*X0(1,M1)*Y0(3,M2))*IFACTC
                Z1=Z1+VCR(M3,M2,M1,10)*X0(4,M1)*Y0(1,M2)*IFACTC
                Z2=Z2-(VCR(M3,M2,M1,3)*X0(1,M1)*Y0(1,M2)+
     1          2*VCR(M3,M2,M1,6)*X0(2,M1)*Y0(1,M2)+
     1          2*VCR(M3,M2,M1,8)*X0(1,M1)*Y0(2,M2))*IFACTC
                Z3=Z3-VCR(M3,M2,M1,9)*X0(1,M1)*Y0(1,M2)*IFACTC
              END IF
              IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1        Z1=Z1+VPR(M3,M2,M1)*X0(1,M1)*Y0(1,M2)*IFACTL
            END DO
          END DO
        END IF
C**INTEGRATE OVER SINGLE STATES (END)
        DO IRHS=1,NN3
          XX=Z1*H3(IRHS,M3,1)+Z2*H3(IRHS,M3,2)+Z3*H3(IRHS,M3,3)
          TERM=W21*H3(IRHS,M3,1)+XX
          DO ILHS=1,IRHS
            Y=H3(ILHS,M3,1)
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y*TERM
          END DO
        END DO
      END DO

2000  CONTINUE
C***********************************************************
C**POTENTIAL
      IF(IWHICH.LT.0.AND.MOLINC.GT.0)THEN
C**ANALYTIC
        IND=INDL(MODE1)+INDK(MODE2)+MODE3
        DO IRHS=1,NN3
          ILINE=MOD3-MOD(IRHS,MOD3)
          DO ILHS=ILINE,IRHS,MOD3
            Y=0
            DO I=1,NP3(IND)
              K=JP3(I,IND,1)+1
              L=JP3(I,IND,2)+1
              N=JP3(I,IND,3)+1
              Y=Y+CP3(I,IND)*XKAN(ITHAT1,ITHAT1,K,MODE1)*
     1        XKAN(ITHAT2,ITHAT2,L,MODE2)*XKAN(ILHS,IRHS,N,MODE3)
            END DO
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y
          END DO
        END DO
C**ANALYTIC
      END IF

C***********************************************************
      IF(ITIM3A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM3A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THAT3(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,MODE3,H1,
     1XQ1,H2,XQ2,H3,XQ3,NN1,MM1,NN2,MM2,NN3,MM3,X0,Y0,Z0,XK,KXK,VP,VPR,
     2VC,VCR,VR,VRR,J21,KROT,MODINT,XKAN,MAXQU,MAXPOW,NP3,CP3,JP3,
     3NTOT3,MAX3,INDK,INDL)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,10),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,10),VRR(J21,MM3,MM2,MM1)
      DIMENSION TTT(7)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3)
      DIMENSION X0(7,MM1),Y0(7,MM2),Z0(7,MM3)
C**ANALYTIC
      DIMENSION NP3(NTOT3),CP3(MAX3,NTOT3),JP3(MAX3,NTOT3,3)
      DIMENSION INDK(1),INDL(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      CALL TDAT3(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,MODE3,H1,
     1XQ1,H2,XQ2,H3,XQ3,NN1,MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,
     2MM3/MD3,X0,Y0,Z0,XK,KXK,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,
     3XKAN,MAXQU,MAXPOW,NP3,CP3,JP3,NTOT3,MAX3,INDK,INDL)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDAT3(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,MODE3,H1,
     1XQ1,H2,XQ2,H3,XQ3,NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,X0,Y0,Z0,
     2XK,KXK,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,XKAN,MAXQU,MAXPOW,
     3NP3,CP3,JP3,NTOT3,MAX3,INDK,INDL)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,10),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,10),VRR(J21,MM3,MM2,MM1)
      DIMENSION TTT(7)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
CCCC  DIMENSION H3(NN3,MM3,3),XQ3(MM3)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3)
      DIMENSION X0(7,MM1),Y0(7,MM2),Z0(7,MM3)
C**ANALYTIC
      DIMENSION NP3(NTOT3),CP3(MAX3,NTOT3),JP3(MAX3,NTOT3,3)
      DIMENSION INDK(1),INDL(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP

      IF(ITIM3B.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THAT3'
          CALL TIMIT(1)
        END IF
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,3)
      IFACTL=INTFAC(NMODE,ICOUPL,3)
      IF(MOLINC.GT.0)IFACTL=1
      IF(MOLINC.GT.0)IFACTC=1
      IF(IWHICH.EQ.0)IFACTL=1
      IF(IWHICH.LT.0.AND.MOLINC.LT.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(73)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(73)VPR
      END IF
      IF(JCOUPC.GE.0)THEN
        IF(J21.GT.1.AND.ICOUPC.GT.2)READ(63)VR
        IF(ICOUPC.GT.2)READ(83)VC
      ELSE
        IF(J21.GT.1.AND.ICOUPC.GT.2)READ(63)VRR
        IF(ICOUPC.GT.2)READ(83)VCR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      MD=MD1*MD2*MD3

      IF(LINEAR)GO TO 1000
C***********************************************************
C**LEFT-RIGHT DIFFERENTIATION
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=H1(ITHAT1,M1,2)*H1(ITHAT1,M1,2)*MD
        X0(2,M1)=X00*H1(ITHAT1,M1,2)
        X0(3,M1)=X0(2,M1)
        X0(4,M1)=X00*H1(ITHAT1,M1,1)
        X0(5,M1)=X0(4,M1)
        X0(6,M1)=X0(4,M1)
        X0(7,M1)=X0(4,M1)
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y0(1,M2)
        Y0(4,M2)=H2(ITHAT2,M2,2)*H2(ITHAT2,M2,2)
        Y0(5,M2)=Y0(2,M2)
        Y0(6,M2)=Y0(1,M2)
        Y0(7,M2)=Y0(1,M2)
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        Z00=H3(ITHAT3,M3,1)
        Z0(1,M3)=Z00*H3(ITHAT3,M3,1)
        Z0(2,M3)=Z0(1,M3)
        Z0(3,M3)=Z00*H3(ITHAT3,M3,2)
        Z0(4,M3)=Z0(1,M3)
        Z0(5,M3)=Z0(3,M3)
        Z0(6,M3)=H3(ITHAT3,M3,2)*H3(ITHAT3,M3,2)
        Z0(7,M3)=Z0(1,M3)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
      TERM=0
      IF(JCOUPL.GT.0)THEN
CCCC    DO M1=1,MM1/MD1
        DO M1=1,MM1
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
CCCC        DO M3=1,MM3/MD3
            DO M3=1,MM3
              DO I=1,7
                TTT(I)=0
              END DO
              IF(ICOUPC.GT.2)THEN
                DO I=1,7
                  TTT(I)=X0(I,M1)*Y0(I,M2)*Z0(I,M3)*VC(M3,M2,M1,I+3)*
     1            IFACTC
                END DO
              END IF
              IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1        TTT(7)=TTT(7)+X0(7,M1)*Y0(7,M2)*Z0(7,M3)*
     2        VP(M3,M2,M1)*IFACTL
              TERM=TERM+2*(TTT(2)+TTT(3)+TTT(5))+
     1                  TTT(1)+TTT(4)+TTT(6)+TTT(7)
            END DO
          END DO
        END DO
      ELSE
CCCC    DO M1=1,MM1/MD1
        DO M1=1,MM1
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
CCCC        DO M3=1,MM3/MD3
            DO M3=1,MM3
              DO I=1,7
                TTT(I)=0
              END DO
              IF(ICOUPC.GT.2)THEN
                DO I=1,7
                  TTT(I)=X0(I,M1)*Y0(I,M2)*Z0(I,M3)*VCR(M3,M2,M1,I+3)*
     1            IFACTC
                END DO
              END IF
              IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1        TTT(7)=TTT(7)+X0(7,M1)*Y0(7,M2)*Z0(7,M3)*
     2        VPR(M3,M2,M1)*IFACTL
              TERM=TERM+2*(TTT(2)+TTT(3)+TTT(5))+
     1                  TTT(1)+TTT(4)+TTT(6)+TTT(7)
            END DO
          END DO
        END DO
      END IF
      GO TO 2000

1000  CONTINUE
C***********************************************************
C**RIGHT-ONLY DIFFERENTIATION
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=X00*H1(ITHAT1,M1,1)
        X0(2,M1)=X00*H1(ITHAT1,M1,2)
        X0(3,M1)=X00*H1(ITHAT1,M1,3)
        X0(4,M1)=H1(ITHAT1,M1,1)*H1(ITHAT1,M1,1)*MD
        X0(7,M1)=X0(4,M1)
      END DO
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y00*H2(ITHAT2,M2,3)
        Y0(4,M2)=H2(ITHAT2,M2,1)*H2(ITHAT2,M2,1)
        Y0(7,M1)=Y0(4,M1)
      END DO
      DO M3=1,MM3
        Z00=H3(ITHAT3,M3,1)
        Z0(1,M3)=Z00*H3(ITHAT3,M3,1)
        Z0(2,M3)=Z00*H3(ITHAT3,M3,2)
        Z0(3,M3)=Z00*H3(ITHAT3,M3,3)
        Z0(4,M3)=H3(ITHAT3,M3,1)*H3(ITHAT3,M3,1)
        Z0(7,M1)=Z0(4,M1)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
      TERM=0
      IF(JCOUPL.GT.0)THEN
        DO M1=1,MM1
          DO M2=1,MM2
            DO M3=1,MM3
              IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1        X=VP(M3,M2,M1)*X0(1,M1)*Y0(1,M2)*Z0(1,M3)*IFACTL
              IF(ICOUPC.GT.2)THEN
                X=X-(VC(M3,M2,M1,1)*X0(2,M1)*Y0(1,M2)*Z0(1,M3)+
     1          VC(M3,M2,M1,2)*X0(1,M1)*Y0(2,M2)*Z0(1,M3)+
     2          VC(M3,M2,M1,3)*X0(1,M1)*Y0(1,M2)*Z0(2,M3)+
     2          VC(M3,M2,M1,4)*X0(3,M1)*Y0(1,M2)*Z0(1,M3)+
     3          2*VC(M3,M2,M1,5)*X0(2,M1)*Y0(2,M2)*Z0(1,M3)+
     3          2*VC(M3,M2,M1,6)*X0(2,M1)*Y0(1,M2)*Z0(2,M3)+
     4          VC(M3,M2,M1,7)*X0(1,M1)*Y0(3,M2)*Z0(1,M3)+
     5          2*VC(M3,M2,M1,8)*X0(1,M1)*Y0(2,M2)*Z0(2,M3)+
     6          VC(M3,M2,M1,9)*X0(1,M1)*Y0(1,M2)*Z0(3,M3))*IFACTC
                X=X+VC(M3,M2,M1,10)*X0(4,M1)*Y0(1,M2)*Z0(1,M3)*IFACTC
              END IF
              TERM=TERM+X
            END DO
          END DO
        END DO
      ELSE
        DO M1=1,MM1
          DO M2=1,MM2
            DO M3=1,MM3
              IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1        X=VPR(M3,M2,M1)*X0(1,M1)*Y0(1,M2)*Z0(1,M3)*IFACTL
              IF(ICOUPC.GT.2)THEN
                X=X-(VCR(M3,M2,M1,1)*X0(2,M1)*Y0(1,M2)*Z0(1,M3)+
     1          VCR(M3,M2,M1,2)*X0(1,M1)*Y0(2,M2)*Z0(1,M3)+
     2          VCR(M3,M2,M1,3)*X0(1,M1)*Y0(1,M2)*Z0(2,M3)+
     2          VCR(M3,M2,M1,4)*X0(3,M1)*Y0(1,M2)*Z0(1,M3)+
     3          2*VCR(M3,M2,M1,5)*X0(2,M1)*Y0(2,M2)*Z0(1,M3)+
     3          2*VCR(M3,M2,M1,6)*X0(2,M1)*Y0(1,M2)*Z0(2,M3)+
     4          VCR(M3,M2,M1,7)*X0(1,M1)*Y0(3,M2)*Z0(1,M3)+
     5          2*VCR(M3,M2,M1,8)*X0(1,M1)*Y0(2,M2)*Z0(2,M3)+
     6          VCR(M3,M2,M1,9)*X0(1,M1)*Y0(1,M2)*Z0(3,M3))*IFACTC
                X=X+VCR(M3,M2,M1,10)*X0(4,M1)*Y0(1,M2)*Z0(1,M3)*IFACTC
              END IF
              TERM=TERM+X
            END DO
          END DO
        END DO
      END IF

2000  CONTINUE
C***********************************************************
C**POTENTIAL
      Y=0
      IF(IWHICH.LT.0.AND.MOLINC.GT.0)THEN
C**ANALYTIC
        IND=INDL(MODE1)+INDK(MODE2)+MODE3
        DO I=1,NP3(IND)
          K=JP3(I,IND,1)+1
          L=JP3(I,IND,2)+1
          N=JP3(I,IND,3)+1
          Y=Y+CP3(I,IND)*XKAN(ITHAT1,ITHAT1,K,MODE1)*
     1    XKAN(ITHAT2,ITHAT2,L,MODE2)*XKAN(ITHAT3,ITHAT3,N,MODE3)
        END DO
C**ANALYTIC
      END IF

      DO IRLHS=1,KXK
        XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM+Y
      END DO

C***********************************************************
C**ROTATION
      IF(J21.GT.1.AND.ICOUPC.GT.2)THEN
        TERM=0
        IF(JCOUPC.GE.0)THEN
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
CCCC        DO M2=1,MM2/MD2
            DO M2=1,MM2
CCCC          DO M3=1,MM3/MD3
              DO M3=1,MM3
                TERM=TERM+VR(KROT,M3,M2,M1)*X0(7,M1)*Y0(7,M2)*Z0(7,M3)*
     1          IFACTC
              END DO
            END DO
          END DO
        ELSE
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
CCCC        DO M2=1,MM2/MD2
            DO M2=1,MM2
CCCC          DO M3=1,MM3/MD3
              DO M3=1,MM3
               TERM=TERM+VRR(KROT,M3,M2,M1)*X0(7,M1)*Y0(7,M2)*Z0(7,M3)*
     1          IFACTC
              END DO
            END DO
          END DO
        END IF
        DO IRLHS=1,KXK
          XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM
        END DO
      END IF

      IF(ITIM3B.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM3B=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TVIS3A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,HTAU,XQTAU,
     1NN1,MM1,NN2,MM2,NN3,MM3,NNTAU,MMTAU,X0,Y0,Z0,XK,NMODE,ISTATE,
     2MODE1,MODE2,MODE3,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,15),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,15),VRR(J21,MM3,MM2,MM1)
      DIMENSION X(15),T(15)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(16,MM1),Y0(16,MM2),Z0(16,MM3)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MOD1=MD1
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      CALL DVIS3A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,HTAU,XQTAU,NN1,MM1,
     1MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NNTAU,MMTAU,X0,Y0,Z0,XK,
     2NMODE,ISTATE,MODE1,MODE2,MODE3,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DVIS3A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,HTAU,XQTAU,
     1NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NNTAU,MMTAU,X0,Y0,Z0,XK,
     2NMODE,ISTATE,MODE1,MODE2,MODE3,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,15),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,15),VRR(J21,MM3,MM2,MM1)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION X(15),T(15)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
CCCC  DIMENSION H3(NN3,MM3,3),XQ3(MM3)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(16,MM1),Y0(16,MM2),Z0(16,MM3)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM3A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TVIS3A'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(IFITRP.EQ.0)THEN
        IFACTL=JNTFAC(NMODE,ICOUPL,3)
      ELSE
        IFACTL=JNTFAC(NMODE,IABS(IFITRP)-1,3)
      END IF
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=JNTFAC(NMODE,ICOUPC,3)
      IF(MOLINC.GT.0)IFACTC=1

      KA=K/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHATM=ISTAT(ISTATE,NSMODE)+1-MOD(KA,2)+INCT
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MOD1=MD1
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      MD=MD1*MD2*MD3*MDT
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)*MD
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y0(1,M2)
        Y0(4,M2)=Y0(1,M2)
        Y0(5,M2)=Y0(1,M2)
        Y0(6,M2)=Y0(2,M2)
        Y0(7,M2)=Y0(1,M2)
        Y0(8,M2)=Y0(1,M2)
        IF(.NOT.LINEAR)THEN
          Y0(9,M2)=H2(ITHAT2,M2,2)*H2(ITHAT2,M2,2)*MD
        ELSE
          Y0(9,M2)=Y00*H2(ITHAT2,M2,3)
        END IF
        Y0(10,M2)=Y0(2,M2)
        Y0(11,M2)=Y0(2,M2)
        Y0(12,M2)=Y0(1,M2)
        Y0(13,M2)=Y0(1,M2)
        Y0(14,M2)=Y0(1,M2)
        Y0(15,M2)=Y0(1,M2)
        Y0(16,M2)=H2(ITHAT2,M2,1)*H2(ITHAT2,M2,1)*FACTRC*MD
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        Z00=H3(ITHAT3,M3,1)
        Z0(1,M3)=Z00*H3(ITHAT3,M3,1)
        Z0(2,M3)=Z0(1,M3)
        Z0(3,M3)=Z00*H3(ITHAT3,M3,2)
        Z0(4,M3)=Z0(1,M3)
        Z0(5,M3)=Z0(1,M3)
        Z0(6,M3)=Z0(1,M3)
        Z0(7,M3)=Z0(3,M3)
        Z0(8,M3)=Z0(1,M3)
        Z0(9,M3)=Z0(1,M3)
        Z0(10,M3)=Z0(3,M3)
        Z0(11,M3)=Z0(1,M3)
        IF(.NOT.LINEAR)THEN
          Z0(12,M3)=H3(ITHAT3,M3,2)*H3(ITHAT3,M3,2)
        ELSE
          Z0(12,M3)=Z00*H3(ITHAT3,M3,3)
        END IF
        Z0(13,M3)=Z0(3,M3)
        Z0(14,M3)=Z0(1,M3)
        Z0(15,M3)=Z0(1,M3)
        Z0(16,M3)=H3(ITHAT3,M3,1)*H3(ITHAT3,M3,1)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**LOOP ROUND TAU
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
CCCC      QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
CCCC      DELTA(4)=+QTAU
CCCC      DELTA(5)=-QTAU
        END IF

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.3)READ(63)VR
          IF(ICOUPC.GE.3)READ(83)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.3)READ(63)VRR
          IF(ICOUPC.GE.3)READ(83)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(73)VP
        ELSE
          READ(73)VPR
        END IF

C***********************************************************

        IF(.NOT.LINEAR)THEN
          T00=HTAU(ITHATM,MTAU,1,LMAX)*DSTAU(ITAU)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T(1)
          T(4)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(5)=T(1)
          T(6)=T(1)
          T(7)=T(1)
          T(8)=T(4)
          T(9)=T(1)
          T(10)=T(1)
          T(11)=T(4)
          T(12)=T(1)
          T(13)=T(4)
          T(14)=HTAU(ITHATM,MTAU,2,LMAX)*HTAU(ITHATM,MTAU,2,LMAX)*
     1    DSTAU(ITAU)
          T(15)=T(1)
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
            DO I=1,15
              X(I)=0
            END DO
C**INTEGRATE OVER SINGLE MODES (START)
            IF(JCOUPL.GT.0)THEN
CCCC          DO M2=1,MM2/MD2
CCCC            DO M3=1,MM3/MD3
              DO M2=1,MM2
                DO M3=1,MM3
                  IF(ICOUPC.GE.3)THEN
C**NO WATSON TERM IF RPH
                    DO I=1,15
                      X(I)=X(I)+T(I)*Y0(I,M2)*Z0(I,M3)*VC(M3,M2,M1,I)*
     1                IFACTC
                    END DO
                    X(15)=X(15)+T(15)*Y0(16,M2)*Z0(16,M3)*
     1              VR(K,M3,M2,M1)
                  END IF
                  X(15)=X(15)+T(15)*Y0(15,M2)*Z0(15,M3)*VP(M3,M2,M1)*
     1            IFACTL
                END DO
              END DO
            ELSE
CCCC          DO M2=1,MM2/MD2
CCCC            DO M3=1,MM3/MD3
              DO M2=1,MM2
                DO M3=1,MM3
                  IF(ICOUPC.GE.3)THEN
C**NO WATSON TERM IF RPH
                    DO I=1,15
                      X(I)=X(I)+T(I)*Y0(I,M2)*Z0(I,M3)*VCR(M3,M2,M1,I)*
     1                IFACTC
                    END DO
                    X(15)=X(15)+T(15)*Y0(16,M2)*Z0(16,M3)*
     1              VRR(K,M3,M2,M1)
                  END IF
                  X(15)=X(15)+T(15)*Y0(15,M2)*Z0(15,M3)*VPR(M3,M2,M1)*
     1            IFACTL
                END DO
              END DO
            END IF
C**INTEGRATE OVER SINGLE MODES (END)
            DO IRHS=1,NN1
              ILINE=MOD1-MOD(IRHS,MOD1)
              X1=H1(IRHS,M1,1)*(2*X(2)+2*X(3)+2*X(4)+X(9)+2*X(10)+
     1                              2*X(11)+X(12)+2*X(13)+X(14)+X(15))
     2              +H1(IRHS,M1,2)*(X(1)+X(6)+X(7)+X(8))
              X2=H1(IRHS,M1,1)*(X(1)+X(6)+X(7)+X(8))+
     1               H1(IRHS,M1,2)*X(5)
              DO ILHS=ILINE,IRHS,MOD1
                Y1=H1(ILHS,M1,1)
                Y2=H1(ILHS,M1,2)
                XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*X1+Y2*X2
              END DO
            END DO
          END DO
        ELSE
          T00=HTAU(ITHATM,MTAU,1,LMAX)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T(1)
          T(4)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(5)=T(1)
          T(6)=T(1)
          T(7)=T(1)
          T(8)=T(4)
          T(9)=T(1)
          T(10)=T(1)
          T(11)=T(4)
          T(12)=T(1)
          T(13)=T(4)
          T(14)=T00*HTAU(ITHATM,MTAU,3,LMAX)
          T(15)=T(1)
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
            DO I=1,15
              X(I)=0
            END DO
C**INTEGRATE OVER SINGLE MODES (START)
            IF(JCOUPL.GT.0)THEN
CCCC          DO M2=1,MM2/MD2
CCCC            DO M3=1,MM3/MD3
              DO M2=1,MM2
                DO M3=1,MM3
                  IF(ICOUPC.GE.3)THEN
C**(15) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                    DO I=1,14
                      X(I)=X(I)-T(I)*Y0(I,M2)*Z0(I,M3)*VC(M3,M2,M1,I)*
     1                IFACTC
                    END DO
                    X(15)=X(15)+T(15)*Y0(16,M2)*Z0(16,M3)*
     1              VR(K,M3,M2,M1)
                  END IF
                  X(15)=X(15)+T(15)*Y0(15,M2)*Z0(15,M3)*VP(M3,M2,M1)*
     1            IFACTL
                END DO
              END DO
            ELSE
CCCC          DO M2=1,MM2/MD2
CCCC            DO M3=1,MM3/MD3
              DO M2=1,MM2
                DO M3=1,MM3
                  IF(ICOUPC.GE.3)THEN
C**(15) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                    DO I=1,14
                      X(I)=X(I)-T(I)*Y0(I,M2)*Z0(I,M3)*VCR(M3,M2,M1,I)*
     1                IFACTC
                    END DO
                    X(15)=X(15)+T(15)*Y0(16,M2)*Z0(16,M3)*
     1              VRR(K,M3,M2,M1)
                  END IF
                  X(15)=X(15)+T(15)*Y0(15,M2)*Z0(15,M3)*VPR(M3,M2,M1)*
     1            IFACTL
                END DO
              END DO
            END IF
C**INTEGRATE OVER SINGLE MODES (END)
            DO IRHS=1,NN1
              ILINE=MOD1-MOD(IRHS,MOD1)
              X1=H1(IRHS,M1,1)*(X(2)+X(3)+X(4)+X(9)+2*X(10)+
     1                              2*X(11)+X(12)+2*X(13)+X(14)+X(15))
              X2=H1(IRHS,M1,2)*(X(1)+2*X(6)+2*X(7)+2*X(8))
              X3=H1(IRHS,M1,3)*X(5)
              DO ILHS=ILINE,IRHS,MOD1
                Y1=H1(ILHS,M1,1)
                XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*(X1+X2+X3)
              END DO
            END DO
          END DO
        END IF
      END DO
      IF(ITIM3A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM3A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TVIS3B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,HTAU,XQTAU,
     1NN1,MM1,NN2,MM2,NN3,MM3,NNTAU,MMTAU,X0,Y0,Z0,XK,NMODE,ISTATE,
     2MODE1,MODE2,MODE3,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,15),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,15),VRR(J21,MM3,MM2,MM1)
      DIMENSION Y(15),T(15)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN2,NN2)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(16,MM1),Y0(16,MM2),Z0(16,MM3)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MOD2=MD2
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      CALL DVIS3B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,HTAU,XQTAU,NN1,MM1,
     1MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NNTAU,MMTAU,X0,Y0,Z0,XK,
     2NMODE,ISTATE,MODE1,MODE2,MODE3,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DVIS3B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,HTAU,XQTAU,
     1NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NNTAU,MMTAU,X0,Y0,Z0,XK,
     2NMODE,ISTATE,MODE1,MODE2,MODE3,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,15),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,15),VRR(J21,MM3,MM2,MM1)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION Y(15),T(15)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN2,NN2)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
CCCC  DIMENSION H3(NN3,MM3,3),XQ3(MM3)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(16,MM1),Y0(16,MM2),Z0(16,MM3)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM3A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TVIS3B'
          CALL TIMIT(1)
        END IF
      END IF

      IF(IFITRP.EQ.0)THEN
        IFACTL=JNTFAC(NMODE,ICOUPL,3)
      ELSE
        IFACTL=JNTFAC(NMODE,IABS(IFITRP)-1,3)
      END IF
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=JNTFAC(NMODE,ICOUPC,3)
      IF(MOLINC.GT.0)IFACTC=1

      KA=K/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHATM=ISTAT(ISTATE,NSMODE)+1-MOD(KA,2)+INCT
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MOD2=MD2
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      MD=MD1*MD2*MD3*MDT
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=X00*H1(ITHAT1,M1,2)
        X0(2,M1)=X00*H1(ITHAT1,M1,1)
        X0(3,M1)=X0(2,M1)
        X0(4,M1)=X0(2,M1)
        IF(.NOT.LINEAR)THEN
          X0(5,M1)=H1(ITHAT1,M1,2)*H1(ITHAT1,M1,2)*MD
        ELSE
          X0(5,M1)=X00*H1(ITHAT1,M1,3)
        END IF
        X0(6,M1)=X0(1,M1)
        X0(7,M1)=X0(1,M1)
        X0(8,M1)=X0(1,M1)
        X0(9,M1)=X0(2,M1)
        X0(10,M1)=X0(2,M1)
        X0(11,M1)=X0(2,M1)
        X0(12,M1)=X0(2,M1)
        X0(13,M1)=X0(2,M1)
        X0(14,M1)=X0(2,M1)
        X0(15,M1)=X0(2,M1)
        X0(16,M1)=H1(ITHAT1,M1,1)*H1(ITHAT1,M1,1)*FACTRC*MD
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        Z00=H3(ITHAT3,M3,1)
        Z0(1,M3)=Z00*H3(ITHAT3,M3,1)
        Z0(2,M3)=Z0(1,M3)
        Z0(3,M3)=Z00*H3(ITHAT3,M3,2)
        Z0(4,M3)=Z0(1,M3)
        Z0(5,M3)=Z0(1,M3)
        Z0(6,M3)=Z0(1,M3)
        Z0(7,M3)=Z0(3,M3)
        Z0(8,M3)=Z0(1,M3)
        Z0(9,M3)=Z0(1,M3)
        Z0(10,M3)=Z0(3,M3)
        Z0(11,M3)=Z0(1,M3)
        IF(.NOT.LINEAR)THEN
          Z0(12,M3)=H3(ITHAT3,M3,2)*H3(ITHAT3,M3,2)
        ELSE
          Z0(12,M3)=Z00*H3(ITHAT3,M3,3)
        END IF
        Z0(13,M3)=Z0(3,M3)
        Z0(14,M3)=Z0(1,M3)
        Z0(15,M3)=Z0(1,M3)
        Z0(16,M3)=H3(ITHAT3,M3,1)*H3(ITHAT3,M3,1)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**LOOP ROUND TAU
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
CCCC      QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
CCCC      DELTA(4)=+QTAU
CCCC      DELTA(5)=-QTAU
        END IF

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.3)READ(63)VR
          IF(ICOUPC.GE.3)READ(83)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.3)READ(63)VRR
          IF(ICOUPC.GE.3)READ(83)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(73)VP
        ELSE
          READ(73)VPR
        END IF

C***********************************************************

        IF(.NOT.LINEAR)THEN
          T00=HTAU(ITHATM,MTAU,1,LMAX)*DSTAU(ITAU)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T(1)
          T(4)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(5)=T(1)
          T(6)=T(1)
          T(7)=T(1)
          T(8)=T(4)
          T(9)=T(1)
          T(10)=T(1)
          T(11)=T(4)
          T(12)=T(1)
          T(13)=T(4)
          T(14)=HTAU(ITHATM,MTAU,2,LMAX)*HTAU(ITHATM,MTAU,2,LMAX)*
     1    DSTAU(ITAU)
          T(15)=T(1)
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
            DO I=1,15
              Y(I)=0
            END DO
C**INTEGRATE OVER SINGLE MODES (START)
            IF(JCOUPL.GT.0)THEN
CCCC          DO M1=1,MM1/MD1
CCCC            DO M3=1,MM3/MD3
              DO M1=1,MM1
                DO M3=1,MM3
                  IF(ICOUPC.GE.3)THEN
C**NO WATSON TERM IF RPH
                    DO I=1,15
                      Y(I)=Y(I)+T(I)*X0(I,M1)*Z0(I,M3)*VC(M3,M2,M1,I)*
     1                IFACTC
                    END DO
                    Y(15)=Y(15)+T(15)*X0(16,M1)*Z0(16,M3)*
     1              VR(K,M3,M2,M1)
                  END IF
                  Y(15)=Y(15)+T(15)*X0(15,M1)*Z0(15,M3)*VP(M3,M2,M1)*
     1            IFACTL
                END DO
              END DO
            ELSE
CCCC          DO M1=1,MM1/MD1
CCCC            DO M3=1,MM3/MD3
              DO M1=1,MM1
                DO M3=1,MM3
                  IF(ICOUPC.GE.3)THEN
C**NO WATSON TERM IF RPH
                    DO I=1,15
                      Y(I)=Y(I)+T(I)*X0(I,M1)*Z0(I,M3)*VCR(M3,M2,M1,I)*
     1                IFACTC
                    END DO
                    Y(15)=Y(15)+T(15)*X0(16,M1)*Z0(16,M3)*
     1              VRR(K,M3,M2,M1)
                  END IF
                  Y(15)=Y(15)+T(15)*X0(15,M1)*Z0(15,M3)*VPR(M3,M2,M1)*
     1            IFACTL
                END DO
              END DO
            END IF
C**INTEGRATE OVER SINGLE MODES (END)
            DO IRHS=1,NN2
              ILINE=MOD2-MOD(IRHS,MOD2)
              X1=H2(IRHS,M2,1)*(2*Y(1)+2*Y(3)+2*Y(4)+Y(5)+2*Y(7)+
     1                              2*Y(8)+Y(12)+2*Y(13)+Y(14)+Y(15))
     1              +H2(IRHS,M2,2)*(Y(2)+Y(6)+Y(10)+Y(11))
              X2=H2(IRHS,M2,1)*(Y(2)+Y(6)+Y(10)+Y(11))+
     1               H2(IRHS,M2,2)*Y(9)
              DO ILHS=ILINE,IRHS,MOD2
                Y1=H2(ILHS,M2,1)
                Y2=H2(ILHS,M2,2)
                XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*X1+Y2*X2
              END DO
            END DO
          END DO
        ELSE
          T00=HTAU(ITHATM,MTAU,1,LMAX)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T(1)
          T(4)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(5)=T(1)
          T(6)=T(1)
          T(7)=T(1)
          T(8)=T(4)
          T(9)=T(1)
          T(10)=T(1)
          T(11)=T(4)
          T(12)=T(1)
          T(13)=T(4)
          T(14)=T00*HTAU(ITHATM,MTAU,3,LMAX)
          T(15)=T(1)
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
            DO I=1,15
              Y(I)=0
            END DO
C**INTEGRATE OVER SINGLE MODES (START)
            IF(JCOUPL.GT.0)THEN
CCCC          DO M1=1,MM1/MD1
CCCC            DO M3=1,MM3/MD3
              DO M1=1,MM1
                DO M3=1,MM3
                  IF(ICOUPC.GE.3)THEN
C**(15) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                    DO I=1,14
                      Y(I)=Y(I)-T(I)*X0(I,M1)*Z0(I,M3)*VC(M3,M2,M1,I)*
     1                IFACTC
                    END DO
                    Y(15)=Y(15)+T(15)*X0(16,M1)*Z0(16,M3)*
     1              VR(K,M3,M2,M1)
                  END IF
                  Y(15)=Y(15)+T(15)*X0(15,M1)*Z0(15,M3)*VP(M3,M2,M1)*
     1            IFACTL
                END DO
              END DO
            ELSE
CCCC          DO M1=1,MM1/MD1
CCCC            DO M3=1,MM3/MD3
              DO M1=1,MM1
                DO M3=1,MM3
                  IF(ICOUPC.GE.3)THEN
C**(15) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                    DO I=1,14
                      Y(I)=Y(I)-T(I)*X0(I,M1)*Z0(I,M3)*VCR(M3,M2,M1,I)*
     1                IFACTC
                    END DO
                    Y(15)=Y(15)+T(15)*X0(16,M1)*Z0(16,M3)*
     1              VRR(K,M3,M2,M1)
                  END IF
                  Y(15)=Y(15)+T(15)*X0(15,M1)*Z0(15,M3)*VPR(M3,M2,M1)*
     1            IFACTL
                END DO
              END DO
            END IF
C**INTEGRATE OVER SINGLE MODES (END)
            DO IRHS=1,NN2
              ILINE=MOD2-MOD(IRHS,MOD2)
              X1=H2(IRHS,M2,1)*(Y(1)+Y(3)+Y(4)+Y(5)+2*Y(7)+
     1                              2*Y(8)+Y(12)+2*Y(13)+Y(14)+Y(15))
              X2=H2(IRHS,M2,2)*(Y(2)+2*Y(6)+2*Y(10)+2*Y(11))
              X3=H2(IRHS,M2,3)*Y(9)
              DO ILHS=ILINE,IRHS,MOD2
                Y1=H2(ILHS,M2,1)
                XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*(X1+X2+X3)
              END DO
            END DO
          END DO
        END IF
      END DO
      IF(ITIM3A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM3A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TVIS3C(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,HTAU,XQTAU,
     1NN1,MM1,NN2,MM2,NN3,MM3,NNTAU,MMTAU,X0,Y0,Z0,XK,NMODE,ISTATE,
     2MODE1,MODE2,MODE3,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,15),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,15),VRR(J21,MM3,MM2,MM1)
      DIMENSION Z(15),T(15)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN3,NN3)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(16,MM1),Y0(16,MM2),Z0(16,MM3)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MOD3=MD3
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      CALL DVIS3C(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,HTAU,XQTAU,NN1,MM1,
     1MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NNTAU,MMTAU,X0,Y0,Z0,XK,
     2NMODE,ISTATE,MODE1,MODE2,MODE3,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DVIS3C(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,HTAU,XQTAU,
     1NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NNTAU,MMTAU,X0,Y0,Z0,XK,
     2NMODE,ISTATE,MODE1,MODE2,MODE3,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,15),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,15),VRR(J21,MM3,MM2,MM1)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION Z(15),T(15)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN3,NN3)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
CCCC  DIMENSION H3(NN3,MM3,3),XQ3(MM3)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(16,MM1),Y0(16,MM2),Z0(16,MM3)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM3A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TVIS3C'
          CALL TIMIT(1)
        END IF
      END IF

      IF(IFITRP.EQ.0)THEN
        IFACTL=JNTFAC(NMODE,ICOUPL,3)
      ELSE
        IFACTL=JNTFAC(NMODE,IABS(IFITRP)-1,3)
      END IF
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=JNTFAC(NMODE,ICOUPC,3)
      IF(MOLINC.GT.0)IFACTC=1

      KA=K/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHATM=ISTAT(ISTATE,NSMODE)+1-MOD(KA,2)+INCT
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MOD3=MD3
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      MD=MD1*MD2*MD3*MDT
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=X00*H1(ITHAT1,M1,2)
        X0(2,M1)=X00*H1(ITHAT1,M1,1)
        X0(3,M1)=X0(2,M1)
        X0(4,M1)=X0(2,M1)
        IF(.NOT.LINEAR)THEN
          X0(5,M1)=H1(ITHAT1,M1,2)*H1(ITHAT1,M1,2)*MD
        ELSE
          X0(5,M1)=X00*H1(ITHAT1,M1,3)
        END IF
        X0(6,M1)=X0(1,M1)
        X0(7,M1)=X0(1,M1)
        X0(8,M1)=X0(1,M1)
        X0(9,M1)=X0(2,M1)
        X0(10,M1)=X0(2,M1)
        X0(11,M1)=X0(2,M1)
        X0(12,M1)=X0(2,M1)
        X0(13,M1)=X0(2,M1)
        X0(14,M1)=X0(2,M1)
        X0(15,M1)=X0(2,M1)
        X0(16,M1)=H1(ITHAT1,M1,1)*H1(ITHAT1,M1,1)*FACTRC*MD
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y0(1,M2)
        Y0(4,M2)=Y0(1,M2)
        Y0(5,M2)=Y0(1,M2)
        Y0(6,M2)=Y0(2,M2)
        Y0(7,M2)=Y0(1,M2)
        Y0(8,M2)=Y0(1,M2)
        IF(.NOT.LINEAR)THEN
          Y0(9,M2)=H2(ITHAT2,M2,2)*H2(ITHAT2,M2,2)
        ELSE
          Y0(9,M2)=Y00*H2(ITHAT2,M2,3)
        END IF
        Y0(10,M2)=Y0(2,M2)
        Y0(11,M2)=Y0(2,M2)
        Y0(12,M2)=Y0(1,M2)
        Y0(13,M2)=Y0(1,M2)
        Y0(14,M2)=Y0(1,M2)
        Y0(15,M2)=Y0(1,M2)
        Y0(16,M2)=H2(ITHAT2,M2,1)*H2(ITHAT2,M2,1)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**LOOP ROUND TAU
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
CCCC      QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
CCCC      DELTA(4)=+QTAU
CCCC      DELTA(5)=-QTAU
        END IF

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.3)READ(63)VR
          IF(ICOUPC.GE.3)READ(83)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.3)READ(63)VRR
          IF(ICOUPC.GE.3)READ(83)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(73)VP
        ELSE
          READ(73)VPR
        END IF

C***********************************************************

        IF(.NOT.LINEAR)THEN
          T00=HTAU(ITHATM,MTAU,1,LMAX)*DSTAU(ITAU)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T(1)
          T(4)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(5)=T(1)
          T(6)=T(1)
          T(7)=T(1)
          T(8)=T(4)
          T(9)=T(1)
          T(10)=T(1)
          T(11)=T(4)
          T(12)=T(1)
          T(13)=T(4)
          T(14)=HTAU(ITHATM,MTAU,2,LMAX)*HTAU(ITHATM,MTAU,2,LMAX)*
     1    DSTAU(ITAU)
          T(15)=T(1)
CCCC      DO M3=1,MM3/MD3
          DO M3=1,MM3
            DO I=1,15
              Z(I)=0
            END DO
C**INTEGRATE OVER SINGLE MODES (START)
            IF(JCOUPL.GT.0)THEN
CCCC          DO M1=1,MM1/MD1
CCCC            DO M2=1,MM2/MD2
              DO M1=1,MM1
                DO M2=1,MM2
                  IF(ICOUPC.GE.3)THEN
C**NO WATSON TERM IF RPH
                    DO I=1,15
                      Z(I)=Z(I)+T(I)*X0(I,M1)*Y0(I,M2)*VC(M3,M2,M1,I)*
     1                IFACTC
                    END DO
                    Z(15)=Z(15)+T(15)*X0(16,M1)*Y0(16,M2)*
     1              VR(K,M3,M2,M1)
                  END IF
                  Z(15)=Z(15)+T(15)*X0(15,M1)*Y0(15,M2)*VP(M3,M2,M1)*
     1            IFACTL
                END DO
              END DO
            ELSE
CCCC          DO M1=1,MM1/MD1
CCCC            DO M2=1,MM2/MD2
              DO M1=1,MM1
                DO M2=1,MM2
                  IF(ICOUPC.GE.3)THEN
C**NO WATSON TERM IF RPH
                    DO I=1,15
                      Z(I)=Z(I)+T(I)*X0(I,M1)*Y0(I,M2)*VCR(M3,M2,M1,I)*
     1                IFACTC
                    END DO
                    Z(15)=Z(15)+T(15)*X0(16,M1)*Y0(16,M2)*
     1              VRR(K,M3,M2,M1)
                  END IF
                  Z(15)=Z(15)+T(15)*X0(15,M1)*Y0(15,M2)*VPR(M3,M2,M1)*
     1            IFACTL
                END DO
              END DO
            END IF
C**INTEGRATE OVER SINGLE MODES (END)
            DO IRHS=1,NN3
              ILINE=MOD3-MOD(IRHS,MOD3)
              X1=H3(IRHS,M3,1)*(2*Z(1)+2*Z(2)+2*Z(4)+Z(5)+2*Z(6)+
     1                              2*Z(8)+Z(9)+2*Z(11)+Z(14)+Z(15))
     1              +H3(IRHS,M3,2)*(Z(3)+Z(7)+Z(10)+Z(13))
              X2=H3(IRHS,M3,1)*(Z(3)+Z(7)+Z(10)+Z(13))+
     1               H3(IRHS,M3,2)*Z(12)
              DO ILHS=ILINE,IRHS,MOD3
                Y1=H3(ILHS,M3,1)
                Y2=H3(ILHS,M3,2)
                XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*X1+Y2*X2
              END DO
            END DO
          END DO
        ELSE
          T00=HTAU(ITHATM,MTAU,1,LMAX)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T(1)
          T(4)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(5)=T(1)
          T(6)=T(1)
          T(7)=T(1)
          T(8)=T(4)
          T(9)=T(1)
          T(10)=T(1)
          T(11)=T(4)
          T(12)=T(1)
          T(13)=T(4)
          T(14)=T00*HTAU(ITHATM,MTAU,3,LMAX)
          T(15)=T(1)
CCCC      DO M3=1,MM3/MD3
          DO M3=1,MM3
            DO I=1,15
              Z(I)=0
            END DO
C**INTEGRATE OVER SINGLE MODES (START)
            IF(JCOUPL.GT.0)THEN
CCCC          DO M1=1,MM1/MD1
CCCC            DO M2=1,MM2/MD2
              DO M1=1,MM1
                DO M2=1,MM2
                  IF(ICOUPC.GE.3)THEN
C**(15) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                    DO I=1,14
                      Z(I)=Z(I)-T(I)*X0(I,M1)*Y0(I,M2)*VC(M3,M2,M1,I)*
     1                IFACTC
                    END DO
                    Z(15)=Z(15)+T(15)*X0(16,M1)*Y0(16,M2)*
     1              VR(K,M3,M2,M1)
                  END IF
                  Z(15)=Z(15)+T(15)*X0(15,M1)*Y0(15,M2)*VP(M3,M2,M1)*
     1            IFACTL
                END DO
              END DO
            ELSE
CCCC          DO M1=1,MM1/MD1
CCCC            DO M2=1,MM2/MD2
              DO M1=1,MM1
                DO M2=1,MM2
                  IF(ICOUPC.GE.3)THEN
C**(15) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                    DO I=1,14
                      Z(I)=Z(I)-T(I)*X0(I,M1)*Y0(I,M2)*VCR(M3,M2,M1,I)*
     1                IFACTC
                    END DO
                    Z(15)=Z(15)+T(15)*X0(16,M1)*Y0(16,M2)*
     1              VRR(K,M3,M2,M1)
                  END IF
                  Z(15)=Z(15)+T(15)*X0(15,M1)*Y0(15,M2)*VPR(M3,M2,M1)*
     1            IFACTL
                END DO
              END DO
            END IF
C**INTEGRATE OVER SINGLE MODES (END)
            DO IRHS=1,NN3
              ILINE=MOD3-MOD(IRHS,MOD3)
              X1=H3(IRHS,M3,1)*(Z(1)+Z(2)+Z(4)+Z(5)+2*Z(6)+
     1                              2*Z(8)+Z(9)+2*Z(11)+Z(14)+Z(15))
              X2=H3(IRHS,M3,2)*(Z(3)+2*Z(7)+2*Z(10)+2*Z(13))
              X3=H3(IRHS,M3,3)*Z(12)
              DO ILHS=ILINE,IRHS,MOD3
                Y1=H3(ILHS,M3,1)
                XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*(X1+X2+X3)
              END DO
            END DO
          END DO
        END IF
      END DO
      IF(ITIM3A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM3A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TMIS3(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,HTAU,XQTAU,
     1NN1,MM1,NN2,MM2,NN3,MM3,NNTAU,MMTAU,X0,Y0,Z0,XK,KXK,NMODE,ISTATE,
     2MODE1,MODE2,MODE3,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,15),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,15),VRR(J21,MM3,MM2,MM1)
      DIMENSION T(15)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(16,MM1),Y0(16,MM2),Z0(16,MM3)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      CALL TDMIS3(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,HTAU,XQTAU,NN1,MM1,
     1MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NNTAU,MMTAU,X0,Y0,Z0,XK,
     2KXK,NMODE,ISTATE,MODE1,MODE2,MODE3,VP,VPR,VC,VCR,VR,VRR,J21,K,
     3MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDMIS3(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,HTAU,XQTAU,
     1NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NNTAU,MMTAU,X0,Y0,Z0,XK,KXK,
     2NMODE,ISTATE,MODE1,MODE2,MODE3,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,15),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,15),VRR(J21,MM3,MM2,MM1)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION T(15)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
CCCC  DIMENSION H3(NN3,MM3,3),XQ3(MM3)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(16,MM1),Y0(16,MM2),Z0(16,MM3)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM3B.EQ.1)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TMIS3'
          CALL TIMIT(1)
        END IF
      END IF

      IF(IFITRP.EQ.0)THEN
        IFACTL=JNTFAC(NMODE,ICOUPL,3)
      ELSE
        IFACTL=JNTFAC(NMODE,IABS(IFITRP)-1,3)
      END IF
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=JNTFAC(NMODE,ICOUPC,3)
      IF(MOLINC.GT.0)IFACTC=1

      KA=K/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      MDTOT=MD1*MD2*MD3*MDT
      IF(NT.EQ.1)THEN
        MD=1
      ELSE
        MD=2
      END IF

C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MDTOT
        X0(1,M1)=X00*H1(ITHAT1,M1,2)
        X0(2,M1)=X00*H1(ITHAT1,M1,1)
        X0(3,M1)=X0(2,M1)
        X0(4,M1)=X0(2,M1)
        X0(5,M1)=H1(ITHAT1,M1,2)*H1(ITHAT1,M1,2)*MDTOT
        X0(6,M1)=X0(1,M1)
        X0(7,M1)=X0(1,M1)
        X0(8,M1)=X0(1,M1)
        X0(9,M1)=X0(2,M1)
        X0(10,M1)=X0(2,M1)
        X0(11,M1)=X0(2,M1)
        X0(12,M1)=X0(2,M1)
        X0(13,M1)=X0(2,M1)
        X0(14,M1)=X0(2,M1)
        X0(15,M1)=X0(2,M1)
        X0(16,M1)=H1(ITHAT1,M1,1)*H1(ITHAT1,M1,1)*FACTRC*MDTOT
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y0(1,M2)
        Y0(4,M2)=Y0(1,M2)
        Y0(5,M2)=Y0(1,M2)
        Y0(6,M2)=Y0(2,M2)
        Y0(7,M2)=Y0(1,M2)
        Y0(8,M2)=Y0(1,M2)
        Y0(9,M2)=H2(ITHAT2,M2,2)*H2(ITHAT2,M2,2)
        Y0(10,M2)=Y0(2,M2)
        Y0(11,M2)=Y0(2,M2)
        Y0(12,M2)=Y0(1,M2)
        Y0(13,M2)=Y0(1,M2)
        Y0(14,M2)=Y0(1,M2)
        Y0(15,M2)=Y0(1,M2)
        Y0(16,M2)=H2(ITHAT2,M2,1)*H2(ITHAT2,M2,1)
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        Z00=H3(ITHAT3,M3,1)
        Z0(1,M3)=Z00*H3(ITHAT3,M3,1)
        Z0(2,M3)=Z0(1,M3)
        Z0(3,M3)=Z00*H3(ITHAT3,M3,2)
        Z0(4,M3)=Z0(1,M3)
        Z0(5,M3)=Z0(1,M3)
        Z0(6,M3)=Z0(1,M3)
        Z0(7,M3)=Z0(3,M3)
        Z0(8,M3)=Z0(1,M3)
        Z0(9,M3)=Z0(1,M3)
        Z0(10,M3)=Z0(3,M3)
        Z0(11,M3)=Z0(1,M3)
        Z0(12,M3)=H3(ITHAT3,M3,2)*H3(ITHAT3,M3,2)
        Z0(13,M3)=Z0(3,M3)
        Z0(14,M3)=Z0(1,M3)
        Z0(15,M3)=Z0(1,M3)
        Z0(16,M3)=H3(ITHAT3,M3,1)*H3(ITHAT3,M3,1)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**LOOP ROUND TAU
      ITAU=INIT-INCTAU
      DO MTAU=1,MMTAU/MDT
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.3)READ(63)VR
          IF(ICOUPC.GE.3)READ(83)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.3)READ(63)VRR
          IF(ICOUPC.GE.3)READ(83)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(73)VP
        ELSE
          READ(73)VPR
        END IF

C***********************************************************

        DO I=1,15
          T(I)=0
        END DO
C**INTEGRATE OVER SINGLE MODES (START)
        IF(JCOUPL.GT.0)THEN
CCCC      DO M1=1,MM1/MD1
CCCC        DO M2=1,MM2/MD2
CCCC          DO M3=1,MM3/MD3
          DO M1=1,MM1
            DO M2=1,MM2
              DO M3=1,MM3
                IF(ICOUPC.GE.3)THEN
                  DO I=1,15
                    T(I)=T(I)+X0(I,M1)*Y0(I,M2)*Z0(I,M3)*
     1              VC(M3,M2,M1,I)*IFACTC
                  END DO
                  T(15)=T(15)+X0(16,M1)*Y0(16,M2)*Z0(16,M3)*
     1          VR(K,M3,M2,M1)
                END IF
                T(15)=T(15)+X0(15,M1)*Y0(15,M2)*Z0(15,M3)*
     1          VP(M3,M2,M1)*IFACTL
              END DO
            END DO
          END DO
        ELSE
CCCC      DO M1=1,MM1/MD1
CCCC        DO M2=1,MM2/MD2
CCCC          DO M3=1,MM3/MD3
          DO M1=1,MM1
            DO M2=1,MM2
              DO M3=1,MM3
                IF(ICOUPC.GE.3)THEN
                  DO I=1,15
                    T(I)=T(I)+X0(I,M1)*Y0(I,M2)*Z0(I,M3)*
     1              VCR(M3,M2,M1,I)*IFACTC
                  END DO
                  T(15)=T(15)+X0(16,M1)*Y0(16,M2)*Z0(16,M3)*
     1          VRR(K,M3,M2,M1)
                END IF
                T(15)=T(15)+X0(15,M1)*Y0(15,M2)*Z0(15,M3)*
     1          VPR(M3,M2,M1)*IFACTL
              END DO
            END DO
          END DO
        END IF
C**INTEGRATE OVER SINGLE MODES (END)
        DO IRH=1,NNTAU-1+MOD(KA,2)-INCT
          ILINE=MD-MOD(IRH,MD)
          IRHS=IRH+1-MOD(KA,2)+INCT
          X1=(HTAU(IRHS,MTAU,1,LMAX)*(2*T(1)+2*T(2)+2*T(3)+T(5)+2*T(6)+
     1           2*T(7)+T(9)+2*T(10)+T(12)+T(15))
     2     +HTAU(IRHS,MTAU,2,LMAX)*(T(4)+T(8)+T(11)+T(13)))*DSTAU(ITAU)
          X2=(HTAU(IRHS,MTAU,1,LMAX)*(T(4)+T(8)+T(11)+T(13))+
     1           HTAU(IRHS,MTAU,2,LMAX)*T(14))*DSTAU(ITAU)
          DO ILH=ILINE,IRH,MD
            ILHS=ILH+1-MOD(KA,2)+INCT
            Y1=HTAU(ILHS,MTAU,1,LMAX)
            Y2=HTAU(ILHS,MTAU,2,LMAX)
            XK(ILH,IRH)=XK(ILH,IRH)+Y1*X1+Y2*X2
          END DO
        END DO
      END DO
      IF(ITIM3B.EQ.1)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM3B=2
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TVAT3(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,MODE3,H1,
     1XQ1,H2,XQ2,H3,XQ3,HTAU,XQTAU,NN1,MM1,NN2,MM2,NN3,MM3,NNTAU,MMTAU,
     2X0,Y0,Z0,XK,KXK,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,15),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,15),VRR(J21,MM3,MM2,MM1)
      DIMENSION T(15),TTT(15)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(16,MM1),Y0(16,MM2),Z0(16,MM3)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      CALL TDVAT3(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,MODE3,H1,XQ1,H2,
     1XQ2,H3,XQ3,HTAU,XQTAU,NN1,MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,
     2MM3/MD3,NNTAU,MMTAU,X0,Y0,Z0,XK,KXK,VP,VPR,VC,VCR,VR,VRR,J21,K,
     3MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDVAT3(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,MODE3,H1,
     1XQ1,H2,XQ2,H3,XQ3,HTAU,XQTAU,NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,
     2NNTAU,MMTAU,X0,Y0,Z0,XK,KXK,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,15),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,15),VRR(J21,MM3,MM2,MM1)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION T(15),TTT(15)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
CCCC  DIMENSION H3(NN3,MM3,3),XQ3(MM3)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(16,MM1),Y0(16,MM2),Z0(16,MM3)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM3B.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TVAT3'
          CALL TIMIT(1)
        END IF
      END IF

      IF(IFITRP.EQ.0)THEN
        IFACTL=JNTFAC(NMODE,ICOUPL,3)
      ELSE
        IFACTL=JNTFAC(NMODE,IABS(IFITRP)-1,3)
      END IF
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=JNTFAC(NMODE,ICOUPC,3)
      IF(MOLINC.GT.0)IFACTC=1

      KA=K/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      TERM=0
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHATM=ISTAT(ISTATE,NSMODE)+1-MOD(KA,2)+INCT
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      MD=MD1*MD2*MD3*MDT
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=X00*H1(ITHAT1,M1,2)
        X0(2,M1)=X00*H1(ITHAT1,M1,1)
        X0(3,M1)=X0(2,M1)
        X0(4,M1)=X0(2,M1)
        IF(.NOT.LINEAR)THEN
          X0(5,M1)=H1(ITHAT1,M1,2)*H1(ITHAT1,M1,2)*MD
        ELSE
          X0(5,M1)=X00*H1(ITHAT1,M1,3)
        END IF
        X0(6,M1)=X0(1,M1)
        X0(7,M1)=X0(1,M1)
        X0(8,M1)=X0(1,M1)
        X0(9,M1)=X0(2,M1)
        X0(10,M1)=X0(2,M1)
        X0(11,M1)=X0(2,M1)
        X0(12,M1)=X0(2,M1)
        X0(13,M1)=X0(2,M1)
        X0(14,M1)=X0(2,M1)
        X0(15,M1)=X0(2,M1)
        X0(16,M1)=H1(ITHAT1,M1,1)*H1(ITHAT1,M1,1)*FACTRC*MD
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y0(1,M2)
        Y0(4,M2)=Y0(1,M2)
        Y0(5,M2)=Y0(1,M2)
        Y0(6,M2)=Y0(2,M2)
        Y0(7,M2)=Y0(1,M2)
        Y0(8,M2)=Y0(1,M2)
        IF(.NOT.LINEAR)THEN
          Y0(9,M2)=H2(ITHAT2,M2,2)*H2(ITHAT2,M2,2)
        ELSE
          Y0(9,M2)=Y00*H2(ITHAT2,M2,3)
        END IF
        Y0(10,M2)=Y0(2,M2)
        Y0(11,M2)=Y0(2,M2)
        Y0(12,M2)=Y0(1,M2)
        Y0(13,M2)=Y0(1,M2)
        Y0(14,M2)=Y0(1,M2)
        Y0(15,M2)=Y0(1,M2)
        Y0(16,M2)=H2(ITHAT2,M2,1)*H2(ITHAT2,M2,1)
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        Z00=H3(ITHAT3,M3,1)
        Z0(1,M3)=Z00*H3(ITHAT3,M3,1)
        Z0(2,M3)=Z0(1,M3)
        Z0(3,M3)=Z00*H3(ITHAT3,M3,2)
        Z0(4,M3)=Z0(1,M3)
        Z0(5,M3)=Z0(1,M3)
        Z0(6,M3)=Z0(1,M3)
        Z0(7,M3)=Z0(3,M3)
        Z0(8,M3)=Z0(1,M3)
        Z0(9,M3)=Z0(1,M3)
        Z0(10,M3)=Z0(3,M3)
        Z0(11,M3)=Z0(1,M3)
        IF(.NOT.LINEAR)THEN
          Z0(12,M3)=H3(ITHAT3,M3,2)*H3(ITHAT3,M3,2)
        ELSE
          Z0(12,M3)=Z00*H3(ITHAT3,M3,3)
        END IF
        Z0(13,M3)=Z0(3,M3)
        Z0(14,M3)=Z0(1,M3)
        Z0(15,M3)=Z0(1,M3)
        Z0(16,M3)=H3(ITHAT3,M3,1)*H3(ITHAT3,M3,1)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**LOOP ROUND TAU
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
CCCC      QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
CCCC      DELTA(4)=+QTAU
CCCC      DELTA(5)=-QTAU
        END IF

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.3)READ(63)VR
          IF(ICOUPC.GE.3)READ(83)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.3)READ(63)VRR
          IF(ICOUPC.GE.3)READ(83)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(73)VP
        ELSE
          READ(73)VPR
        END IF

C***********************************************************

        IF(.NOT.LINEAR)THEN
          T00=HTAU(ITHATM,MTAU,1,LMAX)*DSTAU(ITAU)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T(1)
          T(4)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(5)=T(1)
          T(6)=T(1)
          T(7)=T(1)
          T(8)=T(4)
          T(9)=T(1)
          T(10)=T(1)
          T(11)=T(4)
          T(12)=T(1)
          T(13)=T(4)
          T(14)=HTAU(ITHATM,MTAU,2,LMAX)*HTAU(ITHATM,MTAU,2,LMAX)*
     1    DSTAU(ITAU)
          T(15)=T(1)
C**START INTEGRATION OVER SINGLE MODES
          IF(JCOUPL.GT.0)THEN
CCCC        DO M1=1,MM1/MD1
CCCC          DO M2=1,MM2/MD2
CCCC            DO M3=1,MM3/MD3
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  DO I=1,15
                    TTT(I)=0
                  END DO
                  IF(ICOUPC.GE.3)THEN
C**NO WATSON TERM IF RPH
                    DO I=1,15
                      TTT(I)=X0(I,M1)*Y0(I,M2)*Z0(I,M3)*T(I)*
     1                  VC(M3,M2,M1,I)*IFACTC
                    END DO
                  END IF
                  TTT(15)=TTT(15)+X0(15,M1)*Y0(15,M2)*Z0(15,M3)*T(15)*
     1            VP(M3,M2,M1)*IFACTL
                  TERM=TERM+
     1            (2*(TTT(1)+TTT(2)+TTT(3)+TTT(4)+TTT(6)+TTT(7)+TTT(8)+
     2             TTT(10)+TTT(11)+TTT(13))
     3            +TTT(5)+TTT(9)+TTT(12)+TTT(14)+TTT(15))
                END DO
              END DO
            END DO
          ELSE
CCCC        DO M1=1,MM1/MD1
CCCC          DO M2=1,MM2/MD2
CCCC            DO M3=1,MM3/MD3
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  DO I=1,15
                    TTT(I)=0
                  END DO
                  IF(ICOUPC.GE.3)THEN
C**NO WATSON TERM IF RPH
                    DO I=1,15
                      TTT(I)=X0(I,M1)*Y0(I,M2)*Z0(I,M3)*T(I)*
     1                  VCR(M3,M2,M1,I)*IFACTC
                    END DO
                  END IF
                  TTT(15)=TTT(15)+X0(15,M1)*Y0(15,M2)*Z0(15,M3)*T(15)*
     1            VPR(M3,M2,M1)*IFACTL
                  TERM=TERM+
     1            (2*(TTT(1)+TTT(2)+TTT(3)+TTT(4)+TTT(6)+TTT(7)+TTT(8)+
     2             TTT(10)+TTT(11)+TTT(13))
     3            +TTT(5)+TTT(9)+TTT(12)+TTT(14)+TTT(15))
                END DO
              END DO
            END DO
          END IF
C**END INTEGRATION OVER SINGLE MODES
        ELSE
          T00=HTAU(ITHATM,MTAU,1,LMAX)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T(1)
          T(4)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(5)=T(1)
          T(6)=T(1)
          T(7)=T(1)
          T(8)=T(4)
          T(9)=T(1)
          T(10)=T(1)
          T(11)=T(4)
          T(12)=T(1)
          T(13)=T(4)
          T(14)=T00*HTAU(ITHATM,MTAU,3,LMAX)
          T(15)=T(1)
C**START INTEGRATION OVER SINGLE MODES
          IF(JCOUPL.GT.0)THEN
CCCC        DO M1=1,MM1/MD1
CCCC          DO M2=1,MM2/MD2
CCCC            DO M3=1,MM3/MD3
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  DO I=1,14
                    TTT(I)=0
                  END DO
                  IF(ICOUPC.GE.3)THEN
C**(15) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                    DO I=1,14
                      TTT(I)=-X0(I,M1)*Y0(I,M2)*Z0(I,M3)*T(I)*
     1                VC(M3,M2,M1,I)*IFACTC
                    END DO
                  END IF
                  TTT(15)=X0(15,M1)*Y0(15,M2)*Z0(15,M3)*T(15)*
     1            VP(M3,M2,M1)*IFACTL
                  TERM=TERM+
     1            TTT(1)+TTT(2)+TTT(3)+TTT(4)+2*(TTT(6)+TTT(7)+
     2            TTT(8)+TTT(10)+TTT(11)+TTT(13))
     3            +TTT(5)+TTT(9)+TTT(12)+TTT(14)+TTT(15)
                END DO
              END DO
            END DO
          ELSE
CCCC        DO M1=1,MM1/MD1
CCCC          DO M2=1,MM2/MD2
CCCC            DO M3=1,MM3/MD3
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  DO I=1,14
                    TTT(I)=0
                  END DO
                  IF(ICOUPC.GE.3)THEN
C**(15) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                    DO I=1,14
                      TTT(I)=X0(I,M1)*Y0(I,M2)*Z0(I,M3)*T(I)*
     1                VCR(M3,M2,M1,I)*IFACTC
                    END DO
                  END IF
                  TTT(15)=X0(15,M1)*Y0(15,M2)*Z0(15,M3)*T(15)*
     1            VPR(M3,M2,M1)*IFACTL
                  TERM=TERM+
     1            TTT(1)+TTT(2)+TTT(3)+TTT(4)+2*(TTT(6)+TTT(7)+
     2            TTT(8)+TTT(10)+TTT(11)+TTT(13))
     3            +TTT(5)+TTT(9)+TTT(12)+TTT(14)+TTT(15)
                END DO
              END DO
            END DO
          END IF
C**END INTEGRATION OVER SINGLE MODES
        END IF
      END DO
      DO IRLHS=1,KXK
        XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM
      END DO

C**ROTATION
      IF(J21.GT.1.AND.ICOUPC.GE.3)THEN
        TERM=0
C**LOOP ROUND TAU
        ITAU=INIT-INCTAU
        DO MTAU=1,MMTAU/MDT
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
          IF(JCOUPL.GT.0)THEN
CCCC        DO M1=1,MM1/MD1
CCCC          DO M2=1,MM2/MD2
CCCC            DO M3=1,MM3/MD3
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  W21=VR(K,M3,M2,M1)*X0(16,M1)*Y0(16,M2)*Z0(16,M3)*
     1                HTAU(ITHATM,MTAU,1,LMAX)*HTAU(ITHATM,MTAU,1,LMAX)
                END DO
              END DO
            END DO
          ELSE
CCCC        DO M1=1,MM1/MD1
CCCC          DO M2=1,MM2/MD2
CCCC            DO M3=1,MM3/MD3
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  W21=VRR(K,M3,M2,M1)*X0(16,M1)*Y0(16,M2)*Z0(16,M3)*
     1                HTAU(ITHATM,MTAU,1,LMAX)*HTAU(ITHATM,MTAU,1,LMAX)
                END DO
              END DO
            END DO
          END IF
          TERM=TERM+W21*DSTAU(ITAU)
        END DO
        DO IRLHS=1,KXK
          XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM
        END DO
      END IF
      IF(ITIM3B.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM3B=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS4A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,NN1,
     1MM1,NN2,MM2,NN3,MM3,NN4,MM4,X0,Y0,Z0,W0,XK,NMODE,ISTATE,MODE1,
     2MODE2,MODE3,MODE4,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,XKAN,
     3MAXQU,MAXPOW,NP4,CP4,JP4,NTOT4,MAX4,INDK,INDL,INDN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,15),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,15),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION X(11)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION X0(11,MM1),Y0(11,MM2),Z0(11,MM3),W0(11,MM4)
C**ANALYTIC
      DIMENSION NP4(NTOT4),CP4(MAX4,NTOT4),JP4(MAX4,NTOT4,4)
      DIMENSION INDK(1),INDL(1),INDN(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      CALL TDIS4A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,NN1,
     1MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,X0,
     2Y0,Z0,W0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,VP,VPR,VC,VCR,
     3VR,VRR,J21,KROT,MODINT,XKAN,MAXQU,MAXPOW,NP4,CP4,JP4,NTOT4,MAX4,
     4INDK,INDL,INDN)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS4A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,NN1,
     1MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,X0,Y0,Z0,W0,XK,NMODE,
     2ISTATE,MODE1,MODE2,MODE3,MODE4,VP,VPR,VC,VCR,VR,VRR,J21,KROT,
     3MODINT,XKAN,MAXQU,MAXPOW,NP4,CP4,JP4,NTOT4,MAX4,INDK,INDL,INDN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,15),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,15),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION X(11)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
CCCC  DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION X0(11,MM1),Y0(11,MM2),Z0(11,MM3),W0(11,MM4)
C**ANALYTIC
      DIMENSION NP4(NTOT4),CP4(MAX4,NTOT4),JP4(MAX4,NTOT4,4)
      DIMENSION INDK(1),INDL(1),INDN(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP

      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS4A'
          CALL TIMIT(1)
        END IF
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,4)
      IFACTL=INTFAC(NMODE,ICOUPL,4)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1
      IF(IWHICH.LT.0.AND.MOLINC.LT.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(74)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(74)VPR
      END IF
      IF(JCOUPC.GE.0)THEN
        IF(J21.GT.1.AND.ICOUPC.GT.3)READ(64)VR
        IF(ICOUPC.GT.3)READ(84)VC
      ELSE
        IF(J21.GT.1.AND.ICOUPC.GT.3)READ(64)VRR
        IF(ICOUPC.GT.3)READ(84)VCR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT4=ISTAT(ISTATE,MODE4)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MOD1=MD1
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      MD=MD1*MD2*MD3*MD4

C***********************************************************
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)*MD
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y0(1,M2)
        Y0(4,M2)=Y0(1,M2)
        Y0(5,M2)=H2(ITHAT2,M2,2)*H2(ITHAT2,M2,2)*MD
        Y0(6,M2)=Y0(2,M2)
        Y0(7,M2)=Y0(2,M2)
        Y0(8,M2)=Y0(1,M2)
        Y0(9,M2)=Y0(1,M2)
        Y0(10,M2)=Y0(1,M2)
        Y0(11,M2)=Y0(1,M2)
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        Z00=H3(ITHAT3,M3,1)
        Z0(1,M3)=Z00*H3(ITHAT3,M3,1)
        Z0(2,M3)=Z0(1,M3)
        Z0(3,M3)=Z00*H3(ITHAT3,M3,2)
        Z0(4,M3)=Z0(1,M3)
        Z0(5,M3)=Z0(1,M3)
        Z0(6,M3)=Z0(3,M3)
        Z0(7,M3)=Z0(1,M3)
        Z0(8,M3)=H3(ITHAT3,M3,2)*H3(ITHAT3,M3,2)
        Z0(9,M3)=Z0(3,M3)
        Z0(10,M3)=Z0(1,M3)
        Z0(11,M3)=Z0(1,M3)
      END DO
CCCC  DO M4=1,MM4/MD4
      DO M4=1,MM4
        W00=H4(ITHAT4,M4,1)
        W0(1,M4)=W00*H4(ITHAT4,M4,1)
        W0(2,M4)=W0(1,M4)
        W0(3,M4)=W0(1,M4)
        W0(4,M4)=W00*H4(ITHAT4,M4,2)
        W0(5,M4)=W0(1,M4)
        W0(6,M4)=W0(1,M4)
        W0(7,M4)=W0(4,M4)
        W0(8,M4)=W0(1,M4)
        W0(9,M4)=W0(4,M4)
        W0(10,M4)=H4(ITHAT4,M4,2)*H4(ITHAT4,M4,2)
        W0(11,M4)=W0(1,M4)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        DO I=1,11
          X(I)=0
        END DO
C**INTEGRATE OVER SINGLE STATES (START)
        IF(JCOUPL.GT.0)THEN
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
CCCC        DO M3=1,MM3/MD3
            DO M3=1,MM3
CCCC          DO M4=1,MM4/MD4
              DO M4=1,MM4
                IF(ICOUPC.GT.3)THEN
                  DO I=1,11
                    X(I)=X(I)+Y0(I,M2)*Z0(I,M3)*W0(I,M4)*
     1              VC(M4,M3,M2,M1,I+4)*IFACTC
                  END DO
                  IF(J21.GT.1)
     1            X(11)=X(11)+Y0(11,M2)*Z0(11,M3)*W0(11,M4)*
     2            VR(KROT,M4,M3,M2,M1)*IFACTC
                END IF
                IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1          X(11)=X(11)+Y0(11,M2)*Z0(11,M3)*W0(11,M4)*
     2          VP(M4,M3,M2,M1)*IFACTL
              END DO
            END DO
          END DO
        ELSE
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
CCCC        DO M3=1,MM3/MD3
            DO M3=1,MM3
CCCC          DO M4=1,MM4/MD4
              DO M4=1,MM4
                IF(ICOUPC.GT.3)THEN
                  DO I=1,11
                    X(I)=X(I)+Y0(I,M2)*Z0(I,M3)*W0(I,M4)*
     1              VCR(M4,M3,M2,M1,I+4)*IFACTC
                  END DO
                  IF(J21.GT.1)
     1            X(11)=X(11)+Y0(11,M2)*Z0(11,M3)*W0(11,M4)*
     2            VRR(KROT,M4,M3,M2,M1)*IFACTC
                END IF
                IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1          X(11)=X(11)+Y0(11,M2)*Z0(11,M3)*W0(11,M4)*
     2          VPR(M4,M3,M2,M1)*IFACTL
              END DO
            END DO
          END DO
        END IF
C**INTEGRATE OVER SINGLE STATES (END)
        DO IRHS=1,NN1
          ILINE=MOD1-MOD(IRHS,MOD1)
          X1=H1(IRHS,M1,1)*(X(5)+2*X(6)+2*X(7)+X(8)+2*X(9)+X(10)+X(11))
     2      +H1(IRHS,M1,2)*(X(2)+X(3)+X(4))
          X2=H1(IRHS,M1,1)*(X(2)+X(3)+X(4))+
     1       H1(IRHS,M1,2)*X(1)
          DO ILHS=ILINE,IRHS,MOD1
            Y1=H1(ILHS,M1,1)
            Y2=H1(ILHS,M1,2)
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*X1+Y2*X2
          END DO
        END DO
      END DO

C***********************************************************
C**POTENTIAL
      IF(IWHICH.LT.0.AND.MOLINC.GT.0)THEN
C**ANALYTIC
        IND=INDN(MODE1)+INDL(MODE2)+INDK(MODE3)+MODE4
        DO IRHS=1,NN1
          ILINE=MOD1-MOD(IRHS,MOD1)
          DO ILHS=ILINE,IRHS,MOD1
            Y=0
            DO I=1,NP4(IND)
              K=JP4(I,IND,1)+1
              L=JP4(I,IND,2)+1
              N=JP4(I,IND,3)+1
              M=JP4(I,IND,4)+1
              Y=Y+CP4(I,IND)*XKAN(ILHS,IRHS,K,MODE1)*
     1        XKAN(ITHAT2,ITHAT2,L,MODE2)*XKAN(ITHAT3,ITHAT3,N,MODE3)*
     2        XKAN(ITHAT4,ITHAT4,M,MODE4)
            END DO
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y
          END DO
        END DO
C**ANALYTIC
      END IF

C***********************************************************
      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM4A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS4B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,NN1,
     1MM1,NN2,MM2,NN3,MM3,NN4,MM4,X0,Y0,Z0,W0,XK,NMODE,ISTATE,MODE1,
     2MODE2,MODE3,MODE4,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,XKAN,
     3MAXQU,MAXPOW,NP4,CP4,JP4,NTOT4,MAX4,INDK,INDL,INDN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,15),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,15),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION Y(11)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN2,NN2)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION X0(11,MM1),Y0(11,MM2),Z0(11,MM3),W0(11,MM4)
C**ANALYTIC
      DIMENSION NP4(NTOT4),CP4(MAX4,NTOT4),JP4(MAX4,NTOT4,4)
      DIMENSION INDK(1),INDL(1),INDN(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      CALL TDIS4B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,NN1,
     1MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,X0,
     2Y0,Z0,W0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,VP,VPR,VC,VCR,
     3VR,VRR,J21,KROT,MODINT,XKAN,MAXQU,MAXPOW,NP4,CP4,JP4,NTOT4,MAX4,
     4INDK,INDL,INDN)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS4B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,NN1,
     1MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,X0,Y0,Z0,W0,XK,NMODE,
     2ISTATE,MODE1,MODE2,MODE3,MODE4,VP,VPR,VC,VCR,VR,VRR,J21,KROT,
     3MODINT,XKAN,MAXQU,MAXPOW,NP4,CP4,JP4,NTOT4,MAX4,INDK,INDL,INDN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,15),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,15),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION Y(11)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN2,NN2)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
CCCC  DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION X0(11,MM1),Y0(11,MM2),Z0(11,MM3),W0(11,MM4)
C**ANALYTIC
      DIMENSION NP4(NTOT4),CP4(MAX4,NTOT4),JP4(MAX4,NTOT4,4)
      DIMENSION INDK(1),INDL(1),INDN(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP

      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS4B'
          CALL TIMIT(1)
        END IF
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,4)
      IFACTL=INTFAC(NMODE,ICOUPL,4)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1
      IF(IWHICH.LT.0.AND.MOLINC.LT.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(74)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(74)VPR
      END IF
      IF(JCOUPC.GE.0)THEN
        IF(J21.GT.1.AND.ICOUPC.GT.3)READ(64)VR
        IF(ICOUPC.GT.3)READ(84)VC
      ELSE
        IF(J21.GT.1.AND.ICOUPC.GT.3)READ(64)VRR
        IF(ICOUPC.GT.3)READ(84)VCR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT4=ISTAT(ISTATE,MODE4)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MOD2=MD2
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      MD=MD1*MD2*MD3*MD4

C***********************************************************
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=H1(ITHAT1,M1,2)*H1(ITHAT1,M1,2)*MD
        X0(2,M1)=X00*H1(ITHAT1,M1,2)
        X0(3,M1)=X0(2,M1)
        X0(4,M1)=X0(2,M1)
        X0(5,M1)=X00*H1(ITHAT1,M1,1)
        X0(6,M1)=X0(5,M1)
        X0(7,M1)=X0(5,M1)
        X0(8,M1)=X0(5,M1)
        X0(9,M1)=X0(5,M1)
        X0(10,M1)=X0(5,M1)
        X0(11,M1)=X0(5,M1)
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        Z00=H3(ITHAT3,M3,1)
        Z0(1,M3)=Z00*H3(ITHAT3,M3,1)
        Z0(2,M3)=Z0(1,M3)
        Z0(3,M3)=Z00*H3(ITHAT3,M3,2)
        Z0(4,M3)=Z0(1,M3)
        Z0(5,M3)=Z0(1,M3)
        Z0(6,M3)=Z0(3,M3)
        Z0(7,M3)=Z0(1,M3)
        Z0(8,M3)=H3(ITHAT3,M3,2)*H3(ITHAT3,M3,2)
        Z0(9,M3)=Z0(3,M3)
        Z0(10,M3)=Z0(1,M3)
        Z0(11,M3)=Z0(1,M3)
      END DO
CCCC  DO M4=1,MM4/MD4
      DO M4=1,MM4
        W00=H4(ITHAT4,M4,1)
        W0(1,M4)=W00*H4(ITHAT4,M4,1)
        W0(2,M4)=W0(1,M4)
        W0(3,M4)=W0(1,M4)
        W0(4,M4)=W00*H4(ITHAT4,M4,2)
        W0(5,M4)=W0(1,M4)
        W0(6,M4)=W0(1,M4)
        W0(7,M4)=W0(4,M4)
        W0(8,M4)=W0(1,M4)
        W0(9,M4)=W0(4,M4)
        W0(10,M4)=H4(ITHAT4,M4,2)*H4(ITHAT4,M4,2)
        W0(11,M4)=W0(1,M4)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        DO I=1,11
          Y(I)=0
        END DO
C**INTEGRATE OVER SINGLE STATES (START)
        IF(JCOUPL.GT.0)THEN
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
CCCC        DO M3=1,MM3/MD3
            DO M3=1,MM3
CCCC          DO M4=1,MM4/MD4
              DO M4=1,MM4
                IF(ICOUPC.GT.3)THEN
                  DO I=1,11
                    Y(I)=Y(I)+X0(I,M1)*Z0(I,M3)*W0(I,M4)*
     1              VC(M4,M3,M2,M1,I+4)*IFACTC
                  END DO
                  IF(J21.GT.1)
     1            Y(11)=Y(11)+X0(11,M1)*Z0(11,M3)*W0(11,M4)*
     2            VR(KROT,M4,M3,M2,M1)*IFACTC
                END IF
                IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1          Y(11)=Y(11)+X0(11,M1)*Z0(11,M3)*W0(11,M4)*
     2          VP(M4,M3,M2,M1)*IFACTL
              END DO
            END DO
          END DO
        ELSE
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
CCCC        DO M3=1,MM3/MD3
            DO M3=1,MM3
CCCC          DO M4=1,MM4/MD4
              DO M4=1,MM4
                IF(ICOUPC.GT.3)THEN
                  DO I=1,11
                    Y(I)=Y(I)+X0(I,M1)*Z0(I,M3)*W0(I,M4)*
     1              VCR(M4,M3,M2,M1,I+4)*IFACTC
                  END DO
                  IF(J21.GT.1)
     1            Y(11)=Y(11)+X0(11,M1)*Z0(11,M3)*W0(11,M4)*
     2            VRR(KROT,M4,M3,M2,M1)*IFACTC
                END IF
                IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1          Y(11)=Y(11)+X0(11,M1)*Z0(11,M3)*W0(11,M4)*
     2          VPR(M4,M3,M2,M1)*IFACTL
              END DO
            END DO
          END DO
        END IF
C**INTEGRATE OVER SINGLE STATES (END)
        DO IRHS=1,NN2
          ILINE=MOD2-MOD(IRHS,MOD2)
          X1=H2(IRHS,M2,1)*(Y(1)+2*Y(3)+2*Y(4)+Y(8)+2*Y(9)+Y(10)+Y(11))
     1      +H2(IRHS,M2,2)*(Y(2)+Y(6)+Y(7))
          X2=H2(IRHS,M2,1)*(Y(2)+Y(6)+Y(7))+
     1       H2(IRHS,M2,2)*Y(5)
          DO ILHS=ILINE,IRHS,MOD2
            Y1=H2(ILHS,M2,1)
            Y2=H2(ILHS,M2,2)
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*X1+Y2*X2
          END DO
        END DO
      END DO

C***********************************************************
C**POTENTIAL
      IF(IWHICH.LT.0.AND.MOLINC.GT.0)THEN
C**ANALYTIC
        IND=INDN(MODE1)+INDL(MODE2)+INDK(MODE3)+MODE4
        DO IRHS=1,NN2
          ILINE=MOD2-MOD(IRHS,MOD2)
          DO ILHS=ILINE,IRHS,MOD2
            YY=0
            DO I=1,NP4(IND)
              K=JP4(I,IND,1)+1
              L=JP4(I,IND,2)+1
              N=JP4(I,IND,3)+1
              M=JP4(I,IND,4)+1
              YY=YY+CP4(I,IND)*
     1        XKAN(ITHAT1,ITHAT1,K,MODE1)*
     2        XKAN(ILHS,IRHS,L,MODE2)*XKAN(ITHAT3,ITHAT3,N,MODE3)*
     3        XKAN(ITHAT4,ITHAT4,M,MODE4)
            END DO
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+YY
          END DO
        END DO
C**ANALYTIC
      END IF

C***********************************************************
      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM4A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS4C(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,NN1,
     1MM1,NN2,MM2,NN3,MM3,NN4,MM4,X0,Y0,Z0,W0,XK,NMODE,ISTATE,MODE1,
     2MODE2,MODE3,MODE4,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,XKAN,
     3MAXQU,MAXPOW,NP4,CP4,JP4,NTOT4,MAX4,INDK,INDL,INDN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,15),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,15),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION Z(11)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN3,NN3)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION X0(11,MM1),Y0(11,MM2),Z0(11,MM3),W0(11,MM4)
C**ANALYTIC
      DIMENSION NP4(NTOT4),CP4(MAX4,NTOT4),JP4(MAX4,NTOT4,4)
      DIMENSION INDK(1),INDL(1),INDN(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      CALL TDIS4C(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,NN1,
     1MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,X0,
     2Y0,Z0,W0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,VP,VPR,VC,VCR,
     3VR,VRR,J21,KROT,MODINT,XKAN,MAXQU,MAXPOW,NP4,CP4,JP4,NTOT4,MAX4,
     4INDK,INDL,INDN)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS4C(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,NN1,
     1MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,X0,Y0,Z0,W0,XK,NMODE,
     2ISTATE,MODE1,MODE2,MODE3,MODE4,VP,VPR,VC,VCR,VR,VRR,J21,KROT,
     3MODINT,XKAN,MAXQU,MAXPOW,NP4,CP4,JP4,NTOT4,MAX4,INDK,INDL,INDN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,15),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,15),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION Z(11)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN3,NN3)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
CCCC  DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION X0(11,MM1),Y0(11,MM2),Z0(11,MM3),W0(11,MM4)
C**ANALYTIC
      DIMENSION NP4(NTOT4),CP4(MAX4,NTOT4),JP4(MAX4,NTOT4,4)
      DIMENSION INDK(1),INDL(1),INDN(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP

      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS4C'
          CALL TIMIT(1)
        END IF
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,4)
      IFACTL=INTFAC(NMODE,ICOUPL,4)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1
      IF(IWHICH.LT.0.AND.MOLINC.LT.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(74)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(74)VPR
      END IF
      IF(JCOUPC.GE.0)THEN
        IF(J21.GT.1.AND.ICOUPC.GT.3)READ(64)VR
        IF(ICOUPC.GT.3)READ(84)VC
      ELSE
        IF(J21.GT.1.AND.ICOUPC.GT.3)READ(64)VRR
        IF(ICOUPC.GT.3)READ(84)VCR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT4=ISTAT(ISTATE,MODE4)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MOD3=MD3
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      MD=MD1*MD2*MD3*MD4

C***********************************************************
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=H1(ITHAT1,M1,2)*H1(ITHAT1,M1,2)*MD
        X0(2,M1)=X00*H1(ITHAT1,M1,2)
        X0(3,M1)=X0(2,M1)
        X0(4,M1)=X0(2,M1)
        X0(5,M1)=X00*H1(ITHAT1,M1,1)
        X0(6,M1)=X0(5,M1)
        X0(7,M1)=X0(5,M1)
        X0(8,M1)=X0(5,M1)
        X0(9,M1)=X0(5,M1)
        X0(10,M1)=X0(5,M1)
        X0(11,M1)=X0(5,M1)
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y0(1,M2)
        Y0(4,M2)=Y0(1,M2)
        Y0(5,M2)=H2(ITHAT2,M2,2)*H2(ITHAT2,M2,2)
        Y0(6,M2)=Y0(2,M2)
        Y0(7,M2)=Y0(2,M2)
        Y0(8,M2)=Y0(1,M2)
        Y0(9,M2)=Y0(1,M2)
        Y0(10,M2)=Y0(1,M2)
        Y0(11,M2)=Y0(1,M2)
      END DO
CCCC  DO M4=1,MM4/MD4
      DO M4=1,MM4
        W00=H4(ITHAT4,M4,1)
        W0(1,M4)=W00*H4(ITHAT4,M4,1)
        W0(2,M4)=W0(1,M4)
        W0(3,M4)=W0(1,M4)
        W0(4,M4)=W00*H4(ITHAT4,M4,2)
        W0(5,M4)=W0(1,M4)
        W0(6,M4)=W0(1,M4)
        W0(7,M4)=W0(4,M4)
        W0(8,M4)=W0(1,M4)
        W0(9,M4)=W0(4,M4)
        W0(10,M4)=H4(ITHAT4,M4,2)*H4(ITHAT4,M4,2)
        W0(11,M4)=W0(1,M4)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        DO I=1,11
          Z(I)=0
        END DO
C**INTEGRATE OVER SINGLE STATES (START)
        IF(JCOUPL.GT.0)THEN
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
CCCC        DO M2=1,MM2/MD2
            DO M2=1,MM2
CCCC          DO M4=1,MM4/MD4
              DO M4=1,MM4
                IF(ICOUPC.GT.3)THEN
                  DO I=1,11
                    Z(I)=Z(I)+X0(I,M1)*Y0(I,M2)*W0(I,M4)*
     1              VC(M4,M3,M2,M1,I+4)*IFACTC
                  END DO
                  IF(J21.GT.1)
     1            Z(11)=Z(11)+X0(11,M1)*Y0(11,M2)*W0(11,M4)*
     2            VR(KROT,M4,M3,M2,M1)*IFACTC
                END IF
                IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1          Z(11)=Z(11)+X0(11,M1)*Y0(11,M2)*W0(11,M4)*
     2          VP(M4,M3,M2,M1)*IFACTL
              END DO
            END DO
          END DO
        ELSE
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
CCCC        DO M2=1,MM2/MD2
            DO M2=1,MM2
CCCC          DO M4=1,MM4/MD4
              DO M4=1,MM4
                IF(ICOUPC.GT.3)THEN
                  DO I=1,11
                    Z(I)=Z(I)+X0(I,M1)*Y0(I,M2)*W0(I,M4)*
     1              VCR(M4,M3,M2,M1,I+4)*IFACTC
                  END DO
                  IF(J21.GT.1)
     1            Z(11)=Z(11)+X0(11,M1)*Y0(11,M2)*W0(11,M4)*
     2            VRR(KROT,M4,M3,M2,M1)*IFACTC
                END IF
                IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1          Z(11)=Z(11)+X0(11,M1)*Y0(11,M2)*W0(11,M4)*
     2          VPR(M4,M3,M2,M1)*IFACTL
              END DO
            END DO
          END DO
        END IF
C**INTEGRATE OVER SINGLE STATES (END)
        DO IRHS=1,NN3
          ILINE=MOD3-MOD(IRHS,MOD3)
          X1=H3(IRHS,M3,1)*(Z(1)+2*Z(2)+2*Z(4)+Z(5)+2*Z(7)+Z(10)+Z(11))
     1      +H3(IRHS,M3,2)*(Z(3)+Z(6)+Z(9))
          X2=H3(IRHS,M3,1)*(Z(3)+Z(6)+Z(9))+
     1       H3(IRHS,M3,2)*Z(8)
          DO ILHS=ILINE,IRHS,MOD3
            Y1=H3(ILHS,M3,1)
            Y2=H3(ILHS,M3,2)
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*X1+Y2*X2
          END DO
        END DO
      END DO

C***********************************************************
C**POTENTIAL
      IF(IWHICH.LT.0.AND.MOLINC.GT.0)THEN
C**ANALYTIC
        IND=INDN(MODE1)+INDL(MODE2)+INDK(MODE3)+MODE4
        DO IRHS=1,NN3
          ILINE=MOD3-MOD(IRHS,MOD3)
          DO ILHS=ILINE,IRHS,MOD3
            Y=0
            DO I=1,NP4(IND)
              K=JP4(I,IND,1)+1
              L=JP4(I,IND,2)+1
              N=JP4(I,IND,3)+1
              M=JP4(I,IND,4)+1
              Y=Y+CP4(I,IND)*
     1        XKAN(ITHAT1,ITHAT1,K,MODE1)*
     2        XKAN(ITHAT2,ITHAT2,L,MODE2)*XKAN(ILHS,IRHS,N,MODE3)*
     3        XKAN(ITHAT4,ITHAT4,M,MODE4)
            END DO
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y
          END DO
        END DO
C**ANALYTIC
      END IF

C***********************************************************
      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM4A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS4D(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,NN1,
     1MM1,NN2,MM2,NN3,MM3,NN4,MM4,X0,Y0,Z0,W0,XK,NMODE,ISTATE,MODE1,
     2MODE2,MODE3,MODE4,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,XKAN,
     3MAXQU,MAXPOW,NP4,CP4,JP4,NTOT4,MAX4,INDK,INDL,INDN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,15),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,15),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION W(11)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN4,NN4)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION X0(11,MM1),Y0(11,MM2),Z0(11,MM3),W0(11,MM4)
C**ANALYTIC
      DIMENSION NP4(NTOT4),CP4(MAX4,NTOT4),JP4(MAX4,NTOT4,4)
      DIMENSION INDK(1),INDL(1),INDN(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      CALL TDIS4D(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,NN1,
     1MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,X0,
     2Y0,Z0,W0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,VP,VPR,VC,VCR,
     3VR,VRR,J21,KROT,MODINT,XKAN,MAXQU,MAXPOW,NP4,CP4,JP4,NTOT4,MAX4,
     4INDK,INDL,INDN)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS4D(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,NN1,
     1MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,X0,Y0,Z0,W0,XK,NMODE,
     2ISTATE,MODE1,MODE2,MODE3,MODE4,VP,VPR,VC,VCR,VR,VRR,J21,KROT,
     3MODINT,XKAN,MAXQU,MAXPOW,NP4,CP4,JP4,NTOT4,MAX4,INDK,INDL,INDN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,15),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,15),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION W(11)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN4,NN4)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
CCCC  DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION X0(11,MM1),Y0(11,MM2),Z0(11,MM3),W0(11,MM4)
C**ANALYTIC
      DIMENSION NP4(NTOT4),CP4(MAX4,NTOT4),JP4(MAX4,NTOT4,4)
      DIMENSION INDK(1),INDL(1),INDN(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP

      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS4D'
          CALL TIMIT(1)
        END IF
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,4)
      IFACTL=INTFAC(NMODE,ICOUPL,4)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1
      IF(IWHICH.LT.0.AND.MOLINC.LT.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(74)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(74)VPR
      END IF
      IF(JCOUPC.GE.0)THEN
        IF(J21.GT.1.AND.ICOUPC.GT.3)READ(64)VR
        IF(ICOUPC.GT.3)READ(84)VC
      ELSE
        IF(J21.GT.1.AND.ICOUPC.GT.3)READ(64)VRR
        IF(ICOUPC.GT.3)READ(84)VCR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MOD4=MD4
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      MD=MD1*MD2*MD3*MD4

C***********************************************************
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=H1(ITHAT1,M1,2)*H1(ITHAT1,M1,2)*MD
        X0(2,M1)=X00*H1(ITHAT1,M1,2)
        X0(3,M1)=X0(2,M1)
        X0(4,M1)=X0(2,M1)
        X0(5,M1)=X00*H1(ITHAT1,M1,1)
        X0(6,M1)=X0(5,M1)
        X0(7,M1)=X0(5,M1)
        X0(8,M1)=X0(5,M1)
        X0(9,M1)=X0(5,M1)
        X0(10,M1)=X0(5,M1)
        X0(11,M1)=X0(5,M1)
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y0(1,M2)
        Y0(4,M2)=Y0(1,M2)
        Y0(5,M2)=H2(ITHAT2,M2,2)*H2(ITHAT2,M2,2)
        Y0(6,M2)=Y0(2,M2)
        Y0(7,M2)=Y0(2,M2)
        Y0(8,M2)=Y0(1,M2)
        Y0(9,M2)=Y0(1,M2)
        Y0(10,M2)=Y0(1,M2)
        Y0(11,M2)=Y0(1,M2)
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        Z00=H3(ITHAT3,M3,1)
        Z0(1,M3)=Z00*H3(ITHAT3,M3,1)
        Z0(2,M3)=Z0(1,M3)
        Z0(3,M3)=Z00*H3(ITHAT3,M3,2)
        Z0(4,M3)=Z0(1,M3)
        Z0(5,M3)=Z0(1,M3)
        Z0(6,M3)=Z0(3,M3)
        Z0(7,M3)=Z0(1,M3)
        Z0(8,M3)=H3(ITHAT3,M3,2)*H3(ITHAT3,M3,2)
        Z0(9,M3)=Z0(3,M3)
        Z0(10,M3)=Z0(1,M3)
        Z0(11,M3)=Z0(1,M3)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
CCCC  DO M4=1,MM4/MD4
      DO M4=1,MM4
        DO I=1,11
          W(I)=0
        END DO
C**INTEGRATE OVER SINGLE STATES (START)
        IF(JCOUPL.GT.0)THEN
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
CCCC        DO M2=1,MM2/MD2
            DO M2=1,MM2
CCCC          DO M3=1,MM3/MD3
              DO M3=1,MM3
                IF(ICOUPC.GT.3)THEN
                  DO I=1,11
                    W(I)=W(I)+X0(I,M1)*Y0(I,M2)*Z0(I,M3)*
     1              VC(M4,M3,M2,M1,I+4)*IFACTC
                  END DO
                  IF(J21.GT.1)
     1            W(11)=W(11)+X0(11,M1)*Y0(11,M2)*Z0(11,M3)*
     2            VR(KROT,M4,M3,M2,M1)*IFACTC
                END IF
                IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1          W(11)=W(11)+X0(11,M1)*Y0(11,M2)*Z0(11,M3)*
     2          VP(M4,M3,M2,M1)*IFACTL
              END DO
            END DO
          END DO
        ELSE
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
CCCC        DO M2=1,MM2/MD2
            DO M2=1,MM2
CCCC          DO M3=1,MM3/MD3
              DO M3=1,MM3
                IF(ICOUPC.GT.3)THEN
                  DO I=1,11
                    W(I)=W(I)+X0(I,M1)*Y0(I,M2)*Z0(I,M3)*
     1              VCR(M4,M3,M2,M1,I+4)*IFACTC
                  END DO
                  IF(J21.GT.1)
     1            W(11)=W(11)+X0(11,M1)*Y0(11,M2)*Z0(11,M3)*
     2            VRR(KROT,M4,M3,M2,M1)*IFACTC
                END IF
                IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1          W(11)=W(11)+X0(11,M1)*Y0(11,M2)*Z0(11,M3)*
     2          VPR(M4,M3,M2,M1)*IFACTL
              END DO
            END DO
          END DO
        END IF
C**INTEGRATE OVER SINGLE STATES (END)
        DO IRHS=1,NN4
          ILINE=MOD4-MOD(IRHS,MOD4)
          X1=H4(IRHS,M4,1)*(W(1)+2*W(2)+2*W(3)+W(5)+2*W(6)+W(8)+W(11))
     2      +H4(IRHS,M4,2)*(W(4)+W(7)+W(9))
          X2=H4(IRHS,M4,1)*(W(4)+W(7)+W(9))+
     1       H4(IRHS,M4,2)*W(10)
          DO ILHS=ILINE,IRHS,MOD4
            Y1=H4(ILHS,M4,1)
            Y2=H4(ILHS,M4,2)
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*X1+Y2*X2
          END DO
        END DO
      END DO

C***********************************************************
C**POTENTIAL
      IF(IWHICH.LT.0.AND.MOLINC.GT.0)THEN
C**ANALYTIC
        IND=INDN(MODE1)+INDL(MODE2)+INDK(MODE3)+MODE4
        DO IRHS=1,NN4
          ILINE=MOD4-MOD(IRHS,MOD4)
          DO ILHS=ILINE,IRHS,MOD4
            Y=0
            DO I=1,NP4(IND)
              K=JP4(I,IND,1)+1
              L=JP4(I,IND,2)+1
              N=JP4(I,IND,3)+1
              M=JP4(I,IND,4)+1
              Y=Y+CP4(I,IND)*
     1        XKAN(ITHAT1,ITHAT1,K,MODE1)*
     2        XKAN(ITHAT2,ITHAT2,L,MODE2)*XKAN(ITHAT3,ITHAT3,N,MODE3)*
     3        XKAN(ILHS,IRHS,M,MODE4)
            END DO
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y
          END DO
        END DO
C**ANALYTIC
      END IF

C***********************************************************
      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM4A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THAT4(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,MODE3,
     1MODE4,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,NN1,MM1,NN2,MM2,NN3,MM3,NN4,
     2MM4,X0,Y0,Z0,W0,XK,KXK,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,XKAN,
     3MAXQU,MAXPOW,NP4,CP4,JP4,NTOT4,MAX4,INDK,INDL,INDN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,15),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,15),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION TTT(11)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION X0(11,MM1),Y0(11,MM2),Z0(11,MM3),W0(11,MM4)
C**ANALYTIC
      DIMENSION NP4(NTOT4),CP4(MAX4,NTOT4),JP4(MAX4,NTOT4,4)
      DIMENSION INDK(1),INDL(1),INDN(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      CALL TDAT4(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,MODE3,
     1MODE4,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,NN1,MM1,MM1/MD1,NN2,MM2,
     2MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,X0,Y0,Z0,W0,XK,KXK,VP,
     3VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,XKAN,MAXQU,MAXPOW,NP4,CP4,JP4,
     4NTOT4,MAX4,INDK,INDL,INDN)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDAT4(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,MODE3,
     1MODE4,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,NN1,MH1,MM1,NN2,MH2,MM2,NN3,
     2MH3,MM3,NN4,MH4,MM4,X0,Y0,Z0,W0,XK,KXK,VP,VPR,VC,VCR,VR,VRR,J21,
     3KROT,MODINT,XKAN,MAXQU,MAXPOW,NP4,CP4,JP4,NTOT4,MAX4,INDK,INDL,
     4INDN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,15),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,15),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION TTT(11)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
CCCC  DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION X0(11,MM1),Y0(11,MM2),Z0(11,MM3),W0(11,MM4)
C**ANALYTIC
      DIMENSION NP4(NTOT4),CP4(MAX4,NTOT4),JP4(MAX4,NTOT4,4)
      DIMENSION INDK(1),INDL(1),INDN(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/TYPE/LINEAR
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/FILASS/IOUT,INP

      IF(ITIM4B.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THAT4'
          CALL TIMIT(1)
        END IF
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,4)
      IFACTL=INTFAC(NMODE,ICOUPL,4)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1
      IF(IWHICH.LT.0.AND.MOLINC.LT.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(74)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(74)VPR
      END IF
      IF(JCOUPC.GE.0)THEN
        IF(J21.GT.1.AND.ICOUPC.GT.3)READ(64)VR
        IF(ICOUPC.GT.3)READ(84)VC
      ELSE
        IF(J21.GT.1.AND.ICOUPC.GT.3)READ(64)VRR
        IF(ICOUPC.GT.3)READ(84)VCR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT4=ISTAT(ISTATE,MODE4)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      MD=MD1*MD2*MD3*MD4

C***********************************************************
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=H1(ITHAT1,M1,2)*H1(ITHAT1,M1,2)*MD
        X0(2,M1)=X00*H1(ITHAT1,M1,2)
        X0(3,M1)=X0(2,M1)
        X0(4,M1)=X0(2,M1)
        X0(5,M1)=X00*H1(ITHAT1,M1,1)
        X0(6,M1)=X0(5,M1)
        X0(7,M1)=X0(5,M1)
        X0(8,M1)=X0(5,M1)
        X0(9,M1)=X0(5,M1)
        X0(10,M1)=X0(5,M1)
        X0(11,M1)=X0(5,M1)
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y0(1,M2)
        Y0(4,M2)=Y0(1,M2)
        Y0(5,M2)=H2(ITHAT2,M2,2)*H2(ITHAT2,M2,2)
        Y0(6,M2)=Y0(2,M2)
        Y0(7,M2)=Y0(2,M2)
        Y0(8,M2)=Y0(1,M2)
        Y0(9,M2)=Y0(1,M2)
        Y0(10,M2)=Y0(1,M2)
        Y0(11,M2)=Y0(1,M2)
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        Z00=H3(ITHAT3,M3,1)
        Z0(1,M3)=Z00*H3(ITHAT3,M3,1)
        Z0(2,M3)=Z0(1,M3)
        Z0(3,M3)=Z00*H3(ITHAT3,M3,2)
        Z0(4,M3)=Z0(1,M3)
        Z0(5,M3)=Z0(1,M3)
        Z0(6,M3)=Z0(3,M3)
        Z0(7,M3)=Z0(1,M3)
        Z0(8,M3)=H3(ITHAT3,M3,2)*H3(ITHAT3,M3,2)
        Z0(9,M3)=Z0(3,M3)
        Z0(10,M3)=Z0(1,M3)
        Z0(11,M3)=Z0(1,M3)
      END DO
CCCC  DO M4=1,MM4/MD4
      DO M4=1,MM4
        W00=H4(ITHAT4,M4,1)
        W0(1,M4)=W00*H4(ITHAT4,M4,1)
        W0(2,M4)=W0(1,M4)
        W0(3,M4)=W0(1,M4)
        W0(4,M4)=W00*H4(ITHAT4,M4,2)
        W0(5,M4)=W0(1,M4)
        W0(6,M4)=W0(1,M4)
        W0(7,M4)=W0(4,M4)
        W0(8,M4)=W0(1,M4)
        W0(9,M4)=W0(4,M4)
        W0(10,M4)=H4(ITHAT4,M4,2)*H4(ITHAT4,M4,2)
        W0(11,M4)=W0(1,M4)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
      TERM=0
      IF(JCOUPL.GT.0)THEN
CCCC    DO M1=1,MM1/MD1
        DO M1=1,MM1
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
CCCC        DO M3=1,MM3/MD3
            DO M3=1,MM3
CCCC          DO M4=1,MM4/MD4
              DO M4=1,MM4
                DO I=1,11
                  TTT(I)=0
                END DO
                IF(ICOUPC.GT.3)THEN
                  DO I=1,11
                    TTT(I)=X0(I,M1)*Y0(I,M2)*Z0(I,M3)*W0(I,M4)*
     1              VC(M4,M3,M2,M1,I+4)*IFACTC
                  END DO
                END IF
                IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1          TTT(11)=TTT(11)+X0(11,M1)*Y0(11,M2)*Z0(11,M3)*W0(11,M4)
     2          *VP(M4,M3,M2,M1)*IFACTL
                TERM=TERM+2*(TTT(2)+TTT(3)+TTT(4)+TTT(6)+TTT(7)+TTT(9))
     3          +TTT(1)+TTT(5)+TTT(8)+TTT(10)+TTT(11)
              END DO
            END DO
          END DO
        END DO
      ELSE
CCCC    DO M1=1,MM1/MD1
        DO M1=1,MM1
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
CCCC        DO M3=1,MM3/MD3
            DO M3=1,MM3
CCCC          DO M4=1,MM4/MD4
              DO M4=1,MM4
                DO I=1,11
                  TTT(I)=0
                END DO
                IF(ICOUPC.GT.3)THEN
                  DO I=1,11
                    TTT(I)=X0(I,M1)*Y0(I,M2)*Z0(I,M3)*W0(I,M4)*
     1              VCR(M4,M3,M2,M1,I+4)*IFACTC
                  END DO
                END IF
                IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1          TTT(11)=TTT(11)+X0(11,M1)*Y0(11,M2)*Z0(11,M3)*W0(11,M4)
     2          *VPR(M4,M3,M2,M1)*IFACTL
                TERM=TERM+2*(TTT(2)+TTT(3)+TTT(4)+TTT(6)+TTT(7)+TTT(9))
     3          +TTT(1)+TTT(5)+TTT(8)+TTT(10)+TTT(11)
              END DO
            END DO
          END DO
        END DO
      END IF

C***********************************************************
C**POTENTIAL
      Y=0
      IF(IWHICH.LT.0.AND.MOLINC.GT.0)THEN
C**ANALYTIC
        IND=INDN(MODE1)+INDL(MODE2)+INDK(MODE3)+MODE4
        DO I=1,NP4(IND)
          K=JP4(I,IND,1)+1
          L=JP4(I,IND,2)+1
          N=JP4(I,IND,3)+1
          M=JP4(I,IND,4)+1
          Y=Y+CP4(I,IND)*
     1    XKAN(ITHAT1,ITHAT1,K,MODE1)*
     2    XKAN(ITHAT2,ITHAT2,L,MODE2)*XKAN(ITHAT3,ITHAT3,N,MODE3)*
     3    XKAN(ITHAT4,ITHAT4,M,MODE4)
        END DO
C**ANALYTIC
      END IF
      DO IRLHS=1,KXK
        XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM+Y
      END DO

C***********************************************************
C**ROTATION
      IF(J21.GT.1.AND.ICOUPC.GT.3)THEN
        TERM=0
        IF(JCOUPC.GE.0)THEN
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
CCCC        DO M2=1,MM2/MD2
            DO M2=1,MM2
CCCC          DO M3=1,MM3/MD3
              DO M3=1,MM3
CCCC            DO M4=1,MM4/MD4
                DO M4=1,MM4
                  TERM=TERM+VR(KROT,M4,M3,M2,M1)*X0(11,M1)*Y0(11,M2)*
     1            Z0(11,M3)*W0(11,M4)*IFACTC
                END DO
              END DO
            END DO
          END DO
        ELSE
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
CCCC        DO M2=1,MM2/MD2
            DO M2=1,MM2
CCCC          DO M3=1,MM3/MD3
              DO M3=1,MM3
CCCC            DO M4=1,MM4/MD4
                DO M4=1,MM4
                  TERM=TERM+VRR(KROT,M4,M3,M2,M1)*X0(11,M1)*Y0(11,M2)*
     1            Z0(11,M3)*W0(11,M4)*IFACTC
                END DO
              END DO
            END DO
          END DO
        END IF
        DO IRLHS=1,KXK
          XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM
        END DO
      END IF
      IF(ITIM4B.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM4B=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TVIS4A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,
     1XQTAU,NN1,MM1,NN2,MM2,NN3,MM3,NN4,MM4,NNTAU,MMTAU,X0,Y0,Z0,W0,XK,
     2NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,VP,VPR,VC,VCR,VR,VRR,J21,K,
     3MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,21),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,21),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION X(21),T(21)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(22,MM1),Y0(22,MM2),Z0(22,MM3),W0(22,MM4)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MOD1=MD1
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.NE.1)MD4=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.NE.1)MD4=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.NE.1)MD4=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.NE.1)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.NE.1)MD4=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.NE.1)MD4=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.NE.1)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.NE.1)MD4=1
      CALL DVIS4A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,XQTAU,
     1NN1,MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,
     2NNTAU,MMTAU,X0,Y0,Z0,W0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,
     3VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DVIS4A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,
     1XQTAU,NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NNTAU,
     2MMTAU,X0,Y0,Z0,W0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,VP,VPR,
     3VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,21),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,21),
     1VRR(J21,MM4,MM3,MM2,MM1)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION X(21),T(21)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
CCCC  DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(22,MM1),Y0(22,MM2),Z0(22,MM3),W0(22,MM4)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TVIS4A'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IFACTL=JNTFAC(NMODE,ICOUPL,4)
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=JNTFAC(NMODE,ICOUPC,4)
      IF(MOLINC.GT.0)IFACTC=1

      KA=K/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT4=ISTAT(ISTATE,MODE4)
      ITHATM=ISTAT(ISTATE,NSMODE)+1-MOD(KA,2)+INCT
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MOD1=MD1
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.NE.1)MD4=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.NE.1)MD4=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.NE.1)MD4=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.NE.1)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.NE.1)MD4=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.NE.1)MD4=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.NE.1)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.NE.1)MD4=1
      MD=MD1*MD2*MD3*MD4*MDT
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)*MD
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y0(1,M2)
        Y0(4,M2)=Y0(1,M2)
        Y0(5,M2)=Y0(1,M2)
        Y0(6,M2)=Y0(1,M2)
        Y0(7,M2)=Y0(2,M2)
        Y0(8,M2)=Y0(1,M2)
        Y0(9,M2)=Y0(1,M2)
        Y0(10,M2)=Y0(1,M2)
        IF(.NOT.LINEAR)THEN
          Y0(11,M2)=H2(ITHAT2,M2,2)*H2(ITHAT2,M2,2)*MD
        ELSE
          Y0(11,M2)=Y00*H2(ITHAT2,M2,3)
        END IF
        Y0(12,M2)=Y0(2,M2)
        Y0(13,M2)=Y0(2,M2)
        Y0(14,M2)=Y0(2,M2)
        Y0(15,M2)=Y0(1,M2)
        Y0(16,M2)=Y0(1,M2)
        Y0(17,M2)=Y0(1,M2)
        Y0(18,M2)=Y0(1,M2)
        Y0(19,M2)=Y0(1,M2)
        Y0(20,M2)=Y0(1,M2)
        Y0(21,M2)=Y0(1,M2)
        Y0(22,M2)=H2(ITHAT2,M2,1)*H2(ITHAT2,M2,1)*FACTRC*MD
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        Z00=H3(ITHAT3,M3,1)
        Z0(1,M3)=Z00*H3(ITHAT3,M3,1)
        Z0(2,M3)=Z0(1,M3)
        Z0(3,M3)=Z00*H3(ITHAT3,M3,2)
        Z0(4,M3)=Z0(1,M3)
        Z0(5,M3)=Z0(1,M3)
        Z0(6,M3)=Z0(1,M3)
        Z0(7,M3)=Z0(1,M3)
        Z0(8,M3)=Z0(3,M3)
        Z0(9,M3)=Z0(1,M3)
        Z0(10,M3)=Z0(1,M3)
        Z0(11,M3)=Z0(1,M3)
        Z0(12,M3)=Z0(3,M3)
        Z0(13,M3)=Z0(1,M3)
        Z0(14,M3)=Z0(1,M3)
        IF(.NOT.LINEAR)THEN
          Z0(15,M3)=H3(ITHAT3,M3,2)*H3(ITHAT3,M3,2)
        ELSE
          Z0(15,M3)=Z00*H3(ITHAT3,M3,3)
        END IF
        Z0(16,M3)=Z0(3,M3)
        Z0(17,M3)=Z0(3,M3)
        Z0(18,M3)=Z0(1,M3)
        Z0(19,M3)=Z0(1,M3)
        Z0(20,M3)=Z0(1,M3)
        Z0(21,M3)=Z0(1,M3)
        Z0(22,M3)=H3(ITHAT3,M3,1)*H3(ITHAT3,M3,1)
      END DO
CCCC  DO M4=1,MM4/MD4
      DO M4=1,MM4
        W00=H4(ITHAT4,M4,1)
        W0(1,M4)=W00*H4(ITHAT4,M4,1)
        W0(2,M4)=W0(1,M4)
        W0(3,M4)=W0(1,M4)
        W0(4,M4)=W00*H4(ITHAT4,M4,2)
        W0(5,M4)=W0(1,M4)
        W0(6,M4)=W0(1,M4)
        W0(7,M4)=W0(1,M4)
        W0(8,M4)=W0(1,M4)
        W0(9,M4)=W0(4,M4)
        W0(10,M4)=W0(1,M4)
        W0(11,M4)=W0(1,M4)
        W0(12,M4)=W0(1,M4)
        W0(13,M4)=W0(4,M4)
        W0(14,M4)=W0(1,M4)
        W0(15,M4)=W0(1,M4)
        W0(16,M4)=W0(4,M4)
        W0(17,M4)=W0(1,M4)
        IF(.NOT.LINEAR)THEN
          W0(18,M4)=H4(ITHAT4,M4,2)*H4(ITHAT4,M4,2)
        ELSE
          W0(18,M4)=W00*H4(ITHAT4,M4,3)
        END IF
        W0(19,M4)=W0(4,M4)
        W0(20,M4)=W0(1,M4)
        W0(21,M4)=W0(1,M4)
        W0(22,M4)=H4(ITHAT4,M4,1)*H4(ITHAT4,M4,1)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**LOOP ROUND TAU
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
CCCC      QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
CCCC      DELTA(4)=+QTAU
CCCC      DELTA(5)=-QTAU
        END IF

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.4)READ(64)VR
          IF(ICOUPC.GE.4)READ(84)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.4)READ(64)VRR
          IF(ICOUPC.GE.4)READ(84)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(74)VP
        ELSE
          READ(74)VPR
        END IF

C***********************************************************

        IF(.NOT.LINEAR)THEN
          T00=HTAU(ITHATM,MTAU,1,LMAX)*DSTAU(ITAU)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T(1)
          T(4)=T(1)
          T(5)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(6)=T(1)
          T(7)=T(1)
          T(8)=T(1)
          T(9)=T(1)
          T(9)=T(1)
          T(10)=T(5)
          T(11)=T(1)
          T(12)=T(1)
          T(13)=T(1)
          T(14)=T(5)
          T(15)=T(1)
          T(16)=T(1)
          T(17)=T(5)
          T(18)=T(1)
          T(19)=T(5)
          T(20)=HTAU(ITHATM,MTAU,2,LMAX)*HTAU(ITHATM,MTAU,2,LMAX)*
     1    DSTAU(ITAU)
          T(21)=T(1)
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
            DO I=1,21
              X(I)=0
            END DO
C**INTEGRATE OVER SINGLE MODES (START)
            IF(JCOUPL.GT.0)THEN
CCCC          DO M2=1,MM2/MD2
CCCC            DO M3=1,MM3/MD3
CCCC              DO M4=1,MM4/MD4
              DO M2=1,MM2
                DO M3=1,MM3
                  DO M4=1,MM4
                    IF(ICOUPC.GE.4)THEN
C**NO WATSON TERM IF RPH
                      DO I=1,21
                        X(I)=X(I)+T(I)*Y0(I,M2)*Z0(I,M3)*W0(I,M4)*
     1                  VC(M4,M3,M2,M1,I)*IFACTC
                      END DO
                      X(21)=X(21)+T(21)*Y0(22,M2)*Z0(22,M3)*W0(22,M4)*
     1                VR(K,M4,M3,M2,M1)
                    END IF
                    X(21)=X(21)+T(21)*Y0(21,M2)*Z0(21,M3)*W0(21,M4)*
     1              VP(M4,M3,M2,M1)*IFACTL
                  END DO
                END DO
              END DO
            ELSE
CCCC          DO M2=1,MM2/MD2
CCCC            DO M3=1,MM3/MD3
CCCC              DO M4=1,MM4/MD4
              DO M2=1,MM2
                DO M3=1,MM3
                  DO M4=1,MM4
                    IF(ICOUPC.GE.4)THEN
C**NO WATSON TERM IF RPH
                      DO I=1,21
                        X(I)=X(I)+T(I)*Y0(I,M2)*Z0(I,M3)*W0(I,M4)*
     1                  VCR(M4,M3,M2,M1,I)*IFACTC
                      END DO
                      X(21)=X(21)+T(21)*Y0(22,M2)*Z0(22,M3)*W0(22,M4)*
     1                VRR(K,M4,M3,M2,M1)
                    END IF
                    X(21)=X(21)+T(21)*Y0(21,M2)*Z0(21,M3)*W0(21,M4)*
     1              VPR(M4,M3,M2,M1)*IFACTL
                  END DO
                END DO
              END DO
            END IF
C**INTEGRATE OVER SINGLE MODES (END)
            DO IRHS=1,NN1
              ILINE=MOD1-MOD(IRHS,MOD1)
              X1=H1(IRHS,M1,1)*(2*X(2)+2*X(3)+2*X(4)+2*X(5)+X(11)+
     1                              2*X(12)+2*X(13)+2*X(14)+X(15)+
     2                              2*X(16)+2*X(17)+X(18)+2*X(19)+
     3                              X(20)+X(21))
     4              +H1(IRHS,M1,2)*(X(1)+X(7)+X(8)+X(9)+X(10))
              X2=H1(IRHS,M1,1)*(X(1)+X(7)+X(8)+X(9)+X(10))+
     1               H1(IRHS,M1,2)*X(6)
              DO ILHS=ILINE,IRHS,MOD1
                Y1=H1(ILHS,M1,1)
                Y2=H1(ILHS,M1,2)
                XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*X1+Y2*X2
              END DO
            END DO
          END DO
        ELSE
          T00=HTAU(ITHATM,MTAU,1,LMAX)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T(1)
          T(4)=T(1)
          T(5)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(6)=T(1)
          T(7)=T(1)
          T(8)=T(1)
          T(9)=T(1)
          T(9)=T(1)
          T(10)=T(5)
          T(11)=T(1)
          T(12)=T(1)
          T(13)=T(1)
          T(14)=T(5)
          T(15)=T(1)
          T(16)=T(1)
          T(17)=T(5)
          T(18)=T(1)
          T(19)=T(5)
          T(20)=T00*HTAU(ITHATM,MTAU,3,LMAX)
          T(21)=T(1)
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
            DO I=1,21
              X(I)=0
            END DO
C**INTEGRATE OVER SINGLE MODES (START)
            IF(JCOUPL.GT.0)THEN
CCCC          DO M2=1,MM2/MD2
CCCC            DO M3=1,MM3/MD3
CCCC              DO M4=1,MM4/MD4
              DO M2=1,MM2
                DO M3=1,MM3
                  DO M4=1,MM4
                    IF(ICOUPC.GE.4)THEN
C**(21) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                      DO I=1,20
                        X(I)=X(I)-T(I)*Y0(I,M2)*Z0(I,M3)*W0(I,M4)*
     1                  VC(M4,M3,M2,M1,I)*IFACTC
                      END DO
                      X(21)=X(21)+T(21)*Y0(22,M2)*Z0(22,M3)*W0(22,M4)*
     1                VR(K,M4,M3,M2,M1)
                    END IF
                    X(21)=X(21)+T(21)*Y0(21,M2)*Z0(21,M3)*W0(21,M4)*
     1              VP(M4,M3,M2,M1)*IFACTL
                  END DO
                END DO
              END DO
            ELSE
CCCC          DO M2=1,MM2/MD2
CCCC            DO M3=1,MM3/MD3
CCCC              DO M4=1,MM4/MD4
              DO M2=1,MM2
                DO M3=1,MM3
                  DO M4=1,MM4
                    IF(ICOUPC.GE.4)THEN
C**(21) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                      DO I=1,20
                        X(I)=X(I)-T(I)*Y0(I,M2)*Z0(I,M3)*W0(I,M4)*
     1                  VCR(M4,M3,M2,M1,I)*IFACTC
                      END DO
                      X(21)=X(21)+T(21)*Y0(22,M2)*Z0(22,M3)*W0(22,M4)*
     1                VRR(K,M4,M3,M2,M1)
                    END IF
                    X(21)=X(21)+T(21)*Y0(21,M2)*Z0(21,M3)*W0(21,M4)*
     1              VPR(M4,M3,M2,M1)*IFACTL
                  END DO
                END DO
              END DO
            END IF
C**INTEGRATE OVER SINGLE MODES (END)
            DO IRHS=1,NN1
              ILINE=MOD1-MOD(IRHS,MOD1)
              X1=H1(IRHS,M1,1)*(X(2)+X(3)+X(4)+X(5)+X(11)+
     1                              2*X(12)+2*X(13)+2*X(14)+X(15)+
     2                              2*X(16)+2*X(17)+X(18)+2*X(19)+
     3                              X(20)+X(21))
              X2=H1(IRHS,M1,2)*(X(1)+2*X(7)+2*X(8)+2*X(9)+2*X(10))
              X3=H1(IRHS,M1,3)*X(6)
              DO ILHS=ILINE,IRHS,MOD1
                Y1=H1(ILHS,M1,1)
                XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*(X1+X2+X3)
              END DO
            END DO
          END DO
        END IF
      END DO
      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM4A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TVVS4A(ISTAT,NSTAT,NN1,HTAU,XQTAU,NNTAU,MMTAU,XK,
     1ISTATE,MODE1,MODE2,MODE3,MODE4,KROT,MODINT,XKAN,MAXQU,MAXPOW,
     2NAMODE,NP4,CP4,JP4,VP4,NTOT4,MAX4,INDK,INDL,INDN,IND,MDTAU)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION MODINT(NAMODE)
      DIMENSION ISTAT(NSTAT,NAMODE),XK(NN1,NN1)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION NP4(NTOT4),CP4(MAX4,MDTAU,NTOT4),JP4(MAX4,4,NTOT4),
     1VP4(MAX4,NTOT4)
      DIMENSION INDK(1),INDL(1),INDN(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,NAMODE)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      
      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TVVS4A'
          CALL TIMIT(1)
        END IF
      END IF

      IND4=INDN(MODE1)+INDL(MODE2)+INDK(MODE3)+MODE4

      KA=KROT/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT4=ISTAT(ISTATE,MODE4)
      ITHATM=ISTAT(ISTATE,NSMODE)+1-MOD(KA,2)+INCT
      MOD1=MODINT(MODE1)
      MDT=MODINT(NSMODE)

      IF(IND.EQ.0)THEN
        READ(24)NFIT
        NP4(IND4)=NFIT
        DO I=1,NFIT
          READ(24)JP4(I,1,IND4),JP4(I,2,IND4),JP4(I,3,IND4),
     1    JP4(I,4,IND4)
        END DO
        DO MTAU=1,MDTAU
          READ(24)(CP4(I,MTAU,IND4),I=1,NFIT)
        END DO

C********************************
C**   GET PARTIAL INTEGRAL
C********************************
        DO I=1,NFIT
          VP4(I,IND4)=0
        END DO
        ITAU=INIT-INCTAU
C**START TAU LOOP
        DO MTAU=1,MMTAU/MDT
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
          T00=HTAU(ITHATM,MTAU,1,LMAX)*DSTAU(ITAU)
          T=T00*HTAU(ITHATM,MTAU,1,LMAX)
          DO I=1,NFIT
            VP4(I,IND4)=VP4(I,IND4)+CP4(I,MTAU,IND4)*T
          END DO
        END DO
      ELSE
        NFIT=NP4(IND4)
      END IF

C     DO IRHS=1,NN1
C       ILINE=MOD1-MOD(IRHS,MOD1)
C       DO ILHS=ILINE,IRHS,MOD1
C         XT=0
C         DO I=1,NFIT
C           K=JP4(I,1)+1
C           L=JP4(I,2)+1
C           N=JP4(I,3)+1
C           M=JP4(I,4)+1
C           X=XKAN(ITHAT2,ITHAT2,L,MODE2)*XKAN(ITHAT3,ITHAT3,N,MODE3)*
C    1      XKAN(ITHAT4,ITHAT4,M,MODE4)*XKAN(ILHS,IRHS,K,MODE1)
C           XT=XT+VP4(I)*X
C         END DO
C**POTENTIAL ONLY
C         XK(ILHS,IRHS)=XK(ILHS,IRHS)+XT
C       END DO
C     END DO

      DO I=1,NFIT
        K=JP4(I,1,IND4)+1
        L=JP4(I,2,IND4)+1
        N=JP4(I,3,IND4)+1
        M=JP4(I,4,IND4)+1
        X=XKAN(ITHAT2,ITHAT2,L,MODE2)*XKAN(ITHAT3,ITHAT3,N,MODE3)*
     1  XKAN(ITHAT4,ITHAT4,M,MODE4)*VP4(I,IND4)
        DO IRHS=1,NN1
          ILINE=MOD1-MOD(IRHS,MOD1)
          DO ILHS=ILINE,IRHS,MOD1
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+X*XKAN(ILHS,IRHS,K,MODE1)
          END DO
        END DO
      END DO

      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM4A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TVIS4B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,
     1XQTAU,NN1,MM1,NN2,MM2,NN3,MM3,NN4,MM4,NNTAU,MMTAU,X0,Y0,Z0,W0,XK,
     2NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,VP,VPR,VC,VCR,VR,VRR,J21,K,
     3MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,21),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,21),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION Y(21),T(21)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN2,NN2)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(22,MM1),Y0(22,MM2),Z0(22,MM3),W0(22,MM4)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MOD2=MD2
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.NE.1)MD4=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.NE.1)MD4=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.NE.1)MD4=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.NE.1)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.NE.1)MD4=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.NE.1)MD4=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.NE.1)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.NE.1)MD4=1
      CALL DVIS4B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,XQTAU,
     1NN1,MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,
     2NNTAU,MMTAU,X0,Y0,Z0,W0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,
     3VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DVIS4B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,
     1XQTAU,NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NNTAU,
     2MMTAU,X0,Y0,Z0,W0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,VP,VPR,
     3VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,21),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,21),
     1VRR(J21,MM4,MM3,MM2,MM1)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION Y(21),T(21)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN2,NN2)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
CCCC  DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(22,MM1),Y0(22,MM2),Z0(22,MM3),W0(22,MM4)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TVIS4B'
          CALL TIMIT(1)
        END IF
      END IF

      IFACTL=JNTFAC(NMODE,ICOUPL,4)
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=JNTFAC(NMODE,ICOUPC,4)
      IF(MOLINC.GT.0)IFACTC=1

      KA=K/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT4=ISTAT(ISTATE,MODE4)
      ITHATM=ISTAT(ISTATE,NSMODE)+1-MOD(KA,2)+INCT
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MOD2=MD2
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.NE.1)MD4=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.NE.1)MD4=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.NE.1)MD4=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.NE.1)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.NE.1)MD4=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.NE.1)MD4=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.NE.1)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.NE.1)MD4=1
      MD=MD1*MD2*MD3*MD4*MDT
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=X00*H1(ITHAT1,M1,2)
        X0(2,M1)=X00*H1(ITHAT1,M1,1)
        X0(3,M1)=X0(2,M1)
        X0(4,M1)=X0(2,M1)
        X0(5,M1)=X0(2,M1)
        IF(.NOT.LINEAR)THEN
          X0(6,M1)=H1(ITHAT1,M1,2)*H1(ITHAT1,M1,2)*MD
        ELSE
          X0(6,M1)=X00*H1(ITHAT1,M1,3)
        END IF
        X0(7,M1)=X0(1,M1)
        X0(8,M1)=X0(1,M1)
        X0(9,M1)=X0(1,M1)
        X0(10,M1)=X0(1,M1)
        X0(11,M1)=X0(2,M1)
        X0(12,M1)=X0(2,M1)
        X0(13,M1)=X0(2,M1)
        X0(14,M1)=X0(2,M1)
        X0(15,M1)=X0(2,M1)
        X0(16,M1)=X0(2,M1)
        X0(17,M1)=X0(2,M1)
        X0(18,M1)=X0(2,M1)
        X0(19,M1)=X0(2,M1)
        X0(20,M1)=X0(2,M1)
        X0(21,M1)=X0(2,M1)
        X0(22,M1)=H1(ITHAT1,M1,1)*H1(ITHAT1,M1,1)*FACTRC*MD
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        Z00=H3(ITHAT3,M3,1)
        Z0(1,M3)=Z00*H3(ITHAT3,M3,1)
        Z0(2,M3)=Z0(1,M3)
        Z0(3,M3)=Z00*H3(ITHAT3,M3,2)
        Z0(4,M3)=Z0(1,M3)
        Z0(5,M3)=Z0(1,M3)
        Z0(6,M3)=Z0(1,M3)
        Z0(7,M3)=Z0(1,M3)
        Z0(8,M3)=Z0(3,M3)
        Z0(9,M3)=Z0(1,M3)
        Z0(10,M3)=Z0(1,M3)
        Z0(11,M3)=Z0(1,M3)
        Z0(12,M3)=Z0(3,M3)
        Z0(13,M3)=Z0(1,M3)
        Z0(14,M3)=Z0(1,M3)
        IF(.NOT.LINEAR)THEN
          Z0(15,M3)=H3(ITHAT3,M3,2)*H3(ITHAT3,M3,2)
        ELSE
          Z0(15,M3)=Z00*H3(ITHAT3,M3,3)
        END IF
        Z0(16,M3)=Z0(3,M3)
        Z0(17,M3)=Z0(3,M3)
        Z0(18,M3)=Z0(1,M3)
        Z0(19,M3)=Z0(1,M3)
        Z0(20,M3)=Z0(1,M3)
        Z0(21,M3)=Z0(1,M3)
        Z0(22,M3)=H3(ITHAT3,M3,1)*H3(ITHAT3,M3,1)
      END DO
CCCC  DO M4=1,MM4/MD4
      DO M4=1,MM4
        W00=H4(ITHAT4,M4,1)
        W0(1,M4)=W00*H4(ITHAT4,M4,1)
        W0(2,M4)=W0(1,M4)
        W0(3,M4)=W0(1,M4)
        W0(4,M4)=W00*H4(ITHAT4,M4,2)
        W0(5,M4)=W0(1,M4)
        W0(6,M4)=W0(1,M4)
        W0(7,M4)=W0(1,M4)
        W0(8,M4)=W0(1,M4)
        W0(9,M4)=W0(4,M4)
        W0(10,M4)=W0(1,M4)
        W0(11,M4)=W0(1,M4)
        W0(12,M4)=W0(1,M4)
        W0(13,M4)=W0(4,M4)
        W0(14,M4)=W0(1,M4)
        W0(15,M4)=W0(1,M4)
        W0(16,M4)=W0(4,M4)
        W0(17,M4)=W0(1,M4)
        IF(.NOT.LINEAR)THEN
          W0(18,M4)=H4(ITHAT4,M4,2)*H4(ITHAT4,M4,2)
        ELSE
          W0(18,M4)=W00*H4(ITHAT4,M4,3)
        END IF
        W0(19,M4)=W0(4,M4)
        W0(20,M4)=W0(1,M4)
        W0(21,M4)=W0(1,M4)
        W0(22,M4)=H4(ITHAT4,M4,1)*H4(ITHAT4,M4,1)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**LOOP ROUND TAU
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
CCCC      QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
CCCC      DELTA(4)=+QTAU
CCCC      DELTA(5)=-QTAU
        END IF

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.4)READ(64)VR
          IF(ICOUPC.GE.4)READ(84)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.4)READ(64)VRR
          IF(ICOUPC.GE.4)READ(84)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(74)VP
        ELSE
          READ(74)VPR
        END IF

C***********************************************************

        IF(.NOT.LINEAR)THEN
          T00=HTAU(ITHATM,MTAU,1,LMAX)*DSTAU(ITAU)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T(1)
          T(4)=T(1)
          T(5)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(6)=T(1)
          T(7)=T(1)
          T(8)=T(1)
          T(9)=T(1)
          T(9)=T(1)
          T(10)=T(5)
          T(11)=T(1)
          T(12)=T(1)
          T(13)=T(1)
          T(14)=T(5)
          T(15)=T(1)
          T(16)=T(1)
          T(17)=T(5)
          T(18)=T(1)
          T(19)=T(5)
          T(20)=HTAU(ITHATM,MTAU,2,LMAX)*HTAU(ITHATM,MTAU,2,LMAX)*
     1    DSTAU(ITAU)
          T(21)=T(1)
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
            DO I=1,21
              Y(I)=0
            END DO
C**INTEGRATE OVER SINGLE STATES (START)
            IF(JCOUPL.GT.0)THEN
CCCC          DO M1=1,MM1/MD1
CCCC            DO M3=1,MM3/MD3
CCCC              DO M4=1,MM4/MD4
              DO M1=1,MM1
                DO M3=1,MM3
                  DO M4=1,MM4
                    IF(ICOUPC.GE.4)THEN
C**NO WATSON TERM IF RPH
                      DO I=1,21
                        Y(I)=Y(I)+T(I)*X0(I,M1)*Z0(I,M3)*W0(I,M4)*
     1                  VC(M4,M3,M2,M1,I)*IFACTC
                      END DO
                      Y(21)=Y(21)+T(21)*X0(22,M1)*Z0(22,M3)*W0(22,M4)*
     1                VR(K,M4,M3,M2,M1)
                    END IF
                    Y(21)=Y(21)+T(21)*X0(21,M1)*Z0(21,M3)*W0(21,M4)*
     1              VP(M4,M3,M2,M1)*IFACTL
                  END DO
                END DO
              END DO
            ELSE
CCCC          DO M1=1,MM1/MD1
CCCC            DO M3=1,MM3/MD3
CCCC              DO M4=1,MM4/MD4
              DO M1=1,MM1
                DO M3=1,MM3
                  DO M4=1,MM4
                    IF(ICOUPC.GE.4)THEN
C**NO WATSON TERM IF RPH
                      DO I=1,21
                        Y(I)=Y(I)+T(I)*X0(I,M1)*Z0(I,M3)*W0(I,M4)*
     1                  VCR(M4,M3,M2,M1,I)*IFACTC
                      END DO
                      Y(21)=Y(21)+T(21)*X0(22,M1)*Z0(22,M3)*W0(22,M4)*
     1                VRR(K,M4,M3,M2,M1)
                    END IF
                    Y(21)=Y(21)+T(21)*X0(21,M1)*Z0(21,M3)*W0(21,M4)*
     1              VPR(M4,M3,M2,M1)*IFACTL
                  END DO
                END DO
              END DO
            END IF
C**INTEGRATE OVER SINGLE STATES (END)
            DO IRHS=1,NN2
              ILINE=MOD2-MOD(IRHS,MOD2)
              X1=H2(IRHS,M2,1)*(2*Y(1)+2*Y(3)+2*Y(4)+2*Y(5)+Y(6)+
     1                              2*Y(8)+2*Y(9)+2*Y(10)+Y(15)+
     2                              2*Y(16)+2*Y(17)+Y(18)+2*Y(19)+
     3                              Y(20)+Y(21))
     4              +H2(IRHS,M2,2)*(Y(2)+Y(7)+Y(12)+Y(13)+Y(14))
              X2=H2(IRHS,M2,1)*(Y(2)+Y(7)+Y(12)+Y(13)+Y(14))+
     1               H2(IRHS,M2,2)*Y(11)
              DO ILHS=ILINE,IRHS,MOD2
                Y1=H2(ILHS,M2,1)
                Y2=H2(ILHS,M2,2)
                XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*X1+Y2*X2
              END DO
            END DO
          END DO
        ELSE
          T00=HTAU(ITHATM,MTAU,1,LMAX)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T(1)
          T(4)=T(1)
          T(5)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(6)=T(1)
          T(7)=T(1)
          T(8)=T(1)
          T(9)=T(1)
          T(9)=T(1)
          T(10)=T(5)
          T(11)=T(1)
          T(12)=T(1)
          T(13)=T(1)
          T(14)=T(5)
          T(15)=T(1)
          T(16)=T(1)
          T(17)=T(5)
          T(18)=T(1)
          T(19)=T(5)
          T(20)=T00*HTAU(ITHATM,MTAU,3,LMAX)
          T(21)=T(1)
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
            DO I=1,21
              Y(I)=0
            END DO
C**INTEGRATE OVER SINGLE STATES (START)
            IF(JCOUPL.GT.0)THEN
CCCC          DO M1=1,MM1/MD1
CCCC            DO M3=1,MM3/MD3
CCCC              DO M4=1,MM4/MD4
              DO M1=1,MM1
                DO M3=1,MM3
                  DO M4=1,MM4
                    IF(ICOUPC.GE.4)THEN
C**(21) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                      DO I=1,20
                        Y(I)=Y(I)-T(I)*X0(I,M1)*Z0(I,M3)*W0(I,M4)*
     1                  VC(M4,M3,M2,M1,I)*IFACTC
                      END DO
                      Y(21)=Y(21)+T(21)*X0(22,M1)*Z0(22,M3)*W0(22,M4)*
     1                VR(K,M4,M3,M2,M1)
                    END IF
                    Y(21)=Y(21)+T(21)*X0(21,M1)*Z0(21,M3)*W0(21,M4)*
     1              VP(M4,M3,M2,M1)*IFACTL
                  END DO
                END DO
              END DO
            ELSE
CCCC          DO M1=1,MM1/MD1
CCCC            DO M3=1,MM3/MD3
CCCC              DO M4=1,MM4/MD4
              DO M1=1,MM1
                DO M3=1,MM3
                  DO M4=1,MM4
                    IF(ICOUPC.GE.4)THEN
C**(21) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                      DO I=1,20
                        Y(I)=Y(I)-T(I)*X0(I,M1)*Z0(I,M3)*W0(I,M4)*
     1                  VCR(M4,M3,M2,M1,I)*IFACTC
                      END DO
                      Y(21)=Y(21)+T(21)*X0(22,M1)*Z0(22,M3)*W0(22,M4)*
     1                VRR(K,M4,M3,M2,M1)
                    END IF
                    Y(21)=Y(21)+T(21)*X0(21,M1)*Z0(21,M3)*W0(21,M4)*
     1              VPR(M4,M3,M2,M1)*IFACTL
                  END DO
                END DO
              END DO
            END IF
C**INTEGRATE OVER SINGLE STATES (END)
            DO IRHS=1,NN2
              ILINE=MOD2-MOD(IRHS,MOD2)
              X1=H2(IRHS,M2,1)*(Y(1)+Y(3)+Y(4)+Y(5)+Y(6)+
     1                              2*Y(8)+2*Y(9)+2*Y(10)+Y(15)+
     2                              2*Y(16)+2*Y(17)+Y(18)+2*Y(19)+
     3                              Y(20)+Y(21))
              X2=H2(IRHS,M2,2)*(Y(2)+2*Y(7)+2*Y(12)+2*Y(13)+2*Y(14))
              X3=H2(IRHS,M2,3)*Y(11)
              DO ILHS=ILINE,IRHS,MOD2
                Y1=H2(ILHS,M2,1)
                XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*(X1+X2+X3)
              END DO
            END DO
          END DO
        END IF
      END DO
      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM4A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TVVS4B(ISTAT,NSTAT,NN2,HTAU,XQTAU,NNTAU,MMTAU,XK,
     1ISTATE,MODE1,MODE2,MODE3,MODE4,KROT,MODINT,XKAN,MAXQU,MAXPOW,
     2NAMODE,NP4,CP4,JP4,VP4,NTOT4,MAX4,INDK,INDL,INDN,IND,MDTAU)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION MODINT(NAMODE)
      DIMENSION ISTAT(NSTAT,NAMODE),XK(NN2,NN2)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION NP4(NTOT4),CP4(MAX4,MDTAU,NTOT4),JP4(MAX4,4,NTOT4),
     1VP4(MAX4,NTOT4)
      DIMENSION INDK(1),INDL(1),INDN(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,NAMODE)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TVVS4B'
          CALL TIMIT(1)
        END IF
      END IF

      IND4=INDN(MODE1)+INDL(MODE2)+INDK(MODE3)+MODE4

      KA=KROT/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT4=ISTAT(ISTATE,MODE4)
      ITHATM=ISTAT(ISTATE,NSMODE)+1-MOD(KA,2)+INCT
      MOD2=MODINT(MODE2)
      MDT=MODINT(NSMODE)

      IF(IND.EQ.0)THEN
        READ(24)NFIT
        NP4(IND4)=NFIT
        DO I=1,NFIT
          READ(24)JP4(I,1,IND4),JP4(I,2,IND4),JP4(I,3,IND4),
     1    JP4(I,4,IND4)
        END DO
        DO MTAU=1,MDTAU
          READ(24)(CP4(I,MTAU,IND4),I=1,NFIT)
        END DO

C********************************
C**   GET PARTIAL INTEGRAL
C********************************
        DO I=1,NFIT
          VP4(I,IND4)=0
        END DO
        ITAU=INIT-INCTAU
C**START TAU LOOP
        DO MTAU=1,MMTAU/MDT
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
          T00=HTAU(ITHATM,MTAU,1,LMAX)*DSTAU(ITAU)
          T=T00*HTAU(ITHATM,MTAU,1,LMAX)
          DO I=1,NFIT
            VP4(I,IND4)=VP4(I,IND4)+CP4(I,MTAU,IND4)*T
          END DO
        END DO
      ELSE
        NFIT=NP4(IND4)
      END IF

C     DO IRHS=1,NN2
C       ILINE=MOD2-MOD(IRHS,MOD2)
C       DO ILHS=ILINE,IRHS,MOD2
C         XT=0
C         DO I=1,NFIT
C           K=JP4(I,1)+1
C           L=JP4(I,2)+1
C           N=JP4(I,3)+1
C           M=JP4(I,4)+1
C           X=XKAN(ITHAT1,ITHAT1,K,MODE1)*
C    2      XKAN(ITHAT3,ITHAT3,N,MODE3)*XKAN(ITHAT4,ITHAT4,M,MODE4)*
C    3      XKAN(ILHS,IRHS,L,MODE2)
C           XT=XT+VP4(I)*X
C         END DO
C**POTENTIAL ONLY
C         XK(ILHS,IRHS)=XK(ILHS,IRHS)+XT
C       END DO
C     END DO

      DO I=1,NFIT
        K=JP4(I,1,IND4)+1
        L=JP4(I,2,IND4)+1
        N=JP4(I,3,IND4)+1
        M=JP4(I,4,IND4)+1
        X=XKAN(ITHAT1,ITHAT1,K,MODE1)*XKAN(ITHAT3,ITHAT3,N,MODE3)*
     1  XKAN(ITHAT4,ITHAT4,M,MODE4)*VP4(I,IND4)
        DO IRHS=1,NN2
          ILINE=MOD2-MOD(IRHS,MOD2)
          DO ILHS=ILINE,IRHS,MOD2
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+X*XKAN(ILHS,IRHS,L,MODE2)
          END DO
        END DO
      END DO

      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM4A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TVIS4C(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,
     1XQTAU,NN1,MM1,NN2,MM2,NN3,MM3,NN4,MM4,NNTAU,MMTAU,X0,Y0,Z0,W0,XK,
     2NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,VP,VPR,VC,VCR,VR,VRR,J21,K,
     3MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,21),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,21),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION Z(21),T(21)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN3,NN3)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(22,MM1),Y0(22,MM2),Z0(22,MM3),W0(22,MM4)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MOD3=MD3
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.NE.1)MD4=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.NE.1)MD4=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.NE.1)MD4=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.NE.1)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.NE.1)MD4=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.NE.1)MD4=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.NE.1)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.NE.1)MD4=1
      CALL DVIS4C(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,XQTAU,
     1NN1,MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,
     2NNTAU,MMTAU,X0,Y0,Z0,W0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,
     3VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DVIS4C(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,
     1XQTAU,NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NNTAU,
     2MMTAU,X0,Y0,Z0,W0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,VP,VPR,
     3VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,21),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,21),
     1VRR(J21,MM4,MM3,MM2,MM1)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION Z(21),T(21)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN3,NN3)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
CCCC  DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(22,MM1),Y0(22,MM2),Z0(22,MM3),W0(22,MM4)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TVIS4C'
          CALL TIMIT(1)
        END IF
      END IF

      IFACTL=JNTFAC(NMODE,ICOUPL,4)
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=JNTFAC(NMODE,ICOUPC,4)
      IF(MOLINC.GT.0)IFACTC=1

      KA=K/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT4=ISTAT(ISTATE,MODE4)
      ITHATM=ISTAT(ISTATE,NSMODE)+1-MOD(KA,2)+INCT
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MOD3=MD3
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.NE.1)MD4=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.NE.1)MD4=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.NE.1)MD4=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.NE.1)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.NE.1)MD4=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.NE.1)MD4=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.NE.1)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.NE.1)MD4=1
      MD=MD1*MD2*MD3*MD4*MDT
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=X00*H1(ITHAT1,M1,2)
        X0(2,M1)=X00*H1(ITHAT1,M1,1)
        X0(3,M1)=X0(2,M1)
        X0(4,M1)=X0(2,M1)
        X0(5,M1)=X0(2,M1)
        IF(.NOT.LINEAR)THEN
          X0(6,M1)=H1(ITHAT1,M1,2)*H1(ITHAT1,M1,2)*MD
        ELSE
          X0(6,M1)=X00*H1(ITHAT1,M1,3)
        END IF
        X0(7,M1)=X0(1,M1)
        X0(8,M1)=X0(1,M1)
        X0(9,M1)=X0(1,M1)
        X0(10,M1)=X0(1,M1)
        X0(11,M1)=X0(2,M1)
        X0(12,M1)=X0(2,M1)
        X0(13,M1)=X0(2,M1)
        X0(14,M1)=X0(2,M1)
        X0(15,M1)=X0(2,M1)
        X0(16,M1)=X0(2,M1)
        X0(17,M1)=X0(2,M1)
        X0(18,M1)=X0(2,M1)
        X0(19,M1)=X0(2,M1)
        X0(20,M1)=X0(2,M1)
        X0(21,M1)=X0(2,M1)
        X0(22,M1)=H1(ITHAT1,M1,1)*H1(ITHAT1,M1,1)*FACTRC*MD
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y0(1,M2)
        Y0(4,M2)=Y0(1,M2)
        Y0(5,M2)=Y0(1,M2)
        Y0(6,M2)=Y0(1,M2)
        Y0(7,M2)=Y0(2,M2)
        Y0(8,M2)=Y0(1,M2)
        Y0(9,M2)=Y0(1,M2)
        Y0(10,M2)=Y0(1,M2)
        IF(.NOT.LINEAR)THEN
          Y0(11,M2)=H2(ITHAT2,M2,2)*H2(ITHAT2,M2,2)
        ELSE
          Y0(11,M2)=Y00*H2(ITHAT2,M2,3)
        END IF
        Y0(12,M2)=Y0(2,M2)
        Y0(13,M2)=Y0(2,M2)
        Y0(14,M2)=Y0(2,M2)
        Y0(15,M2)=Y0(1,M2)
        Y0(16,M2)=Y0(1,M2)
        Y0(17,M2)=Y0(1,M2)
        Y0(18,M2)=Y0(1,M2)
        Y0(19,M2)=Y0(1,M2)
        Y0(20,M2)=Y0(1,M2)
        Y0(21,M2)=Y0(1,M2)
        Y0(22,M2)=H2(ITHAT2,M2,1)*H2(ITHAT2,M2,1)
      END DO
CCCC  DO M4=1,MM4/MD4
      DO M4=1,MM4
        W00=H4(ITHAT4,M4,1)
        W0(1,M4)=W00*H4(ITHAT4,M4,1)
        W0(2,M4)=W0(1,M4)
        W0(3,M4)=W0(1,M4)
        W0(4,M4)=W00*H4(ITHAT4,M4,2)
        W0(5,M4)=W0(1,M4)
        W0(6,M4)=W0(1,M4)
        W0(7,M4)=W0(1,M4)
        W0(8,M4)=W0(1,M4)
        W0(9,M4)=W0(4,M4)
        W0(10,M4)=W0(1,M4)
        W0(11,M4)=W0(1,M4)
        W0(12,M4)=W0(1,M4)
        W0(13,M4)=W0(4,M4)
        W0(14,M4)=W0(1,M4)
        W0(15,M4)=W0(1,M4)
        W0(16,M4)=W0(4,M4)
        W0(17,M4)=W0(1,M4)
        IF(.NOT.LINEAR)THEN
          W0(18,M4)=H4(ITHAT4,M4,2)*H4(ITHAT4,M4,2)
        ELSE
          W0(18,M4)=W00*H4(ITHAT4,M4,3)
        END IF
        W0(19,M4)=W0(4,M4)
        W0(20,M4)=W0(1,M4)
        W0(21,M4)=W0(1,M4)
        W0(22,M4)=H4(ITHAT4,M4,1)*H4(ITHAT4,M4,1)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**LOOP ROUND TAU
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
CCCC      QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
CCCC      DELTA(4)=+QTAU
CCCC      DELTA(5)=-QTAU
        END IF

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.4)READ(64)VR
          IF(ICOUPC.GE.4)READ(84)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.4)READ(64)VRR
          IF(ICOUPC.GE.4)READ(84)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(74)VP
        ELSE
          READ(74)VPR
        END IF

C***********************************************************

        IF(.NOT.LINEAR)THEN
          T00=HTAU(ITHATM,MTAU,1,lMAX)*DSTAU(ITAU)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T(1)
          T(4)=T(1)
          T(5)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(6)=T(1)
          T(7)=T(1)
          T(8)=T(1)
          T(9)=T(1)
          T(9)=T(1)
          T(10)=T(5)
          T(11)=T(1)
          T(12)=T(1)
          T(13)=T(1)
          T(14)=T(5)
          T(15)=T(1)
          T(16)=T(1)
          T(17)=T(5)
          T(18)=T(1)
          T(19)=T(5)
          T(20)=HTAU(ITHATM,MTAU,2,LMAX)*HTAU(ITHATM,MTAU,2,LMAX)*
     1    DSTAU(ITAU)
          T(21)=T(1)
CCCC      DO M3=1,MM3/MD3
          DO M3=1,MM3
            DO I=1,21
              Z(I)=0
            END DO
C**INTEGRATE OVER SINGLE STATES (START)
            IF(JCOUPL.GT.0)THEN
CCCC          DO M1=1,MM1/MD1
CCCC            DO M2=1,MM2/MD2
CCCC              DO M4=1,MM4/MD4
              DO M1=1,MM1
                DO M2=1,MM2
                  DO M4=1,MM4
                    IF(ICOUPC.GE.4)THEN
C**NO WATSON TERM IF RPH
                      DO I=1,21
                        Z(I)=Z(I)+T(I)*X0(I,M1)*Y0(I,M2)*W0(I,M4)*
     1                  VC(M4,M3,M2,M1,I)*IFACTC
                      END DO
                      Z(21)=Z(21)+T(21)*X0(22,M1)*Y0(22,M2)*W0(22,M4)*
     1                VR(K,M4,M3,M2,M1)
                    END IF
                    Z(21)=Z(21)+T(21)*X0(21,M1)*Y0(21,M2)*W0(21,M4)*
     1              VP(M4,M3,M2,M1)*IFACTL
                  END DO
                END DO
              END DO
            ELSE
CCCC          DO M1=1,MM1/MD1
CCCC            DO M2=1,MM2/MD2
CCCC              DO M4=1,MM4/MD4
              DO M1=1,MM1
                DO M2=1,MM2
                  DO M4=1,MM4
                    IF(ICOUPC.GE.4)THEN
C**NO WATSON TERM IF RPH
                      DO I=1,21
                        Z(I)=Z(I)+T(I)*X0(I,M1)*Y0(I,M2)*W0(I,M4)*
     1                  VCR(M4,M3,M2,M1,I)*IFACTC
                      END DO
                      Z(21)=Z(21)+T(21)*X0(22,M1)*Y0(22,M2)*W0(22,M4)*
     1                VRR(K,M4,M3,M2,M1)
                    END IF
                    Z(21)=Z(21)+T(21)*X0(21,M1)*Y0(21,M2)*W0(21,M4)*
     1              VPR(M4,M3,M2,M1)*IFACTL
                  END DO
                END DO
              END DO
            END IF
C**INTEGRATE OVER SINGLE STATES (END)
            DO IRHS=1,NN3
              ILINE=MOD3-MOD(IRHS,MOD3)
              X1=H3(IRHS,M3,1)*(2*Z(1)+2*Z(2)+2*Z(4)+2*Z(5)+Z(6)+
     1                              2*Z(7)+2*Z(9)+2*Z(10)+Z(11)+
     2                              2*Z(13)+2*Z(14)+Z(18)+2*Z(19)+
     3                              Z(20)+Z(21))
     4              +H3(IRHS,M3,2)*(Z(3)+Z(8)+Z(12)+Z(16)+Z(17))
              X2=H3(IRHS,M3,1)*(Z(3)+Z(8)+Z(12)+Z(16)+Z(17))+
     1               H3(IRHS,M3,2)*Z(15)
              DO ILHS=ILINE,IRHS,MOD3
                Y1=H3(ILHS,M3,1)
                Y2=H3(ILHS,M3,2)
                XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*X1+Y2*X2
              END DO
            END DO
          END DO
        ELSE
          T00=HTAU(ITHATM,MTAU,1,LMAX)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T(1)
          T(4)=T(1)
          T(5)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(6)=T(1)
          T(7)=T(1)
          T(8)=T(1)
          T(9)=T(1)
          T(9)=T(1)
          T(10)=T(5)
          T(11)=T(1)
          T(12)=T(1)
          T(13)=T(1)
          T(14)=T(5)
          T(15)=T(1)
          T(16)=T(1)
          T(17)=T(5)
          T(18)=T(1)
          T(19)=T(5)
          T(20)=T00*HTAU(ITHATM,MTAU,3,LMAX)
          T(21)=T(1)
CCCC      DO M3=1,MM3/MD3
          DO M3=1,MM3
            DO I=1,21
              Z(I)=0
            END DO
C**INTEGRATE OVER SINGLE STATES (START)
            IF(JCOUPL.GT.0)THEN
CCCC          DO M1=1,MM1/MD1
CCCC            DO M2=1,MM2/MD2
CCCC              DO M4=1,MM4/MD4
              DO M1=1,MM1
                DO M2=1,MM2
                  DO M4=1,MM4
                    IF(ICOUPC.GE.4)THEN
C**(21) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                      DO I=1,20
                        Z(I)=Z(I)-T(I)*X0(I,M1)*Y0(I,M2)*W0(I,M4)*
     1                  VC(M4,M3,M2,M1,I)*IFACTC
                      END DO
                      Z(21)=Z(21)+T(21)*X0(22,M1)*Y0(22,M2)*W0(22,M4)*
     1                VR(K,M4,M3,M2,M1)
                    END IF
                    Z(21)=Z(21)+T(21)*X0(21,M1)*Y0(21,M2)*W0(21,M4)*
     1              VP(M4,M3,M2,M1)*IFACTL
                  END DO
                END DO
              END DO
            ELSE
CCCC          DO M1=1,MM1/MD1
CCCC            DO M2=1,MM2/MD2
CCCC              DO M4=1,MM4/MD4
              DO M1=1,MM1
                DO M2=1,MM2
                  DO M4=1,MM4
                    IF(ICOUPC.GE.4)THEN
C**(21) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                      DO I=1,20
                        Z(I)=Z(I)-T(I)*X0(I,M1)*Y0(I,M2)*W0(I,M4)*
     1                  VCR(M4,M3,M2,M1,I)*IFACTC
                      END DO
                      Z(21)=Z(21)+T(21)*X0(22,M1)*Y0(22,M2)*W0(22,M4)*
     1                VRR(K,M4,M3,M2,M1)
                    END IF
                    Z(21)=Z(21)+T(21)*X0(21,M1)*Y0(21,M2)*W0(21,M4)*
     1              VPR(M4,M3,M2,M1)*IFACTL
                  END DO
                END DO
              END DO
            END IF
C**INTEGRATE OVER SINGLE STATES (END)
            DO IRHS=1,NN3
              ILINE=MOD3-MOD(IRHS,MOD3)
              X1=H3(IRHS,M3,1)*(Z(1)+Z(2)+Z(4)+Z(5)+Z(6)+
     1                              2*Z(7)+2*Z(9)+2*Z(10)+Z(11)+
     2                              2*Z(13)+2*Z(14)+Z(18)+2*Z(19)+
     3                              Z(20)+Z(21))
              X2=H3(IRHS,M3,2)*(Z(3)+2*Z(8)+2*Z(12)+2*Z(16)+2*Z(17))
              X3=H3(IRHS,M3,3)*Z(15)
              DO ILHS=ILINE,IRHS,MOD3
                Y1=H3(ILHS,M3,1)
                XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*(X1+X2+X3)
              END DO
            END DO
          END DO
        END IF
      END DO
      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM4A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TVVS4C(ISTAT,NSTAT,NN3,HTAU,XQTAU,NNTAU,MMTAU,XK,
     1ISTATE,MODE1,MODE2,MODE3,MODE4,KROT,MODINT,XKAN,MAXQU,MAXPOW,
     2NAMODE,NP4,CP4,JP4,VP4,NTOT4,MAX4,INDK,INDL,INDN,IND,MDTAU)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION MODINT(NAMODE)
      DIMENSION ISTAT(NSTAT,NAMODE),XK(NN3,NN3)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION NP4(NTOT4),CP4(MAX4,MDTAU,NTOT4),JP4(MAX4,4,NTOT4),
     1VP4(MAX4,NTOT4)
      DIMENSION INDK(1),INDL(1),INDN(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,NAMODE)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TVVS4C'
          CALL TIMIT(1)
        END IF
      END IF

      IND4=INDN(MODE1)+INDL(MODE2)+INDK(MODE3)+MODE4

      KA=KROT/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT4=ISTAT(ISTATE,MODE4)
      ITHATM=ISTAT(ISTATE,NSMODE)+1-MOD(KA,2)+INCT
      MOD3=MODINT(MODE3)
      MDT=MODINT(NSMODE)

      IF(IND.EQ.0)THEN
        READ(24)NFIT
        NP4(IND4)=NFIT
        DO I=1,NFIT
          READ(24)JP4(I,1,IND4),JP4(I,2,IND4),JP4(I,3,IND4),
     1    JP4(I,4,IND4)
        END DO
        DO MTAU=1,MDTAU
          READ(24)(CP4(I,MTAU,IND4),I=1,NFIT)
        END DO

C********************************
C**   GET PARTIAL INTEGRAL
C********************************
        DO I=1,NFIT
          VP4(I,IND4)=0
        END DO
        ITAU=INIT-INCTAU
C**START TAU LOOP
        DO MTAU=1,MMTAU/MDT
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
          T00=HTAU(ITHATM,MTAU,1,LMAX)*DSTAU(ITAU)
          T=T00*HTAU(ITHATM,MTAU,1,LMAX)
          DO I=1,NFIT
            VP4(I,IND4)=VP4(I,IND4)+CP4(I,MTAU,IND4)*T
          END DO
        END DO
      ELSE
        NFIT=NP4(IND4)
      END IF

C     DO IRHS=1,NN3
C       ILINE=MOD3-MOD(IRHS,MOD3)
C       DO ILHS=ILINE,IRHS,MOD3
C         XT=0
C         DO I=1,NFIT
C           K=JP4(I,1)+1
C           L=JP4(I,2)+1
C           N=JP4(I,3)+1
C           M=JP4(I,4)+1
C           X=XKAN(ITHAT1,ITHAT1,K,MODE1)*
C    2      XKAN(ITHAT2,ITHAT2,L,MODE2)*XKAN(ITHAT4,ITHAT4,M,MODE4)*
C    3      XKAN(ILHS,IRHS,N,MODE3)
C           XT=XT+VP4(I)*X
C         END DO
C**POTENTIAL ONLY
C         XK(ILHS,IRHS)=XK(ILHS,IRHS)+XT
C       END DO
C     END DO

      DO I=1,NFIT
        K=JP4(I,1,IND4)+1
        L=JP4(I,2,IND4)+1
        N=JP4(I,3,IND4)+1
        M=JP4(I,4,IND4)+1
        X=XKAN(ITHAT1,ITHAT1,K,MODE1)*XKAN(ITHAT2,ITHAT2,L,MODE2)*
     1  XKAN(ITHAT4,ITHAT4,M,MODE4)*VP4(I,IND4)
        DO IRHS=1,NN3
          ILINE=MOD3-MOD(IRHS,MOD3)
          DO ILHS=ILINE,IRHS,MOD3
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+X*XKAN(ILHS,IRHS,N,MODE3)
          END DO
        END DO
      END DO

      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM4A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TVIS4D(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,
     1XQTAU,NN1,MM1,NN2,MM2,NN3,MM3,NN4,MM4,NNTAU,MMTAU,X0,Y0,Z0,W0,XK,
     2NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,VP,VPR,VC,VCR,VR,VRR,J21,K,
     3MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,21),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,21),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION W(21),T(21)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN4,NN4)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(22,MM1),Y0(22,MM2),Z0(22,MM3),W0(22,MM4)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MOD4=MD4
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.NE.1)MD4=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.NE.1)MD4=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.NE.1)MD4=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.NE.1)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.NE.1)MD4=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.NE.1)MD4=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.NE.1)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.NE.1)MD4=1
      CALL DVIS4D(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,XQTAU,
     1NN1,MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,
     2NNTAU,MMTAU,X0,Y0,Z0,W0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,
     3VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DVIS4D(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,
     1XQTAU,NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NNTAU,
     2MMTAU,X0,Y0,Z0,W0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,VP,VPR,
     3VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,21),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,21),
     1VRR(J21,MM4,MM3,MM2,MM1)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION W(21),T(21)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN4,NN4)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
CCCC  DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(22,MM1),Y0(22,MM2),Z0(22,MM3),W0(22,MM4)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TVIS4D'
          CALL TIMIT(1)
        END IF
      END IF

      IFACTL=JNTFAC(NMODE,ICOUPL,4)
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=JNTFAC(NMODE,ICOUPC,4)
      IF(MOLINC.GT.0)IFACTC=1

      KA=K/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHATM=ISTAT(ISTATE,NSMODE)+1-MOD(KA,2)+INCT
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MOD4=MD4
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.NE.1)MD4=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.NE.1)MD4=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.NE.1)MD4=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.NE.1)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.NE.1)MD4=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.NE.1)MD4=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.NE.1)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.NE.1)MD4=1
      MD=MD1*MD2*MD3*MD4*MDT
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=X00*H1(ITHAT1,M1,2)
        X0(2,M1)=X00*H1(ITHAT1,M1,1)
        X0(3,M1)=X0(2,M1)
        X0(4,M1)=X0(2,M1)
        X0(5,M1)=X0(2,M1)
        IF(.NOT.LINEAR)THEN
          X0(6,M1)=H1(ITHAT1,M1,2)*H1(ITHAT1,M1,2)*MD
        ELSE
          X0(6,M1)=X00*H1(ITHAT1,M1,3)
        END IF
        X0(7,M1)=X0(1,M1)
        X0(8,M1)=X0(1,M1)
        X0(9,M1)=X0(1,M1)
        X0(10,M1)=X0(1,M1)
        X0(11,M1)=X0(2,M1)
        X0(12,M1)=X0(2,M1)
        X0(13,M1)=X0(2,M1)
        X0(14,M1)=X0(2,M1)
        X0(15,M1)=X0(2,M1)
        X0(16,M1)=X0(2,M1)
        X0(17,M1)=X0(2,M1)
        X0(18,M1)=X0(2,M1)
        X0(19,M1)=X0(2,M1)
        X0(20,M1)=X0(2,M1)
        X0(21,M1)=X0(2,M1)
        X0(22,M1)=H1(ITHAT1,M1,1)*H1(ITHAT1,M1,1)*FACTRC*MD
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y0(1,M2)
        Y0(4,M2)=Y0(1,M2)
        Y0(5,M2)=Y0(1,M2)
        Y0(6,M2)=Y0(1,M2)
        Y0(7,M2)=Y0(2,M2)
        Y0(8,M2)=Y0(1,M2)
        Y0(9,M2)=Y0(1,M2)
        Y0(10,M2)=Y0(1,M2)
        IF(.NOT.LINEAR)THEN
          Y0(11,M2)=H2(ITHAT2,M2,2)*H2(ITHAT2,M2,2)
        ELSE
          Y0(11,M2)=Y00*H2(ITHAT2,M2,3)
        END IF
        Y0(12,M2)=Y0(2,M2)
        Y0(13,M2)=Y0(2,M2)
        Y0(14,M2)=Y0(2,M2)
        Y0(15,M2)=Y0(1,M2)
        Y0(16,M2)=Y0(1,M2)
        Y0(17,M2)=Y0(1,M2)
        Y0(18,M2)=Y0(1,M2)
        Y0(19,M2)=Y0(1,M2)
        Y0(20,M2)=Y0(1,M2)
        Y0(21,M2)=Y0(1,M2)
        Y0(22,M2)=H2(ITHAT2,M2,1)*H2(ITHAT2,M2,1)
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        Z00=H3(ITHAT3,M3,1)
        Z0(1,M3)=Z00*H3(ITHAT3,M3,1)
        Z0(2,M3)=Z0(1,M3)
        Z0(3,M3)=Z00*H3(ITHAT3,M3,2)
        Z0(4,M3)=Z0(1,M3)
        Z0(5,M3)=Z0(1,M3)
        Z0(6,M3)=Z0(1,M3)
        Z0(7,M3)=Z0(1,M3)
        Z0(8,M3)=Z0(3,M3)
        Z0(9,M3)=Z0(1,M3)
        Z0(10,M3)=Z0(1,M3)
        Z0(11,M3)=Z0(1,M3)
        Z0(12,M3)=Z0(3,M3)
        Z0(13,M3)=Z0(1,M3)
        Z0(14,M3)=Z0(1,M3)
        IF(.NOT.LINEAR)THEN
          Z0(15,M3)=H3(ITHAT3,M3,2)*H3(ITHAT3,M3,2)
        ELSE
          Z0(15,M3)=Z00*H3(ITHAT3,M3,3)
        END IF
        Z0(16,M3)=Z0(3,M3)
        Z0(17,M3)=Z0(3,M3)
        Z0(18,M3)=Z0(1,M3)
        Z0(19,M3)=Z0(1,M3)
        Z0(20,M3)=Z0(1,M3)
        Z0(21,M3)=Z0(1,M3)
        Z0(22,M3)=H3(ITHAT3,M3,1)*H3(ITHAT3,M3,1)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**LOOP ROUND TAU
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
CCCC      QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
CCCC      DELTA(4)=+QTAU
CCCC      DELTA(5)=-QTAU
        END IF

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.4)READ(64)VR
          IF(ICOUPC.GE.4)READ(84)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.4)READ(64)VRR
          IF(ICOUPC.GE.4)READ(84)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(74)VP
        ELSE
          READ(74)VPR
        END IF

C***********************************************************

        IF(.NOT.LINEAR)THEN
          T00=HTAU(ITHATM,MTAU,1,LMAX)*DSTAU(ITAU)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T(1)
          T(4)=T(1)
          T(5)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(6)=T(1)
          T(7)=T(1)
          T(8)=T(1)
          T(9)=T(1)
          T(9)=T(1)
          T(10)=T(5)
          T(11)=T(1)
          T(12)=T(1)
          T(13)=T(1)
          T(14)=T(5)
          T(15)=T(1)
          T(16)=T(1)
          T(17)=T(5)
          T(18)=T(1)
          T(19)=T(5)
          T(20)=HTAU(ITHATM,MTAU,2,LMAX)*HTAU(ITHATM,MTAU,2,LMAX)*
     1    DSTAU(ITAU)
          T(21)=T(1)
CCCC      DO M4=1,MM4/MD4
          DO M4=1,MM4
            DO I=1,21
              W(I)=0
            END DO
C**INTEGRATE OVER SINGLE STATES (START)
            IF(JCOUPL.GT.0)THEN
CCCC          DO M1=1,MM1/MD1
CCCC            DO M2=1,MM2/MD2
CCCC              DO M3=1,MM3/MD3
              DO M1=1,MM1
                DO M2=1,MM2
                  DO M3=1,MM3
                    IF(ICOUPC.GE.4)THEN
C**NO WATSON TERM IF RPH
                      DO I=1,21
                        W(I)=W(I)+T(I)*X0(I,M1)*Y0(I,M2)*Z0(I,M3)*
     1                  VC(M4,M3,M2,M1,I)*IFACTC
                      END DO
                      W(21)=W(21)+T(21)*X0(22,M1)*Y0(22,M2)*Z0(22,M3)*
     1                VR(K,M4,M3,M2,M1)
                    END IF
                    W(21)=W(21)+T(21)*X0(21,M1)*Y0(21,M2)*Z0(21,M3)*
     1              VP(M4,M3,M2,M1)*IFACTL
                  END DO
                END DO
              END DO
            ELSE
CCCC          DO M1=1,MM1/MD1
CCCC            DO M2=1,MM2/MD2
CCCC              DO M3=1,MM3/MD3
              DO M1=1,MM1
                DO M2=1,MM2
                  DO M3=1,MM3
                    IF(ICOUPC.GE.4)THEN
C**NO WATSON TERM IF RPH
                      DO I=1,21
                        W(I)=W(I)+T(I)*X0(I,M1)*Y0(I,M2)*Z0(I,M3)*
     1                  VCR(M4,M3,M2,M1,I)*IFACTC
                      END DO
                      W(21)=W(21)+T(21)*X0(22,M1)*Y0(22,M2)*Z0(22,M3)*
     1                VRR(K,M4,M3,M2,M1)
                    END IF
                    W(21)=W(21)+T(21)*X0(21,M1)*Y0(21,M2)*Z0(21,M3)*
     1              VPR(M4,M3,M2,M1)*IFACTL
                  END DO
                END DO
              END DO
            END IF
C**INTEGRATE OVER SINGLE STATES (END)
            DO IRHS=1,NN4
              ILINE=MOD4-MOD(IRHS,MOD4)
              X1=H4(IRHS,M4,1)*(2*W(1)+2*W(2)+2*W(3)+2*W(5)+W(6)+
     1                              2*W(7)+2*W(8)+2*W(10)+W(11)+
     2                              2*W(12)+2*W(14)+W(15)+2*W(17)+W(20)+
     3                              W(21))
     4              +H4(IRHS,M4,2)*(W(4)+W(9)+W(13)+W(16)+W(19))
              X2=H4(IRHS,M4,1)*(W(4)+W(9)+W(13)+W(16)+W(19))+
     1               H4(IRHS,M4,2)*W(18)
              DO ILHS=ILINE,IRHS,MOD4
                Y1=H4(ILHS,M4,1)
                Y2=H4(ILHS,M4,2)
                XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*X1+Y2*X2
              END DO
            END DO
          END DO
        ELSE
          T00=HTAU(ITHATM,MTAU,1,LMAX)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T(1)
          T(4)=T(1)
          T(5)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(6)=T(1)
          T(7)=T(1)
          T(8)=T(1)
          T(9)=T(1)
          T(9)=T(1)
          T(10)=T(5)
          T(11)=T(1)
          T(12)=T(1)
          T(13)=T(1)
          T(14)=T(5)
          T(15)=T(1)
          T(16)=T(1)
          T(17)=T(5)
          T(18)=T(1)
          T(19)=T(5)
          T(20)=T00*HTAU(ITHATM,MTAU,3,LMAX)
          T(21)=T(1)
CCCC      DO M4=1,MM4/MD4
          DO M4=1,MM4
            DO I=1,21
              W(I)=0
            END DO
C**INTEGRATE OVER SINGLE STATES (START)
            IF(JCOUPL.GT.0)THEN
CCCC          DO M1=1,MM1/MD1
CCCC            DO M2=1,MM2/MD2
CCCC              DO M3=1,MM3/MD3
              DO M1=1,MM1
                DO M2=1,MM2
                  DO M3=1,MM3
                    IF(ICOUPC.GE.4)THEN
C**(21) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                      DO I=1,20
                        W(I)=W(I)-T(I)*X0(I,M1)*Y0(I,M2)*Z0(I,M3)*
     1                  VC(M4,M3,M2,M1,I)*IFACTC
                      END DO
                      W(21)=W(21)+T(21)*X0(22,M1)*Y0(22,M2)*Z0(22,M3)*
     1                VR(K,M4,M3,M2,M1)
                    END IF
                    W(21)=W(21)+T(21)*X0(21,M1)*Y0(21,M2)*Z0(21,M3)*
     1              VP(M4,M3,M2,M1)*IFACTL
                  END DO
                END DO
              END DO
            ELSE
CCCC          DO M1=1,MM1/MD1
CCCC            DO M2=1,MM2/MD2
CCCC              DO M3=1,MM3/MD3
              DO M1=1,MM1
                DO M2=1,MM2
                  DO M3=1,MM3
                    IF(ICOUPC.GE.4)THEN
C**(21) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                      DO I=1,20
                        W(I)=W(I)-T(I)*X0(I,M1)*Y0(I,M2)*Z0(I,M3)*
     1                  VCR(M4,M3,M2,M1,I)*IFACTC
                      END DO
                      W(21)=W(21)+T(21)*X0(22,M1)*Y0(22,M2)*Z0(22,M3)*
     1                VRR(K,M4,M3,M2,M1)
                    END IF
                    W(21)=W(21)+T(21)*X0(21,M1)*Y0(21,M2)*Z0(21,M3)*
     1              VPR(M4,M3,M2,M1)*IFACTL
                  END DO
                END DO
              END DO
            END IF
C**INTEGRATE OVER SINGLE STATES (END)
            DO IRHS=1,NN4
              ILINE=MOD4-MOD(IRHS,MOD4)
              X1=H4(IRHS,M4,1)*(W(1)+W(2)+W(3)+W(5)+W(6)+
     1                              2*W(7)+2*W(8)+2*W(10)+W(11)+
     2                              2*W(12)+2*W(14)+W(15)+2*W(17)+W(20)+
     3                              W(21))
              X2=H4(IRHS,M4,2)*(W(4)+2*W(9)+2*W(13)+2*W(16)+2*W(19))
              X3=H4(IRHS,M4,3)*W(18)
              DO ILHS=ILINE,IRHS,MOD4
                Y1=H4(ILHS,M4,1)
                XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*(X1+X2+X3)
              END DO
            END DO
          END DO
        END IF
      END DO
      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM4A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TVVS4D(ISTAT,NSTAT,NN4,HTAU,XQTAU,NNTAU,MMTAU,XK,
     1ISTATE,MODE1,MODE2,MODE3,MODE4,KROT,MODINT,XKAN,MAXQU,MAXPOW,
     2NAMODE,NP4,CP4,JP4,VP4,NTOT4,MAX4,INDK,INDL,INDN,IND,MDTAU)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION MODINT(NAMODE)
      DIMENSION ISTAT(NSTAT,NAMODE),XK(NN4,NN4)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION NP4(NTOT4),CP4(MAX4,MDTAU,NTOT4),JP4(MAX4,4,NTOT4),
     1VP4(MAX4,NTOT4)
      DIMENSION INDK(1),INDL(1),INDN(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,NAMODE)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TVVS4D'
          CALL TIMIT(1)
        END IF
      END IF

      IND4=INDN(MODE1)+INDL(MODE2)+INDK(MODE3)+MODE4

      KA=KROT/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHATM=ISTAT(ISTATE,NSMODE)+1-MOD(KA,2)+INCT
      MOD4=MODINT(MODE4)
      MDT=MODINT(NSMODE)

      IF(IND.EQ.0)THEN
        READ(24)NFIT
        NP4(IND4)=NFIT
        DO I=1,NFIT
          READ(24)JP4(I,1,IND4),JP4(I,2,IND4),JP4(I,3,IND4),
     1    JP4(I,4,IND4)
        END DO
        DO MTAU=1,MDTAU
          READ(24)(CP4(I,MTAU,IND4),I=1,NFIT)
        END DO

C********************************
C**   GET PARTIAL INTEGRAL
C********************************
        DO I=1,NFIT
          VP4(I,IND4)=0
        END DO
        ITAU=INIT-INCTAU
C**START TAU LOOP
        DO MTAU=1,MMTAU/MDT
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
          T00=HTAU(ITHATM,MTAU,1,LMAX)*DSTAU(ITAU)
          T=T00*HTAU(ITHATM,MTAU,1,LMAX)
          DO I=1,NFIT
            VP4(I,IND4)=VP4(I,IND4)+CP4(I,MTAU,IND4)*T
          END DO
        END DO
      ELSE
        NFIT=NP4(IND4)
      END IF

C     DO IRHS=1,NN4
C       ILINE=MOD4-MOD(IRHS,MOD4)
C       DO ILHS=ILINE,IRHS,MOD4
C         XT=0
C         DO I=1,NFIT
C           K=JP4(I,1)+1
C           L=JP4(I,2)+1
C           N=JP4(I,3)+1
C           M=JP4(I,4)+1
C           X=XKAN(ITHAT1,ITHAT1,K,MODE1)*
C    2      XKAN(ITHAT2,ITHAT2,L,MODE2)*XKAN(ITHAT3,ITHAT3,N,MODE3)*
C    3      XKAN(ILHS,IRHS,M,MODE4)
C           XT=XT+VP4(I)*X
C         END DO
C**POTENTIAL ONLY
C         XK(ILHS,IRHS)=XK(ILHS,IRHS)+XT
C       END DO
C     END DO

      DO I=1,NFIT
        K=JP4(I,1,IND4)+1
        L=JP4(I,2,IND4)+1
        N=JP4(I,3,IND4)+1
        M=JP4(I,4,IND4)+1
        X=XKAN(ITHAT1,ITHAT1,K,MODE1)*XKAN(ITHAT2,ITHAT2,L,MODE2)*
     1  XKAN(ITHAT3,ITHAT3,N,MODE3)*VP4(I,IND4)
        DO IRHS=1,NN4
          ILINE=MOD4-MOD(IRHS,MOD4)
          DO ILHS=ILINE,IRHS,MOD4
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+X*XKAN(ILHS,IRHS,M,MODE4)
          END DO
        END DO
      END DO

      IF(ITIM4A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM4A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TMIS4(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,
     1XQTAU,NN1,MM1,NN2,MM2,NN3,MM3,NN4,MM4,NNTAU,MMTAU,X0,Y0,Z0,W0,XK,
     2KXK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,VP,VPR,VC,VCR,VR,VRR,
     3J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,21),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,21),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION T(21)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(22,MM1),Y0(22,MM2),Z0(22,MM3),W0(22,MM4)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.NE.1)MD4=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.NE.1)MD4=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.NE.1)MD4=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.NE.1)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.NE.1)MD4=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.NE.1)MD4=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.NE.1)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.NE.1)MD4=1
      CALL TDMIS4(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,XQTAU,
     1NN1,MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,
     2NNTAU,MMTAU,X0,Y0,Z0,W0,XK,KXK,NMODE,ISTATE,MODE1,MODE2,MODE3,
     3MODE4,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDMIS4(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,
     1XQTAU,NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NNTAU,
     2MMTAU,X0,Y0,Z0,W0,XK,KXK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,
     3VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,21),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,21),
     1VRR(J21,MM4,MM3,MM2,MM1)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION T(21)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
CCCC  DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(22,MM1),Y0(22,MM2),Z0(22,MM3),W0(22,MM4)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM4B.EQ.1)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TMIS4'
          CALL TIMIT(1)
        END IF
      END IF

      IFACTL=JNTFAC(NMODE,ICOUPL,4)
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=JNTFAC(NMODE,ICOUPC,4)
      IF(MOLINC.GT.0)IFACTC=1

      KA=K/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT4=ISTAT(ISTATE,MODE4)
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.NE.1)MD4=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.NE.1)MD4=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.NE.1)MD4=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.NE.1)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.NE.1)MD4=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.NE.1)MD4=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.NE.1)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.NE.1)MD4=1
      MDTOT=MD1*MD2*MD3*MD4*MDT
      IF(NT.EQ.1)THEN
        MD=1
      ELSE
        MD=2
      END IF

C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MDTOT
        X0(1,M1)=X00*H1(ITHAT1,M1,2)
        X0(2,M1)=X00*H1(ITHAT1,M1,1)
        X0(3,M1)=X0(2,M1)
        X0(4,M1)=X0(2,M1)
        X0(5,M1)=X0(2,M1)
        X0(6,M1)=H1(ITHAT1,M1,2)*H1(ITHAT1,M1,2)*MDTOT
        X0(7,M1)=X0(1,M1)
        X0(8,M1)=X0(1,M1)
        X0(9,M1)=X0(1,M1)
        X0(10,M1)=X0(1,M1)
        X0(11,M1)=X0(2,M1)
        X0(12,M1)=X0(2,M1)
        X0(13,M1)=X0(2,M1)
        X0(14,M1)=X0(2,M1)
        X0(15,M1)=X0(2,M1)
        X0(16,M1)=X0(2,M1)
        X0(17,M1)=X0(2,M1)
        X0(18,M1)=X0(2,M1)
        X0(19,M1)=X0(2,M1)
        X0(20,M1)=X0(2,M1)
        X0(21,M1)=X0(2,M1)
        X0(22,M1)=H1(ITHAT1,M1,1)*H1(ITHAT1,M1,1)*FACTRC*MDTOT
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y0(1,M2)
        Y0(4,M2)=Y0(1,M2)
        Y0(5,M2)=Y0(1,M2)
        Y0(6,M2)=Y0(1,M2)
        Y0(7,M2)=Y0(2,M2)
        Y0(8,M2)=Y0(1,M2)
        Y0(9,M2)=Y0(1,M2)
        Y0(10,M2)=Y0(1,M2)
        Y0(11,M2)=H2(ITHAT2,M2,2)*H2(ITHAT2,M2,2)
        Y0(12,M2)=Y0(2,M2)
        Y0(13,M2)=Y0(2,M2)
        Y0(14,M2)=Y0(2,M2)
        Y0(15,M2)=Y0(1,M2)
        Y0(16,M2)=Y0(1,M2)
        Y0(17,M2)=Y0(1,M2)
        Y0(18,M2)=Y0(1,M2)
        Y0(19,M2)=Y0(1,M2)
        Y0(20,M2)=Y0(1,M2)
        Y0(21,M2)=Y0(1,M2)
        Y0(22,M2)=H2(ITHAT2,M2,1)*H2(ITHAT2,M2,1)
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        Z00=H3(ITHAT3,M3,1)
        Z0(1,M3)=Z00*H3(ITHAT3,M3,1)
        Z0(2,M3)=Z0(1,M3)
        Z0(3,M3)=Z00*H3(ITHAT3,M3,2)
        Z0(4,M3)=Z0(1,M3)
        Z0(5,M3)=Z0(1,M3)
        Z0(6,M3)=Z0(1,M3)
        Z0(7,M3)=Z0(1,M3)
        Z0(8,M3)=Z0(3,M3)
        Z0(9,M3)=Z0(1,M3)
        Z0(10,M3)=Z0(1,M3)
        Z0(11,M3)=Z0(1,M3)
        Z0(12,M3)=Z0(3,M3)
        Z0(13,M3)=Z0(1,M3)
        Z0(14,M3)=Z0(1,M3)
        Z0(15,M3)=H3(ITHAT3,M3,2)*H3(ITHAT3,M3,2)
        Z0(16,M3)=Z0(3,M3)
        Z0(17,M3)=Z0(3,M3)
        Z0(18,M3)=Z0(1,M3)
        Z0(19,M3)=Z0(1,M3)
        Z0(20,M3)=Z0(1,M3)
        Z0(21,M3)=Z0(1,M3)
        Z0(22,M3)=H3(ITHAT3,M3,1)*H3(ITHAT3,M3,1)
      END DO
CCCC  DO M4=1,MM4/MD4
      DO M4=1,MM4
        W00=H4(ITHAT4,M4,1)
        W0(1,M4)=W00*H4(ITHAT4,M4,1)
        W0(2,M4)=W0(1,M4)
        W0(3,M4)=W0(1,M4)
        W0(4,M4)=W00*H4(ITHAT4,M4,2)
        W0(5,M4)=W0(1,M4)
        W0(6,M4)=W0(1,M4)
        W0(7,M4)=W0(1,M4)
        W0(8,M4)=W0(1,M4)
        W0(9,M4)=W0(4,M4)
        W0(10,M4)=W0(1,M4)
        W0(11,M4)=W0(1,M4)
        W0(12,M4)=W0(1,M4)
        W0(13,M4)=W0(4,M4)
        W0(14,M4)=W0(1,M4)
        W0(15,M4)=W0(1,M4)
        W0(16,M4)=W0(4,M4)
        W0(17,M4)=W0(1,M4)
        W0(18,M4)=H4(ITHAT4,M4,2)*H4(ITHAT4,M4,2)
        W0(19,M4)=W0(4,M4)
        W0(20,M4)=W0(1,M4)
        W0(21,M4)=W0(1,M4)
        W0(22,M4)=H4(ITHAT4,M4,1)*H4(ITHAT4,M4,1)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**LOOP ROUND TAU
      ITAU=INIT-INCTAU
      DO MTAU=1,MMTAU/MDT
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.4)READ(64)VR
          IF(ICOUPC.GE.4)READ(84)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.4)READ(64)VRR
          IF(ICOUPC.GE.4)READ(84)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(74)VP
        ELSE
          READ(74)VPR
        END IF

C***********************************************************

        DO I=1,21
          T(I)=0
        END DO
C**INTEGRATE OVER SINGLE STATES (START)
        IF(JCOUPL.GT.0)THEN
CCCC      DO M1=1,MM1/MD1
CCCC        DO M2=1,MM2/MD2
CCCC          DO M3=1,MM3/MD3
CCCC            DO M4=1,MM4/MD4
          DO M1=1,MM1
            DO M2=1,MM2
              DO M3=1,MM3
                DO M4=1,MM4
                  IF(ICOUPC.GE.4)THEN
                    DO I=1,21
                      T(I)=T(I)+X0(I,M1)*Y0(I,M2)*Z0(I,M3)*W0(I,M4)*
     1                VC(M4,M3,M2,M1,I)*IFACTC
                    END DO
                    T(21)=T(21)+X0(22,M1)*Y0(22,M2)*Z0(22,M3)*
     1              W0(22,M4)*VR(K,M4,M3,M2,M1)
                  END IF
                  T(21)=T(21)+X0(21,M1)*Y0(21,M2)*Z0(21,M3)*W0(21,M4)*
     1            VP(M4,M3,M2,M1)*IFACTL
                END DO
              END DO
            END DO
          END DO
        ELSE
CCCC      DO M1=1,MM1/MD1
CCCC        DO M2=1,MM2/MD2
CCCC          DO M3=1,MM3/MD3
CCCC            DO M4=1,MM4/MD4
          DO M1=1,MM1
            DO M2=1,MM2
              DO M3=1,MM3
                DO M4=1,MM4
                  IF(ICOUPC.GE.4)THEN
                    DO I=1,21
                      T(I)=T(I)+X0(I,M1)*Y0(I,M2)*Z0(I,M3)*W0(I,M4)*
     1                VCR(M4,M3,M2,M1,I)*IFACTC
                    END DO
                    T(21)=T(21)+X0(22,M1)*Y0(22,M2)*Z0(22,M3)*
     1              W0(22,M4)*VRR(K,M4,M3,M2,M1)
                  END IF
                  T(21)=T(21)+X0(21,M1)*Y0(21,M2)*Z0(21,M3)*W0(21,M4)*
     1            VPR(M4,M3,M2,M1)*IFACTL
                END DO
              END DO
            END DO
          END DO
        END IF
C**INTEGRATE OVER SINGLE STATES (END)
        DO IRH=1,NNTAU-1+MOD(KA,2)-INCT
          ILINE=MD-MOD(IRH,MD)
          IRHS=IRH+1-MOD(KA,2)+INCT
          X1=(HTAU(IRHS,MTAU,1,LMAX)*(2*T(1)+2*T(2)+2*T(3)+2*T(4)+T(6)+
     1                          2*T(7)+2*T(8)+2*T(9)+T(11)+2*T(12)+
     2                          2*T(13)+T(15)+2*T(16)+T(18)+T(21))
     3         +HTAU(IRHS,MTAU,2,LMAX)*(T(5)+T(10)+T(14)+T(17)+T(19)))*
     4                                                      DSTAU(ITAU)
          X2=(HTAU(IRHS,MTAU,1,LMAX)*(T(5)+T(10)+T(14)+T(17)+T(19))+
     1           HTAU(IRHS,MTAU,2,LMAX)*T(20))*DSTAU(ITAU)
          DO ILH=ILINE,IRH,MD
            ILHS=ILH+1-MOD(KA,2)+INCT
            Y1=HTAU(ILHS,MTAU,1,LMAX)
            Y2=HTAU(ILHS,MTAU,2,LMAX)
            XK(ILH,IRH)=XK(ILH,IRH)+Y1*X1+Y2*X2
          END DO
        END DO
      END DO
      IF(ITIM4B.EQ.1)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM4B=2
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TMVS4(ISTAT,NSTAT,HTAU,XQTAU,NNTAU,MMTAU,XK,KXK,
     1ISTATE,MODE1,MODE2,MODE3,MODE4,KROT,MODINT,XKAN,MAXQU,MAXPOW,
     2NAMODE,NP4,CP4,JP4,VP4,NTOT4,MAX4,INDK,INDL,INDN,IND,MDTAU,T0)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION MODINT(NAMODE)
      DIMENSION ISTAT(NSTAT,NAMODE),XK(KXK,KXK)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION NP4(NTOT4),CP4(MAX4,MDTAU,NTOT4),JP4(MAX4,4,NTOT4),
     1VP4(NNTAU,NNTAU,MAX4)
      DIMENSION INDK(1),INDL(1),INDN(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,NAMODE),T0(NNTAU,NNTAU,MMTAU)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM4B.EQ.1)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TMVS4'
          CALL TIMIT(1)
        END IF
      END IF

      IND4=INDN(MODE1)+INDL(MODE2)+INDK(MODE3)+MODE4

      KA=KROT/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT4=ISTAT(ISTATE,MODE4)
      MDT=MODINT(NSMODE)

      IF(IND.EQ.0)THEN
        READ(24)NFIT
        NP4(IND4)=NFIT
        DO I=1,NFIT
          READ(24)JP4(I,1,IND4),JP4(I,2,IND4),JP4(I,3,IND4),
     1    JP4(I,4,IND4)
        END DO
        DO MTAU=1,MDTAU
          READ(24)(CP4(I,MTAU,IND4),I=1,NFIT)
        END DO

C**FORM RPH INTEGRANDS
        KA=KROT/2
        INCT=MOD(IFLAUD,2)*MOD(KA,2)
        LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
        DO MTAU=1,MMTAU/MDT
          DO NRR=1,NNTAU
            NR=NRR+1-MOD(KA,2)+INCT
            X=HTAU(NR,MTAU,1,LMAX)*MDT
            DO NLL=1,NNTAU
              NL=NLL+1-MOD(KA,2)+INCT
              Y=HTAU(NL,MTAU,1,LMAX)
C**FOR POTENTIAL-ONLY, I36 = 1 ON ENTRY
              T0(NLL,NRR,MTAU)=Y*X
            END DO
          END DO
        END DO
      ELSE
        NFIT=NP4(IND4)
      END IF

C********************************
C**   GET PARTIAL INTEGRAL
C********************************
      DO I=1,NFIT
        DO NRR=1,NNTAU
          DO NLL=1,NNTAU
            VP4(NLL,NRR,I)=0
          END DO
        END DO
      END DO
      ITAU=INIT-INCTAU
C**START TAU LOOP
      DO MTAU=1,MMTAU/MDT
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720
        DO I=1,NFIT
          X=CP4(I,MTAU,IND4)*DSTAU(ITAU)
          DO NRR=1,NNTAU
            DO NLL=1,NNTAU
              VP4(NLL,NRR,I)=VP4(NLL,NRR,I)+X*T0(NLL,NRR,MTAU)
            END DO
          END DO
        END DO
      END DO

C     DO IRH=1,NNTAU-1+MOD(KA,2)
C       ILINE=MDT-MOD(IRH,MDT)
C       IRHS=IRH+1-MOD(KA,2)
C       DO ILH=ILINE,IRH,MDT
C         ILHS=ILH+1-MOD(KA,2)
C         XT=0
C         DO I=1,NFIT
C           K=JP4(I,1)+1
C           L=JP4(I,2)+1
C           N=JP4(I,3)+1
C           M=JP4(I,4)+1
C           X=XKAN(ITHAT1,ITHAT1,K,MODE1)*
C    2      XKAN(ITHAT2,ITHAT2,L,MODE2)*XKAN(ITHAT3,ITHAT3,N,MODE3)*
C    3      XKAN(ITHAT4,ITHAT4,M,MODE4)
C           XT=XT+VP4(ILHS,IRHS,I)*X
C         END DO
C**POTENTIAL ONLY
C         XK(ILH,IRH)=XK(ILH,IRH)+XT
C       END DO
C     END DO

      DO I=1,NFIT
        K=JP4(I,1,IND4)+1
        L=JP4(I,2,IND4)+1
        N=JP4(I,3,IND4)+1
        M=JP4(I,4,IND4)+1
        X=XKAN(ITHAT1,ITHAT1,K,MODE1)*XKAN(ITHAT2,ITHAT2,L,MODE2)*
     1  XKAN(ITHAT3,ITHAT3,N,MODE3)*XKAN(ITHAT4,ITHAT4,M,MODE4)
        DO IRH=1,NNTAU-1+MOD(KA,2)-INCT
CC        ILINE=MDT-MOD(IRH,MDT)+INCT ???
          ILINE=2-MOD(IRH,2)
          IRHS=IRH+1-MOD(KA,2)+INCT
C         DO ILH=1,IRH
CC        DO ILH=ILINE,IRH,MDT
          DO ILH=ILINE,IRH,2
            ILHS=ILH+1-MOD(KA,2)+INCT
            XK(ILH,IRH)=XK(ILH,IRH)+X*VP4(ILHS,IRHS,I)
          END DO
        END DO
      END DO

      IF(ITIM4B.EQ.1)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM4B=2
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TVAT4(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,MODE3,
     1MODE4,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,XQTAU,NN1,MM1,NN2,MM2,NN3,
     2MM3,NN4,MM4,NNTAU,MMTAU,X0,Y0,Z0,W0,XK,KXK,VP,VPR,VC,VCR,VR,VRR,
     3J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,21),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,21),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION T(21),TTT(21)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(22,MM1),Y0(22,MM2),Z0(22,MM3),W0(22,MM4)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.NE.1)MD4=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.NE.1)MD4=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.NE.1)MD4=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.NE.1)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.NE.1)MD4=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.NE.1)MD4=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.NE.1)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.NE.1)MD4=1
      CALL TDVAT4(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,H1,
     1XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,XQTAU,NN1,MM1,MM1/MD1,NN2,MM2,
     2MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,NNTAU,MMTAU,X0,Y0,Z0,W0,
     3XK,KXK,VP,VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDVAT4(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,MODE3,
     1MODE4,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,XQTAU,NN1,MH1,MM1,NN2,MH2,
     2MM2,NN3,MH3,MM3,NN4,MH4,MM4,NNTAU,MMTAU,X0,Y0,Z0,W0,XK,KXK,VP,
     3VPR,VC,VCR,VR,VRR,J21,K,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,21),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,21),
     1VRR(J21,MM4,MM3,MM2,MM1)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION T(21),TTT(21)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
CCCC  DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
CCCC  DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION X0(22,MM1),Y0(22,MM2),Z0(22,MM3),W0(22,MM4)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM4B.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TVAT4'
          CALL TIMIT(1)
        END IF
      END IF

      IFACTL=JNTFAC(NMODE,ICOUPL,4)
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=JNTFAC(NMODE,ICOUPC,4)
      IF(MOLINC.GT.0)IFACTC=1

      KA=K/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      TERM=0
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT4=ISTAT(ISTATE,MODE4)
      ITHATM=ISTAT(ISTATE,NSMODE)+1-MOD(KA,2)+INCT
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.NE.1)MD4=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.NE.1)MD4=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.NE.1)MD4=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.NE.1)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.NE.1)MD4=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.NE.1)MD4=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.NE.1)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.NE.1)MD4=1
      MD=MD1*MD2*MD3*MD4*MDT
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X00=H1(ITHAT1,M1,1)*MD
        X0(1,M1)=X00*H1(ITHAT1,M1,2)
        X0(2,M1)=X00*H1(ITHAT1,M1,1)
        X0(3,M1)=X0(2,M1)
        X0(4,M1)=X0(2,M1)
        X0(5,M1)=X0(2,M1)
        IF(.NOT.LINEAR)THEN
          X0(6,M1)=H1(ITHAT1,M1,2)*H1(ITHAT1,M1,2)*MD
        ELSE
          X0(6,M1)=X00*H1(ITHAT1,M1,3)
        END IF
        X0(7,M1)=X0(1,M1)
        X0(8,M1)=X0(1,M1)
        X0(9,M1)=X0(1,M1)
        X0(10,M1)=X0(1,M1)
        X0(11,M1)=X0(2,M1)
        X0(12,M1)=X0(2,M1)
        X0(13,M1)=X0(2,M1)
        X0(14,M1)=X0(2,M1)
        X0(15,M1)=X0(2,M1)
        X0(16,M1)=X0(2,M1)
        X0(17,M1)=X0(2,M1)
        X0(18,M1)=X0(2,M1)
        X0(19,M1)=X0(2,M1)
        X0(20,M1)=X0(2,M1)
        X0(21,M1)=X0(2,M1)
        X0(22,M1)=H1(ITHAT1,M1,1)*H1(ITHAT1,M1,1)*FACTRC*MD
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        Y00=H2(ITHAT2,M2,1)
        Y0(1,M2)=Y00*H2(ITHAT2,M2,1)
        Y0(2,M2)=Y00*H2(ITHAT2,M2,2)
        Y0(3,M2)=Y0(1,M2)
        Y0(4,M2)=Y0(1,M2)
        Y0(5,M2)=Y0(1,M2)
        Y0(6,M2)=Y0(1,M2)
        Y0(7,M2)=Y0(2,M2)
        Y0(8,M2)=Y0(1,M2)
        Y0(9,M2)=Y0(1,M2)
        Y0(10,M2)=Y0(1,M2)
        IF(.NOT.LINEAR)THEN
          Y0(11,M2)=H2(ITHAT2,M2,2)*H2(ITHAT2,M2,2)
        ELSE
          Y0(11,M2)=Y00*H2(ITHAT2,M2,3)
        END IF
        Y0(12,M2)=Y0(2,M2)
        Y0(13,M2)=Y0(2,M2)
        Y0(14,M2)=Y0(2,M2)
        Y0(15,M2)=Y0(1,M2)
        Y0(16,M2)=Y0(1,M2)
        Y0(17,M2)=Y0(1,M2)
        Y0(18,M2)=Y0(1,M2)
        Y0(19,M2)=Y0(1,M2)
        Y0(20,M2)=Y0(1,M2)
        Y0(21,M2)=Y0(1,M2)
        Y0(22,M2)=H2(ITHAT2,M2,1)*H2(ITHAT2,M2,1)
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        Z00=H3(ITHAT3,M3,1)
        Z0(1,M3)=Z00*H3(ITHAT3,M3,1)
        Z0(2,M3)=Z0(1,M3)
        Z0(3,M3)=Z00*H3(ITHAT3,M3,2)
        Z0(4,M3)=Z0(1,M3)
        Z0(5,M3)=Z0(1,M3)
        Z0(6,M3)=Z0(1,M3)
        Z0(7,M3)=Z0(1,M3)
        Z0(8,M3)=Z0(3,M3)
        Z0(9,M3)=Z0(1,M3)
        Z0(10,M3)=Z0(1,M3)
        Z0(11,M3)=Z0(1,M3)
        Z0(12,M3)=Z0(3,M3)
        Z0(13,M3)=Z0(1,M3)
        Z0(14,M3)=Z0(1,M3)
        IF(.NOT.LINEAR)THEN
          Z0(15,M3)=H3(ITHAT3,M3,2)*H3(ITHAT3,M3,2)
        ELSE
          Z0(15,M3)=Z00*H3(ITHAT3,M3,3)
        END IF
        Z0(16,M3)=Z0(3,M3)
        Z0(17,M3)=Z0(3,M3)
        Z0(18,M3)=Z0(1,M3)
        Z0(19,M3)=Z0(1,M3)
        Z0(20,M3)=Z0(1,M3)
        Z0(21,M3)=Z0(1,M3)
        Z0(22,M3)=H3(ITHAT3,M3,1)*H3(ITHAT3,M3,1)
      END DO
CCCC  DO M4=1,MM4/MD4
      DO M4=1,MM4
        W00=H4(ITHAT4,M4,1)
        W0(1,M4)=W00*H4(ITHAT4,M4,1)
        W0(2,M4)=W0(1,M4)
        W0(3,M4)=W0(1,M4)
        W0(4,M4)=W00*H4(ITHAT4,M4,2)
        W0(5,M4)=W0(1,M4)
        W0(6,M4)=W0(1,M4)
        W0(7,M4)=W0(1,M4)
        W0(8,M4)=W0(1,M4)
        W0(9,M4)=W0(4,M4)
        W0(10,M4)=W0(1,M4)
        W0(11,M4)=W0(1,M4)
        W0(12,M4)=W0(1,M4)
        W0(13,M4)=W0(4,M4)
        W0(14,M4)=W0(1,M4)
        W0(15,M4)=W0(1,M4)
        W0(16,M4)=W0(4,M4)
        W0(17,M4)=W0(1,M4)
        IF(.NOT.LINEAR)THEN
          W0(18,M4)=H4(ITHAT4,M4,2)*H4(ITHAT4,M4,2)
        ELSE
          W0(18,M4)=W00*H4(ITHAT4,M4,3)
        END IF
        W0(19,M4)=W0(4,M4)
        W0(20,M4)=W0(1,M4)
        W0(21,M4)=W0(1,M4)
        W0(22,M4)=H4(ITHAT4,M4,1)*H4(ITHAT4,M4,1)
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**LOOP ROUND TAU
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
CCCC      QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
CCCC      DELTA(4)=+QTAU
CCCC      DELTA(5)=-QTAU
        END IF

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.4)READ(64)VR
          IF(ICOUPC.GE.4)READ(84)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.4)READ(64)VRR
          IF(ICOUPC.GE.4)READ(84)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(74)VP
        ELSE
          READ(74)VPR
        END IF

C***********************************************************

        IF(.NOT.LINEAR)THEN
          T00=HTAU(ITHATM,MTAU,1,LMAX)*DSTAU(ITAU)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T(1)
          T(4)=T(1)
          T(5)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(6)=T(1)
          T(7)=T(1)
          T(8)=T(1)
          T(9)=T(1)
          T(9)=T(1)
          T(10)=T(5)
          T(11)=T(1)
          T(12)=T(1)
          T(13)=T(1)
          T(14)=T(5)
          T(15)=T(1)
          T(16)=T(1)
          T(17)=T(5)
          T(18)=T(1)
          T(19)=T(5)
          T(20)=HTAU(ITHATM,MTAU,2,LMAX)*HTAU(ITHATM,MTAU,2,LMAX)*
     1    DSTAU(ITAU)
          T(21)=T(1)
C**START INTEGRATION OVER SINGLE MODES
          IF(JCOUPL.GT.0)THEN
CCCC        DO M1=1,MM1/MD1
CCCC          DO M2=1,MM2/MD2
CCCC            DO M3=1,MM3/MD3
CCCC              DO M4=1,MM4/MD4
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  DO M4=1,MM4
                    DO I=1,21
                      TTT(I)=0
                    END DO
                    IF(ICOUPC.GE.4)THEN
C**NO WATSON TERM IF RPH
                      DO I=1,21
                        TTT(I)=X0(I,M1)*Y0(I,M2)*Z0(I,M3)*W0(I,M4)*
     1                  T(I)*VC(M4,M3,M2,M1,I)*IFACTC
                      END DO
                    END IF
                    TTT(21)=TTT(21)+X0(21,M1)*Y0(21,M2)*Z0(21,M3)*
     1              W0(21,M4)*T(21)*VP(M4,M3,M2,M1)*IFACTL
                    TERM=TERM+
     1              (2*(TTT(1)+TTT(2)+TTT(3)+TTT(4)+TTT(5)+TTT(7)+
     2               TTT(8)+TTT(9)+TTT(10)+TTT(12)+TTT(13)+TTT(14)+
     3               TTT(16)+TTT(17)+TTT(19))
     4              +TTT(6)+TTT(11)+TTT(15)+TTT(18)+TTT(20)+TTT(21))
                  END DO
                END DO
              END DO
            END DO
          ELSE
CCCC        DO M1=1,MM1/MD1
CCCC          DO M2=1,MM2/MD2
CCCC            DO M3=1,MM3/MD3
CCCC              DO M4=1,MM4/MD4
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  DO M4=1,MM4
                    DO I=1,21
                      TTT(I)=0
                    END DO
                    IF(ICOUPC.GE.4)THEN
C**NO WATSON TERM IF RPH
                      DO I=1,21
                        TTT(I)=X0(I,M1)*Y0(I,M2)*Z0(I,M3)*W0(I,M4)*
     1                  T(I)*VC(M4,M3,M2,M1,I)*IFACTC
                      END DO
                    END IF
                    TTT(21)=TTT(21)+X0(21,M1)*Y0(21,M2)*Z0(21,M3)*
     1              W0(21,M4)*T(21)*VP(M4,M3,M2,M1)*IFACTL
                    TERM=TERM+
     1              (2*(TTT(1)+TTT(2)+TTT(3)+TTT(4)+TTT(5)+TTT(7)+
     2               TTT(8)+TTT(9)+TTT(10)+TTT(12)+TTT(13)+TTT(14)+
     3               TTT(16)+TTT(17)+TTT(19))
     4              +TTT(6)+TTT(11)+TTT(15)+TTT(18)+TTT(20)+TTT(21))
                  END DO
                END DO
              END DO
            END DO
          END IF
C**END INTEGRATION OVER SINGLE MODES
        ELSE
          T00=HTAU(ITHATM,MTAU,1,LMAX)
          T(1)=T00*HTAU(ITHATM,MTAU,1,LMAX)
          T(2)=T(1)
          T(3)=T(1)
          T(4)=T(1)
          T(5)=T00*HTAU(ITHATM,MTAU,2,LMAX)
          T(6)=T(1)
          T(7)=T(1)
          T(8)=T(1)
          T(9)=T(1)
          T(9)=T(1)
          T(10)=T(5)
          T(11)=T(1)
          T(12)=T(1)
          T(13)=T(1)
          T(14)=T(5)
          T(15)=T(1)
          T(16)=T(1)
          T(17)=T(5)
          T(18)=T(1)
          T(19)=T(5)
          T(20)=T00*HTAU(ITHATM,MTAU,3,LMAX)
          T(21)=T(1)
C**START INTEGRATION OVER SINGLE MODES
          IF(JCOUPL.GT.0)THEN
CCCC        DO M1=1,MM1/MD1
CCCC          DO M2=1,MM2/MD2
CCCC            DO M3=1,MM3/MD3
CCCC              DO M4=1,MM4/MD4
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  DO M4=1,MM4
                    DO I=1,20
                      TTT(I)=0
                    END DO
                    IF(ICOUPC.GE.4)THEN
C**(21) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                      DO I=1,20
                        TTT(I)=-X0(I,M1)*Y0(I,M2)*Z0(I,M3)*W0(I,M4)*
     1                  T(I)*VC(M4,M3,M2,M1,I)*IFACTC
                      END DO
                    END IF
                    TTT(21)=X0(21,M1)*Y0(21,M2)*Z0(21,M3)*
     1              W0(21,M4)*T(21)*VP(M4,M3,M2,M1)*IFACTL
                    TERM=TERM+
     1              TTT(1)+TTT(2)+TTT(3)+TTT(4)+TTT(5)+2*(TTT(7)+
     2               TTT(8)+TTT(9)+TTT(10)+TTT(12)+TTT(13)+TTT(14)+
     3               TTT(16)+TTT(17)+TTT(19))
     4              +TTT(6)+TTT(11)+TTT(15)+TTT(18)+TTT(20)+TTT(21)
                  END DO
                END DO
              END DO
            END DO
          ELSE
CCCC        DO M1=1,MM1/MD1
CCCC          DO M2=1,MM2/MD2
CCCC            DO M3=1,MM3/MD3
CCCC              DO M4=1,MM4/MD4
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  DO M4=1,MM4
                    DO I=1,20
                      TTT(I)=0
                    END DO
                    IF(ICOUPC.GE.4)THEN
C**(21) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                      DO I=1,20
                        TTT(I)=-X0(I,M1)*Y0(I,M2)*Z0(I,M3)*W0(I,M4)*
     1                  T(I)*VC(M4,M3,M2,M1,I)*IFACTC
                      END DO
                    END IF
                    TTT(21)=X0(21,M1)*Y0(21,M2)*Z0(21,M3)*
     1              W0(21,M4)*T(21)*VP(M4,M3,M2,M1)*IFACTL
                    TERM=TERM+
     1              TTT(1)+TTT(2)+TTT(3)+TTT(4)+TTT(5)+2*(TTT(7)+
     2               TTT(8)+TTT(9)+TTT(10)+TTT(12)+TTT(13)+TTT(14)+
     3               TTT(16)+TTT(17)+TTT(19))
     4              +TTT(6)+TTT(11)+TTT(15)+TTT(18)+TTT(20)+TTT(21)
                  END DO
                END DO
              END DO
            END DO
          END IF
C**END INTEGRATION OVER SINGLE MODES
        END IF
      END DO
      DO IRLHS=1,KXK
        XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM
      END DO

C**ROTATION
      IF(J21.GT.1.AND.ICOUPC.GE.4)THEN
        TERM=0
C**LOOP ROUND TAU
        ITAU=INIT-INCTAU
        DO MTAU=1,MMTAU/MDT
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
          IF(JCOUPL.GT.0)THEN
CCCC        DO M1=1,MM1/MD1
CCCC          DO M2=1,MM2/MD2
CCCC            DO M3=1,MM3/MD3
CCCC              DO M4=1,MM4/MD4
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  DO M4=1,MM4
                    W21=VR(K,M4,M3,M2,M1)*X0(22,M1)*Y0(22,M2)*
     1              Z0(22,M3)*W0(22,M4)*
     2              HTAU(ITHATM,MTAU,1,LMAX)*HTAU(ITHATM,MTAU,1,LMAX)
                  END DO
                END DO
              END DO
            END DO
          ELSE
CCCC        DO M1=1,MM1/MD1
CCCC          DO M2=1,MM2/MD2
CCCC            DO M3=1,MM3/MD3
CCCC              DO M4=1,MM4/MD4
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  DO M4=1,MM4
                    W21=VRR(K,M4,M3,M2,M1)*X0(22,M1)*Y0(22,M2)*
     1              Z0(22,M3)*W0(22,M4)*
     2              HTAU(ITHATM,MTAU,1,LMAX)*HTAU(ITHATM,MTAU,1,LMAX)
                  END DO
                END DO
              END DO
            END DO
          END IF
          TERM=TERM+W21*DSTAU(ITAU)
        END DO
        DO IRLHS=1,KXK
          XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM
        END DO
      END IF
      IF(ITIM4B.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM4B=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TVVT4(ISTAT,NSTAT,ISTATE,MODE1,MODE2,MODE3,MODE4,HTAU,
     1XQTAU,NNTAU,MMTAU,XK,KXK,KROT,MODINT,XKAN,MAXQU,MAXPOW,NAMODE,
     2NP4,CP4,JP4,VP4,NTOT4,MAX4,INDK,INDL,INDN,IND,MDTAU)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION MODINT(NAMODE)
      DIMENSION ISTAT(NSTAT,NAMODE),XK(KXK,KXK)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION NP4(NTOT4),CP4(MAX4,MDTAU,NTOT4),JP4(MAX4,4,NTOT4),
     1VP4(MAX4,NTOT4)
      DIMENSION INDK(1),INDL(1),INDN(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,NAMODE)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM4B.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating TVVT4'
          CALL TIMIT(1)
        END IF
      END IF

      IND4=INDN(MODE1)+INDL(MODE2)+INDK(MODE3)+MODE4

      KA=KROT/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT4=ISTAT(ISTATE,MODE4)
      ITHATM=ISTAT(ISTATE,NSMODE)+1-MOD(KA,2)+INCT
      MDT=MODINT(NSMODE)

      IF(IND.EQ.0)THEN
        READ(24)NFIT
        NP4(IND4)=NFIT
        DO I=1,NFIT
          READ(24)JP4(I,1,IND4),JP4(I,2,IND4),JP4(I,3,IND4),
     1    JP4(I,4,IND4)
        END DO
        DO MTAU=1,MDTAU
          READ(24)(CP4(I,MTAU,IND4),I=1,NFIT)
        END DO

C********************************
C**   GET PARTIAL INTEGRAL
C********************************
        DO I=1,NFIT
          VP4(I,IND4)=0
        END DO
        ITAU=INIT-INCTAU
C**START TAU LOOP
        DO MTAU=1,MMTAU/MDT
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
          T00=HTAU(ITHATM,MTAU,1,LMAX)*DSTAU(ITAU)
          T=T00*HTAU(ITHATM,MTAU,1,LMAX)
          DO I=1,NFIT
            VP4(I,IND4)=VP4(I,IND4)+CP4(I,MTAU,IND4)*T
          END DO
        END DO
      ELSE
        NFIT=NP4(IND4)
      END IF

C     DO IRLHS=1,KXK
C       XT=0
C       DO I=1,NFIT
C         K=JP4(I,1)+1
C         L=JP4(I,2)+1
C         N=JP4(I,3)+1
C         M=JP4(I,4)+1
C         X=XKAN(ITHAT1,ITHAT1,K,MODE1)*
C    2    XKAN(ITHAT2,ITHAT2,L,MODE2)*XKAN(ITHAT3,ITHAT3,N,MODE3)*
C    3    XKAN(ITHAT4,ITHAT4,M,MODE4)
C         XT=XT+VP4(I)*X
C       END DO
C**POTENTIAL ONLY
C       XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+XT
C     END DO

      DO I=1,NFIT
        K=JP4(I,1,IND4)+1
        L=JP4(I,2,IND4)+1
        N=JP4(I,3,IND4)+1
        M=JP4(I,4,IND4)+1
        X=XKAN(ITHAT1,ITHAT1,K,MODE1)*XKAN(ITHAT2,ITHAT2,L,MODE2)*
     1  XKAN(ITHAT3,ITHAT3,N,MODE3)*XKAN(ITHAT4,ITHAT4,M,MODE4)*
     2  VP4(I,IND4)
        DO IRLHS=1,KXK
          XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+X
        END DO
      END DO

      IF(ITIM4B.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM4B=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS5A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1NN1,MM1,NN2,MM2,NN3,MM3,NN4,MM4,NN5,MM5,X0,Y0,Z0,W0,U0,XK,NMODE,
     2ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,VP,VPR,MODINT,XKAN,MAXQU,
     3MAXPOW,NP5,CP5,JP5,NTOT5,MAX5,INDK,INDL,INDN,INDM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H5(NN5,MM5,3),XQ5(MM5)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5)
C**ANALYTIC
      DIMENSION NP5(NTOT5),CP5(MAX5,NTOT5),JP5(MAX5,NTOT5,5)
      DIMENSION INDK(1),INDL(1),INDN(1),INDM(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N4.EQ.N5)MD5=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      CALL TDIS5A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,NN1,
     1MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,NN5,
     2MM5,MM5/MD5,X0,Y0,Z0,W0,U0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,
     3MODE4,MODE5,VP,VPR,MODINT,XKAN,MAXQU,
     4MAXPOW,NP5,CP5,JP5,NTOT5,MAX5,INDK,INDL,INDN,INDM)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS5A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NN5,MH5,MM5,X0,
     2Y0,Z0,W0,U0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,VP,
     3VPR,MODINT,XKAN,MAXQU,MAXPOW,NP5,CP5,JP5,
     4NTOT5,MAX5,INDK,INDL,INDN,INDM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION H5(NN5,MH5,3),XQ5(MM5)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5)
C**ANALYTIC
      DIMENSION NP5(NTOT5),CP5(MAX5,NTOT5),JP5(MAX5,NTOT5,5)
      DIMENSION INDK(1),INDL(1),INDN(1),INDM(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM5A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS5A'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(ICOUPL.GT.4)IFACTL=INTFAC(NMODE,ICOUPL,5)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(75)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(75)VPR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT4=ISTAT(ISTATE,MODE4)
      ITHAT5=ISTAT(ISTATE,MODE5)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MOD1=MD1
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N4.EQ.N5)MD5=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      MD=MD1*MD2*MD3*MD4*MD5

C***********************************************************
      IF(IWHICH.GE.0)THEN
C**POTENTIAL
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
        DO M2=1,MM2
          Y00=H2(ITHAT2,M2,1)*IFACTL*MD
          Y0(M2)=Y00*H2(ITHAT2,M2,1)
        END DO
        DO M3=1,MM3
          Z00=H3(ITHAT3,M3,1)
          Z0(M3)=Z00*H3(ITHAT3,M3,1)
        END DO
        DO M4=1,MM4
          W00=H4(ITHAT4,M4,1)
          W0(M4)=W00*H4(ITHAT4,M4,1)
        END DO
        DO M5=1,MM5
          U00=H5(ITHAT5,M5,1)
          U0(M5)=U00*H5(ITHAT5,M5,1)
        END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
        DO M1=1,MM1
          X=0
C**INTEGRATE OVER SINGLE STATES (START)
          IF(JCOUPL.GT.0)THEN
            DO M2=1,MM2
              DO M3=1,MM3
                DO M4=1,MM4
                  DO M5=1,MM5
                    IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1              X=X+Y0(M2)*Z0(M3)*W0(M4)*U0(M5)*
     2              VP(M5,M4,M3,M2,M1)
                  END DO
                END DO
              END DO
            END DO
          ELSE
            DO M2=1,MM2
              DO M3=1,MM3
                DO M4=1,MM4
                  DO M5=1,MM5
                    IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1              X=X+Y0(M2)*Z0(M3)*W0(M4)*U0(M5)*
     2              VPR(M5,M4,M3,M2,M1)
                  END DO
                END DO
              END DO
            END DO
          END IF
C**INTEGRATE OVER SINGLE STATES (END)
          DO IRHS=1,NN1
            ILINE=MOD1-MOD(IRHS,MOD1)
            X1=H1(IRHS,M1,1)*X
            DO ILHS=ILINE,IRHS,MOD1
              Y1=H1(ILHS,M1,1)
              XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*X1
            END DO
          END DO
        END DO
      END IF

C***********************************************************
C**POTENTIAL
      IF(IWHICH.LT.0.AND.MOLINC.NE.0)THEN
C**ANALYTIC
        IND=INDM(MODE1)+INDN(MODE2)+INDL(MODE3)+INDK(MODE4)+MODE5
        DO IRHS=1,NN1
          ILINE=MOD1-MOD(IRHS,MOD1)
          DO ILHS=ILINE,IRHS,MOD1
            Y=0
            DO I=1,NP5(IND)
              K=JP5(I,IND,1)+1
              L=JP5(I,IND,2)+1
              N=JP5(I,IND,3)+1
              M=JP5(I,IND,4)+1
              J=JP5(I,IND,5)+1
              Y=Y+CP5(I,IND)*
     1        XKAN(ILHS,IRHS,K,MODE1)*XKAN(ITHAT2,ITHAT2,L,MODE2)*
     2        XKAN(ITHAT3,ITHAT3,N,MODE3)*XKAN(ITHAT4,ITHAT4,M,MODE4)*
     3        XKAN(ITHAT5,ITHAT5,J,MODE5)
            END DO
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y
          END DO
        END DO
C**ANALYTIC
      END IF

      IF(ITIM5A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM5A=1
        CALL FLUSH(IOUT)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS5B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1NN1,MM1,NN2,MM2,NN3,MM3,NN4,MM4,NN5,MM5,X0,Y0,Z0,W0,U0,XK,NMODE,
     2ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,VP,VPR,MODINT,XKAN,MAXQU,
     3MAXPOW,NP5,CP5,JP5,NTOT5,MAX5,INDK,INDL,INDN,INDM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN2,NN2)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H5(NN5,MM5,3),XQ5(MM5)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5)
C**ANALYTIC
      DIMENSION NP5(NTOT5),CP5(MAX5,NTOT5),JP5(MAX5,NTOT5,5)
      DIMENSION INDK(1),INDL(1),INDN(1),INDM(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N4.EQ.N5)MD5=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      CALL TDIS5B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,NN1,
     1MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,
     2NN5,MM5,MM5/MD5,X0,Y0,Z0,W0,U0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,
     3MODE4,MODE5,VP,VPR,MODINT,XKAN,MAXQU,
     4MAXPOW,NP5,CP5,JP5,NTOT5,MAX5,INDK,INDL,INDN,INDM)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS5B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NN5,MH5,MM5,
     2X0,Y0,Z0,W0,U0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,
     3VP,VPR,MODINT,XKAN,MAXQU,MAXPOW,NP5,CP5,
     4JP5,NTOT5,MAX5,INDK,INDL,INDN,INDM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN2,NN2)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION H5(NN5,MH5,3),XQ5(MM5)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5)
C**ANALYTIC
      DIMENSION NP5(NTOT5),CP5(MAX5,NTOT5),JP5(MAX5,NTOT5,5)
      DIMENSION INDK(1),INDL(1),INDN(1),INDM(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM5A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS5B'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(ICOUPL.GT.4)IFACTL=INTFAC(NMODE,ICOUPL,5)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(75)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(75)VPR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT4=ISTAT(ISTATE,MODE4)
      ITHAT5=ISTAT(ISTATE,MODE5)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MOD2=MD2
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N4.EQ.N5)MD5=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      MD=MD1*MD2*MD3*MD4*MD5

C***********************************************************
      IF(IWHICH.GE.0)THEN
C**POTENTIAL
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
        DO M1=1,MM1
          X00=H1(ITHAT1,M1,1)*IFACTL*MD
          X0(M1)=X00*H1(ITHAT1,M1,1)
        END DO
        DO M3=1,MM3
          Z00=H3(ITHAT3,M3,1)
          Z0(M3)=Z00*H3(ITHAT3,M3,1)
        END DO
        DO M4=1,MM4
          W00=H4(ITHAT4,M4,1)
          W0(M4)=W00*H4(ITHAT4,M4,1)
        END DO
        DO M5=1,MM5
          U00=H5(ITHAT5,M5,1)
          U0(M5)=U00*H5(ITHAT5,M5,1)
        END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
        DO M2=1,MM2
          X=0
C**INTEGRATE OVER SINGLE STATES (START)
          IF(JCOUPL.GT.0)THEN
            DO M1=1,MM1
              DO M3=1,MM3
                DO M4=1,MM4
                  DO M5=1,MM5
                    IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1              X=X+X0(M1)*Z0(M3)*W0(M4)*U0(M5)*
     2              VP(M5,M4,M3,M2,M1)
                  END DO
                END DO
              END DO
            END DO
          ELSE
            DO M1=1,MM1
              DO M3=1,MM3
                DO M4=1,MM4
                  DO M5=1,MM5
                    IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1              X=X+X0(M1)*Z0(M3)*W0(M4)*U0(M5)*
     2              VPR(M5,M4,M3,M2,M1)
                  END DO
                END DO
              END DO
            END DO
          END IF
C**INTEGRATE OVER SINGLE STATES (END)
          DO IRHS=1,NN2
            ILINE=MOD2-MOD(IRHS,MOD2)
            X2=H2(IRHS,M2,1)*X
            DO ILHS=ILINE,IRHS,MOD2
              Y2=H2(ILHS,M2,1)
              XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y2*X2
            END DO
          END DO
        END DO
      END IF

C***********************************************************
C**POTENTIAL
      IF(IWHICH.LT.0.AND.MOLINC.NE.0)THEN
C**ANALYTIC
        IND=INDM(MODE1)+INDN(MODE2)+INDL(MODE3)+INDK(MODE4)+MODE5
        DO IRHS=1,NN2
          ILINE=MOD2-MOD(IRHS,MOD2)
          DO ILHS=ILINE,IRHS,MOD2
            Y=0
            DO I=1,NP5(IND)
              K=JP5(I,IND,1)+1
              L=JP5(I,IND,2)+1
              N=JP5(I,IND,3)+1
              M=JP5(I,IND,4)+1
              J=JP5(I,IND,5)+1
              Y=Y+CP5(I,IND)*
     1        XKAN(ITHAT1,ITHAT1,K,MODE1)*
     2        XKAN(ILHS,IRHS,L,MODE2)*XKAN(ITHAT3,ITHAT3,N,MODE3)*
     3        XKAN(ITHAT4,ITHAT4,M,MODE4)*XKAN(ITHAT5,ITHAT5,J,MODE5)
            END DO
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y
          END DO
        END DO
C**ANALYTIC
      END IF

      IF(ITIM5A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM5A=1
        CALL FLUSH(IOUT)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS5C(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1NN1,MM1,NN2,MM2,NN3,MM3,NN4,MM4,NN5,MM5,X0,Y0,Z0,W0,U0,XK,NMODE,
     2ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,VP,VPR,MODINT,XKAN,MAXQU,
     3MAXPOW,NP5,CP5,JP5,NTOT5,MAX5,INDK,INDL,INDN,INDM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN3,NN3)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H5(NN5,MM5,3),XQ5(MM5)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5)
C**ANALYTIC
      DIMENSION NP5(NTOT5),CP5(MAX5,NTOT5),JP5(MAX5,NTOT5,5)
      DIMENSION INDK(1),INDL(1),INDN(1),INDM(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I 
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N4.EQ.N5)MD5=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      CALL TDIS5C(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,NN1,
     1MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,
     2NN5,MM5,MM5/MD5,X0,Y0,Z0,W0,U0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,
     3MODE4,MODE5,VP,VPR,MODINT,XKAN,MAXQU,
     4MAXPOW,NP5,CP5,JP5,NTOT5,MAX5,INDK,INDL,INDN,INDM)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS5C(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NN5,MH5,MM5,
     2X0,Y0,Z0,W0,U0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,
     3VP,VPR,MODINT,XKAN,MAXQU,MAXPOW,NP5,CP5,
     4JP5,NTOT5,MAX5,INDK,INDL,INDN,INDM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN3,NN3)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION H5(NN5,MH5,3),XQ5(MM5)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5)
C**ANALYTIC
      DIMENSION NP5(NTOT5),CP5(MAX5,NTOT5),JP5(MAX5,NTOT5,5)
      DIMENSION INDK(1),INDL(1),INDN(1),INDM(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM5A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS5C'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(ICOUPL.GT.4)IFACTL=INTFAC(NMODE,ICOUPL,5)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(75)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(75)VPR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT4=ISTAT(ISTATE,MODE4)
      ITHAT5=ISTAT(ISTATE,MODE5)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MOD3=MD3
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N4.EQ.N5)MD5=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      MD=MD1*MD2*MD3*MD4*MD5

C***********************************************************
      IF(IWHICH.GE.0)THEN
C**POTENTIAL
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
        DO M1=1,MM1
          X00=H1(ITHAT1,M1,1)*IFACTL*MD
          X0(M1)=X00*H1(ITHAT1,M1,1)
        END DO
        DO M2=1,MM2
          Y00=H2(ITHAT2,M2,1)
          Y0(M2)=Y00*H2(ITHAT2,M2,1)
        END DO
        DO M4=1,MM4
          W00=H4(ITHAT4,M4,1)
          W0(M4)=W00*H4(ITHAT4,M4,1)
        END DO
        DO M5=1,MM5
          U00=H5(ITHAT5,M5,1)
          U0(M5)=U00*H5(ITHAT5,M5,1)
        END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
        DO M3=1,MM3
          X=0
C**INTEGRATE OVER SINGLE STATES (START)
          IF(JCOUPL.GT.0)THEN
            DO M1=1,MM1
              DO M2=1,MM2
                DO M4=1,MM4
                  DO M5=1,MM5
                    IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1              X=X+X0(M1)*Y0(M2)*W0(M4)*U0(M5)*
     2              VP(M5,M4,M3,M2,M1)
                  END DO
                END DO
              END DO
            END DO
          ELSE
            DO M1=1,MM1
              DO M2=1,MM2
                DO M4=1,MM4
                  DO M5=1,MM5
                    IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1              X=X+X0(M1)*Y0(M2)*W0(M4)*U0(M5)*
     2              VPR(M5,M4,M3,M2,M1)
                  END DO
                END DO
              END DO
            END DO
          END IF
C**INTEGRATE OVER SINGLE STATES (END)
          DO IRHS=1,NN3
            ILINE=MOD3-MOD(IRHS,MOD3)
            X3=H3(IRHS,M3,1)*X
            DO ILHS=ILINE,IRHS,MOD3
              Y3=H3(ILHS,M3,1)
              XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y3*X3
            END DO
          END DO
        END DO
      END IF

C***********************************************************
C**POTENTIAL
      IF(IWHICH.LT.0.AND.MOLINC.NE.0)THEN
C**ANALYTIC
        IND=INDM(MODE1)+INDN(MODE2)+INDL(MODE3)+INDK(MODE4)+MODE5
        DO IRHS=1,NN3
          ILINE=MOD3-MOD(IRHS,MOD3)
          DO ILHS=ILINE,IRHS,MOD3
            Y=0
            DO I=1,NP5(IND)
              K=JP5(I,IND,1)+1
              L=JP5(I,IND,2)+1
              N=JP5(I,IND,3)+1
              M=JP5(I,IND,4)+1
              J=JP5(I,IND,5)+1
              Y=Y+CP5(I,IND)*
     1        XKAN(ITHAT1,ITHAT1,K,MODE1)*
     2        XKAN(ITHAT2,ITHAT2,L,MODE2)*XKAN(ILHS,IRHS,N,MODE3)*
     3        XKAN(ITHAT4,ITHAT4,M,MODE4)*XKAN(ITHAT5,ITHAT5,J,MODE5)
            END DO
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y
          END DO
        END DO
C**ANALYTIC
      END IF

      IF(ITIM5A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM5A=1
        CALL FLUSH(IOUT)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS5D(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1NN1,MM1,NN2,MM2,NN3,MM3,NN4,MM4,NN5,MM5,X0,Y0,Z0,W0,U0,XK,NMODE,
     2ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,VP,VPR,MODINT,XKAN,MAXQU,
     3MAXPOW,NP5,CP5,JP5,NTOT5,MAX5,INDK,INDL,INDN,INDM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN4,NN4)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H5(NN5,MM5,3),XQ5(MM5)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5)
C**ANALYTIC
      DIMENSION NP5(NTOT5),CP5(MAX5,NTOT5),JP5(MAX5,NTOT5,5)
      DIMENSION INDK(1),INDL(1),INDN(1),INDM(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N4.EQ.N5)MD5=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      CALL TDIS5D(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,NN1,
     1MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,
     2NN5,MM5,MM5/MD5,X0,Y0,Z0,W0,U0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,
     3MODE4,MODE5,VP,VPR,MODINT,XKAN,MAXQU,
     4MAXPOW,NP5,CP5,JP5,NTOT5,MAX5,INDK,INDL,INDN,INDM)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS5D(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NN5,MH5,MM5,
     2X0,Y0,Z0,W0,U0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,
     3VP,VPR,MODINT,XKAN,MAXQU,MAXPOW,NP5,CP5,
     4JP5,NTOT5,MAX5,INDK,INDL,INDN,INDM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN4,NN4)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION H5(NN5,MH5,3),XQ5(MM5)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5)
C**ANALYTIC
      DIMENSION NP5(NTOT5),CP5(MAX5,NTOT5),JP5(MAX5,NTOT5,5)
      DIMENSION INDK(1),INDL(1),INDN(1),INDM(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM5A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS5D'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(ICOUPL.GT.4)IFACTL=INTFAC(NMODE,ICOUPL,5)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(75)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(75)VPR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT5=ISTAT(ISTATE,MODE5)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MOD4=MD4
      MD5=MODINT(MODE5)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N4.EQ.N5)MD5=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      MD=MD1*MD2*MD3*MD4*MD5

C***********************************************************
      IF(IWHICH.GE.0)THEN
C**POTENTIAL
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
        DO M1=1,MM1
          X00=H1(ITHAT1,M1,1)*IFACTL*MD
          X0(M1)=X00*H1(ITHAT1,M1,1)
        END DO
        DO M2=1,MM2
          Y00=H2(ITHAT2,M2,1)
          Y0(M2)=Y00*H2(ITHAT2,M2,1)
        END DO
        DO M3=1,MM3
          Z00=H3(ITHAT3,M3,1)
          Z0(M3)=Z00*H3(ITHAT3,M3,1)
        END DO
        DO M5=1,MM5
          U00=H5(ITHAT5,M5,1)
          U0(M5)=U00*H5(ITHAT5,M5,1)
        END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
        DO M4=1,MM4
          X=0
C**INTEGRATE OVER SINGLE STATES (START)
          IF(JCOUPL.GT.0)THEN
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  DO M5=1,MM5
                    IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1              X=X+X0(M1)*Y0(M2)*Z0(M3)*U0(M5)*
     2              VP(M5,M4,M3,M2,M1)
                  END DO
                END DO
              END DO
            END DO
          ELSE
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  DO M5=1,MM5
                    IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1              X=X+X0(M1)*Y0(M2)*Z0(M3)*U0(M5)*
     2              VPR(M5,M4,M3,M2,M1)
                  END DO
                END DO
              END DO
            END DO
          END IF
C**INTEGRATE OVER SINGLE STATES (END)
          DO IRHS=1,NN4
            ILINE=MOD4-MOD(IRHS,MOD4)
            X4=H4(IRHS,M4,1)*X
            DO ILHS=ILINE,IRHS,MOD4
              Y4=H4(ILHS,M4,1)
              XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y4*X4
            END DO
          END DO
        END DO
      END IF

C***********************************************************
C**POTENTIAL
      IF(IWHICH.LT.0.AND.MOLINC.NE.0)THEN
C**ANALYTIC
        IND=INDM(MODE1)+INDN(MODE2)+INDL(MODE3)+INDK(MODE4)+MODE5
        DO IRHS=1,NN4
          ILINE=MOD4-MOD(IRHS,MOD4)
          DO ILHS=ILINE,IRHS,MOD4
            Y=0
            DO I=1,NP5(IND)
              K=JP5(I,IND,1)+1
              L=JP5(I,IND,2)+1
              N=JP5(I,IND,3)+1
              M=JP5(I,IND,4)+1
              J=JP5(I,IND,5)+1
              Y=Y+CP5(I,IND)*
     1        XKAN(ITHAT1,ITHAT1,K,MODE1)*
     2        XKAN(ITHAT2,ITHAT2,L,MODE2)*XKAN(ITHAT3,ITHAT3,N,MODE3)*
     3        XKAN(ILHS,IRHS,M,MODE4)*XKAN(ITHAT5,ITHAT5,J,MODE5)
            END DO
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y
          END DO
        END DO
C**ANALYTIC
      END IF

      IF(ITIM5A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM5A=1
        CALL FLUSH(IOUT)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS5E(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1NN1,MM1,NN2,MM2,NN3,MM3,NN4,MM4,NN5,MM5,X0,Y0,Z0,W0,U0,XK,NMODE,
     2ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,VP,VPR,MODINT,XKAN,MAXQU,
     3MAXPOW,NP5,CP5,JP5,NTOT5,MAX5,INDK,INDL,INDN,INDM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN5,NN5)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H5(NN5,MM5,3),XQ5(MM5)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5)
C**ANALYTIC
      DIMENSION NP5(NTOT5),CP5(MAX5,NTOT5),JP5(MAX5,NTOT5,5)
      DIMENSION INDK(1),INDL(1),INDN(1),INDM(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N4.EQ.N5)MD5=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      CALL TDIS5E(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,NN1,
     1MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,
     2NN5,MM5,MM5/MD5,X0,Y0,Z0,W0,U0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,
     3MODE4,MODE5,VP,VPR,MODINT,XKAN,MAXQU,
     4MAXPOW,NP5,CP5,JP5,NTOT5,MAX5,INDK,INDL,INDN,INDM)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS5E(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NN5,MH5,MM5,
     2X0,Y0,Z0,W0,U0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,
     3VP,VPR,MODINT,XKAN,MAXQU,MAXPOW,NP5,CP5,
     4JP5,NTOT5,MAX5,INDK,INDL,INDN,INDM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN5,NN5)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION H5(NN5,MH5,3),XQ5(MM5)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5)
C**ANALYTIC
      DIMENSION NP5(NTOT5),CP5(MAX5,NTOT5),JP5(MAX5,NTOT5,5)
      DIMENSION INDK(1),INDL(1),INDN(1),INDM(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM5A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS5E'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(ICOUPL.GT.4)IFACTL=INTFAC(NMODE,ICOUPL,5)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(75)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(75)VPR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT4=ISTAT(ISTATE,MODE4)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      MOD5=MD5
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N4.EQ.N5)MD5=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      MD=MD1*MD2*MD3*MD4*MD5

C***********************************************************
      IF(IWHICH.GE.0)THEN
C**POTENTIAL
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
        DO M1=1,MM1
          X00=H1(ITHAT1,M1,1)*IFACTL*MD
          X0(M1)=X00*H1(ITHAT1,M1,1)
        END DO
        DO M2=1,MM2
          Y00=H2(ITHAT2,M2,1)
          Y0(M2)=Y00*H2(ITHAT2,M2,1)
        END DO
        DO M3=1,MM3
          Z00=H3(ITHAT3,M3,1)
          Z0(M3)=Z00*H3(ITHAT3,M3,1)
        END DO
        DO M4=1,MM4
          W00=H4(ITHAT4,M4,1)
          W0(M4)=W00*H4(ITHAT4,M4,1)
        END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
        DO M5=1,MM5
          X=0
C**INTEGRATE OVER SINGLE STATES (START)
          IF(JCOUPL.GT.0)THEN
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  DO M4=1,MM4
                    IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1              X=X+X0(M1)*Y0(M2)*Z0(M3)*W0(M4)*
     2              VP(M5,M4,M3,M2,M1)
                  END DO
                END DO
              END DO
            END DO
          ELSE
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  DO M4=1,MM4
                    IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1              X=X+X0(M1)*Y0(M2)*Z0(M3)*W0(M4)*
     2              VPR(M5,M4,M3,M2,M1)
                  END DO
                END DO
              END DO
            END DO
          END IF
C**INTEGRATE OVER SINGLE STATES (END)
          DO IRHS=1,NN5
            ILINE=MOD5-MOD(IRHS,MOD5)
            X5=H5(IRHS,M5,1)*X
            DO ILHS=ILINE,IRHS,MOD5
              Y5=H5(ILHS,M5,1)
              XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y5*X5
            END DO
          END DO
        END DO
      END IF

C***********************************************************
C**POTENTIAL
      IF(IWHICH.LT.0.AND.MOLINC.NE.0)THEN
C**ANALYTIC
        IND=INDM(MODE1)+INDN(MODE2)+INDL(MODE3)+INDK(MODE4)+MODE5
        DO IRHS=1,NN5
          ILINE=MOD5-MOD(IRHS,MOD5)
          DO ILHS=ILINE,IRHS,MOD5
            Y=0
            DO I=1,NP5(IND)
              K=JP5(I,IND,1)+1
              L=JP5(I,IND,2)+1
              N=JP5(I,IND,3)+1
              M=JP5(I,IND,4)+1
              J=JP5(I,IND,5)+1
              Y=Y+CP5(I,IND)*
     1        XKAN(ITHAT1,ITHAT1,K,MODE1)*
     2        XKAN(ITHAT2,ITHAT2,L,MODE2)*XKAN(ITHAT3,ITHAT3,N,MODE3)*
     3        XKAN(ITHAT4,ITHAT4,M,MODE4)*XKAN(ILHS,IRHS,J,MODE5)
            END DO
            XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y
          END DO
        END DO
C**ANALYTIC
      END IF

      IF(ITIM5A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM5A=1
        CALL FLUSH(IOUT)
      END IF
      RETURN
      END
****************************************************************
****************************************************************
      SUBROUTINE THAT5(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,MODE3,
     1MODE4,MODE5,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,NN1,MM1,NN2,MM2,
     2NN3,MM3,NN4,MM4,NN5,MM5,X0,Y0,Z0,W0,U0,XK,KXK,VP,VPR,MODINT,
     3XKAN,MAXQU,MAXPOW,NP5,CP5,JP5,NTOT5,MAX5,
     4INDK,INDL,INDN,INDM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H5(NN5,MM5,3),XQ5(MM5)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5)
C**ANALYTIC
      DIMENSION NP5(NTOT5),CP5(MAX5,NTOT5),JP5(MAX5,NTOT5,5)
      DIMENSION INDK(1),INDL(1),INDN(1),INDM(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N4.EQ.N5)MD5=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      CALL TDAT5(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,
     1MODE5,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,NN1,MM1,MM1/MD1,NN2,MM2,
     2MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,NN5,MM5,MM5/MD5,X0,Y0,Z0,
     3W0,U0,XK,KXK,VP,VPR,MODINT,XKAN,MAXQU,
     4MAXPOW,NP5,CP5,JP5,NTOT5,MAX5,INDK,INDL,INDN,INDM)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDAT5(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,MODE3,
     1MODE4,MODE5,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,NN1,MH1,MM1,
     2NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NN5,MH5,MM5,X0,Y0,Z0,W0,U0,
     3XK,KXK,VP,VPR,MODINT,XKAN,MAXQU,MAXPOW,
     4NP5,CP5,JP5,NTOT5,MAX5,INDK,INDL,INDN,INDM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION H5(NN5,MH5,3),XQ5(MM5)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5)
C**ANALYTIC
      DIMENSION NP5(NTOT5),CP5(MAX5,NTOT5),JP5(MAX5,NTOT5,5)
      DIMENSION INDK(1),INDL(1),INDN(1),INDM(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM5B.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THAT5'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(ICOUPL.GT.4)IFACTL=INTFAC(NMODE,ICOUPL,5)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(75)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(75)VPR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT4=ISTAT(ISTATE,MODE4)
      ITHAT5=ISTAT(ISTATE,MODE5)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N4.EQ.N5)MD5=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      MD=MD1*MD2*MD3*MD4*MD5

      TERM=0
C***********************************************************
      IF(IWHICH.GE.0)THEN
C**POTENTIAL
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
        DO M1=1,MM1
          X00=H1(ITHAT1,M1,1)*IFACTL*MD
          X0(M1)=X00*H1(ITHAT1,M1,1)
        END DO
        DO M2=1,MM2
          Y00=H2(ITHAT2,M2,1)
          Y0(M2)=Y00*H2(ITHAT2,M2,1)
        END DO
        DO M3=1,MM3
          Z00=H3(ITHAT3,M3,1)
          Z0(M3)=Z00*H3(ITHAT3,M3,1)
        END DO
        DO M4=1,MM4
          W00=H4(ITHAT4,M4,1)
          W0(M4)=W00*H4(ITHAT4,M4,1)
        END DO
        DO M5=1,MM5
          U00=H5(ITHAT5,M5,1)
          U0(M5)=U00*H5(ITHAT5,M5,1)
        END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
        IF(JCOUPL.GT.0)THEN
          DO M1=1,MM1
            DO M2=1,MM2
              DO M3=1,MM3
                DO M4=1,MM4
                  DO M5=1,MM5
                    IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1              TERM=TERM+X0(M1)*Y0(M2)*Z0(M3)*W0(M4)*U0(M5)*
     2              VP(M5,M4,M3,M2,M1)
                  END DO
                END DO
              END DO
            END DO
          END DO
        ELSE
          DO M1=1,MM1
            DO M2=1,MM2
              DO M3=1,MM3
                DO M4=1,MM4
                  DO M5=1,MM5
                    IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1              TERM=TERM+X0(M1)*Y0(M2)*Z0(M3)*W0(M4)*U0(M5)*
     2              VPR(M5,M4,M3,M2,M1)
                  END DO
                END DO
              END DO
            END DO
          END DO
        END IF
      END IF

C***********************************************************
C**POTENTIAL
      IF(IWHICH.LT.0.AND.MOLINC.NE.0)THEN
C**ANALYTIC
        IND=INDM(MODE1)+INDN(MODE2)+INDL(MODE3)+INDK(MODE4)+MODE5
        DO I=1,NP5(IND)
          K=JP5(I,IND,1)+1
          L=JP5(I,IND,2)+1
          N=JP5(I,IND,3)+1
          M=JP5(I,IND,4)+1
          J=JP5(I,IND,5)+1
          TERM=TERM+CP5(I,IND)*
     1    XKAN(ITHAT1,ITHAT1,K,MODE1)*
     2    XKAN(ITHAT2,ITHAT2,L,MODE2)*XKAN(ITHAT3,ITHAT3,N,MODE3)*
     3    XKAN(ITHAT4,ITHAT4,M,MODE4)*XKAN(ITHAT5,ITHAT5,J,MODE5)
        END DO
C**ANALYTIC
      END IF

      DO IRLHS=1,KXK
        XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM
      END DO

      IF(ITIM5B.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM5B=1
        CALL FLUSH(IOUT)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS6A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1H6,XQ6,NN1,MM1,NN2,MM2,NN3,MM3,NN4,MM4,NN5,MM5,NN6,MM6,X0,Y0,Z0,
     2W0,U0,V0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6,VP,
     3VPR,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM6,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM6,MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H5(NN5,MM5,3),XQ5(MM5),H6(NN6,MM6,3),XQ6(MM6)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5),V0(MM6)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      MD6=MODINT(MODE6)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
          IF(MODE6.EQ.ISYM(I,J))N6=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N1.EQ.N6)MD6=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N2.EQ.N6)MD6=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N3.EQ.N6)MD6=1
      IF(N4.EQ.N5)MD5=1
      IF(N4.EQ.N6)MD6=1
      IF(N5.EQ.N6)MD6=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      IF(N12.EQ.N6)MD6=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      IF(N13.EQ.N6)MD6=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      IF(N14.EQ.N6)MD6=1
      N15=ISYMP(N1,N5)
      IF(N15.EQ.N6)MD6=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      IF(N23.EQ.N6)MD6=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      IF(N24.EQ.N6)MD6=1
      N25=ISYMP(N2,N5)
      IF(N25.EQ.N6)MD6=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      IF(N34.EQ.N6)MD6=1
      N35=ISYMP(N3,N5)
      IF(N35.EQ.N6)MD6=1
      N45=ISYMP(N4,N5)
      IF(N45.EQ.N6)MD6=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      IF(N123.EQ.N6)MD6=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      IF(N124.EQ.N6)MD6=1
      N125=ISYMP(N12,N5)
      IF(N125.EQ.N6)MD6=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      IF(N134.EQ.N6)MD6=1
      N135=ISYMP(N13,N5)
      IF(N135.EQ.N6)MD6=1
      N145=ISYMP(N14,N5)
      IF(N145.EQ.N6)MD6=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      IF(N234.EQ.N6)MD6=1
      N235=ISYMP(N23,N5)
      IF(N235.EQ.N6)MD6=1
      N245=ISYMP(N24,N5)
      IF(N245.EQ.N6)MD6=1
      N345=ISYMP(N34,N5)
      IF(N345.EQ.N6)MD6=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      IF(N1234.EQ.N6)MD6=1
      N1235=ISYMP(N12,N35)
      IF(N1235.EQ.N6)MD6=1
      N1245=ISYMP(N12,N45)
      IF(N1245.EQ.N6)MD6=1
      N1345=ISYMP(N13,N45)
      IF(N1345.EQ.N6)MD6=1
      N2345=ISYMP(N23,N45)
      IF(N2345.EQ.N6)MD6=1
      N12345=ISYMP(N123,N45)
      IF(N12345.EQ.N6)MD6=1
      CALL TDIS6A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,H6,
     1XQ6,NN1,MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,
     2MM4/MD4,NN5,MM5,MM5/MD5,NN6,MM6,MM6/MD6,X0,Y0,Z0,W0,U0,V0,XK,
     3NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6,VP,VPR,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS6A(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1H6,XQ6,NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NN5,MH5,
     2MM5,NN6,MH6,MM6,X0,Y0,Z0,W0,U0,V0,XK,NMODE,ISTATE,MODE1,MODE2,
     3MODE3,MODE4,MODE5,MODE6,VP,VPR,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM6,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM6,MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION H5(NN5,MH5,3),XQ5(MM5),H6(NN6,MH6,3),XQ6(MM6)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5),V0(MM6)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM6A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS6A'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(ICOUPL.GT.5)IFACTL=INTFAC(NMODE,ICOUPL,6)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(76)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(76)VPR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT4=ISTAT(ISTATE,MODE4)
      ITHAT5=ISTAT(ISTATE,MODE5)
      ITHAT6=ISTAT(ISTATE,MODE6)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MOD1=MD1
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      MD6=MODINT(MODE6)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
          IF(MODE6.EQ.ISYM(I,J))N6=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N1.EQ.N6)MD6=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N2.EQ.N6)MD6=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N3.EQ.N6)MD6=1
      IF(N4.EQ.N5)MD5=1
      IF(N4.EQ.N6)MD6=1
      IF(N5.EQ.N6)MD6=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      IF(N12.EQ.N6)MD6=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      IF(N13.EQ.N6)MD6=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      IF(N14.EQ.N6)MD6=1
      N15=ISYMP(N1,N5)
      IF(N15.EQ.N6)MD6=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      IF(N23.EQ.N6)MD6=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      IF(N24.EQ.N6)MD6=1
      N25=ISYMP(N2,N5)
      IF(N25.EQ.N6)MD6=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      IF(N34.EQ.N6)MD6=1
      N35=ISYMP(N3,N5)
      IF(N35.EQ.N6)MD6=1
      N45=ISYMP(N4,N5)
      IF(N45.EQ.N6)MD6=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      IF(N123.EQ.N6)MD6=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      IF(N124.EQ.N6)MD6=1
      N125=ISYMP(N12,N5)
      IF(N125.EQ.N6)MD6=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      IF(N134.EQ.N6)MD6=1
      N135=ISYMP(N13,N5)
      IF(N135.EQ.N6)MD6=1
      N145=ISYMP(N14,N5)
      IF(N145.EQ.N6)MD6=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      IF(N234.EQ.N6)MD6=1
      N235=ISYMP(N23,N5)
      IF(N235.EQ.N6)MD6=1
      N245=ISYMP(N24,N5)
      IF(N245.EQ.N6)MD6=1
      N345=ISYMP(N34,N5)
      IF(N345.EQ.N6)MD6=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      IF(N1234.EQ.N6)MD6=1
      N1235=ISYMP(N12,N35)
      IF(N1235.EQ.N6)MD6=1
      N1245=ISYMP(N12,N45)
      IF(N1245.EQ.N6)MD6=1
      N1345=ISYMP(N13,N45)
      IF(N1345.EQ.N6)MD6=1
      N2345=ISYMP(N23,N45)
      IF(N2345.EQ.N6)MD6=1
      N12345=ISYMP(N123,N45)
      IF(N12345.EQ.N6)MD6=1
      MD=MD1*MD2*MD3*MD4*MD5*MD6

C***********************************************************
      IF(IWHICH.GE.0)THEN
C**POTENTIAL
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
        DO M2=1,MM2
          Y00=H2(ITHAT2,M2,1)*IFACTL*MD
          Y0(M2)=Y00*H2(ITHAT2,M2,1)
        END DO
        DO M3=1,MM3
          Z00=H3(ITHAT3,M3,1)
          Z0(M3)=Z00*H3(ITHAT3,M3,1)
        END DO
        DO M4=1,MM4
          W00=H4(ITHAT4,M4,1)
          W0(M4)=W00*H4(ITHAT4,M4,1)
        END DO
        DO M5=1,MM5
          U00=H5(ITHAT5,M5,1)
          U0(M5)=U00*H5(ITHAT5,M5,1)
        END DO
        DO M6=1,MM6
          V00=H6(ITHAT6,M6,1)
          V0(M6)=V00*H6(ITHAT6,M6,1)
        END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
        DO M1=1,MM1
          X=0
C**INTEGRATE OVER SINGLE STATES (START)
          IF(JCOUPL.GT.0)THEN
            DO M2=1,MM2
              DO M3=1,MM3
                DO M4=1,MM4
                  DO M5=1,MM5
                    DO M6=1,MM6
                      IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1                X=X+Y0(M2)*Z0(M3)*W0(M4)*U0(M5)*V0(M6)*
     2                VP(M6,M5,M4,M3,M2,M1)
                    END DO
                  END DO
                END DO
              END DO
            END DO
          ELSE
            DO M2=1,MM2
              DO M3=1,MM3
                DO M4=1,MM4
                  DO M5=1,MM5
                    DO M6=1,MM6
                      IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1                X=X+Y0(M2)*Z0(M3)*W0(M4)*U0(M5)*V0(M6)*
     2                VPR(M6,M5,M4,M3,M2,M1)
                    END DO
                  END DO
                END DO
              END DO
            END DO
          END IF
C**INTEGRATE OVER SINGLE STATES (END)
          DO IRHS=1,NN1
            ILINE=MOD1-MOD(IRHS,MOD1)
            X1=H1(IRHS,M1,1)*X
            DO ILHS=ILINE,IRHS,MOD1
              Y1=H1(ILHS,M1,1)
              XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y1*X1
            END DO
          END DO
        END DO
      END IF

      IF(ITIM6A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM6A=1
        CALL FLUSH(IOUT)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS6B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1H6,XQ6,NN1,MM1,NN2,MM2,NN3,MM3,NN4,MM4,NN5,MM5,NN6,MM6,X0,Y0,Z0,
     2W0,U0,V0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6,VP,
     3VPR,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM6,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM6,MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H5(NN5,MM5,3),XQ5(MM5),H6(NN6,MM6,3),XQ6(MM6)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5),V0(MM6)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      MD6=MODINT(MODE6)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
          IF(MODE6.EQ.ISYM(I,J))N6=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N1.EQ.N6)MD6=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N2.EQ.N6)MD6=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N3.EQ.N6)MD6=1
      IF(N4.EQ.N5)MD5=1
      IF(N4.EQ.N6)MD6=1
      IF(N5.EQ.N6)MD6=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      IF(N12.EQ.N6)MD6=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      IF(N13.EQ.N6)MD6=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      IF(N14.EQ.N6)MD6=1
      N15=ISYMP(N1,N5)
      IF(N15.EQ.N6)MD6=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      IF(N23.EQ.N6)MD6=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      IF(N24.EQ.N6)MD6=1
      N25=ISYMP(N2,N5)
      IF(N25.EQ.N6)MD6=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      IF(N34.EQ.N6)MD6=1
      N35=ISYMP(N3,N5)
      IF(N35.EQ.N6)MD6=1
      N45=ISYMP(N4,N5)
      IF(N45.EQ.N6)MD6=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      IF(N123.EQ.N6)MD6=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      IF(N124.EQ.N6)MD6=1
      N125=ISYMP(N12,N5)
      IF(N125.EQ.N6)MD6=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      IF(N134.EQ.N6)MD6=1
      N135=ISYMP(N13,N5)
      IF(N135.EQ.N6)MD6=1
      N145=ISYMP(N14,N5)
      IF(N145.EQ.N6)MD6=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      IF(N234.EQ.N6)MD6=1
      N235=ISYMP(N23,N5)
      IF(N235.EQ.N6)MD6=1
      N245=ISYMP(N24,N5)
      IF(N245.EQ.N6)MD6=1
      N345=ISYMP(N34,N5)
      IF(N345.EQ.N6)MD6=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      IF(N1234.EQ.N6)MD6=1
      N1235=ISYMP(N12,N35)
      IF(N1235.EQ.N6)MD6=1
      N1245=ISYMP(N12,N45)
      IF(N1245.EQ.N6)MD6=1
      N1345=ISYMP(N13,N45)
      IF(N1345.EQ.N6)MD6=1
      N2345=ISYMP(N23,N45)
      IF(N2345.EQ.N6)MD6=1
      N12345=ISYMP(N123,N45)
      IF(N12345.EQ.N6)MD6=1
      CALL TDIS6B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,H6,
     1XQ6,NN1,MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,
     2MM4/MD4,NN5,MM5,MM5/MD5,NN6,MM6,MM6/MD6,X0,Y0,Z0,W0,U0,V0,XK,
     3NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6,VP,VPR,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS6B(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1H6,XQ6,NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NN5,MH5,
     2MM5,NN6,MH6,MM6,X0,Y0,Z0,W0,U0,V0,XK,NMODE,ISTATE,MODE1,MODE2,
     3MODE3,MODE4,MODE5,MODE6,VP,VPR,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM6,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM6,MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION H5(NN5,MH5,3),XQ5(MM5),H6(NN6,MH6,3),XQ6(MM6)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5),V0(MM6)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM6A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS6B'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(ICOUPL.GT.5)IFACTL=INTFAC(NMODE,ICOUPL,6)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(76)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(76)VPR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT4=ISTAT(ISTATE,MODE4)
      ITHAT5=ISTAT(ISTATE,MODE5)
      ITHAT6=ISTAT(ISTATE,MODE6)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MOD2=MD2
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      MD6=MODINT(MODE6)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
          IF(MODE6.EQ.ISYM(I,J))N6=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N1.EQ.N6)MD6=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N2.EQ.N6)MD6=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N3.EQ.N6)MD6=1
      IF(N4.EQ.N5)MD5=1
      IF(N4.EQ.N6)MD6=1
      IF(N5.EQ.N6)MD6=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      IF(N12.EQ.N6)MD6=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      IF(N13.EQ.N6)MD6=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      IF(N14.EQ.N6)MD6=1
      N15=ISYMP(N1,N5)
      IF(N15.EQ.N6)MD6=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      IF(N23.EQ.N6)MD6=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      IF(N24.EQ.N6)MD6=1
      N25=ISYMP(N2,N5)
      IF(N25.EQ.N6)MD6=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      IF(N34.EQ.N6)MD6=1
      N35=ISYMP(N3,N5)
      IF(N35.EQ.N6)MD6=1
      N45=ISYMP(N4,N5)
      IF(N45.EQ.N6)MD6=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      IF(N123.EQ.N6)MD6=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      IF(N124.EQ.N6)MD6=1
      N125=ISYMP(N12,N5)
      IF(N125.EQ.N6)MD6=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      IF(N134.EQ.N6)MD6=1
      N135=ISYMP(N13,N5)
      IF(N135.EQ.N6)MD6=1
      N145=ISYMP(N14,N5)
      IF(N145.EQ.N6)MD6=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      IF(N234.EQ.N6)MD6=1
      N235=ISYMP(N23,N5)
      IF(N235.EQ.N6)MD6=1
      N245=ISYMP(N24,N5)
      IF(N245.EQ.N6)MD6=1
      N345=ISYMP(N34,N5)
      IF(N345.EQ.N6)MD6=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      IF(N1234.EQ.N6)MD6=1
      N1235=ISYMP(N12,N35)
      IF(N1235.EQ.N6)MD6=1
      N1245=ISYMP(N12,N45)
      IF(N1245.EQ.N6)MD6=1
      N1345=ISYMP(N13,N45)
      IF(N1345.EQ.N6)MD6=1
      N2345=ISYMP(N23,N45)
      IF(N2345.EQ.N6)MD6=1
      N12345=ISYMP(N123,N45)
      IF(N12345.EQ.N6)MD6=1
      MD=MD1*MD2*MD3*MD4*MD5*MD6

C***********************************************************
      IF(IWHICH.GE.0)THEN
C**POTENTIAL
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
        DO M1=1,MM1
          X00=H1(ITHAT1,M1,1)*IFACTL*MD
          X0(M1)=X00*H1(ITHAT1,M1,1)
        END DO
        DO M3=1,MM3
          Z00=H3(ITHAT3,M3,1)
          Z0(M3)=Z00*H3(ITHAT3,M3,1)
        END DO
        DO M4=1,MM4
          W00=H4(ITHAT4,M4,1)
          W0(M4)=W00*H4(ITHAT4,M4,1)
        END DO
        DO M5=1,MM5
          U00=H5(ITHAT5,M5,1)
          U0(M5)=U00*H5(ITHAT5,M5,1)
        END DO
        DO M6=1,MM6
          V00=H6(ITHAT6,M6,1)
          V0(M6)=V00*H6(ITHAT6,M6,1)
        END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
        DO M2=1,MM2
          X=0
C**INTEGRATE OVER SINGLE STATES (START)
          IF(JCOUPL.GT.0)THEN
            DO M1=1,MM1
              DO M3=1,MM3
                DO M4=1,MM4
                  DO M5=1,MM5
                    DO M6=1,MM6
                      IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1                X=X+X0(M1)*Z0(M3)*W0(M4)*U0(M5)*V0(M6)*
     2                VP(M6,M5,M4,M3,M2,M1)
                    END DO
                  END DO
                END DO
              END DO
            END DO
          ELSE
            DO M1=1,MM1
              DO M3=1,MM3
                DO M4=1,MM4
                  DO M5=1,MM5
                    DO M6=1,MM6
                      IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1                X=X+X0(M1)*Z0(M3)*W0(M4)*U0(M5)*V0(M6)*
     2                VPR(M6,M5,M4,M3,M2,M1)
                    END DO
                  END DO
                END DO
              END DO
            END DO
          END IF
C**INTEGRATE OVER SINGLE STATES (END)
          DO IRHS=1,NN2
            ILINE=MOD2-MOD(IRHS,MOD2)
            X2=H2(IRHS,M2,1)*X
            DO ILHS=ILINE,IRHS,MOD2
              Y2=H2(ILHS,M2,1)
              XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y2*X2
            END DO
          END DO
        END DO
      END IF

      IF(ITIM6A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM6A=1
        CALL FLUSH(IOUT)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS6C(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1H6,XQ6,NN1,MM1,NN2,MM2,NN3,MM3,NN4,MM4,NN5,MM5,NN6,MM6,X0,Y0,Z0,
     2W0,U0,V0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6,VP,
     3VPR,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM6,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM6,MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H5(NN5,MM5,3),XQ5(MM5),H6(NN6,MM6,3),XQ6(MM6)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5),V0(MM6)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      MD6=MODINT(MODE6)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
          IF(MODE6.EQ.ISYM(I,J))N6=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N1.EQ.N6)MD6=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N2.EQ.N6)MD6=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N3.EQ.N6)MD6=1
      IF(N4.EQ.N5)MD5=1
      IF(N4.EQ.N6)MD6=1
      IF(N5.EQ.N6)MD6=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      IF(N12.EQ.N6)MD6=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      IF(N13.EQ.N6)MD6=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      IF(N14.EQ.N6)MD6=1
      N15=ISYMP(N1,N5)
      IF(N15.EQ.N6)MD6=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      IF(N23.EQ.N6)MD6=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      IF(N24.EQ.N6)MD6=1
      N25=ISYMP(N2,N5)
      IF(N25.EQ.N6)MD6=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      IF(N34.EQ.N6)MD6=1
      N35=ISYMP(N3,N5)
      IF(N35.EQ.N6)MD6=1
      N45=ISYMP(N4,N5)
      IF(N45.EQ.N6)MD6=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      IF(N123.EQ.N6)MD6=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      IF(N124.EQ.N6)MD6=1
      N125=ISYMP(N12,N5)
      IF(N125.EQ.N6)MD6=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      IF(N134.EQ.N6)MD6=1
      N135=ISYMP(N13,N5)
      IF(N135.EQ.N6)MD6=1
      N145=ISYMP(N14,N5)
      IF(N145.EQ.N6)MD6=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      IF(N234.EQ.N6)MD6=1
      N235=ISYMP(N23,N5)
      IF(N235.EQ.N6)MD6=1
      N245=ISYMP(N24,N5)
      IF(N245.EQ.N6)MD6=1
      N345=ISYMP(N34,N5)
      IF(N345.EQ.N6)MD6=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      IF(N1234.EQ.N6)MD6=1
      N1235=ISYMP(N12,N35)
      IF(N1235.EQ.N6)MD6=1
      N1245=ISYMP(N12,N45)
      IF(N1245.EQ.N6)MD6=1
      N1345=ISYMP(N13,N45)
      IF(N1345.EQ.N6)MD6=1
      N2345=ISYMP(N23,N45)
      IF(N2345.EQ.N6)MD6=1
      N12345=ISYMP(N123,N45)
      IF(N12345.EQ.N6)MD6=1
      CALL TDIS6C(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,H6,
     1XQ6,NN1,MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,
     2MM4/MD4,NN5,MM5,MM5/MD5,NN6,MM6,MM6/MD6,X0,Y0,Z0,W0,U0,V0,XK,
     3NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6,VP,VPR,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS6C(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1H6,XQ6,NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NN5,MH5,
     2MM5,NN6,MH6,MM6,X0,Y0,Z0,W0,U0,V0,XK,NMODE,ISTATE,MODE1,MODE2,
     3MODE3,MODE4,MODE5,MODE6,VP,VPR,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM6,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM6,MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION H5(NN5,MH5,3),XQ5(MM5),H6(NN6,MH6,3),XQ6(MM6)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5),V0(MM6)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM6A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS6C'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(ICOUPL.GT.5)IFACTL=INTFAC(NMODE,ICOUPL,6)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(76)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(76)VPR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT4=ISTAT(ISTATE,MODE4)
      ITHAT5=ISTAT(ISTATE,MODE5)
      ITHAT6=ISTAT(ISTATE,MODE6)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MOD3=MD3
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      MD6=MODINT(MODE6)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
          IF(MODE6.EQ.ISYM(I,J))N6=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N1.EQ.N6)MD6=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N2.EQ.N6)MD6=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N3.EQ.N6)MD6=1
      IF(N4.EQ.N5)MD5=1
      IF(N4.EQ.N6)MD6=1
      IF(N5.EQ.N6)MD6=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      IF(N12.EQ.N6)MD6=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      IF(N13.EQ.N6)MD6=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      IF(N14.EQ.N6)MD6=1
      N15=ISYMP(N1,N5)
      IF(N15.EQ.N6)MD6=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      IF(N23.EQ.N6)MD6=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      IF(N24.EQ.N6)MD6=1
      N25=ISYMP(N2,N5)
      IF(N25.EQ.N6)MD6=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      IF(N34.EQ.N6)MD6=1
      N35=ISYMP(N3,N5)
      IF(N35.EQ.N6)MD6=1
      N45=ISYMP(N4,N5)
      IF(N45.EQ.N6)MD6=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      IF(N123.EQ.N6)MD6=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      IF(N124.EQ.N6)MD6=1
      N125=ISYMP(N12,N5)
      IF(N125.EQ.N6)MD6=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      IF(N134.EQ.N6)MD6=1
      N135=ISYMP(N13,N5)
      IF(N135.EQ.N6)MD6=1
      N145=ISYMP(N14,N5)
      IF(N145.EQ.N6)MD6=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      IF(N234.EQ.N6)MD6=1
      N235=ISYMP(N23,N5)
      IF(N235.EQ.N6)MD6=1
      N245=ISYMP(N24,N5)
      IF(N245.EQ.N6)MD6=1
      N345=ISYMP(N34,N5)
      IF(N345.EQ.N6)MD6=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      IF(N1234.EQ.N6)MD6=1
      N1235=ISYMP(N12,N35)
      IF(N1235.EQ.N6)MD6=1
      N1245=ISYMP(N12,N45)
      IF(N1245.EQ.N6)MD6=1
      N1345=ISYMP(N13,N45)
      IF(N1345.EQ.N6)MD6=1
      N2345=ISYMP(N23,N45)
      IF(N2345.EQ.N6)MD6=1
      N12345=ISYMP(N123,N45)
      IF(N12345.EQ.N6)MD6=1
      MD=MD1*MD2*MD3*MD4*MD5*MD6

C***********************************************************
      IF(IWHICH.GE.0)THEN
C**POTENTIAL
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
        DO M1=1,MM1
          X00=H1(ITHAT1,M1,1)*IFACTL*MD
          X0(M1)=X00*H1(ITHAT1,M1,1)
        END DO
        DO M2=1,MM2
          Y00=H2(ITHAT2,M2,1)
          Y0(M2)=Y00*H2(ITHAT2,M2,1)
        END DO
        DO M4=1,MM4
          W00=H4(ITHAT4,M4,1)
          W0(M4)=W00*H4(ITHAT4,M4,1)
        END DO
        DO M5=1,MM5
          U00=H5(ITHAT5,M5,1)
          U0(M5)=U00*H5(ITHAT5,M5,1)
        END DO
        DO M6=1,MM6
          V00=H6(ITHAT6,M6,1)
          V0(M6)=V00*H6(ITHAT6,M6,1)
        END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
        DO M3=1,MM3
          X=0
C**INTEGRATE OVER SINGLE STATES (START)
          IF(JCOUPL.GT.0)THEN
            DO M1=1,MM1
              DO M2=1,MM2
                DO M4=1,MM4
                  DO M5=1,MM5
                    DO M6=1,MM6
                      IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1                X=X+X0(M1)*Y0(M2)*W0(M4)*U0(M5)*V0(M6)*
     2                VP(M6,M5,M4,M3,M2,M1)
                    END DO
                  END DO
                END DO
              END DO
            END DO
          ELSE
            DO M1=1,MM1
              DO M2=1,MM2
                DO M4=1,MM4
                  DO M5=1,MM5
                    DO M6=1,MM6
                      IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1                X=X+X0(M1)*Y0(M2)*W0(M4)*U0(M5)*V0(M6)*
     2                VPR(M6,M5,M4,M3,M2,M1)
                    END DO
                  END DO
                END DO
              END DO
            END DO
          END IF
C**INTEGRATE OVER SINGLE STATES (END)
          DO IRHS=1,NN3
            ILINE=MOD3-MOD(IRHS,MOD3)
            X3=H3(IRHS,M3,1)*X
            DO ILHS=ILINE,IRHS,MOD3
              Y3=H3(ILHS,M3,1)
              XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y3*X3
            END DO
          END DO
        END DO
      END IF

      IF(ITIM6A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM6A=1
        CALL FLUSH(IOUT)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS6D(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1H6,XQ6,NN1,MM1,NN2,MM2,NN3,MM3,NN4,MM4,NN5,MM5,NN6,MM6,X0,Y0,Z0,
     2W0,U0,V0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6,VP,
     3VPR,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM6,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM6,MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H5(NN5,MM5,3),XQ5(MM5),H6(NN6,MM6,3),XQ6(MM6)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5),V0(MM6)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      MD6=MODINT(MODE6)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
          IF(MODE6.EQ.ISYM(I,J))N6=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N1.EQ.N6)MD6=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N2.EQ.N6)MD6=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N3.EQ.N6)MD6=1
      IF(N4.EQ.N5)MD5=1
      IF(N4.EQ.N6)MD6=1
      IF(N5.EQ.N6)MD6=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      IF(N12.EQ.N6)MD6=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      IF(N13.EQ.N6)MD6=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      IF(N14.EQ.N6)MD6=1
      N15=ISYMP(N1,N5)
      IF(N15.EQ.N6)MD6=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      IF(N23.EQ.N6)MD6=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      IF(N24.EQ.N6)MD6=1
      N25=ISYMP(N2,N5)
      IF(N25.EQ.N6)MD6=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      IF(N34.EQ.N6)MD6=1
      N35=ISYMP(N3,N5)
      IF(N35.EQ.N6)MD6=1
      N45=ISYMP(N4,N5)
      IF(N45.EQ.N6)MD6=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      IF(N123.EQ.N6)MD6=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      IF(N124.EQ.N6)MD6=1
      N125=ISYMP(N12,N5)
      IF(N125.EQ.N6)MD6=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      IF(N134.EQ.N6)MD6=1
      N135=ISYMP(N13,N5)
      IF(N135.EQ.N6)MD6=1
      N145=ISYMP(N14,N5)
      IF(N145.EQ.N6)MD6=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      IF(N234.EQ.N6)MD6=1
      N235=ISYMP(N23,N5)
      IF(N235.EQ.N6)MD6=1
      N245=ISYMP(N24,N5)
      IF(N245.EQ.N6)MD6=1
      N345=ISYMP(N34,N5)
      IF(N345.EQ.N6)MD6=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      IF(N1234.EQ.N6)MD6=1
      N1235=ISYMP(N12,N35)
      IF(N1235.EQ.N6)MD6=1
      N1245=ISYMP(N12,N45)
      IF(N1245.EQ.N6)MD6=1
      N1345=ISYMP(N13,N45)
      IF(N1345.EQ.N6)MD6=1
      N2345=ISYMP(N23,N45)
      IF(N2345.EQ.N6)MD6=1
      N12345=ISYMP(N123,N45)
      IF(N12345.EQ.N6)MD6=1
      CALL TDIS6D(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,H6,
     1XQ6,NN1,MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,
     2MM4/MD4,NN5,MM5,MM5/MD5,NN6,MM6,MM6/MD6,X0,Y0,Z0,W0,U0,V0,XK,
     3NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6,VP,VPR,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS6D(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1H6,XQ6,NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NN5,MH5,
     2MM5,NN6,MH6,MM6,X0,Y0,Z0,W0,U0,V0,XK,NMODE,ISTATE,MODE1,MODE2,
     3MODE3,MODE4,MODE5,MODE6,VP,VPR,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM6,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM6,MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION H5(NN5,MH5,3),XQ5(MM5),H6(NN6,MH6,3),XQ6(MM6)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5),V0(MM6)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM6A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS6D'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(ICOUPL.GT.5)IFACTL=INTFAC(NMODE,ICOUPL,6)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(76)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(76)VPR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT5=ISTAT(ISTATE,MODE5)
      ITHAT6=ISTAT(ISTATE,MODE6)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MOD4=MD4
      MD5=MODINT(MODE5)
      MD6=MODINT(MODE6)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
          IF(MODE6.EQ.ISYM(I,J))N6=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N1.EQ.N6)MD6=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N2.EQ.N6)MD6=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N3.EQ.N6)MD6=1
      IF(N4.EQ.N5)MD5=1
      IF(N4.EQ.N6)MD6=1
      IF(N5.EQ.N6)MD6=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      IF(N12.EQ.N6)MD6=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      IF(N13.EQ.N6)MD6=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      IF(N14.EQ.N6)MD6=1
      N15=ISYMP(N1,N5)
      IF(N15.EQ.N6)MD6=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      IF(N23.EQ.N6)MD6=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      IF(N24.EQ.N6)MD6=1
      N25=ISYMP(N2,N5)
      IF(N25.EQ.N6)MD6=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      IF(N34.EQ.N6)MD6=1
      N35=ISYMP(N3,N5)
      IF(N35.EQ.N6)MD6=1
      N45=ISYMP(N4,N5)
      IF(N45.EQ.N6)MD6=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      IF(N123.EQ.N6)MD6=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      IF(N124.EQ.N6)MD6=1
      N125=ISYMP(N12,N5)
      IF(N125.EQ.N6)MD6=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      IF(N134.EQ.N6)MD6=1
      N135=ISYMP(N13,N5)
      IF(N135.EQ.N6)MD6=1
      N145=ISYMP(N14,N5)
      IF(N145.EQ.N6)MD6=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      IF(N234.EQ.N6)MD6=1
      N235=ISYMP(N23,N5)
      IF(N235.EQ.N6)MD6=1
      N245=ISYMP(N24,N5)
      IF(N245.EQ.N6)MD6=1
      N345=ISYMP(N34,N5)
      IF(N345.EQ.N6)MD6=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      IF(N1234.EQ.N6)MD6=1
      N1235=ISYMP(N12,N35)
      IF(N1235.EQ.N6)MD6=1
      N1245=ISYMP(N12,N45)
      IF(N1245.EQ.N6)MD6=1
      N1345=ISYMP(N13,N45)
      IF(N1345.EQ.N6)MD6=1
      N2345=ISYMP(N23,N45)
      IF(N2345.EQ.N6)MD6=1
      N12345=ISYMP(N123,N45)
      IF(N12345.EQ.N6)MD6=1
      MD=MD1*MD2*MD3*MD4*MD5*MD6

C***********************************************************
      IF(IWHICH.GE.0)THEN
C**POTENTIAL
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
        DO M1=1,MM1
          X00=H1(ITHAT1,M1,1)*IFACTL*MD
          X0(M1)=X00*H1(ITHAT1,M1,1)
        END DO
        DO M2=1,MM2
          Y00=H2(ITHAT2,M2,1)
          Y0(M2)=Y00*H2(ITHAT2,M2,1)
        END DO
        DO M3=1,MM3
          Z00=H3(ITHAT3,M3,1)
          Z0(M3)=Z00*H3(ITHAT3,M3,1)
        END DO
        DO M5=1,MM5
          U00=H5(ITHAT5,M5,1)
          U0(M5)=U00*H5(ITHAT5,M5,1)
        END DO
        DO M6=1,MM6
          V00=H6(ITHAT6,M6,1)
          V0(M6)=V00*H6(ITHAT6,M6,1)
        END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
        DO M4=1,MM4
          X=0
C**INTEGRATE OVER SINGLE STATES (START)
          IF(JCOUPL.GT.0)THEN
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  DO M5=1,MM5
                    DO M6=1,MM6
                      IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1                X=X+X0(M1)*Y0(M2)*Z0(M3)*U0(M5)*V0(M6)*
     2                VP(M6,M5,M4,M3,M2,M1)
                    END DO
                  END DO
                END DO
              END DO
            END DO
          ELSE
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  DO M5=1,MM5
                    DO M6=1,MM6
                      IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1                X=X+X0(M1)*Y0(M2)*Z0(M3)*U0(M5)*V0(M6)*
     2                VPR(M6,M5,M4,M3,M2,M1)
                    END DO
                  END DO
                END DO
              END DO
            END DO
          END IF
C**INTEGRATE OVER SINGLE STATES (END)
          DO IRHS=1,NN4
            ILINE=MOD4-MOD(IRHS,MOD4)
            X4=H4(IRHS,M4,1)*X
            DO ILHS=ILINE,IRHS,MOD4
              Y4=H4(ILHS,M4,1)
              XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y4*X4
            END DO
          END DO
        END DO
      END IF

      IF(ITIM6A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM6A=1
        CALL FLUSH(IOUT)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS6E(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1H6,XQ6,NN1,MM1,NN2,MM2,NN3,MM3,NN4,MM4,NN5,MM5,NN6,MM6,X0,Y0,Z0,
     2W0,U0,V0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6,VP,
     3VPR,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM6,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM6,MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H5(NN5,MM5,3),XQ5(MM5),H6(NN6,MM6,3),XQ6(MM6)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5),V0(MM6)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      MD6=MODINT(MODE6)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
          IF(MODE6.EQ.ISYM(I,J))N6=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N1.EQ.N6)MD6=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N2.EQ.N6)MD6=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N3.EQ.N6)MD6=1
      IF(N4.EQ.N5)MD5=1
      IF(N4.EQ.N6)MD6=1
      IF(N5.EQ.N6)MD6=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      IF(N12.EQ.N6)MD6=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      IF(N13.EQ.N6)MD6=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      IF(N14.EQ.N6)MD6=1
      N15=ISYMP(N1,N5)
      IF(N15.EQ.N6)MD6=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      IF(N23.EQ.N6)MD6=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      IF(N24.EQ.N6)MD6=1
      N25=ISYMP(N2,N5)
      IF(N25.EQ.N6)MD6=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      IF(N34.EQ.N6)MD6=1
      N35=ISYMP(N3,N5)
      IF(N35.EQ.N6)MD6=1
      N45=ISYMP(N4,N5)
      IF(N45.EQ.N6)MD6=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      IF(N123.EQ.N6)MD6=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      IF(N124.EQ.N6)MD6=1
      N125=ISYMP(N12,N5)
      IF(N125.EQ.N6)MD6=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      IF(N134.EQ.N6)MD6=1
      N135=ISYMP(N13,N5)
      IF(N135.EQ.N6)MD6=1
      N145=ISYMP(N14,N5)
      IF(N145.EQ.N6)MD6=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      IF(N234.EQ.N6)MD6=1
      N235=ISYMP(N23,N5)
      IF(N235.EQ.N6)MD6=1
      N245=ISYMP(N24,N5)
      IF(N245.EQ.N6)MD6=1
      N345=ISYMP(N34,N5)
      IF(N345.EQ.N6)MD6=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      IF(N1234.EQ.N6)MD6=1
      N1235=ISYMP(N12,N35)
      IF(N1235.EQ.N6)MD6=1
      N1245=ISYMP(N12,N45)
      IF(N1245.EQ.N6)MD6=1
      N1345=ISYMP(N13,N45)
      IF(N1345.EQ.N6)MD6=1
      N2345=ISYMP(N23,N45)
      IF(N2345.EQ.N6)MD6=1
      N12345=ISYMP(N123,N45)
      IF(N12345.EQ.N6)MD6=1
      CALL TDIS6E(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,H6,
     1XQ6,NN1,MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,
     2MM4/MD4,NN5,MM5,MM5/MD5,NN6,MM6,MM6/MD6,X0,Y0,Z0,W0,U0,V0,XK,
     3NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6,VP,VPR,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS6E(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1H6,XQ6,NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NN5,MH5,
     2MM5,NN6,MH6,MM6,X0,Y0,Z0,W0,U0,V0,XK,NMODE,ISTATE,MODE1,MODE2,
     3MODE3,MODE4,MODE5,MODE6,VP,VPR,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM6,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM6,MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION H5(NN5,MH5,3),XQ5(MM5),H6(NN6,MH6,3),XQ6(MM6)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5),V0(MM6)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM6A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS6E'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(ICOUPL.GT.5)IFACTL=INTFAC(NMODE,ICOUPL,6)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(76)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(76)VPR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT4=ISTAT(ISTATE,MODE4)
      ITHAT6=ISTAT(ISTATE,MODE6)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      MOD5=MD5
      MD6=MODINT(MODE6)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
          IF(MODE6.EQ.ISYM(I,J))N6=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N1.EQ.N6)MD6=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N2.EQ.N6)MD6=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N3.EQ.N6)MD6=1
      IF(N4.EQ.N5)MD5=1
      IF(N4.EQ.N6)MD6=1
      IF(N5.EQ.N6)MD6=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      IF(N12.EQ.N6)MD6=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      IF(N13.EQ.N6)MD6=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      IF(N14.EQ.N6)MD6=1
      N15=ISYMP(N1,N5)
      IF(N15.EQ.N6)MD6=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      IF(N23.EQ.N6)MD6=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      IF(N24.EQ.N6)MD6=1
      N25=ISYMP(N2,N5)
      IF(N25.EQ.N6)MD6=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      IF(N34.EQ.N6)MD6=1
      N35=ISYMP(N3,N5)
      IF(N35.EQ.N6)MD6=1
      N45=ISYMP(N4,N5)
      IF(N45.EQ.N6)MD6=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      IF(N123.EQ.N6)MD6=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      IF(N124.EQ.N6)MD6=1
      N125=ISYMP(N12,N5)
      IF(N125.EQ.N6)MD6=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      IF(N134.EQ.N6)MD6=1
      N135=ISYMP(N13,N5)
      IF(N135.EQ.N6)MD6=1
      N145=ISYMP(N14,N5)
      IF(N145.EQ.N6)MD6=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      IF(N234.EQ.N6)MD6=1
      N235=ISYMP(N23,N5)
      IF(N235.EQ.N6)MD6=1
      N245=ISYMP(N24,N5)
      IF(N245.EQ.N6)MD6=1
      N345=ISYMP(N34,N5)
      IF(N345.EQ.N6)MD6=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      IF(N1234.EQ.N6)MD6=1
      N1235=ISYMP(N12,N35)
      IF(N1235.EQ.N6)MD6=1
      N1245=ISYMP(N12,N45)
      IF(N1245.EQ.N6)MD6=1
      N1345=ISYMP(N13,N45)
      IF(N1345.EQ.N6)MD6=1
      N2345=ISYMP(N23,N45)
      IF(N2345.EQ.N6)MD6=1
      N12345=ISYMP(N123,N45)
      IF(N12345.EQ.N6)MD6=1
      MD=MD1*MD2*MD3*MD4*MD5*MD6

C***********************************************************
      IF(IWHICH.GE.0)THEN
C**POTENTIAL
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
        DO M1=1,MM1
          X00=H1(ITHAT1,M1,1)*IFACTL*MD
          X0(M1)=X00*H1(ITHAT1,M1,1)
        END DO
        DO M2=1,MM2
          Y00=H2(ITHAT2,M2,1)
          Y0(M2)=Y00*H2(ITHAT2,M2,1)
        END DO
        DO M3=1,MM3
          Z00=H3(ITHAT3,M3,1)
          Z0(M3)=Z00*H3(ITHAT3,M3,1)
        END DO
        DO M4=1,MM4
          W00=H4(ITHAT4,M4,1)
          W0(M4)=W00*H4(ITHAT4,M4,1)
        END DO
        DO M6=1,MM6
          V00=H6(ITHAT6,M6,1)
          V0(M6)=V00*H6(ITHAT6,M6,1)
        END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
        DO M5=1,MM5
          X=0
C**INTEGRATE OVER SINGLE STATES (START)
          IF(JCOUPL.GT.0)THEN
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  DO M4=1,MM4
                    DO M6=1,MM6
                      IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1                X=X+X0(M1)*Y0(M2)*Z0(M3)*W0(M4)*V0(M6)*
     2                VP(M6,M5,M4,M3,M2,M1)
                    END DO
                  END DO
                END DO
              END DO
            END DO
          ELSE
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  DO M4=1,MM4
                    DO M6=1,MM6
                      IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1                X=X+X0(M1)*Y0(M2)*Z0(M3)*W0(M4)*V0(M6)*
     2                VPR(M6,M5,M4,M3,M2,M1)
                    END DO
                  END DO
                END DO
              END DO
            END DO
          END IF
C**INTEGRATE OVER SINGLE STATES (END)
          DO IRHS=1,NN5
            ILINE=MOD5-MOD(IRHS,MOD5)
            X5=H5(IRHS,M5,1)*X
            DO ILHS=ILINE,IRHS,MOD5
              Y5=H5(ILHS,M5,1)
              XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y5*X5
            END DO
          END DO
        END DO
      END IF

      IF(ITIM6A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM6A=1
        CALL FLUSH(IOUT)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE THIS6F(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1H6,XQ6,NN1,MM1,NN2,MM2,NN3,MM3,NN4,MM4,NN5,MM5,NN6,MM6,X0,Y0,Z0,
     2W0,U0,V0,XK,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6,VP,
     3VPR,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM6,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM6,MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H5(NN5,MM5,3),XQ5(MM5),H6(NN6,MM6,3),XQ6(MM6)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5),V0(MM6)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      MD6=MODINT(MODE6)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
          IF(MODE6.EQ.ISYM(I,J))N6=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N1.EQ.N6)MD6=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N2.EQ.N6)MD6=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N3.EQ.N6)MD6=1
      IF(N4.EQ.N5)MD5=1
      IF(N4.EQ.N6)MD6=1
      IF(N5.EQ.N6)MD6=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      IF(N12.EQ.N6)MD6=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      IF(N13.EQ.N6)MD6=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      IF(N14.EQ.N6)MD6=1
      N15=ISYMP(N1,N5)
      IF(N15.EQ.N6)MD6=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      IF(N23.EQ.N6)MD6=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      IF(N24.EQ.N6)MD6=1
      N25=ISYMP(N2,N5)
      IF(N25.EQ.N6)MD6=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      IF(N34.EQ.N6)MD6=1
      N35=ISYMP(N3,N5)
      IF(N35.EQ.N6)MD6=1
      N45=ISYMP(N4,N5)
      IF(N45.EQ.N6)MD6=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      IF(N123.EQ.N6)MD6=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      IF(N124.EQ.N6)MD6=1
      N125=ISYMP(N12,N5)
      IF(N125.EQ.N6)MD6=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      IF(N134.EQ.N6)MD6=1
      N135=ISYMP(N13,N5)
      IF(N135.EQ.N6)MD6=1
      N145=ISYMP(N14,N5)
      IF(N145.EQ.N6)MD6=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      IF(N234.EQ.N6)MD6=1
      N235=ISYMP(N23,N5)
      IF(N235.EQ.N6)MD6=1
      N245=ISYMP(N24,N5)
      IF(N245.EQ.N6)MD6=1
      N345=ISYMP(N34,N5)
      IF(N345.EQ.N6)MD6=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      IF(N1234.EQ.N6)MD6=1
      N1235=ISYMP(N12,N35)
      IF(N1235.EQ.N6)MD6=1
      N1245=ISYMP(N12,N45)
      IF(N1245.EQ.N6)MD6=1
      N1345=ISYMP(N13,N45)
      IF(N1345.EQ.N6)MD6=1
      N2345=ISYMP(N23,N45)
      IF(N2345.EQ.N6)MD6=1
      N12345=ISYMP(N123,N45)
      IF(N12345.EQ.N6)MD6=1
      CALL TDIS6F(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,H6,
     1XQ6,NN1,MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,
     2MM4/MD4,NN5,MM5,MM5/MD5,NN6,MM6,MM6/MD6,X0,Y0,Z0,W0,U0,V0,XK,
     3NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6,VP,VPR,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDIS6F(ISTAT,NSTAT,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,
     1H6,XQ6,NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NN5,MH5,
     2MM5,NN6,MH6,MM6,X0,Y0,Z0,W0,U0,V0,XK,NMODE,ISTATE,MODE1,MODE2,
     3MODE3,MODE4,MODE5,MODE6,VP,VPR,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM6,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM6,MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(NN1,NN1)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION H5(NN5,MH5,3),XQ5(MM5),H6(NN6,MH6,3),XQ6(MM6)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5),V0(MM6)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM6A.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THIS6F'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(ICOUPL.GT.5)IFACTL=INTFAC(NMODE,ICOUPL,6)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(76)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(76)VPR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT4=ISTAT(ISTATE,MODE4)
      ITHAT5=ISTAT(ISTATE,MODE5)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      MD6=MODINT(MODE6)
      MOD6=MD6
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
          IF(MODE6.EQ.ISYM(I,J))N6=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N1.EQ.N6)MD6=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N2.EQ.N6)MD6=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N3.EQ.N6)MD6=1
      IF(N4.EQ.N5)MD5=1
      IF(N4.EQ.N6)MD6=1
      IF(N5.EQ.N6)MD6=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      IF(N12.EQ.N6)MD6=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      IF(N13.EQ.N6)MD6=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      IF(N14.EQ.N6)MD6=1
      N15=ISYMP(N1,N5)
      IF(N15.EQ.N6)MD6=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      IF(N23.EQ.N6)MD6=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      IF(N24.EQ.N6)MD6=1
      N25=ISYMP(N2,N5)
      IF(N25.EQ.N6)MD6=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      IF(N34.EQ.N6)MD6=1
      N35=ISYMP(N3,N5)
      IF(N35.EQ.N6)MD6=1
      N45=ISYMP(N4,N5)
      IF(N45.EQ.N6)MD6=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      IF(N123.EQ.N6)MD6=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      IF(N124.EQ.N6)MD6=1
      N125=ISYMP(N12,N5)
      IF(N125.EQ.N6)MD6=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      IF(N134.EQ.N6)MD6=1
      N135=ISYMP(N13,N5)
      IF(N135.EQ.N6)MD6=1
      N145=ISYMP(N14,N5)
      IF(N145.EQ.N6)MD6=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      IF(N234.EQ.N6)MD6=1
      N235=ISYMP(N23,N5)
      IF(N235.EQ.N6)MD6=1
      N245=ISYMP(N24,N5)
      IF(N245.EQ.N6)MD6=1
      N345=ISYMP(N34,N5)
      IF(N345.EQ.N6)MD6=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      IF(N1234.EQ.N6)MD6=1
      N1235=ISYMP(N12,N35)
      IF(N1235.EQ.N6)MD6=1
      N1245=ISYMP(N12,N45)
      IF(N1245.EQ.N6)MD6=1
      N1345=ISYMP(N13,N45)
      IF(N1345.EQ.N6)MD6=1
      N2345=ISYMP(N23,N45)
      IF(N2345.EQ.N6)MD6=1
      N12345=ISYMP(N123,N45)
      IF(N12345.EQ.N6)MD6=1
      MD=MD1*MD2*MD3*MD4*MD5*MD6

C***********************************************************
      IF(IWHICH.GE.0)THEN
C**POTENTIAL
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
        DO M1=1,MM1
          X00=H1(ITHAT1,M1,1)*IFACTL*MD
          X0(M1)=X00*H1(ITHAT1,M1,1)
        END DO
        DO M2=1,MM2
          Y00=H2(ITHAT2,M2,1)
          Y0(M2)=Y00*H2(ITHAT2,M2,1)
        END DO
        DO M3=1,MM3
          Z00=H3(ITHAT3,M3,1)
          Z0(M3)=Z00*H3(ITHAT3,M3,1)
        END DO
        DO M4=1,MM4
          W00=H4(ITHAT4,M4,1)
          W0(M4)=W00*H4(ITHAT4,M4,1)
        END DO
        DO M5=1,MM5
          U00=H5(ITHAT5,M5,1)
          U0(M5)=U00*H5(ITHAT5,M5,1)
        END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
        DO M6=1,MM6
          X=0
C**INTEGRATE OVER SINGLE STATES (START)
          IF(JCOUPL.GT.0)THEN
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  DO M4=1,MM4
                    DO M5=1,MM5
                      IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1                X=X+X0(M1)*Y0(M2)*Z0(M3)*W0(M4)*U0(M5)*
     2                VP(M6,M5,M4,M3,M2,M1)
                    END DO
                  END DO
                END DO
              END DO
            END DO
          ELSE
            DO M1=1,MM1
              DO M2=1,MM2
                DO M3=1,MM3
                  DO M4=1,MM4
                    DO M5=1,MM5
                      IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1                X=X+X0(M1)*Y0(M2)*Z0(M3)*W0(M4)*U0(M5)*
     2                VPR(M6,M5,M4,M3,M2,M1)
                    END DO
                  END DO
                END DO
              END DO
            END DO
          END IF
C**INTEGRATE OVER SINGLE STATES (END)
          DO IRHS=1,NN6
            ILINE=MOD6-MOD(IRHS,MOD6)
            X6=H6(IRHS,M6,1)*X
            DO ILHS=ILINE,IRHS,MOD6
              Y6=H6(ILHS,M6,1)
              XK(ILHS,IRHS)=XK(ILHS,IRHS)+Y6*X6
            END DO
          END DO
        END DO
      END IF

      IF(ITIM6A.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM6A=1
        CALL FLUSH(IOUT)
      END IF
      RETURN
      END
****************************************************************
****************************************************************
      SUBROUTINE THAT6(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,MODE3,
     1MODE4,MODE5,MODE6,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,H6,XQ6,NN1,
     2MM1,NN2,MM2,NN3,MM3,NN4,MM4,NN5,MM5,NN6,MM6,X0,Y0,Z0,W0,U0,V0,XK,
     3KXK,VP,VPR,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM6,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM6,MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
      DIMENSION H1(NN1,MM1,3),XQ1(MM1),H2(NN2,MM2,3),XQ2(MM2)
      DIMENSION H3(NN3,MM3,3),XQ3(MM3),H4(NN4,MM4,3),XQ4(MM4)
      DIMENSION H5(NN5,MM5,3),XQ5(MM5),H6(NN6,MM6,3),XQ6(MM6)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5),V0(MM6)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      MD6=MODINT(MODE6)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
          IF(MODE6.EQ.ISYM(I,J))N6=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N1.EQ.N6)MD6=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N2.EQ.N6)MD6=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N3.EQ.N6)MD6=1
      IF(N4.EQ.N5)MD5=1
      IF(N4.EQ.N6)MD6=1
      IF(N5.EQ.N6)MD6=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      IF(N12.EQ.N6)MD6=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      IF(N13.EQ.N6)MD6=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      IF(N14.EQ.N6)MD6=1
      N15=ISYMP(N1,N5)
      IF(N15.EQ.N6)MD6=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      IF(N23.EQ.N6)MD6=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      IF(N24.EQ.N6)MD6=1
      N25=ISYMP(N2,N5)
      IF(N25.EQ.N6)MD6=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      IF(N34.EQ.N6)MD6=1
      N35=ISYMP(N3,N5)
      IF(N35.EQ.N6)MD6=1
      N45=ISYMP(N4,N5)
      IF(N45.EQ.N6)MD6=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      IF(N123.EQ.N6)MD6=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      IF(N124.EQ.N6)MD6=1
      N125=ISYMP(N12,N5)
      IF(N125.EQ.N6)MD6=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      IF(N134.EQ.N6)MD6=1
      N135=ISYMP(N13,N5)
      IF(N135.EQ.N6)MD6=1
      N145=ISYMP(N14,N5)
      IF(N145.EQ.N6)MD6=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      IF(N234.EQ.N6)MD6=1
      N235=ISYMP(N23,N5)
      IF(N235.EQ.N6)MD6=1
      N245=ISYMP(N24,N5)
      IF(N245.EQ.N6)MD6=1
      N345=ISYMP(N34,N5)
      IF(N345.EQ.N6)MD6=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      IF(N1234.EQ.N6)MD6=1
      N1235=ISYMP(N12,N35)
      IF(N1235.EQ.N6)MD6=1
      N1245=ISYMP(N12,N45)
      IF(N1245.EQ.N6)MD6=1
      N1345=ISYMP(N13,N45)
      IF(N1345.EQ.N6)MD6=1
      N2345=ISYMP(N23,N45)
      IF(N2345.EQ.N6)MD6=1
      N12345=ISYMP(N123,N45)
      IF(N12345.EQ.N6)MD6=1
      CALL TDAT6(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,MODE3,MODE4,
     1MODE5,MODE6,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,H6,XQ6,NN1,MM1,
     2MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,NN5,MM5,
     3MM5/MD5,NN6,MM6,MM6/MD6,X0,Y0,Z0,W0,U0,V0,XK,KXK,VP,VPR,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TDAT6(ISTAT,NSTAT,NMODE,ISTATE,MODE1,MODE2,MODE3,
     1MODE4,MODE5,MODE6,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,H6,XQ6,NN1,
     2MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NN5,MH5,MM5,NN6,MH6,
     3MM6,X0,Y0,Z0,W0,U0,V0,XK,KXK,VP,VPR,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM6,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM6,MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION ISTAT(NSTAT,NMODE),XK(KXK,KXK)
      DIMENSION H1(NN1,MH1,3),XQ1(MM1),H2(NN2,MH2,3),XQ2(MM2)
      DIMENSION H3(NN3,MH3,3),XQ3(MM3),H4(NN4,MH4,3),XQ4(MM4)
      DIMENSION H5(NN5,MM5,3),XQ5(MM5),H6(NN6,MM6,3),XQ6(MM6)
      DIMENSION X0(MM1),Y0(MM2),Z0(MM3),W0(MM4),U0(MM5),V0(MM6)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM6B.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          WRITE(IOUT,*)'Calculating THAT6'
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF
      END IF

      IF(ICOUPL.GT.5)IFACTL=INTFAC(NMODE,ICOUPL,6)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(76)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(76)VPR
      END IF

C***********************************************************

C**GET BENT OR LINEAR FUNCTION
      ITHAT1=ISTAT(ISTATE,MODE1)
      ITHAT2=ISTAT(ISTATE,MODE2)
      ITHAT3=ISTAT(ISTATE,MODE3)
      ITHAT4=ISTAT(ISTATE,MODE4)
      ITHAT5=ISTAT(ISTATE,MODE5)
      ITHAT6=ISTAT(ISTATE,MODE6)
C**GET BENT OR LINEAR FUNCTION

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      MD6=MODINT(MODE6)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
          IF(MODE6.EQ.ISYM(I,J))N6=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N1.EQ.N6)MD6=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N2.EQ.N6)MD6=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N3.EQ.N6)MD6=1
      IF(N4.EQ.N5)MD5=1
      IF(N4.EQ.N6)MD6=1
      IF(N5.EQ.N6)MD6=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      IF(N12.EQ.N6)MD6=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      IF(N13.EQ.N6)MD6=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      IF(N14.EQ.N6)MD6=1
      N15=ISYMP(N1,N5)
      IF(N15.EQ.N6)MD6=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      IF(N23.EQ.N6)MD6=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      IF(N24.EQ.N6)MD6=1
      N25=ISYMP(N2,N5)
      IF(N25.EQ.N6)MD6=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      IF(N34.EQ.N6)MD6=1
      N35=ISYMP(N3,N5)
      IF(N35.EQ.N6)MD6=1
      N45=ISYMP(N4,N5)
      IF(N45.EQ.N6)MD6=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      IF(N123.EQ.N6)MD6=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      IF(N124.EQ.N6)MD6=1
      N125=ISYMP(N12,N5)
      IF(N125.EQ.N6)MD6=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      IF(N134.EQ.N6)MD6=1
      N135=ISYMP(N13,N5)
      IF(N135.EQ.N6)MD6=1
      N145=ISYMP(N14,N5)
      IF(N145.EQ.N6)MD6=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      IF(N234.EQ.N6)MD6=1
      N235=ISYMP(N23,N5)
      IF(N235.EQ.N6)MD6=1
      N245=ISYMP(N24,N5)
      IF(N245.EQ.N6)MD6=1
      N345=ISYMP(N34,N5)
      IF(N345.EQ.N6)MD6=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      IF(N1234.EQ.N6)MD6=1
      N1235=ISYMP(N12,N35)
      IF(N1235.EQ.N6)MD6=1
      N1245=ISYMP(N12,N45)
      IF(N1245.EQ.N6)MD6=1
      N1345=ISYMP(N13,N45)
      IF(N1345.EQ.N6)MD6=1
      N2345=ISYMP(N23,N45)
      IF(N2345.EQ.N6)MD6=1
      N12345=ISYMP(N123,N45)
      IF(N12345.EQ.N6)MD6=1
      MD=MD1*MD2*MD3*MD4*MD5*MD6

      TERM=0
C***********************************************************
      IF(IWHICH.GE.0)THEN
C**POTENTIAL
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
        DO M1=1,MM1
          X00=H1(ITHAT1,M1,1)*IFACTL*MD
          X0(M1)=X00*H1(ITHAT1,M1,1)
        END DO
        DO M2=1,MM2
          Y00=H2(ITHAT2,M2,1)
          Y0(M2)=Y00*H2(ITHAT2,M2,1)
        END DO
        DO M3=1,MM3
          Z00=H3(ITHAT3,M3,1)
          Z0(M3)=Z00*H3(ITHAT3,M3,1)
        END DO
        DO M4=1,MM4
          W00=H4(ITHAT4,M4,1)
          W0(M4)=W00*H4(ITHAT4,M4,1)
        END DO
        DO M5=1,MM5
          U00=H5(ITHAT5,M5,1)
          U0(M5)=U00*H5(ITHAT5,M5,1)
        END DO
        DO M6=1,MM6
          V00=H6(ITHAT6,M6,1)
          V0(M6)=V00*H6(ITHAT6,M6,1)
        END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
        IF(JCOUPC.GT.0)THEN
          DO M1=1,MM1
            DO M2=1,MM2
              DO M3=1,MM3
                DO M4=1,MM4
                  DO M5=1,MM5
                    DO M6=1,MM6
                      IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1                TERM=TERM+X0(M1)*Y0(M2)*Z0(M3)*W0(M4)*U0(M5)*
     2                V0(M6)*VP(M6,M5,M4,M3,M2,M1)
                    END DO
                  END DO
                END DO
              END DO
            END DO
          END DO
        ELSE
          DO M1=1,MM1
            DO M2=1,MM2
              DO M3=1,MM3
                DO M4=1,MM4
                  DO M5=1,MM5
                    DO M6=1,MM6
                      IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1                TERM=TERM+X0(M1)*Y0(M2)*Z0(M3)*W0(M4)*U0(M5)*
     2                V0(M6)*VPR(M6,M5,M4,M3,M2,M1)
                    END DO
                  END DO
                END DO
              END DO
            END DO
          END DO
        END IF
      END IF

      DO IRLHS=1,KXK
        XK(IRLHS,IRLHS)=XK(IRLHS,IRLHS)+TERM
      END DO

      IF(ITIM6B.EQ.0)THEN
        IF(IPRINT.GT.1)CALL TIMIT(3)
        ITIM6B=1
        CALL FLUSH(IOUT)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VCHECK(NBF,MBF,MEFF,NMODE,MODE,KZ3,IZ2,MZ,K3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION NBF(NMODE),MBF(NMODE),MEFF(NMODE)
      MZ=MEFF(MODE)
      IF(MZ.GT.NMODE)MZ=0
      IF(MZ.LE.0)MZ=0
      IF(MZ.EQ.MODE)MZ=0
      IF(MZ.EQ.0)RETURN
      IF(MZ.LT.MODE)THEN
C**ALREADY HEG, RESTART COUNT FOR START ADDRESS KZ3
        KZ3=0
        DO I=1,MZ-1
          CALL INTARR(NBF,MBF,I,IZ1,IZ2,IZ3)
          KZ3=KZ3+IZ2
        END DO
      ELSE
C**STILL GAUSS, CONTINUE COUNT FOR START ADDRESS KZ3
        KZ3=K3
        DO I=MODE,MZ-1
          CALL INTARR(NBF,MBF,I,IZ1,IZ2,IZ3)
          KZ3=KZ3+IZ2
        END DO
      END IF
C**IZ2 IS NUMBER OF POINTS FOR MODE MZ
      CALL INTARR(NBF,MBF,MZ,IZ1,IZ2,IZ3)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VEFF1(XQ,MM,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1JPOT,CPOT,MODE,V,VR,MODINT,XTANPM,YQ,NN,MEFF,NP1,CP1,JP1,VP1,DP1,
     2MMX1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      LOGICAL ABINIT
      REAL*8 V(MM)
      REAL*4 VR(MM)
      DIMENSION NP1(1),CP1(MMX1,1),JP1(MMX1,1),VP1(MMX1,1),DP1(MMX1,1)
      DIMENSION DUMMY(100)
      DIMENSION MODINT(NMODE),XTANPM(NMODE)
      DIMENSION XQ(MM),RR(NATOM,NATOM),QQ(NMODE),YQ(NN)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT)
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/VMIN/VMIN
      COMMON/ABINIT/ABINIT
      COMMON/FILASS/IOUT,INP
      COMMON/WHICH/IWHICH
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      DO K=1,NMODE
        QQ(K)=0
      END DO
C*********************************
      IYQ1=YQ(1)
      IYQN=YQ(NN)
      IDIFF=IABS(IYQ1-IYQN)
      INCR=-1
      IF(YQ(1).LT.0)INCR=1
C*********************************
      MD=MODINT(MODE)
      VVMIN=VMIN
      DO M=1,MM/MD
        QQ(MODE)=XQ(M)
        XMIN=1.D+30
C*********************************
C       DO N=1,NN
C         QQ(MEFF)=YQ(N)
        YYQ=YQ(1)-INCR
        DO N=1,IDIFF
          YYQ=YYQ+INCR
          QQ(MEFF)=YYQ
C*********************************
          IF(IWHICH.GT.0)THEN
            DO I=1,NATOM
              DO J=1,3
                XX(I,J)=X0(I,J)+XL(I,MODE,J)*QQ(MODE)/
     1          SQRT(XM(I))
                XX(I,J)=XX(I,J)+XL(I,MEFF,J)*QQ(MEFF)/
     1          SQRT(XM(I))
              END DO
            END DO
            IF(ABINIT)THEN
              CALL GETAPT(VDP,NATOM,XX,RR,QQ,NMODE,0)
            ELSE
              CALL GETPOT(VDP,NATOM,XX,RR)
            END IF
          ELSE
            IF(IWHICH.EQ.0)THEN
              CALL GETPT1(VDP,NPOT,IPOT,JPOT,CPOT,NMODE,QQ)
            ELSE
              IF(MOLINC.GT.0)
     1        CALL GETPQT(VDP,NMODE,QQ,XTANPM,NP1,CP1,JP1,NMODE,MMX1)
              IF(MOLINC.EQ.0)
     1        CALL GETQPT(VDP,NMODE,QQ,XTANPM)
              IF(MOLINC.LT.0)
     1        CALL GETQP1(VDP,DUMMY,NMODE,QQ,NP1,CP1,VP1,DP1,NMODE,MMX1)
            END IF
          END IF
C**TEMPORARY
      IF(VDP-VVMIN.LT.0)WRITE(IOUT,*)'BAD V?',(VDP-VVMIN)*WAVENM,M,N
C**TEMPORARY
          IF(VDP.LT.XMIN)XMIN=VDP
          IF(XMIN.LT.VMIN)VMIN=XMIN
        END DO
        IF(ICOUPL.GE.0)THEN
          V(M)=XMIN
        ELSE
          VR(M)=XMIN
        END IF
      END DO
C**
      WRITE(IOUT,*)
      WRITE(IOUT,*)'EFFECTIVE POTENTIAL FOR MODE ',MODE
      WRITE(IOUT,*)
      DO M=1,MM/MD
        IF(ICOUPL.GE.0)WRITE(IOUT,*)XQ(M),(V(M)-VMIN)*WAVENM
        IF(ICOUPL.LT.0)WRITE(IOUT,*)XQ(M),(VR(M)-VMIN)*WAVENM
      END DO
      WRITE(IOUT,*)
      WRITE(IOUT,*)
      CALL FLUSH(IOUT)
C**
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VEFF2(XQ,MM,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1JPOT,CPOT,MODE,V,VR,MODINT,XTANPM,YQ1,NN1,MEFF1,YQ2,NN2,MEFF2,
     2NP1,CP1,JP1,VP1,DP1,MMX1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      LOGICAL ABINIT
      REAL*8 V(MM)
      REAL*4 VR(MM)
      DIMENSION NP1(1),CP1(MMX1,1),JP1(MMX1,1),VP1(MMX1,1),DP1(MMX1,1)
      DIMENSION DUMMY(100)
      DIMENSION MODINT(NMODE),XTANPM(NMODE)
      DIMENSION XQ(MM),RR(NATOM,NATOM),QQ(NMODE),YQ1(NN1),YQ2(NN2)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT)
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/VMIN/VMIN
      COMMON/ABINIT/ABINIT
      COMMON/FILASS/IOUT,INP
      COMMON/WHICH/IWHICH
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      DO K=1,NMODE
        QQ(K)=0
      END DO
C*********************************
      IYQ11=YQ1(1)
      IYQN1=YQ1(NN1)
      IDIFF1=IABS(IYQ11-IYQN1)
      INCR1=-1
      IF(YQ1(1).LT.0)INCR1=1
      IYQ12=YQ2(1)
      IYQN2=YQ2(NN2)
      IDIFF2=IABS(IYQ12-IYQN2)
      INCR2=-1
      IF(YQ2(1).LT.0)INCR2=1
C*********************************
      MD=MODINT(MODE)
      VVMIN=VMIN
      DO M=1,MM/MD
        QQ(MODE)=XQ(M)
        XMIN=1.D+30
C*********************************
        YYQ1=YQ1(1)-INCR1
        DO N1=1,IDIFF1
          YYQ1=YYQ1+INCR1
          QQ(MEFF1)=YYQ1
C*********************************
          YYQ2=YQ2(1)-INCR2
          DO N2=1,IDIFF2
            YYQ2=YYQ2+INCR2
            QQ(MEFF2)=YYQ2
C*********************************
            DO I=1,NATOM
              DO J=1,3
                XX(I,J)=X0(I,J)+XL(I,MODE,J)*QQ(MODE)/
     1          SQRT(XM(I))
                XX(I,J)=XX(I,J)+XL(I,MEFF1,J)*QQ(MEFF1)/
     1          SQRT(XM(I))
                XX(I,J)=XX(I,J)+XL(I,MEFF2,J)*QQ(MEFF2)/
     1          SQRT(XM(I))
              END DO
            END DO
            CALL GETPOT(VDP,NATOM,XX,RR)
C**TEMPORARY
      IF(VDP-VVMIN.LT.0)WRITE(IOUT,*)'BAD V?',(VDP-VVMIN)*WAVENM,M,N1,
     1N2
C**TEMPORARY
            IF(VDP.LT.XMIN)XMIN=VDP
            IF(XMIN.LT.VMIN)VMIN=XMIN
          END DO
        END DO
        IF(ICOUPL.GE.0)THEN
          V(M)=XMIN
        ELSE
          VR(M)=XMIN
        END IF
      END DO
C**
      WRITE(IOUT,*)
      WRITE(IOUT,*)'EFFECTIVE POTENTIAL FOR MODE ',MODE
      WRITE(IOUT,*)
      DO M=1,MM/MD
        IF(ICOUPL.GE.0)WRITE(IOUT,*)XQ(M),(V(M)-VMIN)*WAVENM
        IF(ICOUPL.LT.0)WRITE(IOUT,*)XQ(M),(VR(M)-VMIN)*WAVENM
      END DO
      WRITE(IOUT,*)
      WRITE(IOUT,*)
      CALL FLUSH(IOUT)
C**
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VEFFV1(XQ,MM,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1JPOT,CPOT,MODE,V,VR,MODINT,XTANPM,YQ,NN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL ABINIT
C****************************************
C**ONLY CALLED FOR CONTRACTION OF 1-DIM V
C**INCOMPLETE FOR LINEAR
C****************************************
      REAL*8 V(MM)
      REAL*4 VR(MM)
      DIMENSION MODINT(NMODE),XTANPM(NMODE)
      DIMENSION XQ(MM),RR(NATOM,NATOM),QQ(NMODE),YQ(NN)
      DIMENSION X0(NATOM,3),XM(NATOM)
CCCC  DIMENSION XX(NATOM,3,362),XL(NATOM,NMODE,3,362)
      DIMENSION XX(NATOM,3,722),XL(NATOM,NMODE,3,722)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT)
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/VMIN/VMIN
      COMMON/FILASS/IOUT,INP
      COMMON/WHICH/IWHICH
      COMMON/ABINIT/ABINIT
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
C**ASSUME STARTING VALUE TAU: INIT
C**ASSUME NEXT VALUE TAU: INIT+INCTAU
C**ITAU=2 EQUIVALENT TO ITAU=722
      COMMON/REACTN/IREACT,MMTAU,INIT,INCTAU
      MDT=MODINT(NSMODE)
      MD=MODINT(MODE)
      DO K=1,NMODE
        QQ(K)=0
      END DO
      VVMIN=VMIN
      DO M=1,MM/MD
        QQ(MODE)=XQ(M)
        XMIN=1.D+30
        ITAU=INIT-INCTAU
C**LOOP ROUND TAU
        DO N=1,NN/MDT
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
          IF(IWHICH.GT.0)THEN
            DO I=1,NATOM
              DO J=1,3
                XX(I,J,1)=(XX(I,J,ITAU)+XL(I,MODE,J,ITAU)*QQ(MODE))/
     1          SQRT(XM(I))
              END DO
            END DO
            IF(ABINIT)THEN
              CALL GETAPT(VDP,NATOM,XX,RR,QQ,NMODE,ITAU)
            ELSE
              CALL GETPOT(VDP,NATOM,XX,RR)
            END IF
          ELSE
            IF(IWHICH.EQ.0)THEN
              CALL GETPT1(VDP,NPOT,IPOT,JPOT,CPOT,NMODE,QQ)
            END IF
          END IF
C**TEMPORARY
      IF(VDP-VVMIN.LT.0)WRITE(IOUT,*)'BAD V?',(VDP-VVMIN)*WAVENM,M,ITAU
C**TEMPORARY
          IF(VDP.LT.XMIN)XMIN=VDP
          IF(XMIN.LT.VMIN)VMIN=XMIN
        END DO
        IF(ICOUPL.GE.0)THEN
          V(M)=XMIN
        ELSE
          VR(M)=XMIN
        END IF
      END DO
C**
      WRITE(IOUT,*)
      WRITE(IOUT,*)'EFFECTIVE POTENTIAL FOR MODE ',MODE
      WRITE(IOUT,*)
      DO M=1,MM/MD
        IF(ICOUPL.GE.0)WRITE(IOUT,*)XQ(M),(V(M)-VMIN)*WAVENM
        IF(ICOUPL.LT.0)WRITE(IOUT,*)XQ(M),(VR(M)-VMIN)*WAVENM
      END DO
      WRITE(IOUT,*)
      WRITE(IOUT,*)
C**
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DUMPT0(NMODE,NATOM,QQ,RR,X0,XMODQ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL ABINIT
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP
      REAL*4 VPR
      DIMENSION RR(NATOM,NATOM),QQ(NMODE),XMODQ(NMODE)
      DIMENSION X0(NATOM,3)
      COMMON/ABINIT/ABINIT
      COMMON/FILASS/IOUT,INP
      COMMON/WHICH/IWHICH
      COMMON/POTREF/VP,VPR
      COMMON/COUPLE/ICOUPL,JCOUPL
      COMMON/FUNDAM/WAVENM
      DO K=1,NMODE
        QQ(K)=0
      END DO
      VP=0
      VPR=0
      IF(IWHICH.GT.0)THEN
        IF(ABINIT)THEN
          CALL GETAPT(VDP,NATOM,X0,RR,QQ,NMODE,0)
        ELSE
          CALL GETPOT(VDP,NATOM,X0,RR)
        END IF
        IF(JCOUPL.GE.0)THEN
          VP=VDP
        ELSE
          VPR=VDP
        END IF
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DUMVT0(NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1JPOT,CPOT,XQTAU,VT0,IND,MODINT,XMODQ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL ABINIT
C**INTRINSIC
      REAL*8 V,VT0(1)
      REAL*4 VR
      DIMENSION MODINT(NMODE),XQTAU(1),XMODQ(NMODE)
      DIMENSION RR(NATOM,NATOM),QQ(NMODE)
      DIMENSION X0(NATOM,3),XM(NATOM)
CCCC  DIMENSION XX(NATOM,3,362),XL(NATOM,NMODE,3,362)
      DIMENSION XX(NATOM,3,722),XL(NATOM,NMODE,3,722)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT)
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/FILASS/IOUT,INP
      COMMON/WHICH/IWHICH
      COMMON/TORS/QTAU
      COMMON/ABINIT/ABINIT
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
C**ASSUME STARTING VALUE TAU: INIT
C**ASSUME NEXT VALUE TAU: INIT+INCTAU
C**ITAU=2 EQUIVALENT TO ITAU=722
      COMMON/REACTN/IREACT,MMTAU,INIT,INCTAU
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      ITAU=INIT-INCTAU
      MDT=MODINT(NSMODE)
C**LOOP ROUND TAU
      DO MTAU=1,MMTAU/MDT
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720
        QTAU=XQTAU(MTAU)
        DO K=1,NMODE
          QQ(K)=0
        END DO
        IF(IWHICH.NE.0)THEN
          DO I=1,NATOM
            DO J=1,3
              XX(I,J,1)=XX(I,J,ITAU)/SQRT(XM(I))
            END DO
          END DO
          IF(ABINIT)THEN
            CALL GETAPT(VDP,NATOM,XX,RR,QQ,NMODE,ITAU)
          ELSE
            CALL GETPOT(VDP,NATOM,XX,RR)
          END IF
        ELSE
          CALL GETPT1(VDP,NPOT,IPOT,JPOT,CPOT,NMODE,QQ)
        END IF
        IF(JCOUPL.GE.0)THEN
          V=VDP
        ELSE
          VR=VDP
        END IF
C**INTRINSIC
        IF(IND.NE.0)THEN
          IF(JCOUPL.GE.0)THEN
            WRITE(71)V
          ELSE
            WRITE(71)VR
          END IF
        ELSE
          IF(JCOUPL.GE.0)THEN
            VT0(MTAU)=V
          ELSE
            VT0(MTAU)=VR
          END IF
        END IF
      END DO
      CALL FLUSH(71)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DUMCR0(NMODE,NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,JMAX,
     1IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V,VM(6)
      REAL*4 VR,VMR(6)
      LOGICAL LINEAR
      DIMENSION XZ(NMODE,NMODE,3),QQ(NMODE)
      DIMENSION AB(NMODE,3),B(NMODE,NMODE),AA(NMODE,3,3),BB(NMODE)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      COMMON/MOMI/XK(3,3),XMU(3,3)
      COMMON/WHICH/IWHICH
      COMMON/TYPE/LINEAR
      COMMON/JCORIO/JCORIO
      COMMON/TORS/QTAU
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94 
      COMMON/MUREF/V,VM,VR,VMR
      COMMON/FILASS/IOUT,INP
C**TEMPORARY (DIMENSIONS)
      COMMON/MULT/MULT(1000)
      JCORIO=JMAX
      MX=1
      MY=2
      MZ=3
      DO K=1,NMODE
        QQ(K)=0 
        MULT(K)=0
      END DO
      CALL CORIOL(NMODE,NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,ZZ)
      IF(JMAX.EQ.0)THEN
C       IF(LINEAR)ZZ=0
C**INTRINSIC
        IF(IND.NE.0)THEN
          IF(JCOUPC.GE.0)THEN
            V=ZZ
            WRITE(IOUT,*)'WATSON TERM AT REFERENCE = ',V*WAVENM
            WRITE(IOUT,*)
          ELSE
            VR=ZZ
            WRITE(IOUT,*)'WATSON TERM AT REFERENCE = ',VR*WAVENM
            WRITE(IOUT,*)
          END IF
        ELSE
          IF(JCOUPC.GE.0)THEN
            V=ZZ
          ELSE
            VR=ZZ
          END IF
        END IF
      ELSE
        IF(.NOT.LINEAR)ZZ=0
        IF(JCOUPC.GE.0)THEN
          VM(1)=XMU(MX,MX)/2
          VM(2)=XMU(MY,MY)/2
          VM(3)=XMU(MZ,MZ)/2
          VM(4)=XMU(MX,MZ)/2
          VM(5)=XMU(MY,MZ)/2
          VM(6)=XMU(MX,MY)/2
C**NEEDS EXTRA DIMENSION IF LINEAR
C         VM(7)=ZZ
        ELSE
          VMR(1)=XMU(MX,MX)/2
          VMR(2)=XMU(MY,MY)/2
          VMR(3)=XMU(MZ,MZ)/2
          VMR(4)=XMU(MX,MZ)/2
          VMR(5)=XMU(MY,MZ)/2
          VMR(6)=XMU(MX,MY)/2
C**NEEDS EXTRA DIMENSION IF LINEAR
C         VMR(7)=ZZ
        END IF
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DUMVR0(NMODE,NATOM,QQ,BB,BS,BT,BBS,B,BBT,
     1BSS,XX,XXP,X0,XL,XM,V,VR,VM,VMR,JMAX,VR0,IND,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(3),VM(12),VR0(3,1)
      REAL*4 VR(3),VMR(12)
      DIMENSION MODINT(NMODE),XM(NATOM)
CCCC  DIMENSION QQ(NMODE),BB(NMODE,NMODE,3,362)
CCCC  DIMENSION BBS(NMODE,NMODE,362),BSS(NMODE,362),BBT(NMODE)
CCCC  DIMENSION BS(NMODE,3,362),BT(NMODE,NMODE),B(NMODE,3,3,362)
CCCC  DIMENSION XX(NATOM,3,362),X0(NATOM,3),XL(NATOM,NMODE,3,362)
      DIMENSION QQ(NMODE),BB(NMODE,NMODE,3,722)
      DIMENSION BBS(NMODE,NMODE,722),BSS(NMODE,722),BBT(NMODE)
      DIMENSION BS(NMODE,3,722),BT(NMODE,NMODE),B(NMODE,3,3,722)
      DIMENSION XX(NATOM,3,722),X0(NATOM,3),XL(NATOM,NMODE,3,722)
      DIMENSION XXP(NATOM,3,722)
      COMMON/MOMI/XK(3,3),XMU(3,3)
      COMMON/MOMI0/XMU0(4,4),XIN0(4,4),XM0(4,4),SST,DETMU
      COMMON/WHICH/IWHICH
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/FILASS/IOUT,INP
C**TEMPORARY (DIMENSIONS)
      COMMON/MULT/MULT(1000)
C**ASSUME STARTING VALUE TAU: INIT
C**ASSUME NEXT VALUE TAU: INIT+INCTAU
C**ITAU=2 EQUIVALENT TO ITAU=722
      COMMON/REACTN/IREACT,MMTAU,INIT,INCTAU
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      ITAU=INIT-INCTAU
      MX=1
      MY=2
      MZ=3
      MDT=MODINT(NSMODE)
C**LOOP ROUND TAU
      DO MTAU=1,MMTAU/MDT
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720
        DO K=1,NMODE
          QQ(K)=0
          MULT(K)=0
        END DO
        CALL MILLER(NMODE,NATOM,QQ,BB,BS,BBS,B,BSS,XX,XL,XXP,XM,
     1  BBT,BT,ZZ,ITAU,JMAX)
        IF(JMAX.EQ.0)THEN
          IF(JCOUPC.GE.0)THEN
            V(1)=BBT(NSMODE)
            V(2)=BT(NSMODE,NSMODE)
            V(3)=ZZ
          ELSE
            VR(1)=BBT(NSMODE)
            VR(2)=BT(NSMODE,NSMODE)
            VR(3)=ZZ
          END IF
        ELSE
          IF(JCOUPC.GE.0)THEN
            VM(1)=XMU0(MX,MX)/2
            VM(2)=XMU0(MY,MY)/2
            VM(3)=XMU0(MZ,MZ)/2
            VM(4)=XMU0(MX,MZ)/2
            VM(5)=XMU0(MY,MZ)/2
            VM(6)=XMU0(MX,MY)/2
            VM(7)=0
            VM(8)=XMU0(MX,4)/2
            VM(9)=0
            VM(10)=XMU0(MY,4)/2
            VM(11)=0
            VM(12)=XMU0(MZ,4)/2
          ELSE
            VMR(1)=XMU0(MX,MX)/2
            VMR(2)=XMU0(MY,MY)/2
            VMR(3)=XMU0(MZ,MZ)/2
            VMR(4)=XMU0(MX,MZ)/2
            VMR(5)=XMU0(MY,MZ)/2
            VMR(6)=XMU0(MX,MY)/2
            VMR(7)=0
            VMR(8)=XMU0(MX,4)/2
            VMR(9)=0
            VMR(10)=XMU0(MY,4)/2
            VMR(11)=0
            VMR(12)=XMU0(MZ,4)/2
          END IF
        END IF
        IF(JMAX.EQ.0)THEN
C**INTRINSIC
          IF(IND.NE.0)THEN
            IF(JCOUPC.GE.0)THEN
              WRITE(81)V
            ELSE
              WRITE(81)VR
            END IF
          ELSE
            IF(JCOUPC.GE.0)THEN
              VR0(1,MTAU)=V(1)
              VR0(2,MTAU)=V(2)
              VR0(3,MTAU)=V(3)
            ELSE
              VR0(1,MTAU)=VR(1)
              VR0(2,MTAU)=VR(2)
              VR0(3,MTAU)=VR(3)
            END IF
          END IF
        ELSE
          IF(JCOUPC.GE.0)THEN
            WRITE(91)VM
          ELSE
            WRITE(91)VMR
          END IF
        END IF
      END DO
      CALL FLUSH(81)
      CALL FLUSH(91)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DUMPT1(XQ,MM,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1JPOT,CPOT,MODE,V,VR,IND,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2XMODQ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL ABINIT
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM),VP
      REAL*4 VR(MM),VPR
      DIMENSION NP1(1),CP1(MMX1,1),JP1(MMX1,1),VP1(MMX1,1),DP1(MMX1,1)
      DIMENSION DUMMY(100)
      DIMENSION MODINT(NMODE),XTANPM(NMODE),XMODQ(NMODE)
      DIMENSION XQ(MM),RR(NATOM,NATOM),QQ(NMODE)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT)
      COMMON/ABINIT/ABINIT
      COMMON/FILASS/IOUT,INP
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/WHICH/IWHICH
      COMMON/REACTL/JREACT,IFITRP
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/VMIN/VMIN
      COMMON/CHKMAX/MAXCHK(6)
      COMMON/FUNDAM/WAVENM
      COMMON/POTREF/VP,VPR
      DO K=1,NMODE
        QQ(K)=0
      END DO
C**INTRINSIC
      IF(IND.GT.0)THEN
        MD=MODINT(MODE)
      ELSE
        MD=1
      END IF
      MODCHK=IABS(MAXCHK(1))
      IF(JREACT.GT.0.OR.(JREACT.LT.0.AND.MODE.GT.NONLIN))THEN
        MDT=MODINT(NSMODE)
        DO I=1,NWSYM
          DO J=1,NSYM(I)
            IF(MODE.EQ.ISYM(I,J))N1=I
            IF(NSMODE.EQ.ISYM(I,J))NT=I
          END DO
        END DO
        IF(N1.EQ.NT)MD=1
      END IF
      DO M=1,MM/MD
        QQ(MODE)=XQ(M)*XMODQ(MODE)
        IF(IWHICH.GT.0)THEN
          DO I=1,NATOM
            DO J=1,3
              XX(I,J)=X0(I,J)+XL(I,MODE,J)*QQ(MODE)/
     1        SQRT(XM(I))
            END DO
          END DO
          IF(ABINIT)THEN
            CALL GETAPT(VDP,NATOM,XX,RR,QQ,NMODE,0)
          ELSE
!            WRITE(13,'(I5)') NATOM
!            WRITE(13,'(I4,F10.3)') MODE, QQ(MODE)
!            WRITE(13,'(A,3F15.8)') 'H',XX( 1,:)*0.5291772083
!            WRITE(13,'(A,3F15.8)') 'H',XX( 2,:)*0.5291772083
!            WRITE(13,'(A,3F15.8)') 'H',XX( 3,:)*0.5291772083
!            WRITE(13,'(A,3F15.8)') 'H',XX( 4,:)*0.5291772083
!            WRITE(13,'(A,3F15.8)') 'O',XX( 5,:)*0.5291772083
!            WRITE(13,'(A,3F15.8)') 'O',XX( 6,:)*0.5291772083
!            WRITE(13,'(A,3F15.8)') 'O',XX( 7,:)*0.5291772083
!            WRITE(13,'(A,3F15.8)') 'O',XX( 8,:)*0.5291772083
!            WRITE(13,'(A,3F15.8)') 'C',XX( 9,:)*0.5291772083
!            WRITE(13,'(A,3F15.8)') 'C',XX(10,:)*0.5291772083
            CALL GETPOT(VDP,NATOM,XX,RR)
          END IF
        ELSE
          IF(IWHICH.EQ.0)THEN
            CALL GETPT1(VDP,NPOT,IPOT,JPOT,CPOT,NMODE,QQ)
          ELSE
            IF(MOLINC.GT.0)
     1      CALL GETPQT(VDP,NMODE,QQ,XTANPM,NP1,CP1,JP1,NMODE,MMX1)
            IF(MOLINC.EQ.0)
     1      CALL GETQPT(VDP,NMODE,QQ,XTANPM)
            IF(MOLINC.LT.0)
     1      CALL GETQP1(VDP,DUMMY,NMODE,QQ,NP1,CP1,VP1,DP1,NMODE,MMX1)
          END IF
        END IF
C**INTRINSIC
        CALL SET71(V,VR,MM/MD,VDP,M)
      END DO
C******************************************************************
      IF(MODE.EQ.MODCHK)THEN
        MX=MM/2
        MDD=MD
        IF(MAXCHK(1).GT.0)THEN
          WRITE(IOUT,*)'START GRID INSPECTION FOR MODE ',MODCHK
        ELSE
          WRITE(IOUT,*)'START HOLE SEARCH FOR MODE ',MODCHK
        END IF
CC      IF(MAXCHK(1).LT.0)THEN
C
          VLAST=-1.0D+20
C**MIN=0 UNTIL FIRST MINIMUM (+1) or MAXIMUM (-1) REACHED
          MIN=0
          GRAD=0
          VDIFF=0
C**FIRST GO TO NEGATIVE Q
          DO M=MX,1,-1
            VDP=VFUN1(V,VR,MM/MD,M,VMIN,WAVENM)
C**PREVIOUS GRADIENT
            GRADPR=GRAD
            IF(M.NE.MX)THEN
C**GRAD -VE IF V RISING, +VE IF V FALLING
              GRAD=WAVENM*(VDP-VLAST)/(XQ(M)-XQ(M+1))
            END IF
C**TEST FOR V RISING OR FALLING BEFORE FIRST MINIMUM
            IF(VDP.GT.VLAST.OR.MIN.EQ.0)THEN
              VDIFF=VDP-VLAST
              CALL SET71(V,VR,MM/MD,VDP,M)
              IF(VDP.LT.VMIN)THEN
                WRITE(IOUT,*)'SUSPECT V FOR MODE ',MODE
                WRITE(IOUT,*)'M1 ',M
                WRITE(IOUT,*)'Q1 ',XQ(M)
                WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
                WRITE(IOUT,*)'*****************************'
                WRITE(IOUT,*)
C**SET VMIN IF NOT REACHED FIRST MINIMUM
                IF(MIN.EQ.0)VMIN=VDP
              END IF
C**TEST FOR MINIMUM
              IF(GRADPR.GE.0.AND.GRAD.LT.0)THEN
                WRITE(IOUT,*)'MINIMUM FOUND FOR MODE ',MODE
                WRITE(IOUT,*)'M1 ',M+1
                WRITE(IOUT,*)'Q1 ',XQ(M+1)
                WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                WRITE(IOUT,*)'*****************************'
                WRITE(IOUT,*)
                MIN=1
              END IF
              VLAST=VDP
C**TEST FOR V FALLING AFTER FIRST MINIMUM
            ELSE
              IF(MAXCHK(1).GT.0)THEN
                CALL SET71(V,VR,MM/MD,VDP,M)
              ELSE
                CALL SET71(V,VR,MM/MD,VLAST+VDIFF,M)
              END IF
              IF(GRADPR.LT.0.AND.GRAD.GE.0)THEN
                WRITE(IOUT,*)'MAXIMUM FOUND FOR MODE ',MODE
                WRITE(IOUT,*)'M1 ',M+1
                WRITE(IOUT,*)'Q1 ',XQ(M+1)
                WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                WRITE(IOUT,*)'*****************************'
                WRITE(IOUT,*)
                MIN=-1
              END IF
              IF(VLAST+VDIFF.LT.VMIN)THEN
                WRITE(IOUT,*)'SUSPECT V FOR MODE ',MODE
                WRITE(IOUT,*)'M1 ',M
                WRITE(IOUT,*)'Q1 ',XQ(M)
                WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                WRITE(IOUT,*)'*****************************'
                WRITE(IOUT,*)
              END IF
              IF(MAXCHK(1).LT.0)VLAST=VLAST+VDIFF
            END IF
          END DO
C
          IF(MDD.EQ.2)GO TO 1000
          VLAST=-1.0D+20
C**MIN=0 UNTIL FIRST MINIMUM (+1) or MAXIMUM (-1) REACHED
          MIN=0
          GRAD=0
          VDIFF=0
C**NOW GO TO POSITIVE Q
          DO M=MX+1,2*MX
            VDP=VFUN1(V,VR,MM/MD,M,VMIN,WAVENM)
C**PREVIOUS GRADIENT
            GRADPR=GRAD
            IF(M.NE.MX+1)THEN
C**GRAD +VE IF V RISING, -VE IF V FALLING
              GRAD=WAVENM*(VDP-VLAST)/(XQ(M)-XQ(M-1))
            END IF
C**TEST FOR V RISING OR FALLING BEFORE FIRST MINIMUM
            IF(VDP.GT.VLAST.OR.MIN.EQ.0)THEN
              VDIFF=VDP-VLAST
              CALL SET71(V,VR,MM/MD,VDP,M)
              IF(VDP.LT.VMIN)THEN
                WRITE(IOUT,*)'SUSPECT V FOR MODE ',MODE
                WRITE(IOUT,*)'M1 ',M
                WRITE(IOUT,*)'Q1 ',XQ(M)
                WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
                WRITE(IOUT,*)'*****************************'
                WRITE(IOUT,*)
C**SET VMIN IF NOT REACHED FIRST MINIMUM
                IF(MIN.EQ.0)VMIN=VDP
              END IF
C**TEST FOR MINIMUM
              IF(GRADPR.LT.0.AND.GRAD.GE.0)THEN
                WRITE(IOUT,*)'MINIMUM FOUND FOR MODE ',MODE
                WRITE(IOUT,*)'M1 ',M-1
                WRITE(IOUT,*)'Q1 ',XQ(M-1)
                WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                WRITE(IOUT,*)'*****************************'
                WRITE(IOUT,*)
                MIN=1
              END IF
              VLAST=VDP
C**TEST FOR V FALLING AFTER FIRST MINIMUM
            ELSE
              IF(MAXCHK(1).GT.0)THEN
                CALL SET71(V,VR,MM/MD,VDP,M)
              ELSE
                CALL SET71(V,VR,MM/MD,VLAST+VDIFF,M)
              END IF
              IF(GRADPR.GE.0.AND.GRAD.LT.0)THEN
                WRITE(IOUT,*)'MAXIMUM FOUND FOR MODE ',MODE
                WRITE(IOUT,*)'M1 ',M-1
                WRITE(IOUT,*)'Q1 ',XQ(M-1)
                WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                WRITE(IOUT,*)'*****************************'
                WRITE(IOUT,*)
                MIN=-1
              END IF
              IF(VLAST+VDIFF.LT.VMIN)THEN
                WRITE(IOUT,*)'SUSPECT V FOR MODE ',MODE
                WRITE(IOUT,*)'M1 ',M
                WRITE(IOUT,*)'Q1 ',XQ(M)
                WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                WRITE(IOUT,*)'*****************************'
                WRITE(IOUT,*)
              END IF
              IF(MAXCHK(1).LT.0)VLAST=VLAST+VDIFF
            END IF
          END DO
1000      CONTINUE
C       END IF
        DO M=1,MM/MD
          VDP=VFUN1(V,VR,MM/MD,M,VMIN,WAVENM)-VMIN
          IF(VDP.LT.0.AND.MAXCHK(1).LT.0)THEN
            WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODE ',
     1      MODE
            WRITE(IOUT,*)'M1 ',M
            WRITE(IOUT,*)'Q1 ',XQ(M)
            WRITE(IOUT,*)'POTENTIAL ',(VDP+VMIN)*WAVENM
            WRITE(IOUT,*)'*****************************'
            WRITE(IOUT,*)
          END IF
        END DO
        IF(MAXCHK(1).GT.0)THEN
          WRITE(IOUT,*)' ORIGINAL POTENTIAL'
          WRITE(IOUT,*)' MODE ',MODE
          WRITE(IOUT,*)
          DO M=1,MM/MD
            WRITE(IOUT,*)XQ(M),VFUN1(V,VR,MM/MD,M,VMIN,WAVENM)*
     1      WAVENM
          END DO
          WRITE(IOUT,*)'END GRID INSPECTION FOR MODE ',MODCHK
        ELSE
          WRITE(IOUT,*)' AMENDED POTENTIAL'
          WRITE(IOUT,*)' MODE ',MODE
          WRITE(IOUT,*)
          DO M=1,MM/MD
            WRITE(IOUT,*)XQ(M),VFUN1(V,VR,MM/MD,M,VMIN,WAVENM)*
     1      WAVENM
          END DO
          WRITE(IOUT,*)'END HOLE SEARCH FOR MODE ',MODCHK
        END IF
        WRITE(IOUT,*)
      END IF
C**INTRINSIC
      IF(MOLINC.LE.0)GO TO 9999
      DO M=1,MM/MD
        IF(JCOUPL.GE.0)THEN
          V(M)=V(M)-VP
        ELSE
          VR(M)=VR(M)-VPR
        END IF
      END DO
9999  CONTINUE
      IF(IND.GT.0)THEN
        CALL OUT71(V,VR,MM/MD)
      END IF
      IF(IND.LT.0)THEN
        DO M=1,MM/MD
          IF(JCOUPL.LT.0)V(M)=VR(M)
        END DO
      END IF
      CALL FLUSH(I71)
      RETURN
      END
C****************************************************************
      DOUBLE PRECISION FUNCTION VFUN1(V,VR,MM,M,VMIN,WAVENM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION V(MM)
      REAL*4 VR(MM)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GT.0)THEN
C       VFUN1=(V(M)-VMIN)*WAVENM
        VFUN1=V(M)
      ELSE
C       VFUN1=(VR(M)-VMIN)*WAVENM
        VFUN1=VR(M)
      END IF
      RETURN
      END
C****************************************************************
      SUBROUTINE DUMVT1(XQ,MM,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1JPOT,CPOT,MODE,V,VR,XQTAU,VT0,VT1,KVP,IND,MODINT,XMODQ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR,ABINIT
C**INTRINSIC
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM,1),VT0(1),VT1(KVP,1)
      REAL*4 VR(MM,1)
C**TEMPORARY (DIMENSION)
      DIMENSION Q(100),DELTA(100),XQTAU(1)
      DIMENSION MODINT(NMODE),XMODQ(NMODE)
      DIMENSION XQ(MM),RR(NATOM,NATOM),QQ(NMODE)
      DIMENSION X0(NATOM,3),XM(NATOM)
CCCC  DIMENSION XX(NATOM,3,362),XL(NATOM,NMODE,3,362)
      DIMENSION XX(NATOM,3,722),XL(NATOM,NMODE,3,722)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT)
      COMMON/WHICH/IWHICH
      COMMON/TORS/QTAU
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/VMIN/VMIN
      COMMON/CHKMAX/MAXCHK(6)
      COMMON/FILASS/IOUT,INP
      COMMON/ABINIT/ABINIT
      COMMON/TYPE/LINEAR
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
C**ASSUME STARTING VALUE TAU: INIT
C**ASSUME NEXT VALUE TAU: INIT+INCTAU
C**ITAU=2 EQUIVALENT TO ITAU=722
      COMMON/REACTN/IREACT,MMTAU,INIT,INCTAU
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE.EQ.ISYM(I,J))N1=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.NT.AND.MDT.GT.1)MD1=1
C**INTRINSIC
      IF(IND.EQ.0)MD1=1
      MODCHK=IABS(MAXCHK(1))
      IF(MODCHK.NE.0)WRITE(IOUT,*)' FOR DUMVT1 - MODE ',MODE,
     1' VMIN = ',VMIN*WAVENM
C**LOOP ROUND TAU
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
          QTAU=XQTAU(MTAU)
        ELSE
          QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
          DELTA(4)=+QTAU
          DELTA(5)=-QTAU
        END IF
        DO K=1,NMODE
          Q(K)=0
          QQ(K)=0
        END DO
        DO M=1,MM/MD1
          QQ(MODE)=XQ(M)*XMODQ(MODE)
          IF(IWHICH.NE.0)THEN
            IF(LINEAR)THEN
C**GET Q4X,Q5X, Q4Y,Q5Y FROM Q4,Q5,DELTA4,DELTA5
              Q(MODE)=QQ(MODE)
              DO K=NONLIN+1,NONLIN+LINBND
                QQ(K)=Q(K)*DCOS(DELTA(K))
                QQ(K+LINBND)=Q(K)*DSIN(DELTA(K))
              END DO
              DO I=1,NATOM
                DO J=1,3
                  XX(I,J,1)=X0(I,J)
                  DO K=NONLIN+1,NMODE
                    XX(I,J,1)=XX(I,J,1)+XL(I,K,J,1)*QQ(K)/SQRT(XM(I))
                  END DO
                END DO
              END DO
            ELSE
              DO I=1,NATOM
                DO J=1,3
                  XX(I,J,1)=(XX(I,J,ITAU)+XL(I,MODE,J,ITAU)*QQ(MODE))/
     1            SQRT(XM(I))
                END DO
              END DO
            END IF
            IF(ABINIT)THEN
              CALL GETAPT(VDP,NATOM,XX,RR,QQ,NMODE,ITAU)
            ELSE
              CALL GETPOT(VDP,NATOM,XX,RR)
            END IF
          ELSE
            CALL GETPT1(VDP,NPOT,IPOT,JPOT,CPOT,NMODE,QQ)
          END IF
C**INTRINSIC
          IF(IND.NE.0.AND.MOLINC.LE.0)THEN
            CALL SET71(V,VR,MM/MD1,VDP,M)
          ELSE
            VT1(M,MTAU)=VDP
          END IF
        END DO
C******************************************************************
        IF(MODE.EQ.MODCHK)THEN
          MX=MM/2
          MDD=MD1
          WRITE(IOUT,*)'*****************************'
          WRITE(IOUT,*)' FOR MTAU = ',MTAU,' MDD = ',MDD
          WRITE(IOUT,*)'*****************************'
          IF(MAXCHK(1).GT.0)THEN
            WRITE(IOUT,*)'START GRID INSPECTION FOR MODE ',MODCHK
          ELSE
            WRITE(IOUT,*)'START HOLE SEARCH FOR MODE ',MODCHK
          END IF
CC        IF(MAXCHK(1).LT.0)THEN
C
            VLAST=-1.0D+20
C**MIN=0 UNTIL FIRST MINIMUM (+1) or MAXIMUM (-1) REACHED
            MIN1=0
            GRAD=0
            VDIFF=0
C**FIRST GO TO NEGATIVE Q
            DO M=MX,1,-1
              VDP=VFUN1(V,VR,MM/MD1,M,VMIN,WAVENM)
C**PREVIOUS GRADIENT
              GRADPR=GRAD
              IF(M.NE.MX)THEN
C**GRAD -VE IF V RISING, +VE IF V FALLING
                GRAD=WAVENM*(VDP-VLAST)/(XQ(M)-XQ(M+1))
              END IF
C**TEST FOR V RISING OR FALLING BEFORE FIRST MINIMUM
              IF(VDP.GT.VLAST.OR.MIN1.EQ.0)THEN
                VDIFF=VDP-VLAST
                CALL SET71(V,VR,MM/MD1,VDP,M)
                IF(VDP.LT.VMIN)THEN
                  WRITE(IOUT,*)'SUSPECT V FOR MODE ',MODE
                  WRITE(IOUT,*)'M1 ',M
                  WRITE(IOUT,*)'Q1 ',XQ(M)
                  WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
C**SET VMIN IF NOT REACHED FIRST MINIMUM
                  IF(MIN1.EQ.0)VMIN=VDP
                END IF
C**TEST FOR MINIMUM
                IF(GRADPR.GE.0.AND.GRAD.LT.0)THEN
                  WRITE(IOUT,*)'MINIMUM FOUND FOR MODE ',MODE
                  WRITE(IOUT,*)'M1 ',M+1
                  WRITE(IOUT,*)'Q1 ',XQ(M+1)
                  WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                  MIN1=1
                END IF
                VLAST=VDP
**TEST FOR V FALLING AFTER FIRST MINIMUM
              ELSE
                IF(MAXCHK(1).GT.0)THEN
                  CALL SET71(V,VR,MM/MD1,VDP,M)
                ELSE
                  CALL SET71(V,VR,MM/MD1,VLAST+VDIFF,M)
                END IF
                IF(GRADPR.LT.0.AND.GRAD.GE.0)THEN
                  WRITE(IOUT,*)'MAXIMUM FOUND FOR MODE ',MODE
                  WRITE(IOUT,*)'M1 ',M+1
                  WRITE(IOUT,*)'Q1 ',XQ(M+1)
                  WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                  MIN1=-1
                ELSE
                  WRITE(IOUT,*)'ORIGINAL POTENTIAL FOR MODE ',MODE
                  WRITE(IOUT,*)'M1 ',M+1
                  WRITE(IOUT,*)'Q1 ',XQ(M+1)
                  WRITE(IOUT,*)'POTENTIAL ',VDP*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                END IF
                IF(VLAST+VDIFF.LT.VMIN)THEN
                  WRITE(IOUT,*)'SUSPECT V FOR MODE ',MODE
                  WRITE(IOUT,*)'M1 ',M
                  WRITE(IOUT,*)'Q1 ',XQ(M)
                  WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                END IF
                IF(MAXCHK(1).LT.0)VLAST=VLAST+VDIFF
              END IF
            END DO
C
            IF(MDD.EQ.2)GO TO 1000
            VLAST=-1.0D+20
C**MIN=0 UNTIL FIRST MINIMUM (+1) or MAXIMUM (-1) REACHED
            MIN2=0
            GRAD=0
            VDIFF=0
C**NOW GO TO POSITIVE Q
            DO M=MX+1,2*MX
              VDP=VFUN1(V,VR,MM/MD1,M,VMIN,WAVENM)
C**PREVIOUS GRADIENT
              GRADPR=GRAD
              IF(M.NE.MX+1)THEN
C**GRAD +VE IF V RISING, -VE IF V FALLING
                GRAD=WAVENM*(VDP-VLAST)/(XQ(M)-XQ(M-1))
              END IF
C**TEST FOR V RISING OR FALLING BEFORE FIRST MINIMUM
              IF(VDP.GT.VLAST.OR.MIN2.EQ.0)THEN
                VDIFF=VDP-VLAST
                CALL SET71(V,VR,MM/MD1,VDP,M)
                IF(VDP.LT.VMIN)THEN
                  WRITE(IOUT,*)'SUSPECT V FOR MODE ',MODE
                  WRITE(IOUT,*)'M1 ',M
                  WRITE(IOUT,*)'Q1 ',XQ(M)
                  WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
C**SET VMIN IF NOT REACHED FIRST MINIMUM
                  IF(MIN2.EQ.0)VMIN=VDP
                END IF
C**TEST FOR MINIMUM
                IF(GRADPR.LT.0.AND.GRAD.GE.0)THEN
                  WRITE(IOUT,*)'MINIMUM FOUND FOR MODE ',MODE
                  WRITE(IOUT,*)'M1 ',M-1
                  WRITE(IOUT,*)'Q1 ',XQ(M-1)
                  WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                  MIN2=1
                END IF
                VLAST=VDP
C**TEST FOR V FALLING AFTER FIRST MINIMUM
              ELSE
                IF(MAXCHK(1).GT.0)THEN
                  CALL SET71(V,VR,MM/MD1,VDP,M)
                ELSE
                  CALL SET71(V,VR,MM/MD1,VLAST+VDIFF,M)
                END IF
                IF(GRADPR.GE.0.AND.GRAD.LT.0)THEN
                  WRITE(IOUT,*)'MAXIMUM FOUND FOR MODE ',MODE
                  WRITE(IOUT,*)'M1 ',M-1
                  WRITE(IOUT,*)'Q1 ',XQ(M-1)
                  WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                  MIN2=-1
                ELSE
                  WRITE(IOUT,*)'ORIGINAL POTENTIAL FOR MODE ',MODE
                  WRITE(IOUT,*)'M1 ',M-1
                  WRITE(IOUT,*)'Q1 ',XQ(M-1)
                  WRITE(IOUT,*)'POTENTIAL ',VDP*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                END IF
                IF(VLAST+VDIFF.LT.VMIN)THEN
                  WRITE(IOUT,*)'SUSPECT V FOR MODE ',MODE
                  WRITE(IOUT,*)'M1 ',M
                  WRITE(IOUT,*)'Q1 ',XQ(M)
                  WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                END IF
                IF(MAXCHK(1).LT.0)VLAST=VLAST+VDIFF
              END IF
            END DO
1000        CONTINUE
C         END IF
          DO M=1,MM/MD1
            VDP=VFUN1(V,VR,MM/MD1,M,VMIN,WAVENM)-VMIN
            IF(VDP.LT.0.AND.MAXCHK(1).LT.0)THEN
              WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODE ',
     1        MODE
              WRITE(IOUT,*)'M1 ',M
              WRITE(IOUT,*)'Q1 ',XQ(M)
              WRITE(IOUT,*)'POTENTIAL ',(VDP+VMIN)*WAVENM
              WRITE(IOUT,*)'*****************************'
              WRITE(IOUT,*)
            END IF
          END DO
          IF(MAXCHK(1).GT.0)THEN
            WRITE(IOUT,*)' ORIGINAL POTENTIAL '
            WRITE(IOUT,*)' MODE ',MODE
            WRITE(IOUT,*)
            DO M=1,MM/MD1
              WRITE(IOUT,*)XQ(M),VFUN1(V,VR,MM/MD1,M,VMIN,WAVENM)*
     1        WAVENM
              IF(IND.EQ.0)VT1(M,MTAU)=VFUN1(V,VR,MM/MD1,M,VMIN,WAVENM)
            END DO
            WRITE(IOUT,*)'END GRID INSPECTION FOR MODE ',MODCHK
          ELSE
            IF(MIN1.LT.0.OR.MIN2.LT.0)THEN
            WRITE(IOUT,*)' AMENDED POTENTIAL'
            WRITE(IOUT,*)' MODE ',MODE
            WRITE(IOUT,*)
            DO M=1,MM/MD1
              WRITE(IOUT,*)XQ(M),VFUN1(V,VR,MM/MD1,M,VMIN,WAVENM)*
     1        WAVENM
              IF(IND.EQ.0)VT1(M,MTAU)=VFUN1(V,VR,MM/MD1,M,VMIN,WAVENM)
            END DO
            END IF
            WRITE(IOUT,*)
            WRITE(IOUT,*)'END HOLE SEARCH FOR MODE ',MODCHK
          END IF
          WRITE(IOUT,*)
        END IF
C******************************************************************
C
        IF(IND.NE.0.AND.MOLINC.LE.0)THEN
          CALL OUT71(V,VR,MM/MD1)
        END IF
      END DO

C**INTRINSIC
      IF(MOLINC.LE.0)GO TO 9999
      CALL DUMVT0(NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1JPOT,CPOT,XQTAU,VT0,0,MODINT,XMODQ)
C**LOOP ROUND TAU
      DO MTAU=1,MMTAU/MDT
        DO M=1,MM/MD1
          VDP=VT1(M,MTAU)-VT0(MTAU)
          IF(IND.NE.0)THEN
            CALL SET71(V,VR,MM/MD1,VDP,M)
          ELSE
            V(M,MTAU)=VDP
          END IF
        END DO
        IF(IND.NE.0)THEN
          CALL OUT71(V,VR,MM/MD1)
        END IF
      END DO
9999  CONTINUE
      CALL FLUSH(71)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DUMCR1(XQ1,MM1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1XX,X0,XL,XM,MODE1,V,VR,VM,VMR,JMAX,IND,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM1),VM(MM1,7)
      REAL*4 VR(MM1),VMR(MM1,7)
      REAL*8 V0,VM0(6)
      REAL*4 V0R,VM0R(6)
      LOGICAL LINEAR
      DIMENSION MODINT(NMODE)
      DIMENSION XQ1(MM1),QQ(NMODE),XZ(NMODE,NMODE,3)
      DIMENSION AB(NMODE,3),B(NMODE,NMODE),AA(NMODE,3,3),BB(NMODE)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      COMMON/MOMI/XK(3,3),XMU(3,3)
      COMMON/WHICH/IWHICH
      COMMON/TYPE/LINEAR
      COMMON/JCORIO/JCORIO
      COMMON/TORS/QTAU
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/MUREF/V0,VM0,V0R,VM0R
      COMMON/FILASS/IOUT,INP
C**TEMPORARY (DIMENSIONS)
      COMMON/MULT/MULT(1000)
      JCORIO=JMAX
      MX=1
      MY=2
      MZ=3
      DO K=1,NMODE
        QQ(K)=0
        MULT(K)=0
      END DO
      MULT(MODE1)=1
C**INTRINSIC
      IF(IND.NE.0)THEN
        MD1=MODINT(MODE1)
      ELSE
        MD1=1
      END IF
      DO M1=1,MM1/MD1
        QQ(MODE1)=XQ1(M1)
        CALL CORIOL(NMODE,NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,ZZ)
        IF(JMAX.EQ.0)THEN
          IF(LINEAR)ZZ=0
C**INTRINSIC
C         IF(IND.NE.0)THEN
            CALL SET81(V,VR,MM1/MD1,ZZ,M1)
C         ELSE
C           IF(JCOUPC.GE.0)THEN
C             V(M1)=ZZ
C           ELSE
C             VR(M1)=ZZ
C           END IF
C         END IF
        ELSE
          IF(.NOT.LINEAR)ZZ=0
          CALL SET91(VM,VMR,MM1/MD1,ZZ,M1)
C         IF(JCOUPC.GT.0)THEN
C           VM(M1,1)=XMU(MX,MX)/2
C           VM(M1,2)=XMU(MY,MY)/2
C           VM(M1,3)=XMU(MZ,MZ)/2
C           VM(M1,4)=XMU(MX,MZ)/2
C           VM(M1,5)=XMU(MY,MZ)/2
C           VM(M1,6)=XMU(MX,MY)/2
C           VM(M1,7)=ZZ
C         ELSE
C           VMR(M1,1)=XMU(MX,MX)/2
C           VMR(M1,2)=XMU(MY,MY)/2
C           VMR(M1,3)=XMU(MZ,MZ)/2
C           VMR(M1,4)=XMU(MX,MZ)/2
C           VMR(M1,5)=XMU(MY,MZ)/2
C           VMR(M1,6)=XMU(MX,MY)/2
C           VMR(M1,7)=ZZ
C         END IF
        END IF
      END DO
      IF(JMAX.EQ.0)THEN
C**INTRINSIC
        IF(MOLINC.LE.0)GO TO 9999
        DO M1=1,MM1/MD1
          CALL GET81(V,VR,MM1/MD1,ZZ,M1)
          IF(JCOUPC.GE.0)THEN
            ZZ=ZZ-V0
          ELSE
            ZZ=ZZ-V0R
          END IF
          CALL SET81(V,VR,MM1/MD1,ZZ,M1)
        END DO
9999    CONTINUE
        IF(IND.NE.0)THEN
          CALL OUT81(V,VR,MM1/MD1)
        END IF
      ELSE
        CALL OUT91(VM,VMR,MM1/MD1)
C       IF(JCOUPC.GT.0)THEN
C         WRITE(I91)VM
C       ELSE
C         WRITE(I91)VMR
C       END IF
      END IF
      CALL FLUSH(I81)
      CALL FLUSH(I91)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DUMVR1(XQ1,MM1,NMODE,NATOM,QQ,BB,BS,BT,BBS,B,BBT,
     1BSS,XX,XXP,X0,XL,XM,MODE1,V,VR,VM,VMR,JMAX,XQTAU,VR0,VR1,KVP,IND,
     2MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM1,6,1),VM(MM1,15),VR0(3,1),VR1(KVP,6,1)
      REAL*4 VR(MM1,6,1),VMR(MM1,15)
      DIMENSION XQTAU(1)
      DIMENSION MODINT(NMODE),XM(NATOM)
CCCC  DIMENSION XQ1(MM1),QQ(NMODE),BB(NMODE,NMODE,3,362)
CCCC  DIMENSION BBS(NMODE,NMODE,362),BSS(NMODE,362),BBT(NMODE)
CCCC  DIMENSION BS(NMODE,3,362),BT(NMODE,NMODE),B(NMODE,3,3,362)
CCCC  DIMENSION XX(NATOM,3,362),X0(NATOM,3),XL(NATOM,NMODE,3,362)
      DIMENSION XQ1(MM1),QQ(NMODE),BB(NMODE,NMODE,3,722)
      DIMENSION BBS(NMODE,NMODE,722),BSS(NMODE,722),BBT(NMODE)
      DIMENSION BS(NMODE,3,722),BT(NMODE,NMODE),B(NMODE,3,3,722)
      DIMENSION XX(NATOM,3,722),X0(NATOM,3),XL(NATOM,NMODE,3,722)
      DIMENSION XXP(NATOM,3,722)
      DIMENSION SUP3(3)
      COMMON/MOMI/XK(3,3),XMU(3,3)
      COMMON/MOMI0/XMU0(4,4),XIN0(4,4),XM0(4,4),SST,DETMU
      COMMON/WHICH/IWHICH
      COMMON/TYPE/LINEAR
      COMMON/TORS/QTAU
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/FILASS/IOUT,INP
C**TEMPORARY (DIMENSIONS)
      COMMON/MULT/MULT(1000)
C**ASSUME STARTING VALUE TAU: INIT
C**ASSUME NEXT VALUE TAU: INIT+INCTAU
C**ITAU=2 EQUIVALENT TO ITAU=722
      COMMON/REACTN/IREACT,MMTAU,INIT,INCTAU
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      MX=1
      MY=2
      MZ=3
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.NT.AND.MDT.GT.1)MD1=1
C**INTRINSIC
      IF(IND.EQ.0)MD1=1
C**LOOP ROUND TAU
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
          QTAU=XQTAU(MTAU)
        END IF
        DO K=1,NMODE
          QQ(K)=0
          MULT(K)=0
        END DO
        MULT(MODE1)=1
        DO M1=1,MM1/MD1
          QQ(MODE1)=XQ1(M1)
          IF(LINEAR)THEN
            CALL CORIOL(NMODE,NATOM,QQ,BB,BS,BT,B,BBT,XX,X0,XL,XM,ZZ)
          ELSE
            CALL MILLER(NMODE,NATOM,QQ,BB,BS,BBS,B,BSS,XX,XL,XXP,XM,
     1      BBT,BT,ZZ,ITAU,JMAX)
          END IF
          IF(JMAX.EQ.0)THEN
C**INTRINSIC
            IF(IND.NE.0.AND.MOLINC.LE.0)THEN
              CALL VSET81(V,VR,MM1/MD1,BT,BBT,NMODE,ZZ,M1,MODE1,
     1        NSMODE)
            ELSE
              VR1(M1,1,MTAU)=BBT(MODE1)
              VR1(M1,2,MTAU)=BBT(NSMODE)
              VR1(M1,3,MTAU)=BT(MODE1,MODE1)
              VR1(M1,4,MTAU)=BT(MODE1,NSMODE)
              VR1(M1,5,MTAU)=BT(NSMODE,NSMODE)
              VR1(M1,6,MTAU)=ZZ
            END IF
          ELSE
C**GET WHAT'S REQUIRED
            DO I=1,3
              SUP3(I)=0
              DO K=1,NMODE-1
                DO L=1,NMODE-1
                  SUP3(I)=SUP3(I)+QQ(K)*MULT(L)*BB(K,L,I,ITAU)*BBT(L)
                END DO
              END DO
            END DO
            ZZ=0
            DO K=1,NMODE-1
              DO L=1,NMODE-1
                ZZ=ZZ+QQ(K)*MULT(L)*BBS(K,L,ITAU)*BBT(L)
              END DO
            END DO
            DO I=1,3
              DO L=1,NMODE-1
                BS(L,I,ITAU)=0
                DO K=1,NMODE-1
                  BS(L,I,ITAU)=BS(L,I,ITAU)+QQ(K)*MULT(L)*
     1            BB(K,L,I,ITAU)
                END DO
              END DO
            END DO
            DO L=1,NMODE-1
              BSS(L,ITAU)=0
              DO K=1,NMODE-1
                BSS(L,ITAU)=BSS(L,ITAU)+QQ(K)*MULT(L)*
     1          BBS(K,L,ITAU)
              END DO
            END DO
C**GOT WHAT'S REQUIRED
            CALL VSET91(VM,VMR,MM1/MD1,SUP3,BS,BSS,NMODE,ZZ,M1,MODE1,
     1      ITAU)
C           IF(JCOUPC.GT.0)THEN
C             VM(M1,1)=XMU0(MX,MX)/2
C             VM(M1,2)=XMU0(MY,MY)/2
C             VM(M1,3)=XMU0(MZ,MZ)/2
C             VM(M1,4)=XMU0(MX,MZ)/2
C             VM(M1,5)=XMU0(MY,MZ)/2
C             VM(M1,6)=XMU0(MX,MY)/2
C             VM(M1,7)=-SST*XMU0(MX,4)/(2*DETMU)+ZZ*XMU0(MX,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MX)+SUP3(MY)*XMU0(MY,MX)+
C    2                  SUP3(MZ)*XMU0(MZ,MX))/2
C             VM(M1,8)=(BS(MODE1,MX,ITAU)*XMU0(MX,MX)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MX)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MX))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MX,4)/2
C             VM(M1,9)=-XMU0(MX,4)/2
C             VM(M1,10)=-SST*XMU0(MY,4)/(2*DETMU)+ZZ*XMU0(MY,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MY)+SUP3(MY)*XMU0(MY,MY)+
C    2                  SUP3(MZ)*XMU0(MZ,MY))/2
C             VM(M1,11)=(BS(MODE1,MX,ITAU)*XMU0(MX,MY)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MY)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MY))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MY,4)/2
C             VM(M1,12)=-XMU0(MY,4)/2
C             VM(M1,13)=-SST*XMU0(MZ,4)/(2*DETMU)+ZZ*XMU0(MZ,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MZ)+SUP3(MY)*XMU0(MY,MZ)+
C    2                  SUP3(MZ)*XMU0(MZ,MZ))/2
C             VM(M1,14)=(BS(MODE1,MX,ITAU)*XMU0(MX,MZ)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MZ)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MZ))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MZ,4)/2
C             VM(M1,15)=-XMU0(MZ,4)/2
C           ELSE
C             VMR(M1,1)=XMU0(MX,MX)/2
C             VMR(M1,2)=XMU0(MY,MY)/2
C             VMR(M1,3)=XMU0(MZ,MZ)/2
C             VMR(M1,4)=XMU0(MX,MZ)/2
C             VMR(M1,5)=XMU0(MY,MZ)/2
C             VMR(M1,6)=XMU0(MX,MY)/2
C             VMR(M1,7)=-SST*XMU0(MX,4)/(2*DETMU)+ZZ*XMU0(MX,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MX)+SUP3(MY)*XMU0(MY,MX)+
C    2                  SUP3(MZ)*XMU0(MZ,MX))/2
C             VMR(M1,8)=(BS(MODE1,MX,ITAU)*XMU0(MX,MX)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MX)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MX))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MX,4)/2
C             VMR(M1,9)=-XMU0(MX,4)/2
C             VMR(M1,10)=-SST*XMU0(MY,4)/(2*DETMU)+ZZ*XMU0(MY,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MY)+SUP3(MY)*XMU0(MY,MY)+
C    2                  SUP3(MZ)*XMU0(MZ,MY))/2
C             VMR(M1,11)=(BS(MODE1,MX,ITAU)*XMU0(MX,MY)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MY)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MY))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MY,4)/2
C             VMR(M1,12)=-XMU0(MY,4)/2
C             VMR(M1,13)=-SST*XMU0(MZ,4)/(2*DETMU)+ZZ*XMU0(MZ,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MZ)+SUP3(MY)*XMU0(MY,MZ)+
C    2                  SUP3(MZ)*XMU0(MZ,MZ))/2
C             VMR(M1,14)=(BS(MODE1,MX,ITAU)*XMU0(MX,MZ)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MZ)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MZ))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MZ,4)/2
C             VMR(M1,15)=-XMU0(MZ,4)/2
C           END IF
          END IF
        END DO
        IF(JMAX.EQ.0)THEN
C**INTRINSIC
          IF(IND.NE.0.AND.MOLINC.LE.0)THEN
            CALL VOUT81(V,VR,MM1/MD1)
          END IF
        ELSE
          CALL VOUT91(VM,VMR,MM1/MD1)
C         IF(JCOUPC.GT.0)THEN
C           WRITE(91)VM
C         ELSE
C           WRITE(91)VMR
C         END IF
        END IF
      END DO
C**INTRINSIC
      IF(MOLINC.LE.0)GO TO 9999
      CALL DUMVR0(NMODE,NATOM,QQ,BB,BS,BT,BBS,B,BBT,
     1BSS,XX,XXP,X0,XL,XM,V,VR,VM,VMR,JMAX,VR0,0,MODINT)
C**LOOP ROUND TAU
      DO MTAU=1,MMTAU/MDT
        DO M1=1,MM1/MD1
          CALL VGET81(VR1,KVP,BT,BBT,NMODE,ZZ,M1,MODE1,
     1    NSMODE,MTAU)
          BBT(NSMODE)=BBT(NSMODE)-VR0(1,MTAU)
          BT(NSMODE,NSMODE)=BT(NSMODE,NSMODE)-VR0(2,MTAU)
          ZZ=ZZ-VR0(3,MTAU)
          IF(IND.NE.0)THEN
            CALL VSET81(V,VR,MM1/MD1,BT,BBT,NMODE,ZZ,M1,MODE1,
     1      NSMODE)
          ELSE
            V(M1,1,MTAU)=BBT(MODE1)
            V(M1,2,MTAU)=BBT(NSMODE)
            V(M1,3,MTAU)=BT(MODE1,MODE1)
            V(M1,4,MTAU)=BT(MODE1,NSMODE)
            V(M1,5,MTAU)=BT(NSMODE,NSMODE)
            V(M1,6,MTAU)=ZZ
          END IF
        END DO
        IF(IND.NE.0)THEN
          CALL VOUT81(V,VR,MM1/MD1)
        END IF
      END DO
9999  CONTINUE
      CALL FLUSH(81)
      CALL FLUSH(91)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DUMPT2(XQ1,XQ2,MM1,MM2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1NPOT,IPOT,JPOT,CPOT,MODE1,MODE2,V,VR,IND,MODINT,XTANPM,NP1,CP1,
     2VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,NBF,MBF,
     3V1,V1R,XMODQ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C****************************************
C**NEVER CALLED FOR FITTING OF POTENTIALS
C****************************************
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM2,MM1),V1(MMX1),VP
      REAL*4 VR(MM2,MM1),V1R(MMX1),VPR
      DIMENSION NP1(1),CP1(MMX1,1),VP1(MMX1,1),DP1(MMX1,1)
      DIMENSION NP2(NTOT2),CP2(MAX2,1),VP2(MAX2,MAX2,NTOT2),
     1DP2A(MAX2,MAX2,NTOT2),DP2B(MAX2,MAX2,NTOT2)
      DIMENSION DUMMY(100),INDK(1)
      DIMENSION MODINT(NMODE),XTANPM(NMODE),NBF(1),MBF(1),XMODQ(NMODE)
      DIMENSION XQ1(MM1),XQ2(MM2),RR(NATOM,NATOM),QQ(NMODE)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT)
      COMMON/WHICH/IWHICH
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/VMIN/VMIN
      COMMON/CHKMAX/MAXCHK(6)
      COMMON/FUNDAM/WAVENM
      COMMON/FILASS/IOUT,INP
      COMMON/POTREF/VP,VPR
      DO K=1,NMODE
        QQ(K)=0
      END DO
C**INTRINSIC
      IF(IND.NE.0)THEN
        MD1=MODINT(MODE1)
        MD2=MODINT(MODE2)
        DO I=1,NWSYM
          DO J=1,NSYM(I)
            IF(MODE1.EQ.ISYM(I,J))N1=I
            IF(MODE2.EQ.ISYM(I,J))N2=I
          END DO
        END DO
        IF(N1.EQ.N2)MD2=1
      ELSE
        MD1=1
        MD2=1
      END IF
      MODCHK=IABS(MAXCHK(2))
      MD=MD1*MD2
      DO M1=1,MM1/MD1
        QQ(MODE1)=XQ1(M1)*XMODQ(MODE1)
        DO M2=1,MM2/MD2
          QQ(MODE2)=XQ2(M2)*XMODQ(MODE2)
          IF(IWHICH.GT.0)THEN
            DO I=1,NATOM
              DO J=1,3
                XX(I,J)=X0(I,J)+XL(I,MODE1,J)*QQ(MODE1)/
     1          SQRT(XM(I))
                XX(I,J)=XX(I,J)+XL(I,MODE2,J)*QQ(MODE2)/
     1          SQRT(XM(I))
              END DO
            END DO
!            WRITE(14,'(I5)') NATOM
!            WRITE(14,'(I4,F10.3,I4,F10.3)') MODE1, QQ(MODE1), MODE2,
!     1                                      QQ(MODE2)
!            WRITE(14,'(A,3F15.8)') 'H',XX( 1,:)*0.5291772083
!            WRITE(14,'(A,3F15.8)') 'H',XX( 2,:)*0.5291772083
!            WRITE(14,'(A,3F15.8)') 'H',XX( 3,:)*0.5291772083
!            WRITE(14,'(A,3F15.8)') 'H',XX( 4,:)*0.5291772083
!            WRITE(14,'(A,3F15.8)') 'O',XX( 5,:)*0.5291772083
!            WRITE(14,'(A,3F15.8)') 'O',XX( 6,:)*0.5291772083
!            WRITE(14,'(A,3F15.8)') 'O',XX( 7,:)*0.5291772083
!            WRITE(14,'(A,3F15.8)') 'O',XX( 8,:)*0.5291772083
!            WRITE(14,'(A,3F15.8)') 'C',XX( 9,:)*0.5291772083
!            WRITE(14,'(A,3F15.8)') 'C',XX(10,:)*0.5291772083
            CALL GETPOT(VDP,NATOM,XX,RR)
          ELSE
            IF(IWHICH.EQ.0)THEN
              CALL GETPT2(VDP,NPOT,IPOT,JPOT,CPOT,NMODE,QQ)
            ELSE
              IF(MOLINC.EQ.0)
     1        CALL GETQPT(VDP,NMODE,QQ,XTANPM)
              IF(MOLINC.LT.0)
     1        CALL GETQP2(VDP,DUMMY,NMODE,QQ,NP1,CP1,VP1,DP1,NTOT1,
     2        MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK)
            END IF
          END IF
          CALL SET72(V,VR,MM1/MD1,MM2/MD2,VDP,M1,M2)
        END DO
      END DO
C******************************************************************
      IF(MODE1.EQ.MODCHK.OR.MODE2.EQ.MODCHK)THEN
        IF(MODE1.EQ.MODCHK)THEN
          MX1=MM1/2
          MX2=MM2/MD2
          MDD1=MD1
        END IF
        IF(MODE2.EQ.MODCHK)THEN
          MX1=MM2/2
          MX2=MM1/MD1
          MDD1=MD2
        END IF
        IF(MAXCHK(2).GT.0)THEN
          WRITE(IOUT,*)'START GRID INSPECTION FOR MODE ',MODCHK
        ELSE
          WRITE(IOUT,*)'START HOLE SEARCH FOR MODE ',MODCHK
        END IF
        DO M2=1,MX2
          IF(MODE1.EQ.MODCHK)THEN
            MZ2=M2
          END IF
          IF(MODE2.EQ.MODCHK)THEN
            MZ1=M2
          END IF
CC        IF(MAXCHK(2).LT.0)THEN
C
            VLAST=-1.0D+20
C**MIN=0 UNTIL FIRST MINIMUM (+1) or MAXIMUM (-1) REACHED
            MIN=0
            GRAD=0
            VDIFF=0
C**FIRST GO TO NEGATIVE Q
            DO M1=MX1,1,-1
              IF(MODE1.EQ.MODCHK)MZ1=M1
              IF(MODE2.EQ.MODCHK)MZ2=M1
              VDP=VFUN2(V,VR,MM1/MD1,MM2/MD2,MZ1,MZ2,VMIN,WAVENM)
              GRADPR=GRAD
C**PREVIOUS GRADIENT
              IF(M1.NE.MX1)THEN
C**GRAD -VE IF V RISING, +VE IF V FALLING
                IF(MODE1.EQ.MODCHK)
     1          GRAD=WAVENM*(VDP-VLAST)/(XQ1(M1)-XQ1(M1+1))
                IF(MODE2.EQ.MODCHK)
     1          GRAD=WAVENM*(VDP-VLAST)/(XQ2(M1)-XQ2(M1+1))
              END IF
C**TEST FOR V RISING OR FALLING BEFORE FIRST MINIMUM
              IF(VDP.GT.VLAST.OR.MIN.EQ.0)THEN
                VDIFF=VDP-VLAST
                CALL SET72(V,VR,MM1/MD1,MM2/MD2,VDP,MZ1,MZ2)
                IF(VDP.LT.VMIN)THEN
                  WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2
                  WRITE(IOUT,*)'M1,M2 ',MZ1,MZ2
                  WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1),XQ2(MZ2)
                  WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                END IF
C**SET VMIN IF NOT REACHED FIRST MINIMUM
                IF(MIN.EQ.0)VMIN=VDP
C**TEST FOR MINIMUM
                IF(GRADPR.GE.0.AND.GRAD.LT.0)THEN
                  WRITE(IOUT,*)'MINIMUM FOUND FOR MODES ',MODE1,MODE2
                  IF(MODE1.EQ.MODCHK)THEN
                    WRITE(IOUT,*)'M1,M2 ',MZ1+1,MZ2
                    WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1+1),XQ2(MZ2)
                  END IF
                  IF(MODE2.EQ.MODCHK)THEN
                    WRITE(IOUT,*)'M1,M2 ',MZ1,MZ2+1
                    WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1),XQ2(MZ2+1)
                  END IF
                  WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                  MIN=1
                END IF
                VLAST=VDP
C**TEST FOR V FALLING AFTER FIRST MINIMUM
              ELSE
                IF(MAXCHK(1).GT.0)THEN
                  CALL SET72(V,VR,MM1/MD1,MM2/MD2,VDP,MZ1,MZ2)
                ELSE
                  CALL SET72(V,VR,MM1/MD1,MM2/MD2,VLAST+VDIFF,MZ1,MZ2)
                END IF
                IF(GRADPR.LT.0.AND.GRAD.GE.0)THEN
                  WRITE(IOUT,*)'MAXIMUM FOUND FOR MODES ',MODE1,MODE2
                  IF(MODE1.EQ.MODCHK)THEN
                    WRITE(IOUT,*)'M1,M2 ',MZ1+1,MZ2
                    WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1+1),XQ2(MZ2)
                  END IF
                  IF(MODE2.EQ.MODCHK)THEN
                    WRITE(IOUT,*)'M1,M2 ',MZ1,MZ2+1
                    WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1),XQ2(MZ2+1)
                  END IF
                  WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                  MIN=-1
                END IF
                IF(VLAST+VDIFF.LT.VMIN)THEN
                  WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2
                  WRITE(IOUT,*)'M1,M2 ',MZ1,MZ2
                  WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1),XQ2(MZ2)
                  WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                END IF
                IF(MAXCHK(2).LT.0)VLAST=VLAST+VDIFF
              END IF
            END DO
C
            IF(MDD1.EQ.2)GO TO 1000
            VLAST=-1.0D+20
C**MIN=0 UNTIL FIRST MINIMUM (+1) or MAXIMUM (-1) REACHED
            MIN=0
            GRAD=0
            VDIFF=0
C**NOW GO TO POSITIVE Q
            DO M1=MX1+1,2*MX1
              IF(MODE1.EQ.MODCHK)MZ1=M1
              IF(MODE2.EQ.MODCHK)MZ2=M1
              VDP=VFUN2(V,VR,MM1/MD1,MM2/MD2,MZ1,MZ2,VMIN,WAVENM)
C**PREVIOUS GRADIENT
              GRADPR=GRAD
              IF(M1.NE.MX1+1)THEN
C**GRAD +VE IF V RISING, -VE IF V FALLING
                IF(MODE1.EQ.MODCHK)
     1          GRAD=WAVENM*(VDP-VLAST)/(XQ1(M1)-XQ1(M1-1))
                IF(MODE2.EQ.MODCHK)
     1          GRAD=WAVENM*(VDP-VLAST)/(XQ2(M1)-XQ2(M1-1))
              END IF
C**TEST FOR V RISING OR FALLING BEFORE FIRST MINIMUM
              IF(VDP.GT.VLAST.OR.MIN.EQ.0)THEN
                VDIFF=VDP-VLAST
                CALL SET72(V,VR,MM1/MD1,MM2/MD2,VDP,MZ1,MZ2)
                IF(VDP.LT.VMIN)THEN
                  WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2
                  WRITE(IOUT,*)'M1,M2 ',MZ1,MZ2
                  WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1),XQ2(MZ2)
                  WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
C**SET VMIN IF NOT REACHED FIRST MINIMUM
                  IF(MIN.EQ.0)VMIN=VDP
                END IF
C**TEST FOR MINIMUM
                IF(GRADPR.LT.0.AND.GRAD.GE.0)THEN
                  WRITE(IOUT,*)'MINIMUM FOUND FOR MODES ',MODE1,MODE2
                  IF(MODE1.EQ.MODCHK)THEN
                    WRITE(IOUT,*)'M1,M2 ',MZ1-1,MZ2
                    WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1-1),XQ2(MZ2)
                  END IF
                  IF(MODE2.EQ.MODCHK)THEN
                    WRITE(IOUT,*)'M1,M2 ',MZ1,MZ2-1
                    WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1),XQ2(MZ2-1)
                  END IF
                  WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                  MIN=1
                END IF
                VLAST=VDP
C**TEST FOR V FALLING AFTER FIRST MINIMUM
              ELSE
                IF(MAXCHK(1).GT.0)THEN
                  CALL SET72(V,VR,MM1/MD1,MM2/MD2,VDP,MZ1,MZ2)
                ELSE
                  CALL SET72(V,VR,MM1/MD1,MM2/MD2,VLAST+VDIFF,MZ1,MZ2)
                END IF
                IF(GRADPR.GE.0.AND.GRAD.LT.0)THEN
                  WRITE(IOUT,*)'MAXIMUM FOUND FOR MODES ',MODE1,MODE2
                  IF(MODE1.EQ.MODCHK)THEN
                    WRITE(IOUT,*)'M1,M2 ',MZ1-1,MZ2
                    WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1-1),XQ2(MZ2)
                  END IF
                  IF(MODE2.EQ.MODCHK)THEN
                    WRITE(IOUT,*)'M1,M2 ',MZ1,MZ2-1
                    WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1),XQ2(MZ2-1)
                  END IF
                  WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                  MIN=-1
                END IF
                IF(VLAST+VDIFF.LT.VMIN)THEN
                  WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2
                  WRITE(IOUT,*)'M1,M2 ',MZ1,MZ2
                  WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1),XQ2(MZ2)
                  WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                END IF
                IF(MAXCHK(2).LT.0)VLAST=VLAST+VDIFF
              END IF
            END DO
1000        CONTINUE
CC        END IF
          IF(MODE1.EQ.MODCHK)THEN
            DO M1=1,MM1/MD1
              VDP=VFUN2(V,VR,MM1/MD1,MM2/MD2,M1,MZ2,VMIN,WAVENM)-VMIN
              IF(VDP.LT.0.AND.MAXCHK(2).LT.0)THEN
                WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1          MODE1,MODE2
                WRITE(IOUT,*)'M1,M2 ',M1,MZ2
                WRITE(IOUT,*)'Q1,Q2 ',XQ1(M1),XQ2(MZ2)
                WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                WRITE(IOUT,*)'*****************************'
                WRITE(IOUT,*)
              END IF
            END DO
            IF(MAXCHK(2).GT.0)THEN
              WRITE(IOUT,*)' ORIGINAL POTENTIAL'
              WRITE(IOUT,*)'MODES',MODE2,XQ2(MZ2)
              WRITE(IOUT,*)'MODE',MODE1
              WRITE(IOUT,*)
              DO M1=1,MM1/MD1
                WRITE(IOUT,*)XQ1(M1),VFUN2(V,VR,MM1/MD1,MM2/MD2,
     1          M1,MZ2,VMIN,WAVENM)*WAVENM
              END DO
              WRITE(IOUT,*)'END GRID INSPECTION FOR MODE ',MODCHK
            ELSE
              WRITE(IOUT,*)' AMENDED POTENTIAL'
              WRITE(IOUT,*)'MODES',MODE2,XQ2(MZ2)
              WRITE(IOUT,*)'MODE',MODE1
              WRITE(IOUT,*)
              DO M1=1,MM1/MD1
                WRITE(IOUT,*)XQ1(M1),VFUN2(V,VR,MM1/MD1,MM2/MD2,
     1          M1,MZ2,VMIN,WAVENM)*WAVENM
              END DO
              WRITE(IOUT,*)'END HOLE SEARCH FOR MODE ',MODCHK
            END IF
            WRITE(IOUT,*)
          END IF
C
          IF(MODE2.EQ.MODCHK)THEN
            DO M1=1,MM2/MD2
              VDP=VFUN2(V,VR,MM1/MD1,MM2/MD2,MZ1,M1,VMIN,WAVENM)-VMIN
              IF(VDP.LT.0.AND.MAXCHK(2).LT.0)THEN
                WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1          MODE1,MODE2
                WRITE(IOUT,*)'M1,M2 ',MZ1,M1
                WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1),XQ2(M1)
                WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                WRITE(IOUT,*)'*****************************'
                WRITE(IOUT,*)
              END IF
            END DO
            IF(MAXCHK(2).GT.0)THEN
              WRITE(IOUT,*)' ORIGINAL POTENTIAL'
              WRITE(IOUT,*)'MODES',MODE1,XQ1(MZ1)
              WRITE(IOUT,*)'MODE',MODE2
              WRITE(IOUT,*)
              DO M1=1,MM2/MD2
                WRITE(IOUT,*)XQ2(M1),VFUN2(V,VR,MM1/MD1,MM2/MD2,
     1          MZ1,M1,VMIN,WAVENM)*WAVENM
              END DO
              WRITE(IOUT,*)'END GRID INSPECTION FOR MODE ',MODCHK
            ELSE
              WRITE(IOUT,*)' AMENDED POTENTIAL'
              WRITE(IOUT,*)'MODES',MODE2,XQ2(MZ2)
              WRITE(IOUT,*)'MODE',MODE1
              WRITE(IOUT,*)
              DO M1=1,MM1/MD1
                WRITE(IOUT,*)XQ1(M1),VFUN2(V,VR,MM1/MD1,MM2/MD2,
     1          M1,MZ2,VMIN,WAVENM)*WAVENM
              END DO
              WRITE(IOUT,*)'END HOLE SEARCH FOR MODE ',MODCHK
            END IF
            WRITE(IOUT,*)
          END IF
        END DO
      END IF
C
C**INTRINSIC
      IF(MOLINC.LE.0)GO TO 9999
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        IF(K1.EQ.MODE1)THEN
          CALL DUMPT1(XQ1,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,K1,V1,V1R,0,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2    XMODQ)
          CALL FIX71(V1,V1R,J1,VP1,MMX1,K1,MODE1,MM1,MD1,1)
        END IF
        IF(K1.EQ.MODE2)THEN
          CALL DUMPT1(XQ2,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,K1,V1,V1R,0,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2    XMODQ)
          CALL FIX71(V1,V1R,J1,VP1,MMX1,K1,MODE2,MM2,MD2,2)
        END IF
      END DO
      DO M1=1,MM1/MD1
        X1=VP1(M1,1)
        DO M2=1,MM2/MD2
          X2=VP1(M2,2)
          CALL GET72(V,VR,MM1/MD1,MM2/MD2,VDP,M1,M2)
          VDP=VDP-X1-X2
          IF(JCOUPL.GE.0)THEN
            VDP=VDP-VP
          ELSE
            VDP=VDP-VPR
          END IF
          CALL SET72(V,VR,MM1/MD1,MM2/MD2,VDP,M1,M2)
        END DO
      END DO
9999  CONTINUE
      IF(IND.NE.0)THEN
        CALL OUT72(V,VR,MM1/MD1,MM2/MD2)
      END IF
      CALL FLUSH(I72)
      RETURN
      END
C****************************************************************
      DOUBLE PRECISION FUNCTION VFUN2(V,VR,MM1,MM2,M1,M2,
     1VMIN,WAVENM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION V(MM2,MM1)
      REAL*4 VR(MM2,MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GT.0)THEN
C       VFUN2=(V(M2,M1)-VMIN)*WAVENM
        VFUN2=V(M2,M1)
      ELSE
C       VFUN2=(VR(M2,M1)-VMIN)*WAVENM
        VFUN2=VR(M2,M1)
      END IF
      RETURN
      END
C****************************************************************
      SUBROUTINE DUMVT2(XQ1,XQ2,MM1,MM2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1NPOT,IPOT,JPOT,CPOT,MODE1,MODE2,V,VR,XQTAU,VT0,VT1,VT2,KVP,
     2IND,MODINT,NBF,MBF,V1,V1R,MMTAU,XMODQ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR,ABINIT
C**INTRINSIC
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM2,MM1,1),VT0(MMTAU),VT1(KVP,MMTAU,2),
     1VT2(KVP,KVP,MMTAU),V1(KVP,MMTAU)
      REAL*4 VR(MM2,MM1,1),V1R(KVP,MMTAU)
C**TEMPORARY (DIMENSION)
      DIMENSION Q(100),DELTA(100),XQTAU(1),NBF(1),MBF(1)
      DIMENSION MODINT(NMODE),XMODQ(NMODE)
      DIMENSION XQ1(MM1),XQ2(MM2),RR(NATOM,NATOM),QQ(NMODE)
      DIMENSION X0(NATOM,3),XM(NATOM)
CCCC  DIMENSION XX(NATOM,3,362),XL(NATOM,NMODE,3,362)
      DIMENSION XX(NATOM,3,722),XL(NATOM,NMODE,3,722)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT)
      COMMON/WHICH/IWHICH
      COMMON/TORS/QTAU
      COMMON/TYPE/LINEAR
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/VMIN/VMIN
      COMMON/CHKMAX/MAXCHK(6)
      COMMON/FILASS/IOUT,INP
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/ABINIT/ABINIT
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
C**ASSUME STARTING VALUE TAU: INIT
C**ASSUME NEXT VALUE TAU: INIT+INCTAU
C**ITAU=2 EQUIVALENT TO ITAU=722
      COMMON/REACTN/IREACT,MMXTAU,INIT,INCTAU
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.NT.AND.MDT.GT.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.GT.1)MD2=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.GT.1)MD2=1
C**INTRINSIC
      IF(IND.EQ.0)THEN
        MD1=1
        MD2=1
      END IF
      MODCHK=IABS(MAXCHK(2))
      IF(MODCHK.NE.0)WRITE(IOUT,*)' FOR DUMVT2 - MODES ',MODE1,MODE2,
     1' VMIN = ',VMIN*WAVENM
C**LOOP ROUND TAU
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
          QTAU=XQTAU(MTAU)
        ELSE
          QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
          DELTA(4)=+QTAU
          DELTA(5)=-QTAU
        END IF
        DO K=1,NMODE
          Q(K)=0
          QQ(K)=0
        END DO
        DO M1=1,MM1/MD1
          QQ(MODE1)=XQ1(M1)*XMODQ(MODE1)
          Q(MODE1)=QQ(MODE1)
          DO M2=1,MM2/MD2
            QQ(MODE2)=XQ2(M2)*XMODQ(MODE2)
            Q(MODE2)=QQ(MODE2)
            IF(IWHICH.NE.0)THEN
              IF(LINEAR)THEN
C**GET Q4X,Q5X, Q4Y,Q5Y FROM Q4,Q5,DELTA4,DELTA5
                DO K=NONLIN+1,NONLIN+LINBND
                  QQ(K)=Q(K)*DCOS(DELTA(K))
                  QQ(K+LINBND)=Q(K)*DSIN(DELTA(K))
                END DO
                DO I=1,NATOM
                  DO J=1,3
                    XX(I,J,1)=X0(I,J)
                    DO K=1,NMODE
                      XX(I,J,1)=XX(I,J,1)+XL(I,K,J,1)*QQ(K)/SQRT(XM(I))
                    END DO
                  END DO
                END DO
              ELSE
                DO I=1,NATOM
                  DO J=1,3
                    XX(I,J,1)=(XX(I,J,ITAU)+XL(I,MODE1,J,ITAU)*
     1              QQ(MODE1))/SQRT(XM(I))
                    XX(I,J,1)=XX(I,J,1)+XL(I,MODE2,J,ITAU)*QQ(MODE2)/
     1              SQRT(XM(I))
                  END DO
                END DO
              END IF
              IF(ABINIT)THEN
                CALL GETAPT(VDP,NATOM,XX,RR,QQ,NMODE,ITAU)
              ELSE
                CALL GETPOT(VDP,NATOM,XX,RR)
              END IF
            ELSE
              CALL GETPT2(VDP,NPOT,IPOT,JPOT,CPOT,NMODE,QQ)
            END IF
C**INTRINSIC
            IF(IND.NE.0.AND.MOLINC.LE.0)THEN
              CALL SET72(V,VR,MM1/MD1,MM2/MD2,VDP,M1,M2)
            ELSE
              VT2(M2,M1,MTAU)=VDP
            END IF
          END DO
        END DO
C******************************************************************
        IF(MODE1.EQ.MODCHK.OR.MODE2.EQ.MODCHK)THEN
          IF(MODE1.EQ.MODCHK)THEN
            MX1=MM1/2
            MX2=MM2/MD2
            MDD1=MD1
          END IF
          IF(MODE2.EQ.MODCHK)THEN
            MX1=MM2/2
            MX2=MM1/MD1
            MDD1=MD2
          END IF
          WRITE(IOUT,*)'*****************************'
          WRITE(IOUT,*)' FOR MTAU = ',MTAU,' MDD1 = ',MDD1
          WRITE(IOUT,*)'*****************************'
          IF(MAXCHK(2).GT.0)THEN
            WRITE(IOUT,*)'START GRID INSPECTION FOR MODE ',MODCHK
          ELSE
            WRITE(IOUT,*)'START HOLE SEARCH FOR MODE ',MODCHK
          END IF
          DO M2=1,MX2
            IF(MODE1.EQ.MODCHK)THEN
              MZ2=M2
            END IF
            IF(MODE2.EQ.MODCHK)THEN
              MZ1=M2
            END IF
CC          IF(MAXCHK(2).LT.0)THEN
C
              VLAST=-1.0D+20
C**MIN=0 UNTIL FIRST MINIMUM (+1) or MAXIMUM (-1) REACHED
              MIN1=0
              GRAD=0
              VDIFF=0
C**FIRST GO TO NEGATIVE Q
              DO M1=MX1,1,-1
                IF(MODE1.EQ.MODCHK)MZ1=M1
                IF(MODE2.EQ.MODCHK)MZ2=M1
                VDP=VFUN2(V,VR,MM1/MD1,MM2/MD2,MZ1,MZ2,VMIN,WAVENM)
C**PREVIOUS GRADIENT
                GRADPR=GRAD
                IF(M1.NE.MX1)THEN
C**GRAD -VE IF V RISING, +VE IF V FALLING
                  IF(MODE1.EQ.MODCHK)
     1            GRAD=WAVENM*(VDP-VLAST)/(XQ1(M1)-XQ1(M1+1))
                  IF(MODE2.EQ.MODCHK)
     1            GRAD=WAVENM*(VDP-VLAST)/(XQ2(M1)-XQ2(M1+1))
                END IF
C**TEST FOR V RISING OR FALLING BEFORE FIRST MINIMUM
                IF(VDP.GT.VLAST.OR.MIN1.EQ.0)THEN
                  VDIFF=VDP-VLAST
                  CALL SET72(V,VR,MM1/MD1,MM2/MD2,VDP,MZ1,MZ2)
                  IF(VDP.LT.VMIN)THEN
                    WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2
                    WRITE(IOUT,*)'M1,M2 ',MZ1,MZ2
                    WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1),XQ2(MZ2)
                    WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
                    WRITE(IOUT,*)'*****************************'
                    WRITE(IOUT,*)
C**SET VMIN IF NOT REACHED FIRST MINIMUM
                    IF(MIN1.EQ.0)VMIN=VDP
                  END IF
C**TEST FOR MINIMUM
                  IF(GRADPR.GE.0.AND.GRAD.LT.0)THEN
                    WRITE(IOUT,*)'MINIMUM FOUND FOR MODES ',MODE1,MODE2
                    IF(MODE1.EQ.MODCHK)THEN
                      WRITE(IOUT,*)'M1,M2 ',MZ1+1,MZ2
                      WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1+1),XQ2(MZ2)
                    END IF
                    IF(MODE2.EQ.MODCHK)THEN
                      WRITE(IOUT,*)'M1,M2 ',MZ1,MZ2+1
                      WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1),XQ2(MZ2+1)
                    END IF
                    WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                    WRITE(IOUT,*)'*****************************'
                    WRITE(IOUT,*)
                    MIN1=1
                  END IF
                  VLAST=VDP
C**TEST FOR V FALLING AFTER FIRST MINIMUM
                ELSE
                  IF(MAXCHK(2).GT.0)THEN
                    CALL SET72(V,VR,MM1/MD1,MM2/MD2,VDP,MZ1,MZ2)
                  ELSE
                    CALL SET72(V,VR,MM1/MD1,MM2/MD2,VLAST+VDIFF,MZ1,MZ2)
                  END IF
                  IF(GRADPR.LT.0.AND.GRAD.GE.0)THEN
                    WRITE(IOUT,*)'MAXIMUM FOUND FOR MODES ',MODE1,MODE2
                    IF(MODE1.EQ.MODCHK)THEN
                      WRITE(IOUT,*)'M1,M2 ',MZ1+1,MZ2
                      WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1+1),XQ2(MZ2)
                    END IF
                    IF(MODE2.EQ.MODCHK)THEN
                      WRITE(IOUT,*)'M1,M2 ',MZ1,MZ2+1
                      WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1),XQ2(MZ2+1)
                    END IF
                    WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                    WRITE(IOUT,*)'*****************************'
                    WRITE(IOUT,*)
                    MIN1=-1
                  ELSE
                    WRITE(IOUT,*)'ORIGINAL POTENTIAL FOR MODES ',MODE1,
     1              MODE2
                    IF(MODE1.EQ.MODCHK)THEN
                      WRITE(IOUT,*)'M1,M2 ',MZ1+1,MZ2
                      WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1+1),XQ2(MZ2)
                    END IF
                    IF(MODE2.EQ.MODCHK)THEN
                      WRITE(IOUT,*)'M1,M2 ',MZ1,MZ2+1
                      WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1),XQ2(MZ2+1)
                    END IF
                    WRITE(IOUT,*)'POTENTIAL ',VDP*WAVENM
                    WRITE(IOUT,*)'*****************************'
                    WRITE(IOUT,*)
                  END IF
                  IF(VLAST+VDIFF.LT.VMIN)THEN
                    WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2
                    WRITE(IOUT,*)'M1,M2 ',MZ1,MZ2
                    WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1),XQ2(MZ2)
                    WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                    WRITE(IOUT,*)'*****************************'
                    WRITE(IOUT,*)
                  END IF
                  IF(MAXCHK(2).LT.0)VLAST=VLAST+VDIFF
                END IF
              END DO
C
              IF(MDD1.EQ.2)GO TO 1000
              VLAST=-1.0D+20
C**MIN=0 UNTIL FIRST MINIMUM (+1) or MAXIMUM (-1) REACHED
              MIN2=0
              GRAD=0
              VDIFF=0
C**NOW GO TO POSITIVE Q
              DO M1=MX1+1,2*MX1
                IF(MODE1.EQ.MODCHK)MZ1=M1
                IF(MODE2.EQ.MODCHK)MZ2=M1
                VDP=VFUN2(V,VR,MM1/MD1,MM2/MD2,MZ1,MZ2,VMIN,WAVENM)
C**PREVIOUS GRADIENT
                GRADPR=GRAD
                IF(M1.NE.MX1+1)THEN
C**GRAD +VE IF V RISING, -VE IF V FALLING
                  IF(MODE1.EQ.MODCHK)
     1            GRAD=WAVENM*(VDP-VLAST)/(XQ1(M1)-XQ1(M1-1))
                  IF(MODE2.EQ.MODCHK)
     1            GRAD=WAVENM*(VDP-VLAST)/(XQ2(M1)-XQ2(M1-1))
                END IF
C**TEST FOR V RISING OR FALLING BEFORE FIRST MINIMUM
                IF(VDP.GT.VLAST.OR.MIN2.EQ.0)THEN
                  VDIFF=VDP-VLAST
                  CALL SET72(V,VR,MM1/MD1,MM2/MD2,VDP,MZ1,MZ2)
                  IF(VDP.LT.VMIN)THEN
                    WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2
                    WRITE(IOUT,*)'M1,M2 ',MZ1,MZ2
                    WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1),XQ2(MZ2)
                    WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
                    WRITE(IOUT,*)'*****************************'
                    WRITE(IOUT,*)
C**SET VMIN IF NOT REACHED FIRST MINIMUM
                    IF(MIN2.EQ.0)VMIN=VDP
                  END IF
C**TEST FOR MINIMUM
                  IF(GRADPR.LT.0.AND.GRAD.GE.0)THEN
                    WRITE(IOUT,*)'MINIMUM FOUND FOR MODES ',MODE1,MODE2
                    IF(MODE1.EQ.MODCHK)THEN
                      WRITE(IOUT,*)'M1,M2 ',MZ1-1,MZ2
                      WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1-1),XQ2(MZ2)
                    END IF
                    IF(MODE2.EQ.MODCHK)THEN
                      WRITE(IOUT,*)'M1,M2 ',MZ1,MZ2-1
                      WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1),XQ2(MZ2-1)
                    END IF
                    WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                    WRITE(IOUT,*)'*****************************'
                    WRITE(IOUT,*)
                    MIN2=1
                  END IF
                  VLAST=VDP
C**TEST FOR V FALLING AFTER FIRST MINIMUM
                ELSE
                  IF(MAXCHK(2).GT.0)THEN
                    CALL SET72(V,VR,MM1/MD1,MM2/MD2,VDP,MZ1,MZ2)
                  ELSE
                    CALL SET72(V,VR,MM1/MD1,MM2/MD2,VLAST+VDIFF,MZ1,MZ2)
                  END IF
                  IF(GRADPR.GE.0.AND.GRAD.LT.0)THEN
                    WRITE(IOUT,*)'MAXIMUM FOUND FOR MODES ',MODE1,MODE2
                    IF(MODE1.EQ.MODCHK)THEN
                      WRITE(IOUT,*)'M1,M2 ',MZ1-1,MZ2
                      WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1-1),XQ2(MZ2)
                    END IF
                    IF(MODE2.EQ.MODCHK)THEN
                      WRITE(IOUT,*)'M1,M2 ',MZ1,MZ2-1
                      WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1),XQ2(MZ2-1)
                    END IF
                    WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                    WRITE(IOUT,*)'*****************************'
                    WRITE(IOUT,*)
                    MIN2=-1
                  ELSE
                    WRITE(IOUT,*)'ORIGINAL POTENTIAL FOR MODES ',MODE1,
     1              MODE2
                    IF(MODE1.EQ.MODCHK)THEN
                      WRITE(IOUT,*)'M1,M2 ',MZ1-1,MZ2
                      WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1-1),XQ2(MZ2)
                    END IF
                    IF(MODE2.EQ.MODCHK)THEN
                      WRITE(IOUT,*)'M1,M2 ',MZ1,MZ2-1
                      WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1),XQ2(MZ2-1)
                    END IF
                    WRITE(IOUT,*)'POTENTIAL ',VDP*WAVENM
                    WRITE(IOUT,*)'*****************************'
                    WRITE(IOUT,*)
                  END IF
                  IF(VLAST+VDIFF.LT.VMIN)THEN
                    WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2
                    WRITE(IOUT,*)'M1,M2 ',MZ1,MZ2
                    WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1),XQ2(MZ2)
                    WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                    WRITE(IOUT,*)'*****************************'
                    WRITE(IOUT,*)
                  END IF
                  IF(MAXCHK(2).LT.0)VLAST=VLAST+VDIFF
                END IF
              END DO
1000          CONTINUE
CC          END IF
            IF(MODE1.EQ.MODCHK)THEN
              DO M1=1,MM1/MD1
                VDP=VFUN2(V,VR,MM1/MD1,MM2/MD2,M1,MZ2,VMIN,WAVENM)-VMIN
                IF(VDP.LT.0.AND.MAXCHK(2).LT.0)THEN
                  WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1            MODE1,MODE2
                  WRITE(IOUT,*)'M1,M2 ',M1,MZ2
                  WRITE(IOUT,*)'Q1,Q2 ',XQ1(M1),XQ2(MZ2)
                  WRITE(IOUT,*)'POTENTIAL ',(VDP+VMIN)*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                END IF
              END DO
              IF(MAXCHK(2).GT.0)THEN
                WRITE(IOUT,*)' ORIGINAL POTENTIAL'
                WRITE(IOUT,*)'MODE',MODE2,' AT ',XQ2(MZ2)
                WRITE(IOUT,*)'MODE',MODE1
                WRITE(IOUT,*)
                DO M1=1,MM1/MD1
                  WRITE(IOUT,*)XQ1(M1),VFUN2(V,VR,MM1/MD1,MM2/MD2,
     1            M1,MZ2,VMIN,WAVENM)*WAVENM
                END DO
                WRITE(IOUT,*)'END GRID INSPECTION FOR MODE ',MODCHK
              ELSE
                IF(MIN1.LT.0.OR.MIN2.LT.0)THEN
                WRITE(IOUT,*)' AMENDED POTENTIAL'
                WRITE(IOUT,*)'MODE',MODE2,' AT ',XQ2(MZ2)
                WRITE(IOUT,*)'MODE',MODE1
                WRITE(IOUT,*)
                DO M1=1,MM1/MD1
                  WRITE(IOUT,*)XQ1(M1),VFUN2(V,VR,MM1/MD1,MM2/MD2,
     1            M1,MZ2,VMIN,WAVENM)*WAVENM
                END DO
                END IF
                WRITE(IOUT,*)
                WRITE(IOUT,*)'END HOLE SEARCH FOR MODE ',MODCHK
              END IF
              WRITE(IOUT,*)
            END IF
C
            IF(MODE2.EQ.MODCHK)THEN
              DO M1=1,MM2/MD2
                VDP=VFUN2(V,VR,MM1/MD1,MM2/MD2,MZ1,M1,VMIN,WAVENM)-VMIN
                IF(VDP.LT.0.AND.MAXCHK(2).LT.0)THEN
                  WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1            MODE1,MODE2
                  WRITE(IOUT,*)'M1,M2 ',MZ1,M1
                  WRITE(IOUT,*)'Q1,Q2 ',XQ1(MZ1),XQ2(M1)
                  WRITE(IOUT,*)'POTENTIAL ',(VDP+VMIN)*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                END IF
              END DO
              IF(MAXCHK(2).GT.0)THEN
                WRITE(IOUT,*)' ORIGINAL POTENTIAL'
                WRITE(IOUT,*)'MODE',MODE1,' AT ',XQ1(MZ1)
                WRITE(IOUT,*)'MODE',MODE2
                WRITE(IOUT,*)
                DO M1=1,MM2/MD2
                  WRITE(IOUT,*)XQ2(M1),VFUN2(V,VR,MM1/MD1,MM2/MD2,
     1            MZ1,M1,VMIN,WAVENM)*WAVENM
                END DO
                WRITE(IOUT,*)'END GRID INSPECTION FOR MODE ',MODCHK
              ELSE
                IF(MIN1.LT.0.OR.MIN2.LT.0)THEN
                WRITE(IOUT,*)' AMENDED POTENTIAL'
                WRITE(IOUT,*)'MODE',MODE1,' AT ',XQ1(MZ1)
                WRITE(IOUT,*)'MODE',MODE2
                WRITE(IOUT,*)
                DO M1=1,MM2/MD2
                  WRITE(IOUT,*)XQ2(M1),VFUN2(V,VR,MM1/MD1,MM2/MD2,
     1            MZ1,M1,VMIN,WAVENM)*WAVENM
                END DO
                END IF
                WRITE(IOUT,*)
                WRITE(IOUT,*)'END HOLE SEARCH FOR MODE ',MODCHK
              END IF
              WRITE(IOUT,*)
            END IF
          END DO
        END IF
C
        IF(IND.NE.0.AND.MOLINC.LE.0)THEN
          CALL OUT72(V,VR,MM1/MD1,MM2/MD2)
        END IF
      END DO

C**INTRINSIC
      IF(MOLINC.LE.0)GO TO 9999
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        IF(K1.EQ.MODE1)THEN
          CALL DUMVT1(XQ1,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,MODE1,V1,V1R,XQTAU,VT0,VT1(1,1,1),KVP,0,MODINT,
     2    XMODQ)
          CALL VFIX71(V1,V1R,J1,VT1,KVP,MMTAU,MDT,MM1,MD1,1)
        END IF
        IF(K1.EQ.MODE2)THEN
          CALL DUMVT1(XQ2,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,MODE2,V1,V1R,XQTAU,VT0,VT1(1,1,2),KVP,0,MODINT,
     2    XMODQ)
          CALL VFIX71(V1,V1R,J1,VT1,KVP,MMTAU,MDT,MM2,MD2,2)
        END IF
      END DO
      CALL DUMVT0(NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1JPOT,CPOT,XQTAU,VT0,0,MODINT,XMODQ)
C**LOOP ROUND TAU
      DO MTAU=1,MMTAU/MDT
        X=VT0(MTAU)
        DO M1=1,MM1/MD1
          X1=VT1(M1,MTAU,1)
          DO M2=1,MM2/MD2
            X2=VT1(M2,MTAU,2)
            VDP=VT2(M2,M1,MTAU)-X-X1-X2
            IF(IND.NE.0)THEN
              CALL SET72(V,VR,MM1/MD1,MM2/MD2,VDP,M1,M2)
            ELSE
              V(M2,M1,MTAU)=VDP
            END IF
          END DO
        END DO
        IF(IND.NE.0)THEN
          CALL OUT72(V,VR,MM1/MD1,MM2/MD2)
        END IF
      END DO
9999  CONTINUE
      CALL FLUSH(72)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DUMCR2(XQ1,XQ2,MM1,MM2,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1XX,X0,XL,XM,MODE1,MODE2,V,VR,VM,VMR,JMAX,IND,MODINT,NBF,MBF,
     2VP1,V1,V1R,MMX1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM2,MM1,6),VM(MM2,MM1,13),V1(MMX1)
      REAL*4 VR(MM2,MM1,6),VMR(MM2,MM1,13),V1R(MMX1)
      REAL*8 V0,VM0(6)
      REAL*4 V0R,VM0R(6)
      LOGICAL LINEAR
      DIMENSION VP1(MMX1,2)
      DIMENSION MODINT(NMODE),NBF(1),MBF(1)
      DIMENSION XQ1(MM1),XQ2(MM2),QQ(NMODE),XZ(NMODE,NMODE,3)
      DIMENSION AB(NMODE,3),B(NMODE,NMODE),AA(NMODE,3,3),BB(NMODE)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      COMMON/MOMI/XK(3,3),XMU(3,3)
      COMMON/WHICH/IWHICH
      COMMON/TYPE/LINEAR
      COMMON/JCORIO/JCORIO
      COMMON/TORS/QTAU
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/FILASS/IOUT,INP
C**TEMPORARY (DIMENSIONS)
      COMMON/MULT/MULT(1000)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/MUREF/V0,VM0,V0R,VM0R
      JCORIO=JMAX
      MX=1
      MY=2
      MZ=3
      DO K=1,NMODE
        QQ(K)=0
        MULT(K)=0
      END DO
      MULT(MODE1)=1
      MULT(MODE2)=1
C**INTRINSIC
      IF(IND.NE.0)THEN
        MD1=MODINT(MODE1)
        MD2=MODINT(MODE2)
        DO I=1,NWSYM
          DO J=1,NSYM(I)
            IF(MODE1.EQ.ISYM(I,J))N1=I
            IF(MODE2.EQ.ISYM(I,J))N2=I
          END DO
        END DO
        IF(N1.EQ.N2)MD2=1
      ELSE
        MD1=1
        MD2=1
      END IF
      DO M1=1,MM1/MD1
        QQ(MODE1)=XQ1(M1)
        DO M2=1,MM2/MD2
          QQ(MODE2)=XQ2(M2)
          CALL CORIOL(NMODE,NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,ZZ)
          IF(JMAX.EQ.0)THEN
            IF(LINEAR)ZZ=0
C**INTRINSIC
C           IF(IND.NE.0)THEN
              CALL SET82(V,VR,MM1/MD1,MM2/MD2,B,BB,NMODE,ZZ,M1,M2,
     1        MODE1,MODE2)
C           ELSE
C             IF(JCOUPC.GE.0)THEN
C               V(M2,M1,1)=BB(MODE1)
C               V(M2,M1,2)=BB(MODE2)
C               V(M2,M1,3)=B(MODE1,MODE1)
C               V(M2,M1,4)=B(MODE1,MODE2)
C               V(M2,M1,5)=B(MODE2,MODE2)
C               V(M2,M1,6)=ZZ
C             ELSE
C**
C             END IF
C           END IF
          ELSE
            IF(.NOT.LINEAR)ZZ=0
            CALL SET92(VM,VMR,MM1/MD1,MM2/MD2,AB,NMODE,ZZ,M1,M2,MODE1,
     1      MODE2)
C           IF(JCOUPC.GT.0)THEN
C             VM(M2,M1,1)=XMU(MX,MX)/2
C             VM(M2,M1,2)=XMU(MY,MY)/2
C             VM(M2,M1,3)=XMU(MZ,MZ)/2
C             VM(M2,M1,4)=XMU(MX,MZ)/2
C             VM(M2,M1,5)=XMU(MY,MZ)/2
C             VM(M2,M1,6)=XMU(MX,MY)/2
C             VM(M2,M1,7)=(XMU(MX,MX)*AB(MODE1,MX)+
C    1        XMU(MY,MX)*AB(MODE1,MY)+XMU(MZ,MX)*AB(MODE1,MZ))/2
C             VM(M2,M1,8)=(XMU(MX,MX)*AB(MODE2,MX)+
C    1        XMU(MY,MX)*AB(MODE2,MY)+XMU(MZ,MX)*AB(MODE2,MZ))/2
C             VM(M2,M1,9)=(XMU(MX,MY)*AB(MODE1,MX)+
C    1        XMU(MY,MY)*AB(MODE1,MY)+XMU(MZ,MY)*AB(MODE1,MZ))/2
C             VM(M2,M1,10)=(XMU(MX,MY)*AB(MODE2,MX)+
C    1        XMU(MY,MY)*AB(MODE2,MY)+XMU(MZ,MY)*AB(MODE2,MZ))/2
C             VM(M2,M1,11)=(XMU(MX,MZ)*AB(MODE1,MX)+
C    1        XMU(MY,MZ)*AB(MODE1,MY)+XMU(MZ,MZ)*AB(MODE1,MZ))/2
C             VM(M2,M1,12)=(XMU(MX,MZ)*AB(MODE2,MX)+
C    1        XMU(MY,MZ)*AB(MODE2,MY)+XMU(MZ,MZ)*AB(MODE2,MZ))/2
C             VM(M2,M1,13)=ZZ
C           ELSE
C             VMR(M2,M1,1)=XMU(MX,MX)/2
C             VMR(M2,M1,2)=XMU(MY,MY)/2
C             VMR(M2,M1,3)=XMU(MZ,MZ)/2
C             VMR(M2,M1,4)=XMU(MX,MZ)/2
C             VMR(M2,M1,5)=XMU(MY,MZ)/2
C             VMR(M2,M1,6)=XMU(MX,MY)/2
C             VMR(M2,M1,7)=(XMU(MX,MX)*AB(MODE1,MX)+
C    1        XMU(MY,MX)*AB(MODE1,MY)+XMU(MZ,MX)*AB(MODE1,MZ))/2
C             VMR(M2,M1,8)=(XMU(MX,MX)*AB(MODE2,MX)+
C    1        XMU(MY,MX)*AB(MODE2,MY)+XMU(MZ,MX)*AB(MODE2,MZ))/2
C             VMR(M2,M1,9)=(XMU(MX,MY)*AB(MODE1,MX)+
C    1        XMU(MY,MY)*AB(MODE1,MY)+XMU(MZ,MY)*AB(MODE1,MZ))/2
C             VMR(M2,M1,10)=(XMU(MX,MY)*AB(MODE2,MX)+
C    1        XMU(MY,MY)*AB(MODE2,MY)+XMU(MZ,MY)*AB(MODE2,MZ))/2
C             VMR(M2,M1,11)=(XMU(MX,MZ)*AB(MODE1,MX)+
C    1        XMU(MY,MZ)*AB(MODE1,MY)+XMU(MZ,MZ)*AB(MODE1,MZ))/2
C             VMR(M2,M1,12)=(XMU(MX,MZ)*AB(MODE2,MX)+
C    1        XMU(MY,MZ)*AB(MODE2,MY)+XMU(MZ,MZ)*AB(MODE2,MZ))/2
C             VMR(M2,M1,13)=ZZ
C           END IF
          END IF
        END DO
      END DO
      IF(JMAX.EQ.0)THEN
C**INTRINSIC
        IF(MOLINC.LE.0)GO TO 9999
        DO K1=1,MODE1
          CALL INTARR(NBF,MBF,K1,I1,J1,L1)
          IF(K1.EQ.MODE1)THEN
            CALL DUMCR1(XQ1,J1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1      XX,X0,XL,XM,K1,V1,V1R,VM,VMR,JMAX,0,MODINT)
            CALL FIX81(V1,V1R,J1,VP1,MMX1,K1,MODE1,MM1,MD1,1)
          END IF
          IF(K1.EQ.MODE2)THEN
            CALL DUMCR1(XQ2,J1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1      XX,X0,XL,XM,K1,V1,V1R,VM,VMR,JMAX,0,MODINT)
            CALL FIX81(V1,V1R,J1,VP1,MMX1,K1,MODE2,MM2,MD2,2)
          END IF
        END DO
        DO M1=1,MM1/MD1
          X1=VP1(M1,1)
          DO M2=1,MM2/MD2
            X2=VP1(M2,2)
            CALL GET82(V,VR,MM1/MD1,MM2/MD2,B,BB,NMODE,ZZ,M1,M2,
     1      MODE1,MODE2)
            ZZ=ZZ-X1-X2
            IF(JCOUPC.GE.0)THEN
              ZZ=ZZ-V0
            ELSE
              ZZ=ZZ-V0R
            END IF
            CALL SET82(V,VR,MM1/MD1,MM2/MD2,B,BB,NMODE,ZZ,M1,M2,
     1      MODE1,MODE2)
          END DO
        END DO
9999    CONTINUE
        IF(IND.NE.0)THEN
          CALL OUT82(V,VR,MM1/MD1,MM2/MD2)
        END IF
      ELSE
        CALL OUT92(VM,VMR,MM1/MD1,MM2/MD2)
C       IF(JCOUPC.GT.0)THEN
C         WRITE(I92)VM
C       ELSE
C         WRITE(I92)VMR
C       END IF
      END IF
      CALL FLUSH(I82)
      CALL FLUSH(I92)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DUMVR2(XQ1,XQ2,MM1,MM2,NMODE,NATOM,QQ,BB,BS,BT,BBS,B,
     1BBT,BSS,XX,XXP,X0,XL,XM,MODE1,MODE2,V,VR,VM,VMR,JMAX,XQTAU,
     2VR0,VR1,VR2,KVP,IND,MODINT,NBF,MBF,V1,V1R,MMTAU)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM2,MM1,10,1),VM(MM2,MM1,18),VR0(3,1),VR1(KVP,6,MMTAU,2),
     1VR2(KVP,KVP,10,MMTAU),V0(3),V1(KVP,6,MMTAU)
      REAL*4 VR(MM2,MM1,10,1),VMR(MM2,MM1,18),V0R(3),V1R(KVP,6,MMTAU)
      DIMENSION XQTAU(1),X(3),X1(6),X2(6)
      DIMENSION MODINT(NMODE),XM(NATOM),NBF(1),MBF(1)
CCCC  DIMENSION XQ1(MM1),XQ2(MM2),QQ(NMODE),BB(NMODE,NMODE,3,362)
CCCC  DIMENSION BBS(NMODE,NMODE,362),BSS(NMODE,362),BBT(NMODE)
CCCC  DIMENSION BS(NMODE,3,362),BT(NMODE,NMODE),B(NMODE,3,3,362)
CCCC  DIMENSION XX(NATOM,3,362),X0(NATOM,3),XL(NATOM,NMODE,3,362)
      DIMENSION XQ1(MM1),XQ2(MM2),QQ(NMODE),BB(NMODE,NMODE,3,722)
      DIMENSION BBS(NMODE,NMODE,722),BSS(NMODE,722),BBT(NMODE)
      DIMENSION BS(NMODE,3,722),BT(NMODE,NMODE),B(NMODE,3,3,722)
      DIMENSION XX(NATOM,3,722),X0(NATOM,3),XL(NATOM,NMODE,3,722)
      DIMENSION XXP(NATOM,3,722)
      DIMENSION SUP3(3)
      COMMON/MOMI/XK(3,3),XMU(3,3)
      COMMON/MOMI0/XMU0(4,4),XIN0(4,4),XM0(4,4),SST,DETMU
      COMMON/WHICH/IWHICH
      COMMON/TYPE/LINEAR
      COMMON/TORS/QTAU
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/FILASS/IOUT,INP
C**TEMPORARY (DIMENSIONS)
      COMMON/MULT/MULT(1000)
C**ASSUME STARTING VALUE TAU: INIT
C**ASSUME NEXT VALUE TAU: INIT+INCTAU
C**ITAU=2 EQUIVALENT TO ITAU=722
      COMMON/REACTN/IREACT,MMXTAU,INIT,INCTAU
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      MX=1
      MY=2
      MZ=3
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.NT.AND.MDT.GT.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.GT.1)MD2=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.GT.1)MD2=1
C**INTRINSIC
      IF(IND.EQ.0)THEN
        MD1=1
        MD2=1
      END IF
C**LOOP ROUND TAU
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
          QTAU=XQTAU(MTAU)
        END IF
        DO K=1,NMODE
          QQ(K)=0
          MULT(K)=0
        END DO
        MULT(MODE1)=1
        MULT(MODE2)=1
        DO M1=1,MM1/MD1
          QQ(MODE1)=XQ1(M1)
          DO M2=1,MM2/MD2
            QQ(MODE2)=XQ2(M2)
            IF(LINEAR)THEN
              CALL CORIOL(NMODE,NATOM,QQ,BB,BS,BT,B,BBT,XX,X0,XL,XM,ZZ)
            ELSE
              CALL MILLER(NMODE,NATOM,QQ,BB,BS,BBS,B,BSS,XX,XL,XXP,XM,
     1        BBT,BT,ZZ,ITAU,JMAX)
            END IF
            IF(JMAX.EQ.0)THEN
C**INTRINSIC
              IF(IND.NE.0.AND.MOLINC.LE.0)THEN
                CALL VSET82(V,VR,MM1/MD1,MM2/MD2,BT,BBT,NMODE,ZZ,M1,
     1          M2,MODE1,MODE2,NSMODE)
              ELSE
                VR2(M2,M1,1,MTAU)=BBT(MODE1)
                VR2(M2,M1,2,MTAU)=BBT(MODE2)
                VR2(M2,M1,3,MTAU)=BBT(NSMODE)
                VR2(M2,M1,4,MTAU)=BT(MODE1,MODE1)
                VR2(M2,M1,5,MTAU)=BT(MODE1,MODE2)
                VR2(M2,M1,6,MTAU)=BT(MODE1,NSMODE)
                VR2(M2,M1,7,MTAU)=BT(MODE2,MODE2)
                VR2(M2,M1,8,MTAU)=BT(MODE2,NSMODE)
                VR2(M2,M1,9,MTAU)=BT(NSMODE,NSMODE)
                VR2(M2,M1,10,MTAU)=ZZ
              END IF
            ELSE
C**GET WHAT'S REQUIRED
            DO I=1,3
              SUP3(I)=0
              DO K=1,NMODE-1
                DO L=1,NMODE-1
                  SUP3(I)=SUP3(I)+QQ(K)*MULT(L)*BB(K,L,I,ITAU)*BBT(L)
                END DO
              END DO
            END DO
            ZZ=0
            DO K=1,NMODE-1
              DO L=1,NMODE-1
                ZZ=ZZ+QQ(K)*MULT(L)*BBS(K,L,ITAU)*BBT(L)
              END DO
            END DO
            DO I=1,3
              DO L=1,NMODE-1
                BS(L,I,ITAU)=0
                DO K=1,NMODE-1
                  BS(L,I,ITAU)=BS(L,I,ITAU)+QQ(K)*MULT(L)*
     1            BB(K,L,I,ITAU)
                END DO
              END DO
            END DO
            DO L=1,NMODE-1
              BSS(L,ITAU)=0
              DO K=1,NMODE-1
                BSS(L,ITAU)=BSS(L,ITAU)+QQ(K)*MULT(L)*
     1          BBS(K,L,ITAU)
              END DO
            END DO
C**GOT WHAT'S REQUIRED
              CALL VSET92(VM,VMR,MM1/MD1,MM2/MD2,SUP3,BS,BSS,NMODE,ZZ,
     1        M1,M2,MODE1,MODE2,ITAU)
C             IF(JCOUPC.GT.0)THEN
C               VM(M2,M1,1)=XMU0(MX,MX)/2
C               VM(M2,M1,2)=XMU0(MY,MY)/2
C               VM(M2,M1,3)=XMU0(MZ,MZ)/2
C               VM(M2,M1,4)=XMU0(MX,MZ)/2
C               VM(M2,M1,5)=XMU0(MY,MZ)/2
C               VM(M2,M1,6)=XMU0(MX,MY)/2
C               VM(M2,M1,7)=-SST*XMU0(MX,4)/(2*DETMU)+ZZ*XMU0(MX,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MX)+SUP3(MY)*XMU0(MY,MX)+
C    2                  SUP3(MZ)*XMU0(MZ,MX))/2
C               VM(M2,M1,8)=(BS(MODE1,MX,ITAU)*XMU0(MX,MX)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MX)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MX))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MX,4)/2
C               VM(M2,M1,9)=(BS(MODE2,MX,ITAU)*XMU0(MX,MX)+
C    1                  BS(MODE2,MY,ITAU)*XMU0(MY,MX)+
C    2                  BS(MODE2,MZ,ITAU)*XMU0(MZ,MX))/2+
C    3                  BSS(MODE2,ITAU)*XMU0(MX,4)/2
C               VM(M2,M1,10)=-XMU0(MX,4)/2
C               VM(M2,M1,11)=-SST*XMU0(MY,4)/(2*DETMU)+ZZ*XMU0(MY,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MY)+SUP3(MY)*XMU0(MY,MY)+
C    2                  SUP3(MZ)*XMU0(MZ,MY))/2
C               VM(M2,M1,12)=(BS(MODE1,MX,ITAU)*XMU0(MX,MY)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MY)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MY))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MY,4)/2
C               VM(M2,M1,13)=(BS(MODE2,MX,ITAU)*XMU0(MX,MY)+
C    1                  BS(MODE2,MY,ITAU)*XMU0(MY,MY)+
C    2                  BS(MODE2,MZ,ITAU)*XMU0(MZ,MY))/2+
C    3                  BSS(MODE2,ITAU)*XMU0(MY,4)/2
C               VM(M2,M1,14)=-XMU0(MY,4)/2
C               VM(M2,M1,15)=-SST*XMU0(MZ,4)/(2*DETMU)+ZZ*XMU0(MZ,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MZ)+SUP3(MY)*XMU0(MY,MZ)+
C    2                  SUP3(MZ)*XMU0(MZ,MZ))/2
C               VM(M2,M1,16)=(BS(MODE1,MX,ITAU)*XMU0(MX,MZ)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MZ)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MZ))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MZ,4)/2
C               VM(M2,M1,17)=(BS(MODE2,MX,ITAU)*XMU0(MX,MZ)+
C    1                  BS(MODE2,MY,ITAU)*XMU0(MY,MZ)+
C    2                  BS(MODE2,MZ,ITAU)*XMU0(MZ,MZ))/2+
C    3                  BSS(MODE2,ITAU)*XMU0(MZ,4)/2
C               VM(M2,M1,18)=-XMU0(MZ,4)/2
C             ELSE
C               VMR(M2,M1,1)=XMU0(MX,MX)/2
C               VMR(M2,M1,2)=XMU0(MY,MY)/2
C               VMR(M2,M1,3)=XMU0(MZ,MZ)/2
C               VMR(M2,M1,4)=XMU0(MX,MZ)/2
C               VMR(M2,M1,5)=XMU0(MY,MZ)/2
C               VMR(M2,M1,6)=XMU0(MX,MY)/2
C               VMR(M2,M1,7)=-SST*XMU0(MX,4)/(2*DETMU)+ZZ*XMU0(MX,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MX)+SUP3(MY)*XMU0(MY,MX)+
C    2                  SUP3(MZ)*XMU0(MZ,MX))/2
C               VMR(M2,M1,8)=(BS(MODE1,MX,ITAU)*XMU0(MX,MX)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MX)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MX))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MX,4)/2
C               VMR(M2,M1,9)=(BS(MODE2,MX,ITAU)*XMU0(MX,MX)+
C    1                  BS(MODE2,MY,ITAU)*XMU0(MY,MX)+
C    2                  BS(MODE2,MZ,ITAU)*XMU0(MZ,MX))/2+
C    3                  BSS(MODE2,ITAU)*XMU0(MX,4)/2
C               VMR(M2,M1,10)=-XMU0(MX,4)/2
C               VMR(M2,M1,11)=-SST*XMU0(MY,4)/(2*DETMU)+ZZ*XMU0(MY,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MY)+SUP3(MY)*XMU0(MY,MY)+
C    2                  SUP3(MZ)*XMU0(MZ,MY))/2
C               VMR(M2,M1,12)=(BS(MODE1,MX,ITAU)*XMU0(MX,MY)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MY)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MY))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MY,4)/2
C               VMR(M2,M1,13)=(BS(MODE2,MX,ITAU)*XMU0(MX,MY)+
C    1                  BS(MODE2,MY,ITAU)*XMU0(MY,MY)+
C    2                  BS(MODE2,MZ,ITAU)*XMU0(MZ,MY))/2+
C    3                  BSS(MODE2,ITAU)*XMU0(MY,4)/2
C               VMR(M2,M1,14)=-XMU0(MY,4)/2
C               VMR(M2,M1,15)=-SST*XMU0(MZ,4)/(2*DETMU)+ZZ*XMU0(MZ,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MZ)+SUP3(MY)*XMU0(MY,MZ)+
C    2                  SUP3(MZ)*XMU0(MZ,MZ))/2
C               VMR(M2,M1,16)=(BS(MODE1,MX,ITAU)*XMU0(MX,MZ)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MZ)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MZ))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MZ,4)/2
C               VMR(M2,M1,17)=(BS(MODE2,MX,ITAU)*XMU0(MX,MZ)+
C    1                  BS(MODE2,MY,ITAU)*XMU0(MY,MZ)+
C    2                  BS(MODE2,MZ,ITAU)*XMU0(MZ,MZ))/2+
C    3                  BSS(MODE2,ITAU)*XMU0(MZ,4)/2
C               VMR(M2,M1,18)=-XMU0(MZ,4)/2
C             END IF
            END IF
          END DO
        END DO
        IF(JMAX.EQ.0)THEN
C**INTRINSIC
          IF(IND.NE.0.AND.MOLINC.LE.0)THEN
            CALL VOUT82(V,VR,MM1/MD1,MM2/MD2)
          END IF
        ELSE
          CALL VOUT92(VM,VMR,MM1/MD1,MM2/MD2)
C         IF(JCOUPC.GT.0)THEN
C           WRITE(92)VM
C         ELSE
C           WRITE(92)VMR
C         END IF
        END IF
      END DO
C**INTRINSIC
      IF(MOLINC.LE.0)GO TO 9999
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        IF(K1.EQ.MODE1)THEN
          CALL DUMVR1(XQ1,J1,NMODE,NATOM,QQ,BB,BS,BT,BBS,B,BBT,BSS,XX,
     1    XXP,X0,XL,XM,MODE1,V1,V1R,VM,VMR,JMAX,XQTAU,VR0,VR1(1,1,1,1),
     2    KVP,0,MODINT)
          CALL VFIX81(V1,J1,VR1,KVP,MMTAU,MDT,MM1,MD1,1)
        END IF
        IF(K1.EQ.MODE2)THEN
          CALL DUMVR1(XQ2,J1,NMODE,NATOM,QQ,BB,BS,BT,BBS,B,BBT,BSS,XX,
     1    XXP,X0,XL,XM,MODE2,V1,V1R,VM,VMR,JMAX,XQTAU,VR0,VR1(1,1,1,2),
     2    KVP,0,MODINT)
          CALL VFIX81(V1,J1,VR1,KVP,MMTAU,MDT,MM2,MD2,2)
        END IF
      END DO
      CALL DUMVR0(NMODE,NATOM,QQ,BB,BS,BT,BBS,B,BBT,
     1BSS,XX,XXP,X0,XL,XM,V0,V0R,VM,VMR,JMAX,VR0,IND,MODINT)
C**LOOP ROUND TAU
      DO MTAU=1,MMTAU/MDT
        DO K=1,3
          X(K)=VR0(K,MTAU)
        END DO
        DO M1=1,MM1/MD1
          DO K=1,6
            X1(K)=VR1(M1,K,MTAU,1)
          END DO
          DO M2=1,MM2/MD2
            DO K=1,6
              X2(K)=VR1(M2,K,MTAU,2)
            END DO
            CALL VGET82(VR2,KVP,KVP,BT,BBT,NMODE,ZZ,M1,
     1      M2,MODE1,MODE2,NSMODE,MTAU)
            BBT(MODE1)=BBT(MODE1)-X1(1)
            BBT(MODE2)=BBT(MODE2)-X2(1)
            BBT(NSMODE)=BBT(NSMODE)-X1(2)-X2(2)-X(1)
            BT(MODE1,MODE1)=BT(MODE1,MODE1)-X1(3)
            BT(MODE1,NSMODE)=BT(MODE1,NSMODE)-X1(4)
            BT(MODE2,MODE2)=BT(MODE2,MODE2)-X2(3)
            BT(MODE2,NSMODE)=BT(MODE2,NSMODE)-X2(4)
            BT(NSMODE,NSMODE)=BT(NSMODE,NSMODE)-X(2)-X1(5)-X2(5)
            ZZ=ZZ-X(3)-X1(6)-X2(6)
            IF(IND.NE.0)THEN
              CALL VSET82(V,VR,MM1/MD1,MM2/MD2,BT,BBT,NMODE,ZZ,M1,
     1        M2,MODE1,MODE2,NSMODE)
            ELSE
              V(M2,M1,1,MTAU)=BBT(MODE1)
              V(M2,M1,2,MTAU)=BBT(MODE2)
              V(M2,M1,3,MTAU)=BBT(NSMODE)
              V(M2,M1,4,MTAU)=BT(MODE1,MODE1)
              V(M2,M1,5,MTAU)=BT(MODE1,MODE2)
              V(M2,M1,6,MTAU)=BT(MODE1,NSMODE)
              V(M2,M1,7,MTAU)=BT(MODE2,MODE2)
              V(M2,M1,8,MTAU)=BT(MODE2,NSMODE)
              V(M2,M1,9,MTAU)=BT(NSMODE,NSMODE)
              V(M2,M1,10,MTAU)=ZZ
            END IF
          END DO
        END DO
        IF(IND.NE.0)THEN
          CALL VOUT82(V,VR,MM1/MD1,MM2/MD2)
        END IF
      END DO
9999  CONTINUE
      CALL FLUSH(82)
      CALL FLUSH(92)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DUMPT3(XQ1,XQ2,XQ3,MM1,MM2,MM3,NMODE,NATOM,QQ,RR,XX,
     1X0,XL,XM,NPOT,IPOT,JPOT,CPOT,MODE1,MODE2,MODE3,V,VR,IND,MODINT,
     2XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,
     3MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,MAX3,INDK,INDL,NBF,MBF,
     4V1,V1R,V2,V2R,XMODQ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C****************************************
C**NEVER CALLED FOR FITTING OF POTENTIALS
C****************************************
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM3,MM2,MM1),V1(MMX1),V2(MAX2,MAX2),VP
      REAL*4 VR(MM3,MM2,MM1),V1R(MMX1),V2R(MAX2,MAX2),VPR
      DIMENSION NP1(1),CP1(MMX1,1),VP1(MMX1,1),DP1(MMX1,1)
      DIMENSION NP2(NTOT2),CP2(MAX2,1),VP2(MAX2,MAX2,NTOT2),
     1DP2A(MAX2,MAX2,NTOT2),DP2B(MAX2,MAX2,NTOT2)
      DIMENSION NP3(NTOT3),CP3(MAX3,1),VP3(MAX3,MAX3,MAX3,NTOT3),
     1DP3A(MAX3,MAX3,MAX3,NTOT3),DP3B(MAX3,MAX3,MAX3,NTOT3),
     2DP3C(MAX3,MAX3,MAX3,NTOT3)
      DIMENSION DUMMY(100),INDK(1),INDL(1)
      DIMENSION MODINT(NMODE),XTANPM(NMODE),NBF(1),MBF(1),XMODQ(NMODE)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),RR(NATOM,NATOM),QQ(NMODE)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT)
      COMMON/WHICH/IWHICH
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/VMIN/VMIN
      COMMON/CHKMAX/MAXCHK(6)
      COMMON/FUNDAM/WAVENM
      COMMON/FILASS/IOUT
      COMMON/POTREF/VP,VPR
      DO K=1,NMODE
        QQ(K)=0
      END DO
C**INTRINSIC
      IF(IND.NE.0)THEN
        MD1=MODINT(MODE1)
        MD2=MODINT(MODE2)
        MD3=MODINT(MODE3)
        DO I=1,NWSYM
          DO J=1,NSYM(I)
            IF(MODE1.EQ.ISYM(I,J))N1=I
            IF(MODE2.EQ.ISYM(I,J))N2=I
            IF(MODE3.EQ.ISYM(I,J))N3=I
          END DO
        END DO
        IF(N1.EQ.N2)MD2=1
        IF(N1.EQ.N3)MD3=1
        IF(N2.EQ.N3)MD3=1
        N12=ISYMP(N1,N2)
        IF(N12.EQ.N3)MD3=1
      ELSE
        MD1=1
        MD2=1
        MD3=1
      END IF
      MODCHK=IABS(MAXCHK(3))
      DO M1=1,MM1/MD1
        QQ(MODE1)=XQ1(M1)*XMODQ(MODE1)
        DO M2=1,MM2/MD2
          QQ(MODE2)=XQ2(M2)*XMODQ(MODE2)
          DO M3=1,MM3/MD3
            QQ(MODE3)=XQ3(M3)*XMODQ(MODE3)
            IF(IWHICH.GT.0)THEN
              DO I=1,NATOM
                DO J=1,3
                  XX(I,J)=X0(I,J)+XL(I,MODE1,J)*QQ(MODE1)/
     1            SQRT(XM(I))
                  XX(I,J)=XX(I,J)+XL(I,MODE2,J)*QQ(MODE2)/
     1            SQRT(XM(I))
                  XX(I,J)=XX(I,J)+XL(I,MODE3,J)*QQ(MODE3)/
     1            SQRT(XM(I))
                END DO
              END DO

!              WRITE(15,'(I5)') NATOM
!              WRITE(15,'(I4,F10.3,I4,F10.3,I4,F10.3)') MODE1, QQ(MODE1),
!     1        MODE2, QQ(MODE2), MODE3, QQ(MODE3)
!              WRITE(15,'(A,3F15.8)') 'H',XX( 1,:)*0.5291772083
!              WRITE(15,'(A,3F15.8)') 'H',XX( 2,:)*0.5291772083
!              WRITE(15,'(A,3F15.8)') 'H',XX( 3,:)*0.5291772083
!              WRITE(15,'(A,3F15.8)') 'H',XX( 4,:)*0.5291772083
!              WRITE(15,'(A,3F15.8)') 'O',XX( 5,:)*0.5291772083
!              WRITE(15,'(A,3F15.8)') 'O',XX( 6,:)*0.5291772083
!              WRITE(15,'(A,3F15.8)') 'O',XX( 7,:)*0.5291772083
!              WRITE(15,'(A,3F15.8)') 'O',XX( 8,:)*0.5291772083
!              WRITE(15,'(A,3F15.8)') 'C',XX( 9,:)*0.5291772083
!              WRITE(15,'(A,3F15.8)') 'C',XX(10,:)*0.5291772083

              CALL GETPOT(VDP,NATOM,XX,RR)
            ELSE
              IF(IWHICH.EQ.0)THEN
                CALL GETPT3(VDP,NPOT,IPOT,JPOT,CPOT,NMODE,QQ)
              ELSE
                IF(MOLINC.EQ.0)
     1          CALL GETQPT(VDP,NMODE,QQ,XTANPM)
                IF(MOLINC.LT.0)
     1          CALL GETQP3(VDP,DUMMY,NMODE,QQ,NP1,CP1,VP1,DP1,NTOT1,
     2          MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,
     3          DP3A,DP3B,DP3C,NTOT3,MAX3,INDK,INDL)
              END IF
            END IF
C**INTRINSIC
C           IF(IND.NE.0)THEN
              CALL SET73(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,VDP,M1,M2,M3)
C           ELSE
C             IF(JCOUPL.GE.0)THEN
C               V(M3,M2,M1)=VDP
C             ELSE
C               VR(M3,M2,M1)=VDP
C             END IF
C           END IF
            IF(VDP.LT.VMIN.AND.MAXCHK(3).GT.0)THEN
              WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2,MODE3
              WRITE(IOUT,*)'M1,M2,M3 ',M1,M2,M3
              WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(M1),XQ2(M2),XQ3(M3)
              WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
              WRITE(IOUT,*)'*****************************'
              WRITE(IOUT,*)
            END IF
          END DO
        END DO
      END DO
C******************************************************************
      IF(MODE1.EQ.MODCHK.OR.MODE2.EQ.MODCHK.OR.MODE3.EQ.MODCHK)THEN
        IF(MODE1.EQ.MODCHK)THEN
          MX1=MM1/2
          MX2=MM2/MD2
          MX3=MM3/MD3
          MDD1=MD1
        END IF
        IF(MODE2.EQ.MODCHK)THEN
          MX1=MM2/2
          MX2=MM1/MD1
          MX3=MM3/MD3
          MDD1=MD2
        END IF
        IF(MODE3.EQ.MODCHK)THEN
          MX1=MM3/2
          MX2=MM1/MD1
          MX3=MM2/MD2
          MDD1=MD3
        END IF
        IF(MAXCHK(3).GT.0)THEN
          WRITE(IOUT,*)'START GRID INSPECTION FOR MODE ',MODCHK
        ELSE
          WRITE(IOUT,*)'START HOLE SEARCH FOR MODE ',MODCHK
        END IF
        DO M2=1,MX2
          DO M3=1,MX3
            IF(MODE1.EQ.MODCHK)THEN
              MZ2=M2
              MZ3=M3
            END IF
            IF(MODE2.EQ.MODCHK)THEN
              MZ1=M2
              MZ3=M3
            END IF
            IF(MODE3.EQ.MODCHK)THEN
              MZ1=M2
              MZ2=M3
            END IF
            IF(MAXCHK(3).LT.0)THEN
              VLAST=-1.0D+20
              MIN=0
              GRAD=0
              GRADDF=1
              GRDFDF=0
              DO M1=MX1,1,-1
                IF(MODE1.EQ.MODCHK)MZ1=M1
                IF(MODE2.EQ.MODCHK)MZ2=M1
                IF(MODE3.EQ.MODCHK)MZ3=M1
                VDP=VFUN3(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,
     1          MZ1,MZ2,MZ3,VMIN,WAVENM)/WAVENM+VMIN
                GRADPR=GRAD
                GRDFPR=GRADDF
                IF(M1.NE.MX1)THEN
                  IF(MODE1.EQ.MODCHK)
     1            GRAD=WAVENM*(VDP-VLAST)/(XQ1(M1)-XQ1(M1+1))
                  IF(MODE2.EQ.MODCHK)
     1            GRAD=WAVENM*(VDP-VLAST)/(XQ2(M1)-XQ2(M1+1))
                  IF(MODE3.EQ.MODCHK)
     1            GRAD=WAVENM*(VDP-VLAST)/(XQ3(M1)-XQ3(M1+1))
                  GRADDF=(GRAD-GRADPR)/GRAD
                  GRDFDF=(GRADDF-GRDFPR)
                END IF
                IF(VDP.GT.VLAST.OR.MIN.EQ.0)THEN
                  IF(VDP.GT.VLAST.AND.VLAST.GT.-1.0D+20)MIN=1
                  IF(VDP.LT.VLAST.AND.GRDFDF.GT.0)MIN=-1
                  VDIFF=VDP-VLAST
                  VLAST=VDP
                  CALL SET73(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,VDP,
     1            MZ1,MZ2,MZ3)
C                 IF(VDP.LT.VMIN)THEN
C                   WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2,
C    1              MODE3
C                   WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2,MZ3
C                   WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2),XQ3(MZ3)
C                   WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
C                   WRITE(IOUT,*)'*****************************'
C                   WRITE(IOUT,*)
C                 END IF
                ELSE
                  CALL SET73(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,VLAST+VDIFF,
     1            MZ1,MZ2,MZ3)
                  VLAST=VLAST+VDIFF
C                 IF(VLAST.LT.VMIN)THEN
C                   WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2,
C    1              MODE3
C                   WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2,MZ3
C                   WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2),XQ3(MZ3)
C                   WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
C                   WRITE(IOUT,*)'*****************************'
C                   WRITE(IOUT,*)
C                 END IF
                END IF
              END DO
              IF(MDD1.EQ.2)GO TO 1000
              VLAST=-1.0D+20
              MIN=0
              GRAD=0
              GRADDF=1
              GRDFDF=0
              DO M1=MX1+1,2*MX1
                IF(MODE1.EQ.MODCHK)MZ1=M1
                IF(MODE2.EQ.MODCHK)MZ2=M1
                IF(MODE3.EQ.MODCHK)MZ3=M1
                VDP=VFUN3(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,
     1          MZ1,MZ2,MZ3,VMIN,WAVENM)/WAVENM+VMIN
                GRADPR=GRAD
                GRDFPR=GRADDF
                IF(M1.NE.MX1+1)THEN
                  IF(MODE1.EQ.MODCHK)
     1            GRAD=WAVENM*(VDP-VLAST)/(XQ1(M1)-XQ1(M1-1))
                  IF(MODE2.EQ.MODCHK)
     1            GRAD=WAVENM*(VDP-VLAST)/(XQ2(M1)-XQ2(M1-1))
                  IF(MODE3.EQ.MODCHK)
     1            GRAD=WAVENM*(VDP-VLAST)/(XQ3(M1)-XQ3(M1-1))
                  GRADDF=(GRAD-GRADPR)/GRAD
                  GRDFDF=(GRADDF-GRDFPR)
                END IF
                IF(VDP.GT.VLAST.OR.MIN.EQ.0)THEN
                  IF(VDP.GT.VLAST.AND.VLAST.GT.-1.0D+20)MIN=1
                  IF(VDP.LT.VLAST.AND.GRDFDF.GT.0)MIN=-1
                  VDIFF=VDP-VLAST
                  VLAST=VDP
                  CALL SET73(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,VDP,
     1            MZ1,MZ2,MZ3)
C                 IF(VDP.LT.VMIN)THEN
C                   WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2,
C    1              MODE3
C                   WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2,MZ3
C                   WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2),XQ3(MZ3)
C                   WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
C                   WRITE(IOUT,*)'*****************************'
C                   WRITE(IOUT,*)
C                 END IF
                ELSE
                  CALL SET73(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,VLAST+VDIFF,
     1            MZ1,MZ2,MZ3)
                  VLAST=VLAST+VDIFF
C                 IF(VLAST.LT.VMIN)THEN
C                   WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2,
C    1              MODE3
C                   WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2,MZ3
C                   WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2),XQ3(MZ3)
C                   WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
C                   WRITE(IOUT,*)'*****************************'
C                   WRITE(IOUT,*)
C                 END IF
                END IF
              END DO
1000          CONTINUE
            END IF
            IF(MODE1.EQ.MODCHK)THEN
              MARK=0
              DO M1=1,MM1/MD1
                VDP=VFUN3(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,M1,MZ2,MZ3,
     1          VMIN,WAVENM)
                IF(VDP.LT.0.AND.MAXCHK(3).LT.0)THEN
                  MARK=1
                  WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1            MODE1,MODE2,MODE3
                  WRITE(IOUT,*)'M1,M2,M3 ',M1,MZ2,MZ3
                  WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(M1),XQ2(MZ2),XQ3(MZ3)
                  WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                END IF
              END DO
              IF(MAXCHK(3).GT.0.OR.MARK.NE.0)THEN
                WRITE(IOUT,*)'MODES',MODE2,MODE3,XQ2(MZ2),XQ3(MZ3)
                WRITE(IOUT,*)'MODE',MODE1,(XQ1(M1),M1=1,MM1/MD1)
                WRITE(IOUT,*)'V',(VFUN3(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,
     1          M1,MZ2,MZ3,VMIN,WAVENM),M1=1,MM1/MD1)
              END IF
            END IF
            IF(MODE2.EQ.MODCHK)THEN
              MARK=0
              DO M1=1,MM2/MD2
                VDP=VFUN3(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MZ1,M1,MZ3,
     1          VMIN,WAVENM)
                IF(VDP.LT.0.AND.MAXCHK(3).LT.0)THEN
                  MARK=1
                  WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1            MODE1,MODE2,MODE3
                  WRITE(IOUT,*)'M1,M2,M3 ',MZ1,M1,MZ3
                  WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(M1),XQ3(MZ3)
                  WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                END IF
              END DO
              IF(MAXCHK(3).GT.0.OR.MARK.NE.0)THEN
                WRITE(IOUT,*)'MODES',MODE1,MODE3,XQ1(MZ1),XQ3(MZ3)
                WRITE(IOUT,*)'MODE',MODE2,(XQ2(M1),M1=1,MM2/MD2)
                WRITE(IOUT,*)'V',(VFUN3(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,
     1          MZ1,M1,MZ3,VMIN,WAVENM),M1=1,MM2/MD2)
              END IF
            END IF
            IF(MODE3.EQ.MODCHK)THEN
              MARK=0
              DO M1=1,MM3/MD3
                VDP=VFUN3(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MZ1,MZ2,M1,
     1          VMIN,WAVENM)
                IF(VDP.LT.0.AND.MAXCHK(3).LT.0)THEN
                  MARK=1
                  WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1            MODE1,MODE2,MODE3
                  WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2,M1
                  WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2),XQ3(M1)
                  WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                END IF
              END DO
              IF(MAXCHK(3).GT.0.OR.MARK.NE.0)THEN
                WRITE(IOUT,*)'MODES',MODE1,MODE2,XQ1(MZ1),XQ2(MZ2)
                WRITE(IOUT,*)'MODE',MODE3,(XQ3(M1),M1=1,MM3/MD3)
                WRITE(IOUT,*)'V',(VFUN3(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,
     1          MZ1,MZ2,M1,VMIN,WAVENM),M1=1,MM3/MD3)
              END IF
            END IF
          END DO
        END DO
        IF(MAXCHK(3).GT.0)THEN
          WRITE(IOUT,*)'END GRID INSPECTION FOR MODE ',MODCHK
        ELSE
          WRITE(IOUT,*)'END HOLE SEARCH FOR MODE ',MODCHK
        END IF
        WRITE(IOUT,*)
      END IF

C**INTRINSIC
      IF(MOLINC.LE.0)GO TO 9999
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        K11=K1-1
        DO K2=1,K11
          CALL INTARR(NBF,MBF,K2,I2,J2,L2)
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE2)THEN
            CALL DUMPT2(XQ1,XQ2,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE1,MM1,MD1,MODE2,
     1      MM2,MD2,1)
          END IF
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE3)THEN
            CALL DUMPT2(XQ1,XQ3,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE1,MM1,MD1,MODE3,
     1      MM3,MD3,2)
          END IF
          IF(K1.EQ.MODE2.AND.K2.EQ.MODE3)THEN
            CALL DUMPT2(XQ2,XQ3,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE2,MM2,MD2,MODE3,
     1      MM3,MD3,3)
          END IF
        END DO
      END DO
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        IF(K1.EQ.MODE1)THEN
          CALL DUMPT1(XQ1,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,K1,V1,V1R,0,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2    XMODQ)
          CALL FIX71(V1,V1R,J1,VP1,MMX1,K1,MODE1,MM1,MD1,1)
        END IF
        IF(K1.EQ.MODE2)THEN
          CALL DUMPT1(XQ2,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,K1,V1,V1R,0,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2    XMODQ)
          CALL FIX71(V1,V1R,J1,VP1,MMX1,K1,MODE2,MM2,MD2,2)
        END IF
        IF(K1.EQ.MODE3)THEN
          CALL DUMPT1(XQ3,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,K1,V1,V1R,0,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2    XMODQ)
          CALL FIX71(V1,V1R,J1,VP1,MMX1,K1,MODE3,MM3,MD3,3)
        END IF
      END DO
      DO M1=1,MM1/MD1
        X1=VP1(M1,1)
        DO M2=1,MM2/MD2
          X2=VP1(M2,2)
          X12=VP2(M2,M1,1)
          DO M3=1,MM3/MD3
            X3=VP1(M3,3)
            X13=VP2(M3,M1,2)
            X23=VP2(M3,M2,3)
            CALL GET73(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,VDP,M1,M2,M3)
            VDP=VDP-X1-X2-X3-X12-X13-X23
            IF(JCOUPL.GE.0)THEN
              VDP=VDP-VP
            ELSE
              VDP=VDP-VPR
            END IF
            CALL SET73(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,VDP,M1,M2,M3)
          END DO
        END DO
      END DO
9999  CONTINUE
      IF(IND.NE.0)THEN
        CALL OUT73(V,VR,MM1/MD1,MM2/MD2,MM3/MD3)
      END IF
      CALL FLUSH(I73)
      RETURN
      END
C****************************************************************
      DOUBLE PRECISION FUNCTION VFUN3(V,VR,MM1,MM2,MM3,M1,M2,M3,
     1VMIN,WAVENM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION V(MM3,MM2,MM1)
      REAL*4 VR(MM3,MM2,MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GT.0)THEN
C       VFUN3=(V(M3,M2,M1)-VMIN)*WAVENM
        VFUN3=V(M3,M2,M1)
      ELSE
C       VFUN3=(VR(M3,M2,M1)-VMIN)*WAVENM
        VFUN3=VR(M3,M2,M1)
      END IF
      RETURN
      END
C****************************************************************
      SUBROUTINE DUMVT3(XQ1,XQ2,XQ3,MM1,MM2,MM3,NMODE,NATOM,QQ,RR,XX,
     1X0,XL,XM,NPOT,IPOT,JPOT,CPOT,MODE1,MODE2,MODE3,V,VR,XQTAU,VT0,
     2VT1,VT2,VT3,KVP,IND,MODINT,NBF,MBF,V1,V1R,V2,V2R,MMTAU,XMODQ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR,ABINIT
C**INTRINSIC
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM3,MM2,MM1,1),VT0(MMTAU),VT1(KVP,MMTAU,3),
     1VT2(KVP,KVP,MMTAU,3),VT3(KVP,KVP,KVP,MMTAU),V1(KVP,MMTAU),
     2V2(KVP,KVP,MMTAU)
      REAL*4 VR(MM3,MM2,MM1,1),V1R(KVP,MMTAU),V2R(KVP,KVP,MMTAU)
C**TEMPORARY (DIMENSION)
      DIMENSION Q(100),DELTA(100),XQTAU(1),NBF(1),MBF(1)
      DIMENSION MODINT(NMODE),XMODQ(NMODE)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),RR(NATOM,NATOM),QQ(NMODE)
      DIMENSION X0(NATOM,3),XM(NATOM)
CCCC  DIMENSION XX(NATOM,3,362),XL(NATOM,NMODE,3,362)
      DIMENSION XX(NATOM,3,722),XL(NATOM,NMODE,3,722)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT)
      COMMON/WHICH/IWHICH
      COMMON/TORS/QTAU
      COMMON/ABINIT/ABINIT
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/VMIN/VMIN
      COMMON/CHKMAX/MAXCHK(6)
      COMMON/FILASS/IOUT,INP
      COMMON/TYPE/LINEAR
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
C**ASSUME STARTING VALUE TAU: INIT
C**ASSUME NEXT VALUE TAU: INIT+INCTAU
C**ITAU=2 EQUIVALENT TO ITAU=722
      COMMON/REACTN/IREACT,MMXTAU,INIT,INCTAU
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.NT.AND.MDT.GT.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.GT.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.GT.1)MD3=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.GT.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.GT.1)MD3=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.GT.1)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.GT.1)MD3=1
C**INTRINSIC
      IF(IND.EQ.0)THEN
        MD1=1
        MD2=1
        MD3=1
      END IF
      MODCHK=IABS(MAXCHK(3))
      IF(MODCHK.NE.0)WRITE(IOUT,*)' FOR DUMVT3 - MODES ',MODE1,MODE2,
     1MODE3,' VMIN = ',VMIN*WAVENM
C**LOOP ROUND TAU
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
          QTAU=XQTAU(MTAU)
        ELSE
          QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
          DELTA(4)=+QTAU
          DELTA(5)=-QTAU
        END IF
        DO K=1,NMODE
          Q(K)=0
          QQ(K)=0
        END DO
        DO M1=1,MM1/MD1
          QQ(MODE1)=XQ1(M1)*XMODQ(MODE1)
          Q(MODE1)=QQ(MODE1)
          DO M2=1,MM2/MD2
            QQ(MODE2)=XQ2(M2)*XMODQ(MODE2)
            Q(MODE2)=QQ(MODE2)
            DO M3=1,MM3/MD3
              QQ(MODE3)=XQ3(M3)*XMODQ(MODE3)
              Q(MODE3)=QQ(MODE3)
              IF(IWHICH.NE.0)THEN
                IF(LINEAR)THEN
C**GET Q4X,Q5X, Q4Y,Q5Y FROM Q4,Q5,DELTA4,DELTA5
                  DO K=NONLIN+1,NONLIN+LINBND
                    QQ(K)=Q(K)*DCOS(DELTA(K))
                    QQ(K+LINBND)=Q(K)*DSIN(DELTA(K))
                  END DO
                  DO I=1,NATOM
                    DO J=1,3
                      XX(I,J,1)=X0(I,J)
                      DO K=1,NMODE
                        XX(I,J,1)=XX(I,J,1)+XL(I,K,J,1)*QQ(K)/
     1                  SQRT(XM(I))
                      END DO
                    END DO
                  END DO
                ELSE
                  DO I=1,NATOM
                    DO J=1,3
                      XX(I,J,1)=(XX(I,J,ITAU)+XL(I,MODE1,J,ITAU)*
     1                QQ(MODE1))/SQRT(XM(I))
                      XX(I,J,1)=XX(I,J,1)+XL(I,MODE2,J,ITAU)*QQ(MODE2)/
     1                SQRT(XM(I))
                      XX(I,J,1)=XX(I,J,1)+XL(I,MODE3,J,ITAU)*QQ(MODE3)/
     1                SQRT(XM(I))
                    END DO
                  END DO
                END IF
                IF(ABINIT)THEN
                  CALL GETAPT(VDP,NATOM,XX,RR,QQ,NMODE,ITAU)
                ELSE
                  CALL GETPOT(VDP,NATOM,XX,RR)
                END IF
              ELSE
                CALL GETPT3(VDP,NPOT,IPOT,JPOT,CPOT,NMODE,QQ)
              END IF
C**INTRINSIC
              IF(IND.NE.0.AND.MOLINC.LE.0)THEN
                CALL SET73(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,VDP,M1,M2,M3)
              ELSE
                VT3(M3,M2,M1,MTAU)=VDP
              END IF
            END DO
          END DO
        END DO
C******************************************************************
        IF(MODE1.EQ.MODCHK.OR.MODE2.EQ.MODCHK.OR.MODE3.EQ.MODCHK)THEN
          IF(MODE1.EQ.MODCHK)THEN
            MX1=MM1/2
            MX2=MM2/MD2
            MX3=MM3/MD3
            MDD1=MD1
          END IF
          IF(MODE2.EQ.MODCHK)THEN
            MX1=MM2/2
            MX2=MM1/MD1
            MX3=MM3/MD3
            MDD1=MD2
          END IF
          IF(MODE3.EQ.MODCHK)THEN
            MX1=MM3/2
            MX2=MM1/MD1
            MX3=MM2/MD2
            MDD1=MD3
          END IF
          WRITE(IOUT,*)'*****************************'
          WRITE(IOUT,*)' FOR MTAU = ',MTAU,' MDD1 = ',MDD1
          WRITE(IOUT,*)'*****************************'
          IF(MAXCHK(3).GT.0)THEN
            WRITE(IOUT,*)'START GRID INSPECTION FOR MODE ',MODCHK
          ELSE
            WRITE(IOUT,*)'START HOLE SEARCH FOR MODE ',MODCHK
          END IF
          DO M2=1,MX2
            DO M3=1,MX3
              IF(MODE1.EQ.MODCHK)THEN
                MZ2=M2
                MZ3=M3
              END IF
              IF(MODE2.EQ.MODCHK)THEN
                MZ1=M2
                MZ3=M3
              END IF
              IF(MODE3.EQ.MODCHK)THEN
                MZ1=M2
                MZ2=M3
              END IF
CC            IF(MAXCHK(3).LT.0)THEN
C
                VLAST=-1.0D+20
C**MIN=0 UNTIL FIRST MINIMUM (+1) or MAXIMUM (-1) REACHED
                MIN1=0
                GRAD=0
                VDIFF=0
C**FIRST GO TO NEGATIVE Q
                DO M1=MX1,1,-1
                  IF(MODE1.EQ.MODCHK)MZ1=M1
                  IF(MODE2.EQ.MODCHK)MZ2=M1
                  IF(MODE3.EQ.MODCHK)MZ3=M1
                  VDP=VFUN3(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,
     1            MZ1,MZ2,MZ3,VMIN,WAVENM)
C**PREVIOUS GRADIENT
                  GRADPR=GRAD
                  IF(M1.NE.MX1)THEN
C**GRAD -VE IF V RISING, +VE IF V FALLING
                    IF(MODE1.EQ.MODCHK)
     1              GRAD=WAVENM*(VDP-VLAST)/(XQ1(M1)-XQ1(M1+1))
                    IF(MODE2.EQ.MODCHK)
     1              GRAD=WAVENM*(VDP-VLAST)/(XQ2(M1)-XQ2(M1+1))
                    IF(MODE3.EQ.MODCHK)
     1              GRAD=WAVENM*(VDP-VLAST)/(XQ3(M1)-XQ3(M1+1))
                    GRADDF=(GRAD-GRADPR)/GRAD
                    GRDFDF=(GRADDF-GRDFPR)
                  END IF
C**TEST FOR V RISING OR FALLING BEFORE FIRST MINIMUM
                  IF(VDP.GT.VLAST.OR.MIN1.EQ.0)THEN
                    VDIFF=VDP-VLAST
                    CALL SET73(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,VDP,
     1              MZ1,MZ2,MZ3)
                    IF(VDP.LT.VMIN)THEN
                      WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2,
     1                MODE3
                      WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2,MZ3
                      WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2),
     1                XQ3(MZ3)
                      WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
                      WRITE(IOUT,*)'*****************************'
                      WRITE(IOUT,*)
C**SET VMIN IF NOT REACHED FIRST MINIMUM
                      IF(MIN1.EQ.0)VMIN=VDP
                    END IF
C**TEST FOR MINIMUM
                    IF(GRADPR.GE.0.AND.GRAD.LT.0)THEN
                      WRITE(IOUT,*)'MINIMUM FOUND FOR MODES ',MODE1,
     1                MODE2,MODE3
                      IF(MODE1.EQ.MODCHK)THEN
                        WRITE(IOUT,*)'M1,M2,M3 ',MZ1+1,MZ2,MZ3
                        WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1+1),XQ2(MZ2),
     1                  XQ3(MZ3)
                      END IF
                      IF(MODE2.EQ.MODCHK)THEN
                        WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2+1,MZ3
                        WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2+1),
     1                  XQ3(MZ3)
                      END IF
                      IF(MODE3.EQ.MODCHK)THEN
                        WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2,MZ3+1
                        WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2),
     1                  XQ3(MZ3+1)
                      END IF
                      WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                      WRITE(IOUT,*)'*****************************'
                      WRITE(IOUT,*)
                      MIN1=1
                    END IF
                    VLAST=VDP
C**TEST FOR V FALLING AFTER FIRST MINIMUM
                  ELSE
                    IF(MAXCHK(3).GT.0)THEN
                      CALL SET73(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,
     1                VDP,MZ1,MZ2,MZ3)
                    ELSE
                      CALL SET73(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,
     1                VLAST+VDIFF,MZ1,MZ2,MZ3)
                    END IF
                    IF(GRADPR.LT.0.AND.GRAD.GE.0)THEN
                      WRITE(IOUT,*)'MAXIMUM FOUND FOR MODES ',MODE1,
     1                MODE2,MODE3
                      IF(MODE1.EQ.MODCHK)THEN
                        WRITE(IOUT,*)'M1,M2,M3 ',MZ1+1,MZ2,MZ3
                        WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1+1),XQ2(MZ2),
     1                  XQ3(MZ3)
                      END IF
                      IF(MODE2.EQ.MODCHK)THEN
                        WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2+1,MZ3
                        WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2+1),
     1                  XQ3(MZ3)
                      END IF
                      IF(MODE3.EQ.MODCHK)THEN
                        WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2,MZ3+1
                        WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2),
     1                  XQ3(MZ3+1)
                      END IF
                      WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                      WRITE(IOUT,*)'*****************************'
                      WRITE(IOUT,*)
                      MIN1=-1
                    ELSE
                      WRITE(IOUT,*)'ORIGINAL POTENTIAL FOR MODES ',
     1                MODE1,MODE2,MODE3
                      IF(MODE1.EQ.MODCHK)THEN
                        WRITE(IOUT,*)'M1,M2,M3 ',MZ1+1,MZ2,MZ3
                        WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1+1),XQ2(MZ2),
     1                  XQ3(MZ3)
                      END IF
                      IF(MODE2.EQ.MODCHK)THEN
                        WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2+1,MZ3
                        WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2+1),
     1                  XQ3(MZ3)
                      END IF
                      IF(MODE3.EQ.MODCHK)THEN
                        WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2,MZ3+1
                        WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2),
     1                  XQ3(MZ3+1)
                      END IF
                      WRITE(IOUT,*)'POTENTIAL ',VDP*WAVENM
                      WRITE(IOUT,*)'*****************************'
                      WRITE(IOUT,*)
                    END IF
                    IF(VLAST+VDIFF.LT.VMIN)THEN
                      WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2,
     1                MODE3
                      WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2,MZ3
                      WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2),
     1                XQ3(MZ3)
                      WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                      WRITE(IOUT,*)'*****************************'
                      WRITE(IOUT,*)
                    END IF
                    IF(MAXCHK(3).LT.0)VLAST=VLAST+VDIFF
                  END IF
                END DO
C
                IF(MDD1.EQ.2)GO TO 1000
                VLAST=-1.0D+20
C**MIN=0 UNTIL FIRST MINIMUM (+1) or MAXIMUM (-1) REACHED
                MIN2=0
                GRAD=0
                VDIFF=0
C**NOW GO TO POSITIVE Q
                DO M1=MX1+1,2*MX1
                  IF(MODE1.EQ.MODCHK)MZ1=M1
                  IF(MODE2.EQ.MODCHK)MZ2=M1
                  IF(MODE3.EQ.MODCHK)MZ3=M1
                  VDP=VFUN3(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,
     1            MZ1,MZ2,MZ3,VMIN,WAVENM)
C**PREVIOUS GRADIENT
                  GRADPR=GRAD
                  IF(M1.NE.MX1+1)THEN
                    IF(MODE1.EQ.MODCHK)
     1              GRAD=WAVENM*(VDP-VLAST)/(XQ1(M1)-XQ1(M1-1))
                    IF(MODE2.EQ.MODCHK)
     1              GRAD=WAVENM*(VDP-VLAST)/(XQ2(M1)-XQ2(M1-1))
                    IF(MODE3.EQ.MODCHK)
     1              GRAD=WAVENM*(VDP-VLAST)/(XQ3(M1)-XQ3(M1-1))
                  END IF
C**TEST FOR V RISING OR FALLING BEFORE FIRST MINIMUM
                  IF(VDP.GT.VLAST.OR.MIN2.EQ.0)THEN
                    VDIFF=VDP-VLAST
                    CALL SET73(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,VDP,
     1              MZ1,MZ2,MZ3)
                    IF(VDP.LT.VMIN)THEN
                      WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2,
     1                MODE3
                      WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2,MZ3
                      WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2),
     1                XQ3(MZ3)
                      WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
                      WRITE(IOUT,*)'*****************************'
                      WRITE(IOUT,*)
C**SET VMIN IF NOT REACHED FIRST MINIMUM
                      IF(MIN2.EQ.0)VMIN=VDP
                    END IF
C**TEST FOR MINIMUM
                    IF(GRADPR.LT.0.AND.GRAD.GE.0)THEN
                      WRITE(IOUT,*)'MINIMUM FOUND FOR MODES ',MODE1,
     1                MODE2,MODE3
                      IF(MODE1.EQ.MODCHK)THEN
                        WRITE(IOUT,*)'M1,M2,M3 ',MZ1-1,MZ2,MZ3
                        WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1-1),XQ2(MZ2),
     1                  XQ3(MZ3)
                      END IF
                      IF(MODE2.EQ.MODCHK)THEN
                        WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2-1,MZ3
                        WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2-1),
     1                  XQ3(MZ3)
                      END IF
                      IF(MODE3.EQ.MODCHK)THEN
                        WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2,MZ3-1
                        WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2),
     1                  XQ3(MZ3-1)
                      END IF
                      WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                      WRITE(IOUT,*)'*****************************'
                      WRITE(IOUT,*)
                      MIN2=1
                    END IF
                    VLAST=VDP
C**TEST FOR V FALLING AFTER FIRST MINIMUM
                  ELSE
                    IF(MAXCHK(3).GT.0)THEN
                      CALL SET73(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,
     1                VDP,MZ1,MZ2,MZ3)
                    ELSE
                      CALL SET73(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,
     1                VLAST+VDIFF,MZ1,MZ2,MZ3)
                    END IF
                    IF(GRADPR.GE.0.AND.GRAD.LT.0)THEN
                      WRITE(IOUT,*)'MAXIMUM FOUND FOR MODES ',MODE1,
     1                MODE2,MODE3
                      IF(MODE1.EQ.MODCHK)THEN
                        WRITE(IOUT,*)'M1,M2,M3 ',MZ1-1,MZ2,MZ3
                        WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1-1),XQ2(MZ2),
     1                  XQ3(MZ3)
                      END IF
                      IF(MODE2.EQ.MODCHK)THEN
                        WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2-1,MZ3
                        WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2-1),
     1                  XQ3(MZ3)
                      END IF
                      IF(MODE3.EQ.MODCHK)THEN
                        WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2,MZ3-1
                        WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2),
     1                  XQ3(MZ3-1)
                      END IF
                      WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                      WRITE(IOUT,*)'*****************************'
                      WRITE(IOUT,*)
                      MIN2=-1
                    ELSE
                      WRITE(IOUT,*)'ORIGINAL POTENTIAL FOR MODES ',
     1                MODE1,MODE2,MODE3
                      IF(MODE1.EQ.MODCHK)THEN
                        WRITE(IOUT,*)'M1,M2,M3 ',MZ1-1,MZ2,MZ3
                        WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1-1),XQ2(MZ2),
     1                  XQ3(MZ3)
                      END IF
                      IF(MODE2.EQ.MODCHK)THEN
                        WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2-1,MZ3
                        WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2-1),
     1                  XQ3(MZ3)
                      END IF
                      IF(MODE3.EQ.MODCHK)THEN
                        WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2,MZ3-1
                        WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2),
     1                  XQ3(MZ3-1)
                      END IF
                      WRITE(IOUT,*)'POTENTIAL ',VDP*WAVENM
                      WRITE(IOUT,*)'*****************************'
                      WRITE(IOUT,*)
                    END IF
                    IF(VLAST+VDIFF.LT.VMIN)THEN
                      WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2,
     1                MODE3
                      WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2,MZ3
                      WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2),
     1                XQ3(MZ3)
                      WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
                      WRITE(IOUT,*)'*****************************'
                      WRITE(IOUT,*)
                    END IF
                    IF(MAXCHK(3).LT.0)VLAST=VLAST+VDIFF
                  END IF
                END DO
1000            CONTINUE
CC            END IF
              IF(MODE1.EQ.MODCHK)THEN
                DO M1=1,MM1/MD1
                  VDP=VFUN3(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,M1,MZ2,MZ3,
     1            VMIN,WAVENM)-VMIN
                  IF(VDP.LT.0.AND.MAXCHK(3).LT.0)THEN
                    WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1              MODE1,MODE2,MODE3
                    WRITE(IOUT,*)'M1,M2,M3 ',M1,MZ2,MZ3
                    WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(M1),XQ2(MZ2),XQ3(MZ3)
                    WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                    WRITE(IOUT,*)'*****************************'
                    WRITE(IOUT,*)
                  END IF
                END DO
                IF(MAXCHK(3).GT.0)THEN
                  WRITE(IOUT,*)' ORIGINAL POTENTIAL'
                  WRITE(IOUT,*)'MODES',MODE2,MODE3,' AT ',XQ2(MZ2),
     1            XQ3(MZ3)
                  WRITE(IOUT,*)'MODE',MODE1
                  WRITE(IOUT,*)
                  DO M1=1,MM1/MD1
                    WRITE(IOUT,*)XQ1(M1),VFUN3(V,VR,MM1/MD1,MM2/MD2,
     1              MM3/MD3,M1,MZ2,MZ3,VMIN,WAVENM)*WAVENM
                  END DO
                  WRITE(IOUT,*)'END GRID INSPECTION FOR MODE ',MODCHK
                ELSE
                  IF(MIN1.LT.0.OR.MIN2.LT.0)THEN
                  WRITE(IOUT,*)' AMENDED POTENTIAL'
                  WRITE(IOUT,*)'MODES',MODE2,MODE3,' AT ',XQ2(MZ2),
     1            XQ3(MZ3)
                  WRITE(IOUT,*)'MODE',MODE1
                  WRITE(IOUT,*)
                  DO M1=1,MM1/MD1
                    WRITE(IOUT,*)XQ1(M1),VFUN3(V,VR,MM1/MD1,MM2/MD2,
     1              MM3/MD3,M1,MZ2,MZ3,VMIN,WAVENM)*WAVENM
                  END DO
                  END IF
                  WRITE(IOUT,*)
                  WRITE(IOUT,*)'END HOLE SEARCH FOR MODE ',MODCHK
                END IF
                WRITE(IOUT,*)
              END IF
C
              IF(MODE2.EQ.MODCHK)THEN
                DO M1=1,MM2/MD2
                  VDP=VFUN3(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MZ1,M1,MZ3,
     1            VMIN,WAVENM)-VMIN
                  IF(VDP.LT.0.AND.MAXCHK(3).LT.0)THEN
                    WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1              MODE1,MODE2,MODE3
                    WRITE(IOUT,*)'M1,M2,M3 ',MZ1,M1,MZ3
                    WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(M1),XQ3(MZ3)
                    WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                    WRITE(IOUT,*)'*****************************'
                    WRITE(IOUT,*)
                  END IF
                END DO
                IF(MAXCHK(3).GT.0)THEN
                  WRITE(IOUT,*)' ORIGINAL POTENTIAL'
                  WRITE(IOUT,*)'MODES',MODE1,MODE3,' AT ',XQ1(MZ1),
     1            XQ3(MZ3)
                  WRITE(IOUT,*)'MODE',MODE2
                  WRITE(IOUT,*)
                  DO M1=1,MM2/MD2
                    WRITE(IOUT,*)XQ2(M1),VFUN3(V,VR,MM1/MD1,MM2/MD2,
     1              MM3/MD3,MZ1,M1,MZ3,VMIN,WAVENM)*WAVENM
                  END DO
                  WRITE(IOUT,*)'END GRID INSPECTION FOR MODE ',MODCHK
                ELSE
                  IF(MIN1.LT.0.OR.MIN2.LT.0)THEN
                  WRITE(IOUT,*)' AMENDED POTENTIAL'
                  WRITE(IOUT,*)'MODES',MODE1,MODE3,' AT ',XQ1(MZ1),
     1            XQ3(MZ3)
                  WRITE(IOUT,*)'MODE',MODE2
                  WRITE(IOUT,*)
                  DO M1=1,MM2/MD2
                    WRITE(IOUT,*)XQ2(M1),VFUN3(V,VR,MM1/MD1,MM2/MD2,
     1              MM3/MD3,MZ1,M1,MZ3,VMIN,WAVENM)*WAVENM
                  END DO
                  END IF
                  WRITE(IOUT,*)
                  WRITE(IOUT,*)'END HOLE SEARCH FOR MODE ',MODCHK
                END IF
              END IF
C
              IF(MODE3.EQ.MODCHK)THEN
                DO M1=1,MM3/MD3
                  VDP=VFUN3(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MZ1,MZ2,M1,
     1            VMIN,WAVENM)-VMIN
                  IF(VDP.LT.0.AND.MAXCHK(3).LT.0)THEN
                    WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1              MODE1,MODE2,MODE3
                    WRITE(IOUT,*)'M1,M2,M3 ',MZ1,MZ2,M1
                    WRITE(IOUT,*)'Q1,Q2,Q3 ',XQ1(MZ1),XQ2(MZ2),XQ3(M1)
                    WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                    WRITE(IOUT,*)'*****************************'
                    WRITE(IOUT,*)
                  END IF
                END DO
                IF(MAXCHK(3).GT.0)THEN
                  WRITE(IOUT,*)' ORIGINAL POTENTIAL'
                  WRITE(IOUT,*)'MODES',MODE1,MODE2,' AT ',XQ1(MZ1),
     1            XQ2(MZ2)
                  WRITE(IOUT,*)'MODE',MODE3
                  WRITE(IOUT,*)
                  DO M1=1,MM3/MD3
                    WRITE(IOUT,*)XQ3(M1),VFUN3(V,VR,MM1/MD1,MM2/MD2,
     1              MM3/MD3,MZ1,MZ2,M1,VMIN,WAVENM)*WAVENM
                  END DO
                  WRITE(IOUT,*)'END GRID INSPECTION FOR MODE ',MODCHK
                ELSE
                  IF(MIN1.LT.0.OR.MIN2.LT.0)THEN
                  WRITE(IOUT,*)' AMENDED POTENTIAL'
                  WRITE(IOUT,*)'MODES',MODE1,MODE2,' AT ',XQ1(MZ1),
     1            XQ2(MZ2)
                  WRITE(IOUT,*)'MODE',MODE3
                  WRITE(IOUT,*)
                  DO M1=1,MM3/MD3
                    WRITE(IOUT,*)XQ3(M1),VFUN3(V,VR,MM1/MD1,MM2/MD2,
     1              MM3/MD3,MZ1,MZ2,M1,VMIN,WAVENM)*WAVENM
                  END DO
                  END IF
                  WRITE(IOUT,*)
                  WRITE(IOUT,*)'END HOLE SEARCH FOR MODE ',MODCHK
                END IF
              END IF
            END DO
          END DO
          IF(MAXCHK(3).GT.0)THEN
            WRITE(IOUT,*)'END GRID INSPECTION FOR MODE ',MODCHK
          ELSE
            WRITE(IOUT,*)'END HOLE SEARCH FOR MODE ',MODCHK
          END IF
          WRITE(IOUT,*)
        END IF
C
        IF(IND.NE.0.AND.MOLINC.LE.0)THEN
          CALL OUT73(V,VR,MM1/MD1,MM2/MD2,MM3/MD3)
        END IF
      END DO

C**INTRINSIC
      IF(MOLINC.LE.0)GO TO 9999
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        K11=K1-1
        DO K2=1,K11
          CALL INTARR(NBF,MBF,K2,I2,J2,L2)
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE2)THEN
            CALL DUMVT2(XQ1,XQ2,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,XQTAU,VT0,VT1,
     2      VT2(1,1,1,1),KVP,0,MODINT,NBF,MBF,V1,V1R,MMTAU,XMODQ)
            CALL VFIX72(V2,V2R,J1,J2,VT2,KVP,MMTAU,MDT,MM1,MD1,
     1      MM2,MD2,1)
          END IF
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE3)THEN
            CALL DUMVT2(XQ1,XQ3,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,XQTAU,VT0,VT1,
     2      VT2(1,1,1,2),KVP,0,MODINT,NBF,MBF,V1,V1R,MMTAU,XMODQ)
            CALL VFIX72(V2,V2R,J1,J2,VT2,KVP,MMTAU,MDT,MM1,MD1,
     1      MM3,MD3,2)
          END IF
          IF(K1.EQ.MODE2.AND.K2.EQ.MODE3)THEN
            CALL DUMVT2(XQ2,XQ3,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,XQTAU,VT0,VT1,
     2      VT2(1,1,1,3),KVP,0,MODINT,NBF,MBF,V1,V1R,MMTAU,XMODQ)
            CALL VFIX72(V2,V2R,J1,J2,VT2,KVP,MMTAU,MDT,MM2,MD2,
     1      MM3,MD3,3)
          END IF
        END DO
      END DO
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        IF(K1.EQ.MODE1)THEN
          CALL DUMVT1(XQ1,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,MODE1,V1,V1R,XQTAU,VT0,VT1(1,1,1),KVP,0,MODINT,
     2    XMODQ)
          CALL VFIX71(V1,V1R,J1,VT1,KVP,MMTAU,MDT,MM1,MD1,1)
        END IF
        IF(K1.EQ.MODE2)THEN
          CALL DUMVT1(XQ2,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,MODE2,V1,V1R,XQTAU,VT0,VT1(1,1,2),KVP,0,MODINT,
     2    XMODQ)
          CALL VFIX71(V1,V1R,J1,VT1,KVP,MMTAU,MDT,MM2,MD2,2)
        END IF
        IF(K1.EQ.MODE3)THEN
          CALL DUMVT1(XQ3,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,MODE3,V1,V1R,XQTAU,VT0,VT1(1,1,3),KVP,0,MODINT,
     2    XMODQ)
          CALL VFIX71(V1,V1R,J1,VT1,KVP,MMTAU,MDT,MM3,MD3,3)
        END IF
      END DO
      CALL DUMVT0(NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1JPOT,CPOT,XQTAU,VT0,0,MODINT,XMODQ)
C**LOOP ROUND TAU
      DO MTAU=1,MMTAU/MDT
        X=VT0(MTAU)
        DO M1=1,MM1/MD1
          X1=VT1(M1,MTAU,1)
          DO M2=1,MM2/MD2
            X2=VT1(M2,MTAU,2)
            X12=VT2(M2,M1,MTAU,1)
            DO M3=1,MM3/MD3
              X3=VT1(M3,MTAU,3)
              X13=VT2(M3,M1,MTAU,2)
              X23=VT2(M3,M2,MTAU,3)
              VDP=VT3(M3,M2,M1,MTAU)-X-X1-X2-X3-X12-X13-X23
              IF(IND.NE.0)THEN
                CALL SET73(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,VDP,M1,M2,M3)
              ELSE
                V(M3,M2,M1,MTAU)=VDP
              END IF
            END DO
          END DO
        END DO
        IF(IND.NE.0)THEN
          CALL OUT73(V,VR,MM1/MD1,MM2/MD2,MM3/MD3)
        END IF
      END DO
9999  CONTINUE
      CALL FLUSH(73)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DUMCR3(XQ1,XQ2,XQ3,MM1,MM2,MM3,NMODE,NATOM,QQ,XZ,AB,B,
     1AA,BB,XX,X0,XL,XM,MODE1,MODE2,MODE3,V,VR,VM,VMR,JMAX,IND,MODINT,
     2NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM3,MM2,MM1,10),VM(MM3,MM2,MM1,16),V1(MMX1),
     1V2(MMX1,MMX1,6)
      REAL*4 VR(MM3,MM2,MM1,10),VMR(MM3,MM2,MM1,16),V1R(MMX1),
     1V2R(MMX1,MMX1,6)
      REAL*8 V0,VM0(6)
      REAL*4 V0R,VM0R(6)
      LOGICAL LINEAR
      DIMENSION VP1(MMX1,3),VP2(MMX1,MMX1,6,3),X12(6),X13(6),X23(6)
      DIMENSION MODINT(NMODE),NBF(1),MBF(1)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),QQ(NMODE),XZ(NMODE,NMODE,3)
      DIMENSION AB(NMODE,3),B(NMODE,NMODE),AA(NMODE,3,3),BB(NMODE)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      COMMON/MOMI/XK(3,3),XMU(3,3)
      COMMON/TYPE/LINEAR
      COMMON/JCORIO/JCORIO
      COMMON/WHICH/IWHICH
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/TORS/QTAU
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/FILASS/IOUT,INP
C**TEMPORARY (DIMENSIONS)
      COMMON/MULT/MULT(1000)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/MUREF/V0,VM0,V0R,VM0R
      JCORIO=JMAX
      MX=1
      MY=2
      MZ=3
      DO K=1,NMODE
        QQ(K)=0
        MULT(K)=0
      END DO
      MULT(MODE1)=1
      MULT(MODE2)=1
      MULT(MODE3)=1
C**INTRINSIC
      IF(IND.NE.0)THEN
        MD1=MODINT(MODE1)
        MD2=MODINT(MODE2)
        MD3=MODINT(MODE3)
        DO I=1,NWSYM
          DO J=1,NSYM(I)
            IF(MODE1.EQ.ISYM(I,J))N1=I
            IF(MODE2.EQ.ISYM(I,J))N2=I
            IF(MODE3.EQ.ISYM(I,J))N3=I
          END DO
        END DO
        IF(N1.EQ.N2)MD2=1
        IF(N1.EQ.N3)MD3=1
        IF(N2.EQ.N3)MD3=1
        N12=ISYMP(N1,N2)
        IF(N12.EQ.N3)MD3=1
      ELSE
        MD1=1
        MD2=1
        MD3=1
      END IF
      DO M1=1,MM1/MD1
        QQ(MODE1)=XQ1(M1)
        DO M2=1,MM2/MD2
          QQ(MODE2)=XQ2(M2)
          DO M3=1,MM3/MD3
            QQ(MODE3)=XQ3(M3)
            CALL CORIOL(NMODE,NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,ZZ)
            IF(JMAX.EQ.0)THEN
              IF(LINEAR)ZZ=0
C**INTRINSIC
C             IF(IND.NE.0)THEN
                CALL SET83(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,B,BB,NMODE,ZZ,
     1          M1,M2,M3,MODE1,MODE2,MODE3)
C             ELSE
C               V(M3,M2,M1,1)=BB(MODE1)
C               V(M3,M2,M1,2)=BB(MODE2)
C               V(M3,M2,M1,3)=BB(MODE3)
C               V(M3,M2,M1,4)=B(MODE1,MODE1)
C               V(M3,M2,M1,5)=B(MODE1,MODE2)
C               V(M3,M2,M1,6)=B(MODE1,MODE3)
C               V(M3,M2,M1,7)=B(MODE2,MODE2)
C               V(M3,M2,M1,8)=B(MODE2,MODE3)
C               V(M3,M2,M1,9)=B(MODE3,MODE3)
C               V(M3,M2,M1,10)=ZZ
C             END IF
            ELSE
              IF(.NOT.LINEAR)ZZ=0
              CALL SET93(VM,VMR,MM1/MD1,MM2/MD2,MM3/MD3,AB,NMODE,ZZ,M1,
     1        M2,M3,MODE1,MODE2,MODE3)
C             IF(JCOUPC.GT.0)THEN
C               VM(M3,M2,M1,1)=XMU(MX,MX)/2
C               VM(M3,M2,M1,2)=XMU(MY,MY)/2
C               VM(M3,M2,M1,3)=XMU(MZ,MZ)/2
C               VM(M3,M2,M1,4)=XMU(MX,MZ)/2
C               VM(M3,M2,M1,5)=XMU(MY,MZ)/2
C               VM(M3,M2,M1,6)=XMU(MX,MY)/2
C               VM(M3,M2,M1,7)=XMU(MX,MX)*AB(MODE1,MX)+
C    1          XMU(MY,MX)*AB(MODE1,MY)+XMU(MZ,MX)*AB(MODE1,MZ)/2
C               VM(M3,M2,M1,8)=XMU(MX,MX)*AB(MODE2,MX)+
C    1          XMU(MY,MX)*AB(MODE2,MY)+XMU(MZ,MX)*AB(MODE2,MZ)/2
C               VM(M3,M2,M1,9)=XMU(MX,MX)*AB(MODE3,MX)+
C    1          XMU(MY,MX)*AB(MODE3,MY)+XMU(MZ,MX)*AB(MODE3,MZ)/2
C               VM(M3,M2,M1,10)=XMU(MX,MY)*AB(MODE1,MX)+
C    1          XMU(MY,MY)*AB(MODE1,MY)+XMU(MZ,MY)*AB(MODE1,MZ)/2
C               VM(M3,M2,M1,11)=XMU(MX,MY)*AB(MODE2,MX)+
C    1          XMU(MY,MY)*AB(MODE2,MY)+XMU(MZ,MY)*AB(MODE2,MZ)/2
C               VM(M3,M2,M1,12)=XMU(MX,MY)*AB(MODE3,MX)+
C    1          XMU(MY,MY)*AB(MODE3,MY)+XMU(MZ,MY)*AB(MODE3,MZ)/2
C               VM(M3,M2,M1,13)=XMU(MX,MZ)*AB(MODE1,MX)+
C    1          XMU(MY,MZ)*AB(MODE1,MY)+XMU(MZ,MZ)*AB(MODE1,MZ)/2
C               VM(M3,M2,M1,14)=XMU(MX,MZ)*AB(MODE2,MX)+
C    1          XMU(MY,MZ)*AB(MODE2,MY)+XMU(MZ,MZ)*AB(MODE2,MZ)/2
C               VM(M3,M2,M1,15)=XMU(MX,MZ)*AB(MODE3,MX)+
C    1          XMU(MY,MZ)*AB(MODE3,MY)+XMU(MZ,MZ)*AB(MODE3,MZ)/2
C               VM(M3,M2,M1,16)=ZZ
C             ELSE
C               VMR(M3,M2,M1,1)=XMU(MX,MX)/2
C               VMR(M3,M2,M1,2)=XMU(MY,MY)/2
C               VMR(M3,M2,M1,3)=XMU(MZ,MZ)/2
C               VMR(M3,M2,M1,4)=XMU(MX,MZ)/2
C               VMR(M3,M2,M1,5)=XMU(MY,MZ)/2
C               VMR(M3,M2,M1,6)=XMU(MX,MY)/2
C               VMR(M3,M2,M1,7)=XMU(MX,MX)*AB(MODE1,MX)+
C    1          XMU(MY,MX)*AB(MODE1,MY)+XMU(MZ,MX)*AB(MODE1,MZ)/2
C               VMR(M3,M2,M1,8)=XMU(MX,MX)*AB(MODE2,MX)+
C    1          XMU(MY,MX)*AB(MODE2,MY)+XMU(MZ,MX)*AB(MODE2,MZ)/2
C               VMR(M3,M2,M1,9)=XMU(MX,MX)*AB(MODE3,MX)+
C    1          XMU(MY,MX)*AB(MODE3,MY)+XMU(MZ,MX)*AB(MODE3,MZ)/2
C               VMR(M3,M2,M1,10)=XMU(MX,MY)*AB(MODE1,MX)+
C    1          XMU(MY,MY)*AB(MODE1,MY)+XMU(MZ,MY)*AB(MODE1,MZ)/2
C               VMR(M3,M2,M1,11)=XMU(MX,MY)*AB(MODE2,MX)+
C    1          XMU(MY,MY)*AB(MODE2,MY)+XMU(MZ,MY)*AB(MODE2,MZ)/2
C               VMR(M3,M2,M1,12)=XMU(MX,MY)*AB(MODE3,MX)+
C    1          XMU(MY,MY)*AB(MODE3,MY)+XMU(MZ,MY)*AB(MODE3,MZ)/2
C               VMR(M3,M2,M1,13)=XMU(MX,MZ)*AB(MODE1,MX)+
C    1          XMU(MY,MZ)*AB(MODE1,MY)+XMU(MZ,MZ)*AB(MODE1,MZ)/2
C               VMR(M3,M2,M1,14)=XMU(MX,MZ)*AB(MODE2,MX)+
C    1          XMU(MY,MZ)*AB(MODE2,MY)+XMU(MZ,MZ)*AB(MODE2,MZ)/2
C               VMR(M3,M2,M1,15)=XMU(MX,MZ)*AB(MODE3,MX)+
C    1          XMU(MY,MZ)*AB(MODE3,MY)+XMU(MZ,MZ)*AB(MODE3,MZ)/2
C               VMR(M3,M2,M1,16)=ZZ
C             END IF
            END IF
          END DO
        END DO
      END DO
      IF(JMAX.EQ.0)THEN
C**INTRINSIC
        IF(MOLINC.LE.0)GO TO 9999
        DO K1=1,MODE1
          CALL INTARR(NBF,MBF,K1,I1,J1,L1)
          K11=K1-1
          DO K2=1,K11
            CALL INTARR(NBF,MBF,K2,I2,J2,L2)
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE2)THEN
              CALL DUMCR2(XQ1,XQ2,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1        XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     2        VP1,V1,V1R,MMX1)
              CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE1,MM1,MD1,
     1        MODE2,MM2,MD2,1)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE3)THEN
              CALL DUMCR2(XQ1,XQ3,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1        XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     2        VP1,V1,V1R,MMX1)
              CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE1,MM1,MD1,
     1        MODE3,MM3,MD3,2)
            END IF
            IF(K1.EQ.MODE2.AND.K2.EQ.MODE3)THEN
              CALL DUMCR2(XQ2,XQ3,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1        XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     2        VP1,V1,V1R,MMX1)
              CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE2,MM2,MD2,
     1        MODE3,MM3,MD3,3)
            END IF
          END DO
        END DO
        DO K1=1,MODE1
          CALL INTARR(NBF,MBF,K1,I1,J1,L1)
          IF(K1.EQ.MODE1)THEN
            CALL DUMCR1(XQ1,J1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1      XX,X0,XL,XM,K1,V1,V1R,VM,VMR,JMAX,0,MODINT)
            CALL FIX81(V1,V1R,J1,VP1,MMX1,K1,MODE1,MM1,MD1,1)
          END IF
          IF(K1.EQ.MODE2)THEN
            CALL DUMCR1(XQ2,J1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1      XX,X0,XL,XM,K1,V1,V1R,VM,VMR,JMAX,0,MODINT)
            CALL FIX81(V1,V1R,J1,VP1,MMX1,K1,MODE2,MM2,MD2,2)
          END IF
          IF(K1.EQ.MODE3)THEN
            CALL DUMCR1(XQ3,J1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1      XX,X0,XL,XM,K1,V1,V1R,VM,VMR,JMAX,0,MODINT)
            CALL FIX81(V1,V1R,J1,VP1,MMX1,K1,MODE3,MM3,MD3,3)
          END IF
        END DO
        DO M1=1,MM1/MD1
          X1=VP1(M1,1)
          DO M2=1,MM2/MD2
            X2=VP1(M2,2)
            DO K=1,6
              X12(K)=VP2(M2,M1,K,1)
            END DO
            DO M3=1,MM3/MD3
              X3=VP1(M3,3)
              DO K=1,6
                X13(K)=VP2(M3,M1,K,2)
                X23(K)=VP2(M3,M2,K,3)
              END DO
              CALL GET83(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,B,BB,NMODE,ZZ,
     1        M1,M2,M3,MODE1,MODE2,MODE3)
              ZZ=ZZ-X1-X2-X3-X12(6)-X13(6)-X23(6)
              IF(JCOUPC.GE.0)THEN
                ZZ=ZZ-V0
              ELSE
                ZZ=ZZ-V0R
              END IF
              BB(MODE1)=BB(MODE1)-X12(1)-X13(1)
              BB(MODE2)=BB(MODE2)-X12(2)-X23(1)
              BB(MODE3)=BB(MODE3)-X13(2)-X23(2)
              B(MODE1,MODE1)=B(MODE1,MODE1)-X12(3)-X13(3)
              B(MODE1,MODE2)=B(MODE1,MODE2)-X12(4)
              B(MODE1,MODE3)=B(MODE1,MODE3)-X13(4)
              B(MODE2,MODE2)=B(MODE2,MODE2)-X12(5)-X23(3)
              B(MODE2,MODE3)=B(MODE2,MODE3)-X23(4)
              B(MODE3,MODE3)=B(MODE3,MODE3)-X13(5)-X23(5)
              CALL SET83(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,B,BB,NMODE,ZZ,
     1        M1,M2,M3,MODE1,MODE2,MODE3)
            END DO
          END DO
        END DO
9999    CONTINUE
        IF(IND.NE.0)THEN
          CALL OUT83(V,VR,MM1/MD1,MM2/MD2,MM3/MD3)
        END IF
      ELSE
        CALL OUT93(VM,VMR,MM1/MD1,MM2/MD2,MM3/MD3)
      END IF
      CALL FLUSH(I83)
      CALL FLUSH(I93)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DUMVR3(XQ1,XQ2,XQ3,MM1,MM2,MM3,NMODE,NATOM,QQ,BB,BS,
     1BT,BBS,B,BBT,BSS,XX,XXP,X0,XL,XM,MODE1,MODE2,MODE3,V,VR,VM,VMR,
     2JMAX,XQTAU,VR0,VR1,VR2,VR3,KVP,IND,MODINT,NBF,MBF,V1,V1R,V2,V2R,
     3MMTAU)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM3,MM2,MM1,15,1),VM(MM3,MM2,MM1,21),VR0(3,1),
     1VR1(KVP,6,MMTAU,3),VR2(KVP,KVP,10,MMTAU,3),
     2VR3(KVP,KVP,KVP,15,MMTAU),V0(3),V1(KVP,6,MMTAU),
     3V2(KVP,KVP,10,MMTAU)
      REAL*4 VR(MM3,MM2,MM1,15,1),VMR(MM3,MM2,MM1,21),V0R(3),
     1V1R(KVP,6,MMTAU),V2R(KVP,KVP,10,MMTAU)
      DIMENSION XQTAU(1),X(3),X1(6),X2(6),X3(6),X12(10),X13(10),X23(10)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),QQ(NMODE),NBF(1),MBF(1)
CCCC  DIMENSION MODINT(NMODE),BB(NMODE,NMODE,3,362),XM(NATOM)
CCCC  DIMENSION BBS(NMODE,NMODE,362),BSS(NMODE,362),BBT(NMODE)
CCCC  DIMENSION BS(NMODE,3,362),BT(NMODE,NMODE),B(NMODE,3,3,362)
CCCC  DIMENSION XX(NATOM,3,362),X0(NATOM,3),XL(NATOM,NMODE,3,362)
      DIMENSION MODINT(NMODE),BB(NMODE,NMODE,3,722),XM(NATOM)
      DIMENSION BBS(NMODE,NMODE,722),BSS(NMODE,722),BBT(NMODE)
      DIMENSION BS(NMODE,3,722),BT(NMODE,NMODE),B(NMODE,3,3,722)
      DIMENSION XX(NATOM,3,722),X0(NATOM,3),XL(NATOM,NMODE,3,722)
      DIMENSION XXP(NATOM,3,722)
      DIMENSION SUP3(3)
      COMMON/MOMI/XK(3,3),XMU(3,3)
      COMMON/MOMI0/XMU0(4,4),XIN0(4,4),XM0(4,4),SST,DETMU
      COMMON/WHICH/IWHICH
      COMMON/TYPE/LINEAR
      COMMON/TORS/QTAU
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/FILASS/IOUT,INP
C**TEMPORARY (DIMENSIONS)
      COMMON/MULT/MULT(1000)
C**ASSUME STARTING VALUE TAU: INIT
C**ASSUME NEXT VALUE TAU: INIT+INCTAU
C**ITAU=2 EQUIVALENT TO ITAU=722
      COMMON/REACTN/IREACT,MMXTAU,INIT,INCTAU
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      MX=1
      MY=2
      MZ=3
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.NT.AND.MDT.GT.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.GT.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.GT.1)MD3=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.GT.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.GT.1)MD3=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.GT.1)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.GT.1)MD3=1
C**INTRINSIC
      IF(IND.EQ.0)THEN
        MD1=1
        MD2=1
        MD3=1
      END IF
C**LOOP ROUND TAU
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
          QTAU=XQTAU(MTAU)
        END IF
        DO K=1,NMODE
          QQ(K)=0
          MULT(K)=0
        END DO
        MULT(MODE1)=1
        MULT(MODE2)=1
        MULT(MODE3)=1
        DO M1=1,MM1/MD1
          QQ(MODE1)=XQ1(M1)
          DO M2=1,MM2/MD2
            QQ(MODE2)=XQ2(M2)
            DO M3=1,MM3/MD3
              QQ(MODE3)=XQ3(M3)
              IF(LINEAR)THEN
                CALL CORIOL(NMODE,NATOM,QQ,BB,BS,BT,B,BBT,XX,X0,XL,XM,
     1          ZZ)
              ELSE
                CALL MILLER(NMODE,NATOM,QQ,BB,BS,BBS,B,BSS,XX,XL,XXP,
     1          XM,BBT,BT,ZZ,ITAU,JMAX)
              END IF
              IF(JMAX.EQ.0)THEN
C**INTRINSIC
                IF(IND.NE.0.AND.MOLINC.LE.0)THEN
                  CALL VSET83(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,BT,BBT,
     1            NMODE,ZZ,M1,M2,M3,MODE1,MODE2,MODE3,NSMODE)
                ELSE
                  VR3(M3,M2,M1,1,MTAU)=BBT(MODE1)
                  VR3(M3,M2,M1,2,MTAU)=BBT(MODE2)
                  VR3(M3,M2,M1,3,MTAU)=BBT(MODE3)
                  VR3(M3,M2,M1,4,MTAU)=BBT(NSMODE)
                  VR3(M3,M2,M1,5,MTAU)=BT(MODE1,MODE1)
                  VR3(M3,M2,M1,6,MTAU)=BT(MODE1,MODE2)
                  VR3(M3,M2,M1,7,MTAU)=BT(MODE1,MODE3)
                  VR3(M3,M2,M1,8,MTAU)=BT(MODE1,NSMODE)
                  VR3(M3,M2,M1,9,MTAU)=BT(MODE2,MODE2)
                  VR3(M3,M2,M1,10,MTAU)=BT(MODE2,MODE3)
                  VR3(M3,M2,M1,11,MTAU)=BT(MODE2,NSMODE)
                  VR3(M3,M2,M1,12,MTAU)=BT(MODE3,MODE3)
                  VR3(M3,M2,M1,13,MTAU)=BT(MODE3,NSMODE)
                  VR3(M3,M2,M1,14,MTAU)=BT(NSMODE,NSMODE)
                  VR3(M3,M2,M1,15,MTAU)=ZZ
                END IF
              ELSE
C**GET WHAT'S REQUIRED
            DO I=1,3
              SUP3(I)=0
              DO K=1,NMODE-1
                DO L=1,NMODE-1
                  SUP3(I)=SUP3(I)+QQ(K)*MULT(L)*BB(K,L,I,ITAU)*BBT(L)
                END DO
              END DO
            END DO
            ZZ=0
            DO K=1,NMODE-1
              DO L=1,NMODE-1
                ZZ=ZZ+QQ(K)*MULT(L)*BBS(K,L,ITAU)*BBT(L)
              END DO
            END DO
            DO I=1,3
              DO L=1,NMODE-1
                BS(L,I,ITAU)=0
                DO K=1,NMODE-1
                  BS(L,I,ITAU)=BS(L,I,ITAU)+QQ(K)*MULT(L)*
     1            BB(K,L,I,ITAU)
                END DO
              END DO
            END DO
            DO L=1,NMODE-1
              BSS(L,ITAU)=0
              DO K=1,NMODE-1
                BSS(L,ITAU)=BSS(L,ITAU)+QQ(K)*MULT(L)*
     1          BBS(K,L,ITAU)
              END DO
            END DO
C**GOT WHAT'S REQUIRED
                CALL VSET93(VM,VMR,MM1/MD1,MM2/MD2,MM3/MD3,SUP3,BS,BSS,
     1          NMODE,ZZ,M1,M2,M3,MODE1,MODE2,MODE3,ITAU)
C               IF(JCOUPC.GT.0)THEN
C                 VM(M3,M2,M1,1)=XMU0(MX,MX)/2
C                 VM(M3,M2,M1,2)=XMU0(MY,MY)/2
C                 VM(M3,M2,M1,3)=XMU0(MZ,MZ)/2
C                 VM(M3,M2,M1,4)=XMU0(MX,MZ)/2
C                 VM(M3,M2,M1,5)=XMU0(MY,MZ)/2
C                 VM(M3,M2,M1,6)=XMU0(MX,MY)/2
C                 VM(M3,M2,M1,7)=-SST*XMU0(MX,4)/2+ZZ*XMU0(MX,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MX)+SUP3(MY)*XMU0(MY,MX)+
C    2                  SUP3(MZ)*XMU0(MZ,MX))/2
C                 VM(M3,M2,M1,8)=(BS(MODE1,MX,ITAU)*XMU0(MX,MX)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MX)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MX))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MX,4)/2
C                 VM(M3,M2,M1,9)=(BS(MODE2,MX,ITAU)*XMU0(MX,MX)+
C    1                  BS(MODE2,MY,ITAU)*XMU0(MY,MX)+
C    2                  BS(MODE2,MZ,ITAU)*XMU0(MZ,MX))/2+
C    3                  BSS(MODE2,ITAU)*XMU0(MX,4)/2
C                 VM(M3,M2,M1,10)=(BS(MODE3,MX,ITAU)*XMU0(MX,MX)+
C    1                  BS(MODE3,MY,ITAU)*XMU0(MY,MX)+
C    2                  BS(MODE3,MZ,ITAU)*XMU0(MZ,MX))/2+
C    3                  BSS(MODE3,ITAU)*XMU0(MX,4)/2
C                 VM(M3,M2,M1,11)=-XMU0(MX,4)/2
C                 VM(M3,M2,M1,12)=-SST*XMU0(MY,4)/2+ZZ*XMU0(MY,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MY)+SUP3(MY)*XMU0(MY,MY)+
C    2                  SUP3(MZ)*XMU0(MZ,MY))/2
C                 VM(M3,M2,M1,13)=(BS(MODE1,MX,ITAU)*XMU0(MX,MY)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MY)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MY))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MY,4)/2
C                 VM(M3,M2,M1,14)=(BS(MODE2,MX,ITAU)*XMU0(MX,MY)+
C    1                  BS(MODE2,MY,ITAU)*XMU0(MY,MY)+
C    2                  BS(MODE2,MZ,ITAU)*XMU0(MZ,MY))/2+
C    3                  BSS(MODE2,ITAU)*XMU0(MY,4)/2
C                 VM(M3,M2,M1,15)=(BS(MODE3,MX,ITAU)*XMU0(MX,MY)+
C    1                  BS(MODE3,MY,ITAU)*XMU0(MY,MY)+
C    2                  BS(MODE3,MZ,ITAU)*XMU0(MZ,MY))/2+
C    3                  BSS(MODE3,ITAU)*XMU0(MY,4)/2
C                 VM(M3,M2,M1,16)=-XMU0(MY,4)/2
C                 VM(M3,M2,M1,17)=-SST*XMU0(MZ,4)/2+ZZ*XMU0(MZ,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MZ)+SUP3(MY)*XMU0(MY,MZ)+
C    2                  SUP3(MZ)*XMU0(MZ,MZ))/2
C                 VM(M3,M2,M1,18)=(BS(MODE1,MX,ITAU)*XMU0(MX,MZ)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MZ)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MZ))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MZ,4)/2
C                 VM(M3,M2,M1,19)=(BS(MODE2,MX,ITAU)*XMU0(MX,MZ)+
C    1                  BS(MODE2,MY,ITAU)*XMU0(MY,MZ)+
C    2                  BS(MODE2,MZ,ITAU)*XMU0(MZ,MZ))/2+
C    3                  BSS(MODE2,ITAU)*XMU0(MZ,4)/2
C                 VM(M3,M2,M1,20)=(BS(MODE3,MX,ITAU)*XMU0(MX,MZ)+
C    1                  BS(MODE3,MY,ITAU)*XMU0(MY,MZ)+
C    2                  BS(MODE3,MZ,ITAU)*XMU0(MZ,MZ))/2+
C    3                  BSS(MODE3,ITAU)*XMU0(MZ,4)/2
C                 VM(M3,M2,M1,21)=-XMU0(MZ,4)/2
C               ELSE
C                 VMR(M3,M2,M1,1)=XMU0(MX,MX)/2
C                 VMR(M3,M2,M1,2)=XMU0(MY,MY)/2
C                 VMR(M3,M2,M1,3)=XMU0(MZ,MZ)/2
C                 VMR(M3,M2,M1,4)=XMU0(MX,MZ)/2
C                 VMR(M3,M2,M1,5)=XMU0(MY,MZ)/2
C                 VMR(M3,M2,M1,6)=XMU0(MX,MY)/2
C                 VMR(M3,M2,M1,7)=-SST*XMU0(MX,4)/2+ZZ*XMU0(MX,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MX)+SUP3(MY)*XMU0(MY,MX)+
C    2                  SUP3(MZ)*XMU0(MZ,MX))/2
C                 VMR(M3,M2,M1,8)=(BS(MODE1,MX,ITAU)*XMU0(MX,MX)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MX)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MX))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MX,4)/2
C                 VMR(M3,M2,M1,9)=(BS(MODE2,MX,ITAU)*XMU0(MX,MX)+
C    1                  BS(MODE2,MY,ITAU)*XMU0(MY,MX)+
C    2                  BS(MODE2,MZ,ITAU)*XMU0(MZ,MX))/2+
C    3                  BSS(MODE2,ITAU)*XMU0(MX,4)/2
C                 VMR(M3,M2,M1,10)=(BS(MODE3,MX,ITAU)*XMU0(MX,MX)+
C    1                  BS(MODE3,MY,ITAU)*XMU0(MY,MX)+
C    2                  BS(MODE3,MZ,ITAU)*XMU0(MZ,MX))/2+
C    3                  BSS(MODE3,ITAU)*XMU0(MX,4)/2
C                 VMR(M3,M2,M1,11)=-XMU0(MX,4)/2
C                 VMR(M3,M2,M1,12)=-SST*XMU0(MY,4)/2+ZZ*XMU0(MY,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MY)+SUP3(MY)*XMU0(MY,MY)+
C    2                  SUP3(MZ)*XMU0(MZ,MY))/2
C                 VMR(M3,M2,M1,13)=(BS(MODE1,MX,ITAU)*XMU0(MX,MY)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MY)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MY))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MY,4)/2
C                 VMR(M3,M2,M1,14)=(BS(MODE2,MX,ITAU)*XMU0(MX,MY)+
C    1                  BS(MODE2,MY,ITAU)*XMU0(MY,MY)+
C    2                  BS(MODE2,MZ,ITAU)*XMU0(MZ,MY))/2+
C    3                  BSS(MODE2,ITAU)*XMU0(MY,4)/2
C                 VMR(M3,M2,M1,15)=(BS(MODE3,MX,ITAU)*XMU0(MX,MY)+
C    1                  BS(MODE3,MY,ITAU)*XMU0(MY,MY)+
C    2                  BS(MODE3,MZ,ITAU)*XMU0(MZ,MY))/2+
C    3                  BSS(MODE3,ITAU)*XMU0(MY,4)/2
C                 VMR(M3,M2,M1,16)=-XMU0(MY,4)/2
C                 VMR(M3,M2,M1,17)=-SST*XMU0(MZ,4)/2+ZZ*XMU0(MZ,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MZ)+SUP3(MY)*XMU0(MY,MZ)+
C    2                  SUP3(MZ)*XMU0(MZ,MZ))/2
C                 VMR(M3,M2,M1,18)=(BS(MODE1,MX,ITAU)*XMU0(MX,MZ)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MZ)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MZ))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MZ,4)/2
C                 VMR(M3,M2,M1,19)=(BS(MODE2,MX,ITAU)*XMU0(MX,MZ)+
C    1                  BS(MODE2,MY,ITAU)*XMU0(MY,MZ)+
C    2                  BS(MODE2,MZ,ITAU)*XMU0(MZ,MZ))/2+
C    3                  BSS(MODE2,ITAU)*XMU0(MZ,4)/2
C                 VMR(M3,M2,M1,20)=(BS(MODE3,MX,ITAU)*XMU0(MX,MZ)+
C    1                  BS(MODE3,MY,ITAU)*XMU0(MY,MZ)+
C    2                  BS(MODE3,MZ,ITAU)*XMU0(MZ,MZ))/2+
C    3                  BSS(MODE3,ITAU)*XMU0(MZ,4)/2
C                 VMR(M3,M2,M1,21)=-XMU0(MZ,4)/2
C               END IF
              END IF
            END DO
          END DO
        END DO
        IF(JMAX.EQ.0)THEN
C**INTRINSIC
          IF(IND.NE.0.AND.MOLINC.LE.0)THEN
            CALL VOUT83(V,VR,MM1/MD1,MM2/MD2,MM3/MD3)
          END IF
        ELSE
          CALL VOUT93(VM,VMR,MM1/MD1,MM2/MD2,MM3/MD3)
C         IF(JCOUPC.GT.0)THEN
C           WRITE(93)VM
C         ELSE
C           WRITE(93)VMR
C         END IF
        END IF
      END DO
C**INTRINSIC
      IF(MOLINC.LE.0)GO TO 9999
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        K11=K1-1
        DO K2=1,K11
          CALL INTARR(NBF,MBF,K2,I2,J2,L2)
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE2)THEN
            CALL DUMVR2(XQ1,XQ2,J1,J2,NMODE,NATOM,QQ,BB,BS,BT,BBS,B,
     1      BBT,BSS,XX,XXP,X0,XL,XM,MODE1,MODE2,V2,V2R,VM,VMR,JMAX,
     2      XQTAU,VR0,VR1,VR2(1,1,1,1,1),KVP,0,MODINT,NBF,MBF,V1,V1R,
     3      MMTAU)
            CALL VFIX82(V2,J1,J2,VR2,KVP,MMTAU,MDT,MM1,MD1,
     1      MM2,MD2,1)
          END IF
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE3)THEN
            CALL DUMVR2(XQ1,XQ3,J1,J2,NMODE,NATOM,QQ,BB,BS,BT,BBS,B,
     1      BBT,BSS,XX,XXP,X0,XL,XM,MODE1,MODE3,V2,V2R,VM,VMR,JMAX,
     2      XQTAU,VR0,VR1,VR2(1,1,1,1,2),KVP,0,MODINT,NBF,MBF,V1,V1R,
     3      MMTAU)
            CALL VFIX82(V2,J1,J2,VR2,KVP,MMTAU,MDT,MM1,MD1,
     1      MM3,MD3,2)
          END IF
          IF(K1.EQ.MODE2.AND.K2.EQ.MODE3)THEN
            CALL DUMVR2(XQ2,XQ3,J1,J2,NMODE,NATOM,QQ,BB,BS,BT,BBS,B,
     1      BBT,BSS,XX,XXP,X0,XL,XM,MODE2,MODE3,V2,V2R,VM,VMR,JMAX,
     2      XQTAU,VR0,VR1,VR2(1,1,1,1,3),KVP,0,MODINT,NBF,MBF,V1,V1R,
     3      MMTAU)
            CALL VFIX82(V2,J1,J2,VR2,KVP,MMTAU,MDT,MM2,MD2,
     1      MM3,MD3,3)
          END IF
        END DO
      END DO
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        IF(K1.EQ.MODE1)THEN
          CALL DUMVR1(XQ1,J1,NMODE,NATOM,QQ,BB,BS,BT,BBS,B,BBT,BSS,XX,
     1    XXP,X0,XL,XM,MODE1,V1,V1R,VM,VMR,JMAX,XQTAU,VR0,VR1(1,1,1,1),
     2    KVP,0,MODINT)
          CALL VFIX81(V1,J1,VR1,KVP,MMTAU,MDT,MM1,MD1,1)
        END IF
        IF(K1.EQ.MODE2)THEN
          CALL DUMVR1(XQ2,J1,NMODE,NATOM,QQ,BB,BS,BT,BBS,B,BBT,BSS,XX,
     1    XXP,X0,XL,XM,MODE2,V1,V1R,VM,VMR,JMAX,XQTAU,VR0,VR1(1,1,1,2),
     2    KVP,0,MODINT)
          CALL VFIX81(V1,J1,VR1,KVP,MMTAU,MDT,MM2,MD2,2)
        END IF
        IF(K1.EQ.MODE3)THEN
          CALL DUMVR1(XQ3,J1,NMODE,NATOM,QQ,BB,BS,BT,BBS,B,BBT,BSS,XX,
     1    XXP,X0,XL,XM,MODE3,V1,V1R,VM,VMR,JMAX,XQTAU,VR0,VR1(1,1,1,3),
     2    KVP,0,MODINT)
          CALL VFIX81(V1,J1,VR1,KVP,MMTAU,MDT,MM3,MD3,3)
        END IF
      END DO
      CALL DUMVR0(NMODE,NATOM,QQ,BB,BS,BT,BBS,B,BBT,
     1BSS,XX,XXP,X0,XL,XM,V,VR,VM,VMR,JMAX,VR0,0,MODINT)
C**LOOP ROUND TAU
      DO MTAU=1,MMTAU/MDT
        DO K=1,3
          X(K)=VR0(K,MTAU)
        END DO
        DO M1=1,MM1/MD1
          DO K=1,6
            X1(K)=VR1(M1,K,MTAU,1)
          END DO
          DO M2=1,MM2/MD2
            DO K=1,6
              X2(K)=VR1(M2,K,MTAU,2)
            END DO
            DO K=1,10
              X12(K)=VR2(M2,M1,K,MTAU,1)
            END DO
            DO M3=1,MM3/MD3
              DO K=1,6
                X3(K)=VR1(M3,K,MTAU,3)
              END DO
              DO K=1,10
                X13(K)=VR2(M3,M1,K,MTAU,2)
                X23(K)=VR2(M3,M2,K,MTAU,3)
              END DO
              CALL VGET83(VR3,KVP,KVP,KVP,BT,BBT,NMODE,ZZ,M1,M2,M3,
     1        MODE1,MODE2,MODE3,NSMODE,MTAU)
              BBT(MODE1)=BBT(MODE1)-X1(1)-X12(1)-X13(1)
              BBT(MODE2)=BBT(MODE2)-X2(1)-X12(2)-X23(1)
              BBT(MODE3)=BBT(MODE3)-X3(1)-X13(2)-X23(2)
              BBT(NSMODE)=BBT(NSMODE)-X1(2)-X2(2)-X3(2)-X(1)-X12(3)-
     1        X13(3)-X23(3)
              BT(MODE1,MODE1)=BT(MODE1,MODE1)-X1(3)-X12(4)-X13(4)
              BT(MODE1,MODE2)=BT(MODE1,MODE2)-X12(5)
              BT(MODE1,MODE3)=BT(MODE1,MODE3)-X13(5)
              BT(MODE1,NSMODE)=BT(MODE1,NSMODE)-X1(4)-X12(6)-X13(6)
              BT(MODE2,MODE2)=BT(MODE2,MODE2)-X2(3)-X12(7)-X23(4)
              BT(MODE2,MODE3)=BT(MODE2,MODE3)-X23(5)
              BT(MODE2,NSMODE)=BT(MODE2,NSMODE)-X2(4)-X12(8)-X23(6)
              BT(MODE3,MODE3)=BT(MODE3,MODE3)-X3(3)-X13(7)-X23(7)
              BT(MODE3,NSMODE)=BT(MODE3,NSMODE)-X3(4)-X13(8)-X23(8)
              BT(NSMODE,NSMODE)=BT(NSMODE,NSMODE)-X(2)-X1(5)-X2(5)-
     1        X3(5)-X12(9)-X13(9)-X23(9)
              ZZ=ZZ-X(3)-X1(6)-X2(6)-X3(6)-X12(10)-X13(10)-X23(10)
              IF(IND.NE.0)THEN
                CALL VSET83(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,BT,BBT,
     1          NMODE,ZZ,M1,M2,M3,MODE1,MODE2,MODE3,NSMODE)
              ELSE
                V(M3,M2,M1,1,MTAU)=BBT(MODE1)
                V(M3,M2,M1,2,MTAU)=BBT(MODE2)
                V(M3,M2,M1,3,MTAU)=BBT(MODE3)
                V(M3,M2,M1,4,MTAU)=BBT(NSMODE)
                V(M3,M2,M1,5,MTAU)=BT(MODE1,MODE1)
                V(M3,M2,M1,6,MTAU)=BT(MODE1,MODE2)
                V(M3,M2,M1,7,MTAU)=BT(MODE1,MODE3)
                V(M3,M2,M1,8,MTAU)=BT(MODE1,NSMODE)
                V(M3,M2,M1,9,MTAU)=BT(MODE2,MODE2)
                V(M3,M2,M1,10,MTAU)=BT(MODE2,MODE3)
                V(M3,M2,M1,11,MTAU)=BT(MODE2,NSMODE)
                V(M3,M2,M1,12,MTAU)=BT(MODE3,MODE3)
                V(M3,M2,M1,13,MTAU)=BT(MODE3,NSMODE)
                V(M3,M2,M1,14,MTAU)=BT(NSMODE,NSMODE)
                V(M3,M2,M1,15,MTAU)=ZZ
              END IF
            END DO
          END DO
        END DO
        IF(IND.NE.0)THEN
          CALL VOUT83(V,VR,MM1/MD1,MM2/MD2,MM3/MD3)
        END IF
      END DO
9999  CONTINUE
      CALL FLUSH(83)
      CALL FLUSH(93)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DUMPT4(XQ1,XQ2,XQ3,XQ4,MM1,MM2,MM3,MM4,NMODE,NATOM,QQ,
     1RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,MODE1,MODE2,MODE3,MODE4,V,VR,
     2IND,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,
     3DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,MAX3,NP4,CP4,
     4VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,INDL,INDN,NBF,MBF,V1,V1R,
     5V2,V2R,V3,V3R,XMODQ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C****************************************
C**NEVER CALLED FOR FITTING OF POTENTIALS
C****************************************
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM4,MM3,MM2,MM1),V1(MMX1),V2(MAX2,MAX2),
     1V3(MAX3,MAX3,MAX3),VP
      REAL*4 VR(MM4,MM3,MM2,MM1),V1R(MMX1),V2R(MAX2,MAX2),
     1V3R(MAX3,MAX3,MAX3),VPR
      DIMENSION MODINT(NMODE),XTANPM(NMODE),NBF(1),MBF(1),XMODQ(NMODE)
      DIMENSION NP1(1),CP1(MMX1,1),VP1(MMX1,1),DP1(MMX1,1)
      DIMENSION NP2(NTOT2),CP2(MAX2,1),VP2(MAX2,MAX2,NTOT2),
     1DP2A(MAX2,MAX2,NTOT2),DP2B(MAX2,MAX2,NTOT2)
      DIMENSION NP3(NTOT3),CP3(MAX3,1),VP3(MAX3,MAX3,MAX3,NTOT3),
     1DP3A(MAX3,MAX3,MAX3,NTOT3),DP3B(MAX3,MAX3,MAX3,NTOT3),
     2DP3C(MAX3,MAX3,MAX3,NTOT3)
      DIMENSION NP4(NTOT4),CP4(MAX4,1),VP4(MAX4,MAX4,MAX4,MAX4,NTOT4),
     1DP4A(MAX4,MAX4,MAX4,MAX4,NTOT4),DP4B(MAX4,MAX4,MAX4,MAX4,NTOT4),
     2DP4C(MAX4,MAX4,MAX4,MAX4,NTOT4),DP4D(MAX4,MAX4,MAX4,MAX4,NTOT4)
      DIMENSION DUMMY(100),INDK(1),INDL(1),INDN(1)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),XQ4(MM4)
      DIMENSION RR(NATOM,NATOM),QQ(NMODE)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT)
      COMMON/WHICH/IWHICH
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/VMIN/VMIN
      COMMON/CHKMAX/MAXCHK(6)
      COMMON/FUNDAM/WAVENM
      COMMON/FILASS/IOUT
      COMMON/POTREF/VP,VPR
      DO K=1,NMODE
        QQ(K)=0
      END DO
C**INTRINSIC
      IF(IND.NE.0)THEN
        MD1=MODINT(MODE1)
        MD2=MODINT(MODE2)
        MD3=MODINT(MODE3)
        MD4=MODINT(MODE4)
        DO I=1,NWSYM
          DO J=1,NSYM(I)
            IF(MODE1.EQ.ISYM(I,J))N1=I
            IF(MODE2.EQ.ISYM(I,J))N2=I
            IF(MODE3.EQ.ISYM(I,J))N3=I
            IF(MODE4.EQ.ISYM(I,J))N4=I
          END DO
        END DO
        IF(N1.EQ.N2)MD2=1
        IF(N1.EQ.N3)MD3=1
        IF(N1.EQ.N4)MD4=1
        IF(N2.EQ.N3)MD3=1
        IF(N2.EQ.N4)MD4=1
        IF(N3.EQ.N4)MD4=1
        N12=ISYMP(N1,N2)
        IF(N12.EQ.N3)MD3=1
        IF(N12.EQ.N4)MD4=1
        N13=ISYMP(N1,N3)
        IF(N13.EQ.N4)MD4=1
        N23=ISYMP(N2,N3)
        IF(N23.EQ.N4)MD4=1
        N123=ISYMP(N12,N3)
        IF(N123.EQ.N4)MD4=1
      ELSE
        MD1=1
        MD2=1
        MD3=1
        MD4=1
      END IF
      MODCHK=IABS(MAXCHK(4))
      DO M1=1,MM1/MD1
        QQ(MODE1)=XQ1(M1)*XMODQ(MODE1)
        DO M2=1,MM2/MD2
          QQ(MODE2)=XQ2(M2)*XMODQ(MODE2)
          DO M3=1,MM3/MD3
            QQ(MODE3)=XQ3(M3)*XMODQ(MODE3)
            DO M4=1,MM4/MD4
              QQ(MODE4)=XQ4(M4)*XMODQ(MODE4)
              IF(IWHICH.GT.0)THEN
                DO I=1,NATOM
                  DO J=1,3
                    XX(I,J)=X0(I,J)+XL(I,MODE1,J)*
     1              QQ(MODE1)/SQRT(XM(I))
                    XX(I,J)=XX(I,J)+XL(I,MODE2,J)*QQ(MODE2)/
     1              SQRT(XM(I))
                    XX(I,J)=XX(I,J)+XL(I,MODE3,J)*QQ(MODE3)/
     1              SQRT(XM(I))
                    XX(I,J)=XX(I,J)+XL(I,MODE4,J)*QQ(MODE4)/
     1              SQRT(XM(I))
                  END DO
                END DO

!                WRITE(16,'(I5)') NATOM
!                WRITE(16,'(I4,F10.3,I4,F10.3,I4,F10.3,I4,F10.3)')
!     1          MODE1, QQ(MODE1), MODE2, QQ(MODE2), MODE3, QQ(MODE3), 
!     2          MODE4, QQ(MODE4)
!                WRITE(16,'(A,3F15.8)') 'H',XX( 1,:)*0.5291772083
!                WRITE(16,'(A,3F15.8)') 'H',XX( 2,:)*0.5291772083
!                WRITE(16,'(A,3F15.8)') 'H',XX( 3,:)*0.5291772083
!                WRITE(16,'(A,3F15.8)') 'H',XX( 4,:)*0.5291772083
!                WRITE(16,'(A,3F15.8)') 'O',XX( 5,:)*0.5291772083
!                WRITE(16,'(A,3F15.8)') 'O',XX( 6,:)*0.5291772083
!                WRITE(16,'(A,3F15.8)') 'O',XX( 7,:)*0.5291772083
!                WRITE(16,'(A,3F15.8)') 'O',XX( 8,:)*0.5291772083
!                WRITE(16,'(A,3F15.8)') 'C',XX( 9,:)*0.5291772083
!                WRITE(16,'(A,3F15.8)') 'C',XX(10,:)*0.5291772083

                CALL GETPOT(VDP,NATOM,XX,RR)
              ELSE
                IF(IWHICH.EQ.0)THEN
                  CALL GETPT4(VDP,NPOT,IPOT,JPOT,CPOT,NMODE,QQ)
                ELSE
                  IF(MOLINC.EQ.0)
     1            CALL GETQPT(VDP,NMODE,QQ,XTANPM)
                  IF(MOLINC.LT.0)
     1            CALL GETQP4(VDP,DUMMY,NMODE,QQ,NP1,CP1,VP1,DP1,
     2            NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,NP3,
     3            CP3,VP3,DP3A,DP3B,DP3C,NTOT3,MAX3,NP4,CP4,VP4,DP4A,
     4            DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,INDL,INDN)
                END IF
              END IF
C**INTRINSIC
C             IF(IND.NE.0)THEN
                CALL SET74(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,VDP,M1,
     1          M2,M3,M4)
C             ELSE
C               IF(JCOUPL.GE.0)THEN
C                 V(M4,M3,M2,M1)=VDP
C               ELSE
C                 VR(M4,M3,M2,M1)=VDP
C               END IF
C             END IF
              IF(VDP.LT.VMIN.AND.MAXCHK(4).GT.0)THEN
                WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2,
     1          MODE3,MODE4
                WRITE(IOUT,*)'M1,M2,M3,M4 ',M1,M2,M3,M4
                WRITE(IOUT,*)'Q1,Q2,Q3,Q4 ',XQ1(M1),XQ2(M2),XQ3(M3),
     1          XQ4(M4)
                WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
                WRITE(IOUT,*)'*****************************'
                WRITE(IOUT,*)
              END IF
            END DO
          END DO
        END DO
      END DO
C******************************************************************
      IF(MODE1.EQ.MODCHK.OR.MODE2.EQ.MODCHK.OR.MODE3.EQ.MODCHK.OR.
     1MODE4.EQ.MODCHK)THEN
        IF(MODE1.EQ.MODCHK)THEN
          MX1=MM1/2
          MX2=MM2/MD2
          MX3=MM3/MD3
          MX4=MM4/MD4
          MDD1=MD1
        END IF
        IF(MODE2.EQ.MODCHK)THEN
          MX1=MM2/2
          MX2=MM1/MD1
          MX3=MM3/MD3
          MX4=MM4/MD4
          MDD1=MD2
        END IF
        IF(MODE3.EQ.MODCHK)THEN
          MX1=MM3/2
          MX2=MM1/MD1
          MX3=MM2/MD2
          MX4=MM4/MD4
          MDD1=MD3
        END IF
        IF(MODE4.EQ.MODCHK)THEN
          MX1=MM4/2
          MX2=MM1/MD1
          MX3=MM2/MD2
          MX4=MM3/MD3
          MDD1=MD4
        END IF
        IF(MAXCHK(4).GT.0)THEN
          WRITE(IOUT,*)'START GRID INSPECTION FOR MODE ',MODCHK
        ELSE
          WRITE(IOUT,*)'START HOLE SEARCH FOR MODE ',MODCHK
        END IF
        DO M2=1,MX2
          DO M3=1,MX3
            DO M4=1,MX4
              IF(MODE1.EQ.MODCHK)THEN
                MZ2=M2
                MZ3=M3
                MZ4=M4
              END IF
              IF(MODE2.EQ.MODCHK)THEN
                MZ1=M2
                MZ3=M3
                MZ4=M4
              END IF
              IF(MODE3.EQ.MODCHK)THEN
                MZ1=M2
                MZ2=M3
                MZ4=M4
              END IF
              IF(MODE4.EQ.MODCHK)THEN
                MZ1=M2
                MZ2=M3
                MZ3=M4
              END IF
              IF(MAXCHK(4).LT.0)THEN
                VLAST=-1.0D+20
                MIN=0
                GRAD=0
                GRADDF=1
                GRDFDF=0
                DO M1=MX1,1,-1
                  IF(MODE1.EQ.MODCHK)MZ1=M1
                  IF(MODE2.EQ.MODCHK)MZ2=M1
                  IF(MODE3.EQ.MODCHK)MZ3=M1
                  IF(MODE4.EQ.MODCHK)MZ4=M1
                  VDP=VFUN4(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1            MZ1,MZ2,MZ3,MZ4,VMIN,WAVENM)/WAVENM+VMIN
                  GRADPR=GRAD
                  GRDFPR=GRADDF
                  IF(M1.NE.MX1)THEN
                    IF(MODE1.EQ.MODCHK)
     1              GRAD=WAVENM*(VDP-VLAST)/(XQ1(M1)-XQ1(M1+1))
                    IF(MODE2.EQ.MODCHK)
     1              GRAD=WAVENM*(VDP-VLAST)/(XQ2(M1)-XQ2(M1+1))
                    IF(MODE3.EQ.MODCHK)
     1              GRAD=WAVENM*(VDP-VLAST)/(XQ3(M1)-XQ3(M1+1))
                    IF(MODE4.EQ.MODCHK)
     1              GRAD=WAVENM*(VDP-VLAST)/(XQ4(M1)-XQ4(M1+1))
                    GRADDF=(GRAD-GRADPR)/GRAD
                    GRDFDF=(GRADDF-GRDFPR)
                  END IF
                  IF(VDP.GT.VLAST.OR.MIN.EQ.0)THEN
                    IF(VDP.GT.VLAST.AND.VLAST.GT.-1.0D+20)MIN=1
                    IF(VDP.LT.VLAST.AND.GRDFDF.GT.0)MIN=-1
                    VDIFF=VDP-VLAST
                    VLAST=VDP
                    CALL SET74(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1              VDP,MZ1,MZ2,MZ3,MZ4)
C                   IF(VDP.LT.VMIN)THEN
C                     WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2,
C    1                MODE3,MODE4
C                     WRITE(IOUT,*)'M1,M2,M3,M4 ',MZ1,MZ2,MZ3,MZ4
C                     WRITE(IOUT,*)'Q1,Q2,Q3,Q4 ',XQ1(MZ1),XQ2(MZ2),
C    1                XQ3(MZ3),XQ4(MZ4)
C                     WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
C                     WRITE(IOUT,*)'*****************************'
C                     WRITE(IOUT,*)
C                   END IF
                  ELSE
                    CALL SET74(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1              VLAST+VDIFF,MZ1,MZ2,MZ3,MZ4)
                    VLAST=VLAST+VDIFF
C                   IF(VLAST.LT.VMIN)THEN
C                     WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2,
C    1                MODE3,MODE4
C                     WRITE(IOUT,*)'M1,M2,M3,M4 ',MZ1,MZ2,MZ3,MZ4
C                     WRITE(IOUT,*)'Q1,Q2,Q3,Q4 ',XQ1(MZ1),XQ2(MZ2),
C    1                XQ3(MZ3),XQ4(MZ4)
C                     WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
C                     WRITE(IOUT,*)'*****************************'
C                     WRITE(IOUT,*)
C                   END IF
                  END IF
                END DO
                IF(MDD1.EQ.2)GO TO 1000
                VLAST=-1.0D+20
                MIN=0
                GRAD=0
                GRADDF=1
                GRDFDF=0
                DO M1=MX1+1,2*MX1
                  IF(MODE1.EQ.MODCHK)MZ1=M1
                  IF(MODE2.EQ.MODCHK)MZ2=M1
                  IF(MODE3.EQ.MODCHK)MZ3=M1
                  IF(MODE4.EQ.MODCHK)MZ4=M1
                  VDP=VFUN4(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1            MZ1,MZ2,MZ3,MZ4,VMIN,WAVENM)/WAVENM+VMIN
                  GRADPR=GRAD
                  GRDFPR=GRADDF
                  IF(M1.NE.MX1+1)THEN
                    IF(MODE1.EQ.MODCHK)
     1              GRAD=WAVENM*(VDP-VLAST)/(XQ1(M1)-XQ1(M1-1))
                    IF(MODE2.EQ.MODCHK)
     1              GRAD=WAVENM*(VDP-VLAST)/(XQ2(M1)-XQ2(M1-1))
                    IF(MODE3.EQ.MODCHK)
     1              GRAD=WAVENM*(VDP-VLAST)/(XQ3(M1)-XQ3(M1-1))
                    IF(MODE4.EQ.MODCHK)
     1              GRAD=WAVENM*(VDP-VLAST)/(XQ4(M1)-XQ4(M1-1))
                    GRADDF=(GRAD-GRADPR)/GRAD
                    GRDFDF=(GRADDF-GRDFPR)
                  END IF
                  IF(VDP.GT.VLAST.OR.MIN.EQ.0)THEN
                    IF(VDP.GT.VLAST.AND.VLAST.GT.-1.0D+20)MIN=1
                    IF(VDP.LT.VLAST.AND.GRDFDF.GT.0)MIN=-1
                    VDIFF=VDP-VLAST
                    VLAST=VDP
                    CALL SET74(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1              VDP,MZ1,MZ2,MZ3,MZ4)
C                   IF(VDP.LT.VMIN)THEN
C                     WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2,
C    1                MODE3,MODE4
C                     WRITE(IOUT,*)'M1,M2,M3,M4 ',MZ1,MZ2,MZ3,MZ4
C                     WRITE(IOUT,*)'Q1,Q2,Q3,Q4 ',XQ1(MZ1),XQ2(MZ2),
C    1                XQ3(MZ3),XQ4(MZ4)
C                     WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
C                     WRITE(IOUT,*)'*****************************'
C                     WRITE(IOUT,*)
C                   END IF
                  ELSE
                    CALL SET74(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1              VLAST+VDIFF,MZ1,MZ2,MZ3,MZ4)
                    VLAST=VLAST+VDIFF
C                   IF(VLAST.LT.VMIN)THEN
C                     WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2,
C    1                MODE3,MODE4
C                     WRITE(IOUT,*)'M1,M2,M3,M4 ',MZ1,MZ2,MZ3,MZ4
C                     WRITE(IOUT,*)'Q1,Q2,Q3,Q4 ',XQ1(MZ1),XQ2(MZ2),
C    1                XQ3(MZ3),XQ4(MZ4)
C                     WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
C                     WRITE(IOUT,*)'*****************************'
C                     WRITE(IOUT,*)
C                   END IF
                  END IF
                END DO
1000            CONTINUE
              END IF
              IF(MODE1.EQ.MODCHK)THEN
                MARK=0
                DO M1=1,MM1/MD1
                  VDP=VFUN4(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1            M1,MZ2,MZ3,MZ4,VMIN,WAVENM)
                  IF(VDP.LT.0.AND.MAXCHK(4).LT.0)THEN
                    MARK=1
                    WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1              MODE1,MODE2,MODE3,MODE4
                    WRITE(IOUT,*)'M1,M2,M3,M4 ',M1,MZ2,MZ3,MZ4
                    WRITE(IOUT,*)'Q1,Q2,Q3,Q4 ',XQ1(M1),XQ2(MZ2),
     1              XQ3(MZ3),XQ4(MZ4)
                    WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                    WRITE(IOUT,*)'*****************************'
                    WRITE(IOUT,*)
                  END IF
                END DO
                IF(MAXCHK(4).GT.0.OR.MARK.NE.0)THEN
                  WRITE(IOUT,*)'MODES',MODE2,MODE3,MODE4,XQ2(MZ2),
     1            XQ3(MZ3),XQ4(MZ4)
                  WRITE(IOUT,*)'MODE',MODE1,(XQ1(M1),M1=1,MM1/MD1)
                  WRITE(IOUT,*)'V',(VFUN4(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,
     1            MM4/MD4,M1,MZ2,MZ3,MZ4,VMIN,WAVENM),M1=1,MM1/MD1)
                END IF
              END IF
              IF(MODE2.EQ.MODCHK)THEN
                MARK=0
                DO M1=1,MM2/MD2
                  VDP=VFUN4(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1            MZ1,M1,MZ3,MZ4,VMIN,WAVENM)
                  IF(VDP.LT.0.AND.MAXCHK(4).LT.0)THEN
                    MARK=1
                    WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1              MODE1,MODE2,MODE3,MODE4
                    WRITE(IOUT,*)'M1,M2,M3,M4 ',MZ1,M1,MZ3,MZ4
                    WRITE(IOUT,*)'Q1,Q2,Q3,Q4 ',XQ1(MZ1),XQ2(M1),
     1              XQ3(MZ3),XQ4(MZ4)
                    WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                    WRITE(IOUT,*)'*****************************'
                    WRITE(IOUT,*)
                  END IF
                END DO
                IF(MAXCHK(4).GT.0.OR.MARK.NE.0)THEN
                  WRITE(IOUT,*)'MODES',MODE1,MODE3,MODE4,XQ1(MZ1),
     1            XQ3(MZ3),XQ4(MZ4)
                  WRITE(IOUT,*)'MODE',MODE2,(XQ2(M1),M1=1,MM2/MD2)
                  WRITE(IOUT,*)'V',(VFUN4(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,
     1            MM4/MD4,MZ1,M1,MZ3,MZ4,VMIN,WAVENM),M1=1,MM2/MD2)
                END IF
              END IF
              IF(MODE3.EQ.MODCHK)THEN
                MARK=0
                DO M1=1,MM3/MD3
                  VDP=VFUN4(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1            MZ1,MZ2,M1,MZ4,VMIN,WAVENM)
                  IF(VDP.LT.0.AND.MAXCHK(4).LT.0)THEN
                    MARK=1
                    WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1              MODE1,MODE2,MODE3,MODE4
                    WRITE(IOUT,*)'M1,M2,M3,M4 ',MZ1,MZ2,M1,MZ4
                    WRITE(IOUT,*)'Q1,Q2,Q3,Q4 ',XQ1(MZ1),XQ2(MZ2),
     1              XQ3(M1),XQ4(MZ4)
                    WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                    WRITE(IOUT,*)'*****************************'
                    WRITE(IOUT,*)
                  END IF
                END DO
                IF(MAXCHK(4).GT.0.OR.MARK.NE.0)THEN
                  WRITE(IOUT,*)'MODES',MODE1,MODE2,MODE4,XQ1(MZ1),
     1            XQ2(MZ2),XQ4(MZ4)
                  WRITE(IOUT,*)'MODE',MODE3,(XQ3(M1),M1=1,MM3/MD3)
                  WRITE(IOUT,*)'V',(VFUN4(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,
     1            MM4/MD4,MZ1,MZ2,M1,MZ4,VMIN,WAVENM),M1=1,MM3/MD3)
                END IF
              END IF
              IF(MODE4.EQ.MODCHK)THEN
                MARK=0
                DO M1=1,MM4/MD4
                  VDP=VFUN4(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1            MZ1,MZ2,MZ3,M1,VMIN,WAVENM)
                  IF(VDP.LT.0.AND.MAXCHK(4).LT.0)THEN
                    MARK=1
                    WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1              MODE1,MODE2,MODE3,MODE4
                    WRITE(IOUT,*)'M1,M2,M3,M4 ',MZ1,MZ2,MZ3,M1
                    WRITE(IOUT,*)'Q1,Q2,Q3,Q4 ',XQ1(MZ1),XQ2(MZ2),
     1              XQ3(MZ3),XQ4(M1)
                    WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                    WRITE(IOUT,*)'*****************************'
                    WRITE(IOUT,*)
                  END IF
                END DO
                IF(MAXCHK(4).GT.0.OR.MARK.NE.0)THEN
                  WRITE(IOUT,*)'MODES',MODE1,MODE2,MODE3,XQ1(MZ1),
     1            XQ2(MZ2),XQ3(MZ3)
                  WRITE(IOUT,*)'MODE',MODE4,(XQ4(M1),M1=1,MM4/MD4)
                  WRITE(IOUT,*)'V',(VFUN4(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,
     1            MM4/MD4,MZ1,MZ2,MZ3,M1,VMIN,WAVENM),M1=1,MM4/MD4)
                END IF
              END IF
            END DO
          END DO
        END DO
        IF(MAXCHK(4).GT.0)THEN
          WRITE(IOUT,*)'END GRID INSPECTION FOR MODE ',MODCHK
        ELSE
          WRITE(IOUT,*)'END HOLE SEARCH FOR MODE ',MODCHK
        END IF
        WRITE(IOUT,*)
      END IF

C**INTRINSIC
      IF(MOLINC.LE.0)GO TO 9999
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        K11=K1-1
        DO K2=1,K11
          CALL INTARR(NBF,MBF,K2,I2,J2,L2)
          K22=K2-1
          DO K3=1,K22
            CALL INTARR(NBF,MBF,K3,I3,J3,L3)
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3)THEN
              CALL DUMPT3(XQ1,XQ2,XQ3,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,
     1        MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,1)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE4)THEN
              CALL DUMPT3(XQ1,XQ2,XQ4,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,
     1        MD1,MODE2,MM2,MD2,MODE4,MM4,MD4,2)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4)THEN
              CALL DUMPT3(XQ1,XQ3,XQ4,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,
     1        MD1,MODE3,MM3,MD3,MODE4,MM4,MD4,3)
            END IF
            IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4)THEN
              CALL DUMPT3(XQ2,XQ3,XQ4,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE2,MM2,
     1        MD2,MODE3,MM3,MD3,MODE4,MM4,MD4,4)
            END IF
          END DO
        END DO
      END DO
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        K11=K1-1
        DO K2=1,K11
          CALL INTARR(NBF,MBF,K2,I2,J2,L2)
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE2)THEN
            CALL DUMPT2(XQ1,XQ2,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE1,MM1,MD1,MODE2,
     1      MM2,MD2,1)
          END IF
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE3)THEN
            CALL DUMPT2(XQ1,XQ3,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE1,MM1,MD1,MODE3,
     1      MM3,MD3,2)
          END IF
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE4)THEN
            CALL DUMPT2(XQ1,XQ4,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE1,MM1,MD1,MODE4,
     1      MM4,MD4,3)
          END IF
          IF(K1.EQ.MODE2.AND.K2.EQ.MODE3)THEN
            CALL DUMPT2(XQ2,XQ3,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE2,MM2,MD2,MODE3,
     1      MM3,MD3,4)
          END IF
          IF(K1.EQ.MODE2.AND.K2.EQ.MODE4)THEN
            CALL DUMPT2(XQ2,XQ4,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE2,MM2,MD2,MODE4,
     1      MM4,MD4,5)
          END IF
          IF(K1.EQ.MODE3.AND.K2.EQ.MODE4)THEN
            CALL DUMPT2(XQ3,XQ4,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE3,MM3,MD3,MODE4,
     1      MM4,MD4,6)
          END IF
        END DO
      END DO
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        IF(K1.EQ.MODE1)THEN
          CALL DUMPT1(XQ1,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,K1,V1,V1R,0,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2    XMODQ)
          CALL FIX71(V1,V1R,J1,VP1,MMX1,K1,MODE1,MM1,MD1,1)
        END IF
        IF(K1.EQ.MODE2)THEN
          CALL DUMPT1(XQ2,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,K1,V1,V1R,0,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2    XMODQ)
          CALL FIX71(V1,V1R,J1,VP1,MMX1,K1,MODE2,MM2,MD2,2)
        END IF
        IF(K1.EQ.MODE3)THEN
          CALL DUMPT1(XQ3,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,K1,V1,V1R,0,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2    XMODQ)
          CALL FIX71(V1,V1R,J1,VP1,MMX1,K1,MODE3,MM3,MD3,3)
        END IF
        IF(K1.EQ.MODE4)THEN
          CALL DUMPT1(XQ4,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,K1,V1,V1R,0,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2    XMODQ)
          CALL FIX71(V1,V1R,J1,VP1,MMX1,K1,MODE4,MM4,MD4,4)
        END IF
      END DO
      DO M1=1,MM1/MD1
        X1=VP1(M1,1)
        DO M2=1,MM2/MD2
          X2=VP1(M2,2)
          X12=VP2(M2,M1,1)
          DO M3=1,MM3/MD3
            X3=VP1(M3,3)
            X13=VP2(M3,M1,2)
            X23=VP2(M3,M2,4)
            X123=VP3(M3,M2,M1,1)
            DO M4=1,MM4/MD4
              X4=VP1(M4,4)
              X14=VP2(M4,M1,3)
              X24=VP2(M4,M2,5)
              X34=VP2(M4,M3,6)
              X124=VP3(M4,M2,M1,2)
              X134=VP3(M4,M3,M1,3)
              X234=VP3(M4,M3,M2,4)
              CALL GET74(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,VDP,M1,
     1        M2,M3,M4)
              VDP=VDP-X1-X2-X3-X4-X12-X13-X14-X23-X24-X34-X123-X124-
     1        X134-X234
              IF(JCOUPL.GE.0)THEN
                VDP=VDP-VP
              ELSE
                VDP=VDP-VPR
              END IF
              CALL SET74(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,VDP,M1,
     1        M2,M3,M4)
            END DO
          END DO
        END DO
      END DO
9999  CONTINUE
      IF(IND.NE.0)THEN
        CALL OUT74(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4)
      END IF
      CALL FLUSH(I74)
      RETURN
      END
C****************************************************************
      DOUBLE PRECISION FUNCTION VFUN4(V,VR,MM1,MM2,MM3,MM4,M1,M2,M3,M4,
     1VMIN,WAVENM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION V(MM4,MM3,MM2,MM1)
      REAL*4 VR(MM4,MM3,MM2,MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GT.0)THEN
        VFUN4=(V(M4,M3,M2,M1)-VMIN)*WAVENM
      ELSE
        VFUN4=(VR(M4,M3,M2,M1)-VMIN)*WAVENM
      END IF
      RETURN
      END
C****************************************************************
      SUBROUTINE DUMVT4(XQ1,XQ2,XQ3,XQ4,MM1,MM2,MM3,MM4,NMODE,NATOM,QQ,
     1RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,MODE1,MODE2,MODE3,MODE4,V,VR,
     2XQTAU,VT0,VT1,VT2,VT3,VT4,KVP,IND,MODINT,NBF,MBF,V1,V1R,V2,V2R,
     3V3,V3R,MMTAU,XMODQ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR,ABINIT
C**INTRINSIC
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM4,MM3,MM2,MM1),VT0(MMTAU),VT1(KVP,MMTAU,4),
     1VT2(KVP,KVP,MMTAU,6),VT3(KVP,KVP,KVP,MMTAU,4),
     2VT4(KVP,KVP,KVP,KVP,MMTAU),V1(KVP,MMTAU),V2(KVP,KVP,MMTAU),
     3V3(KVP,KVP,KVP,MMTAU)
      REAL*4 VR(MM4,MM3,MM2,MM1),V1R(KVP,MMTAU),V2R(KVP,KVP,MMTAU),
     1V3R(KVP,KVP,KVP,MMTAU)
C**TEMPORARY (DIMENSION)
      DIMENSION Q(100),DELTA(100),XQTAU(1),NBF(1),MBF(1)
      DIMENSION MODINT(NMODE),XMODQ(NMODE)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),XQ4(MM4)
      DIMENSION RR(NATOM,NATOM),QQ(NMODE)
      DIMENSION X0(NATOM,3),XM(NATOM)
CCCC  DIMENSION XX(NATOM,3,362),XL(NATOM,NMODE,3,362)
      DIMENSION XX(NATOM,3,722),XL(NATOM,NMODE,3,722)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT)
      COMMON/WHICH/IWHICH
      COMMON/TORS/QTAU
      COMMON/ABINIT/ABINIT
      COMMON/TYPE/LINEAR
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
C**ASSUME STARTING VALUE TAU: INIT
C**ASSUME NEXT VALUE TAU: INIT+INCTAU
C**ITAU=2 EQUIVALENT TO ITAU=722
      COMMON/REACTN/IREACT,MMXTAU,INIT,INCTAU
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      IF(N1.EQ.NT.AND.MDT.GT.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.GT.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.GT.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.GT.1)MD4=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.GT.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.GT.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.GT.1)MD4=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.GT.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.GT.1)MD4=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.GT.1)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.GT.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.GT.1)MD4=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.GT.1)MD4=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.GT.1)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.GT.1)MD4=1
C**LOOP ROUND TAU
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
          QTAU=XQTAU(MTAU)
        ELSE
          QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
          DELTA(4)=+QTAU
          DELTA(5)=-QTAU
        END IF
        DO K=1,NMODE
          Q(K)=0
          QQ(K)=0
        END DO
        DO M1=1,MM1/MD1
          QQ(MODE1)=XQ1(M1)*XMODQ(MODE1)
          Q(MODE1)=QQ(MODE1)
          DO M2=1,MM2/MD2
            QQ(MODE2)=XQ2(M2)*XMODQ(MODE2)
            Q(MODE2)=QQ(MODE2)
            DO M3=1,MM3/MD3
              QQ(MODE3)=XQ3(M3)*XMODQ(MODE3)
              Q(MODE3)=QQ(MODE3)
              DO M4=1,MM4/MD4
                QQ(MODE4)=XQ4(M4)*XMODQ(MODE4)
                Q(MODE4)=QQ(MODE4)
                IF(IWHICH.NE.0)THEN
                  IF(LINEAR)THEN
C**GET Q4X,Q5X, Q4Y,Q5Y FROM Q4,Q5,DELTA4,DELTA5
                    DO K=NONLIN+1,NONLIN+LINBND
                      QQ(K)=Q(K)*DCOS(DELTA(K))
                      QQ(K+LINBND)=Q(K)*DSIN(DELTA(K))
                    END DO
                    DO I=1,NATOM
                      DO J=1,3
                        XX(I,J,1)=X0(I,J)
                        DO K=1,NMODE
                          XX(I,J,1)=XX(I,J,1)+XL(I,K,J,1)*QQ(K)/
     1                    SQRT(XM(I))
                        END DO
                      END DO
                    END DO
                  ELSE
                    DO I=1,NATOM
                      DO J=1,3
                        XX(I,J,1)=(XX(I,J,ITAU)+XL(I,MODE1,J,ITAU)*
     1                  QQ(MODE1))/SQRT(XM(I))
                        XX(I,J,1)=XX(I,J,1)+XL(I,MODE2,J,ITAU)*
     1                  QQ(MODE2)/SQRT(XM(I))
                        XX(I,J,1)=XX(I,J,1)+XL(I,MODE3,J,ITAU)*
     1                  QQ(MODE3)/SQRT(XM(I))
                        XX(I,J,1)=XX(I,J,1)+XL(I,MODE4,J,ITAU)*
     1                  QQ(MODE4)/SQRT(XM(I))
                      END DO
                    END DO
                  END IF
                  IF(ABINIT)THEN
                    CALL GETAPT(VDP,NATOM,XX,RR,QQ,NMODE,ITAU)
                  ELSE
                    CALL GETPOT(VDP,NATOM,XX,RR)
                  END IF
                ELSE
                  CALL GETPT4(VDP,NPOT,IPOT,JPOT,CPOT,NMODE,
     1            QQ)
                END IF
C**INTRINSIC
                IF(MOLINC.LE.0)THEN
                  CALL SET74(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,VDP,
     1            M1,M2,M3,M4)
                ELSE
                  VT4(M4,M3,M2,M1,MTAU)=VDP
                END IF
              END DO
            END DO
          END DO
        END DO
        IF(MOLINC.LE.0)
     1  CALL OUT74(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4)
      END DO

C**INTRINSIC
      IF(MOLINC.LE.0)GO TO 9999
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        K11=K1-1
        DO K2=1,K11
          CALL INTARR(NBF,MBF,K2,I2,J2,L2)
          K22=K2-1
          DO K3=1,K22
            CALL INTARR(NBF,MBF,K3,I3,J3,L3)
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3)THEN
              CALL DUMVT3(XQ1,XQ2,XQ3,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,XQTAU,VT0,
     2        VT1,VT2,VT3(1,1,1,1,1),KVP,0,MODINT,NBF,MBF,V1,V1R,V2,
     3        V2R,MMTAU,XMODQ)
              CALL VFIX73(V3,V3R,J1,J2,J3,VT3,KVP,MMTAU,MDT,MM1,
     1        MD1,MM2,MD2,MM3,MD3,1)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE4)THEN
              CALL DUMVT3(XQ1,XQ2,XQ4,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,XQTAU,VT0,
     2        VT1,VT2,VT3(1,1,1,1,2),KVP,0,MODINT,NBF,MBF,V1,V1R,V2,
     3        V2R,MMTAU,XMODQ)
              CALL VFIX73(V3,V3R,J1,J2,J3,VT3,KVP,MMTAU,MDT,MM1,
     1        MD1,MM2,MD2,MM4,MD4,2)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4)THEN
              CALL DUMVT3(XQ1,XQ3,XQ4,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,XQTAU,VT0,
     2        VT1,VT2,VT3(1,1,1,1,3),KVP,0,MODINT,NBF,MBF,V1,V1R,V2,
     3        V2R,MMTAU,XMODQ)
              CALL VFIX73(V3,V3R,J1,J2,J3,VT3,KVP,MMTAU,MDT,MM1,
     1        MD1,MM3,MD3,MM4,MD4,3)
            END IF
            IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4)THEN
              CALL DUMVT3(XQ2,XQ3,XQ4,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,XQTAU,VT0,
     2        VT1,VT2,VT3(1,1,1,1,4),KVP,0,MODINT,NBF,MBF,V1,V1R,V2,
     3        V2R,MMTAU,XMODQ)
              CALL VFIX73(V3,V3R,J1,J2,J3,VT3,KVP,MMTAU,MDT,MM2,
     1        MD2,MM3,MD3,MM4,MD4,4)
            END IF
          END DO
        END DO
      END DO
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        K11=K1-1
        DO K2=1,K11
          CALL INTARR(NBF,MBF,K2,I2,J2,L2)
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE2)THEN
            CALL DUMVT2(XQ1,XQ2,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,XQTAU,VT0,VT1,
     2      VT2(1,1,1,1),KVP,0,MODINT,NBF,MBF,V1,V1R,MMTAU,XMODQ)
            CALL VFIX72(V2,V2R,J1,J2,VT2,KVP,MMTAU,MDT,MM1,MD1,
     1      MM2,MD2,1)
          END IF
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE3)THEN
            CALL DUMVT2(XQ1,XQ3,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,XQTAU,VT0,VT1,
     2      VT2(1,1,1,2),KVP,0,MODINT,NBF,MBF,V1,V1R,MMTAU,XMODQ)
            CALL VFIX72(V2,V2R,J1,J2,VT2,KVP,MMTAU,MDT,MM1,MD1,
     1      MM3,MD3,2)
          END IF
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE4)THEN
            CALL DUMVT2(XQ1,XQ4,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,XQTAU,VT0,VT1,
     2      VT2(1,1,1,3),KVP,0,MODINT,NBF,MBF,V1,V1R,MMTAU,XMODQ)
            CALL VFIX72(V2,V2R,J1,J2,VT2,KVP,MMTAU,MDT,MM1,MD1,
     1      MM4,MD4,3)
          END IF
          IF(K1.EQ.MODE2.AND.K2.EQ.MODE3)THEN
            CALL DUMVT2(XQ2,XQ3,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,XQTAU,VT0,VT1,
     2      VT2(1,1,1,4),KVP,0,MODINT,NBF,MBF,V1,V1R,MMTAU,XMODQ)
            CALL VFIX72(V2,V2R,J1,J2,VT2,KVP,MMTAU,MDT,MM2,MD2,
     1      MM3,MD3,4)
          END IF
          IF(K1.EQ.MODE2.AND.K2.EQ.MODE4)THEN
            CALL DUMVT2(XQ2,XQ4,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,XQTAU,VT0,VT1,
     2      VT2(1,1,1,5),KVP,0,MODINT,NBF,MBF,V1,V1R,MMTAU,XMODQ)
            CALL VFIX72(V2,V2R,J1,J2,VT2,KVP,MMTAU,MDT,MM2,MD2,
     1      MM4,MD4,5)
          END IF
          IF(K1.EQ.MODE3.AND.K2.EQ.MODE4)THEN
            CALL DUMVT2(XQ3,XQ4,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,XQTAU,VT0,VT1,
     2      VT2(1,1,1,6),KVP,0,MODINT,NBF,MBF,V1,V1R,MMTAU,XMODQ)
            CALL VFIX72(V2,V2R,J1,J2,VT2,KVP,MMTAU,MDT,MM3,MD3,
     1      MM4,MD4,6)
          END IF
        END DO
      END DO
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        IF(K1.EQ.MODE1)THEN
          CALL DUMVT1(XQ1,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,MODE1,V1,V1R,XQTAU,VT0,VT1(1,1,1),KVP,0,MODINT,
     2    XMODQ)
          CALL VFIX71(V1,V1R,J1,VT1,KVP,MMTAU,MDT,MM1,MD1,1)
        END IF
        IF(K1.EQ.MODE2)THEN
          CALL DUMVT1(XQ2,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,MODE2,V1,V1R,XQTAU,VT0,VT1(1,1,2),KVP,0,MODINT,
     2    XMODQ)
          CALL VFIX71(V1,V1R,J1,VT1,KVP,MMTAU,MDT,MM2,MD2,2)
        END IF
        IF(K1.EQ.MODE3)THEN
          CALL DUMVT1(XQ3,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,MODE3,V1,V1R,XQTAU,VT0,VT1(1,1,3),KVP,0,MODINT,
     2    XMODQ)
          CALL VFIX71(V1,V1R,J1,VT1,KVP,MMTAU,MDT,MM3,MD3,3)
        END IF
        IF(K1.EQ.MODE4)THEN
          CALL DUMVT1(XQ4,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,MODE4,V1,V1R,XQTAU,VT0,VT1(1,1,4),KVP,0,MODINT,
     2    XMODQ)
          CALL VFIX71(V1,V1R,J1,VT1,KVP,MMTAU,MDT,MM4,MD4,4)
        END IF
      END DO
      CALL DUMVT0(NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1JPOT,CPOT,XQTAU,VT0,0,MODINT,XMODQ)
C**LOOP ROUND TAU
      DO MTAU=1,MMTAU/MDT
        X=VT0(MTAU)
        DO M1=1,MM1/MD1
          X1=VT1(M1,MTAU,1)
          DO M2=1,MM2/MD2
            X2=VT1(M2,MTAU,2)
            X12=VT2(M2,M1,MTAU,1)
            DO M3=1,MM3/MD3
              X3=VT1(M3,MTAU,3)
              X13=VT2(M3,M1,MTAU,2)
              X23=VT2(M3,M2,MTAU,4)
              X123=VT3(M3,M2,M1,MTAU,1)
              DO M4=1,MM4/MD4
                X4=VT1(M4,MTAU,4)
                X14=VT2(M4,M1,MTAU,3)
                X24=VT2(M4,M2,MTAU,5)
                X34=VT2(M4,M3,MTAU,6)
                X124=VT3(M4,M2,M1,MTAU,2)
                X134=VT3(M4,M3,M1,MTAU,3)
                X234=VT3(M4,M3,M2,MTAU,4)
                VDP=VT4(M4,M3,M2,M1,MTAU)-X-X1-X2-X3-X4-X12-X13-X14-
     1          X23-X24-X34-X123-X124-X134-X234
                CALL SET74(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,VDP,
     1          M1,M2,M3,M4)
              END DO
            END DO
          END DO
        END DO
        CALL OUT74(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4)
      END DO
9999  CONTINUE
      CALL FLUSH(74)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DUMCR4(XQ1,XQ2,XQ3,XQ4,MM1,MM2,MM3,MM4,NMODE,NATOM,QQ,
     1XZ,AB,B,AA,BB,XX,X0,XL,XM,MODE1,MODE2,MODE3,MODE4,V,VR,VM,VMR,
     2JMAX,IND,MODINT,NBF,MBF,VP1,VP2,VP3,V1,V1R,V2,V2R,V3,V3R,MMX1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM4,MM3,MM2,MM1,15),VM(MM4,MM3,MM2,MM1,19),V1(MMX1),
     1V2(MMX1,MMX1,6),V3(MMX1,MMX1,MMX1,10)
      REAL*4 VR(MM4,MM3,MM2,MM1,15),VMR(MM4,MM3,MM2,MM1,19),V1R(MMX1),
     1V2R(MMX1,MMX1,6),V3R(MMX1,MMX1,MMX1,10)
      REAL*8 V0,VM0(6)
      REAL*4 V0R,VM0R(6)
      LOGICAL LINEAR
      DIMENSION VP1(MMX1,4),VP2(MMX1,MMX1,6,6),VP3(MMX1,MMX1,MMX1,10,4)
      DIMENSION X12(6),X13(6),X14(6),X23(6),X24(6),X34(6)
      DIMENSION X123(10),X124(10),X134(10),X234(10)
      DIMENSION MODINT(NMODE),NBF(1),MBF(1)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),XQ4(MM4)
      DIMENSION QQ(NMODE),XZ(NMODE,NMODE,3)
      DIMENSION AB(NMODE,3),B(NMODE,NMODE),AA(NMODE,3,3),BB(NMODE)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      COMMON/MOMI/XK(3,3),XMU(3,3)
      COMMON/TYPE/LINEAR
      COMMON/JCORIO/JCORIO
      COMMON/WHICH/IWHICH
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/TORS/QTAU
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/FILASS/IOUT,INP
C**TEMPORARY (DIMENSIONS)
      COMMON/MULT/MULT(1000)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/MUREF/V0,VM0,V0R,VM0R
      JCORIO=JMAX
      MX=1
      MY=2
      MZ=3
      DO K=1,NMODE
        QQ(K)=0
        MULT(K)=0
      END DO
      MULT(MODE1)=1
      MULT(MODE2)=1
      MULT(MODE3)=1
      MULT(MODE4)=1
C**INTRINSIC
      IF(IND.NE.0)THEN
        MD1=MODINT(MODE1)
        MD2=MODINT(MODE2)
        MD3=MODINT(MODE3)
        MD4=MODINT(MODE4)
        DO I=1,NWSYM
          DO J=1,NSYM(I)
            IF(MODE1.EQ.ISYM(I,J))N1=I
            IF(MODE2.EQ.ISYM(I,J))N2=I
            IF(MODE3.EQ.ISYM(I,J))N3=I
            IF(MODE4.EQ.ISYM(I,J))N4=I
          END DO
        END DO
        IF(N1.EQ.N2)MD2=1
        IF(N1.EQ.N3)MD3=1
        IF(N1.EQ.N4)MD4=1
        IF(N2.EQ.N3)MD3=1
        IF(N2.EQ.N4)MD4=1
        IF(N3.EQ.N4)MD4=1
        N12=ISYMP(N1,N2)
        IF(N12.EQ.N3)MD3=1
        IF(N12.EQ.N4)MD4=1
        N13=ISYMP(N1,N3)
        IF(N13.EQ.N4)MD4=1
        N23=ISYMP(N2,N3)
        IF(N23.EQ.N4)MD4=1
        N123=ISYMP(N12,N3)
        IF(N123.EQ.N4)MD4=1
      ELSE
        MD1=1
        MD2=1
        MD3=1
        MD4=1
      END IF
      DO M1=1,MM1/MD1
        QQ(MODE1)=XQ1(M1)
        DO M2=1,MM2/MD2
          QQ(MODE2)=XQ2(M2)
          DO M3=1,MM3/MD3
            QQ(MODE3)=XQ3(M3)
            DO M4=1,MM4/MD4
              QQ(MODE4)=XQ4(M4)
              CALL CORIOL(NMODE,NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,ZZ)
              IF(JMAX.EQ.0)THEN
                IF(LINEAR)ZZ=0
C**INTRINSIC
C               IF(IND.NE.0)THEN
                  CALL SET84(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,B,BB,
     1            NMODE,ZZ,M1,M2,M3,M4,MODE1,MODE2,MODE3,MODE4)
C               ELSE
C                 V(M4,M3,M2,M1,1)=BB(MODE1)
C                 V(M4,M3,M2,M1,2)=BB(MODE2)
C                 V(M4,M3,M2,M1,3)=BB(MODE3)
C                 V(M4,M3,M2,M1,4)=BB(MODE4)
C                 V(M4,M3,M2,M1,5)=B(MODE1,MODE1)
C                 V(M4,M3,M2,M1,6)=B(MODE1,MODE2)
C                 V(M4,M3,M2,M1,7)=B(MODE1,MODE3)
C                 V(M4,M3,M2,M1,8)=B(MODE1,MODE4)
C                 V(M4,M3,M2,M1,9)=B(MODE2,MODE2)
C                 V(M4,M3,M2,M1,10)=B(MODE2,MODE3)
C                 V(M4,M3,M2,M1,11)=B(MODE2,MODE4)
C                 V(M4,M3,M2,M1,12)=B(MODE3,MODE3)
C                 V(M4,M3,M2,M1,13)=B(MODE3,MODE4)
C                 V(M4,M3,M2,M1,14)=B(MODE4,MODE4)
C                 V(M4,M3,M2,M1,15)=ZZ
C               END IF
              ELSE
                IF(.NOT.LINEAR)ZZ=0
                CALL SET94(VM,VMR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,AB,
     1          NMODE,ZZ,M1,M2,M3,M4,MODE1,MODE2,MODE3,MODE4)
C               IF(JCOUPC.GT.0)THEN
C                 VM(M4,M3,M2,M1,1)=XMU(MX,MX)/2
C                 VM(M4,M3,M2,M1,2)=XMU(MY,MY)/2
C                 VM(M4,M3,M2,M1,3)=XMU(MZ,MZ)/2
C                 VM(M4,M3,M2,M1,4)=XMU(MX,MZ)/2
C                 VM(M4,M3,M2,M1,5)=XMU(MY,MZ)/2
C                 VM(M4,M3,M2,M1,6)=XMU(MX,MY)/2
C                 VM(M4,M3,M2,M1,7)=XMU(MX,MX)*AB(MODE1,MX)+XMU(MY,MX)*
C    1            AB(MODE1,MY)+XMU(MZ,MX)*AB(MODE1,MZ)/2
C                 VM(M4,M3,M2,M1,8)=XMU(MX,MX)*AB(MODE2,MX)+XMU(MY,MX)*
C    1            AB(MODE2,MY)+XMU(MZ,MX)*AB(MODE2,MZ)/2
C                 VM(M4,M3,M2,M1,9)=XMU(MX,MX)*AB(MODE3,MX)+XMU(MY,MX)*
C    1            AB(MODE3,MY)+XMU(MZ,MX)*AB(MODE3,MZ)/2
C                 VM(M4,M3,M2,M1,10)=XMU(MX,MX)*AB(MODE4,MX)+XMU(MY,MX)
C    1            *AB(MODE4,MY)+XMU(MZ,MX)*AB(MODE4,MZ)/2
C                 VM(M4,M3,M2,M1,11)=XMU(MX,MY)*AB(MODE1,MX)+XMU(MY,MY)
C    1            *AB(MODE1,MY)+XMU(MZ,MY)*AB(MODE1,MZ)/2
C                 VM(M4,M3,M2,M1,12)=XMU(MX,MY)*AB(MODE2,MX)+XMU(MY,MY)
C    1            *AB(MODE2,MY)+XMU(MZ,MY)*AB(MODE2,MZ)/2
C                 VM(M4,M3,M2,M1,13)=XMU(MX,MY)*AB(MODE3,MX)+XMU(MY,MY)
C    1            *AB(MODE3,MY)+XMU(MZ,MY)*AB(MODE3,MZ)/2
C                 VM(M4,M3,M2,M1,14)=XMU(MX,MY)*AB(MODE4,MX)+XMU(MY,MY)
C    1            *AB(MODE4,MY)+XMU(MZ,MY)*AB(MODE4,MZ)/2
C                 VM(M4,M3,M2,M1,15)=XMU(MX,MZ)*AB(MODE1,MX)+XMU(MY,MZ)
C    1            *AB(MODE1,MY)+XMU(MZ,MZ)*AB(MODE1,MZ)/2
C                 VM(M4,M3,M2,M1,16)=XMU(MX,MZ)*AB(MODE2,MX)+XMU(MY,MZ)
C    1            *AB(MODE2,MY)+XMU(MZ,MZ)*AB(MODE2,MZ)/2
C                 VM(M4,M3,M2,M1,17)=XMU(MX,MZ)*AB(MODE3,MX)+XMU(MY,MZ)
C    1            *AB(MODE3,MY)+XMU(MZ,MZ)*AB(MODE3,MZ)/2
C                 VM(M4,M3,M2,M1,18)=XMU(MX,MZ)*AB(MODE4,MX)+XMU(MY,MZ)
C    1            *AB(MODE4,MY)+XMU(MZ,MZ)*AB(MODE4,MZ)/2
C                 VM(M4,M3,M2,M1,19)=ZZ
C               ELSE
C                 VMR(M4,M3,M2,M1,1)=XMU(MX,MX)/2
C                 VMR(M4,M3,M2,M1,2)=XMU(MY,MY)/2
C                 VMR(M4,M3,M2,M1,3)=XMU(MZ,MZ)/2
C                 VMR(M4,M3,M2,M1,4)=XMU(MX,MZ)/2
C                 VMR(M4,M3,M2,M1,5)=XMU(MY,MZ)/2
C                 VMR(M4,M3,M2,M1,6)=XMU(MX,MY)/2
C                 VMR(M4,M3,M2,M1,7)=XMU(MX,MX)*AB(MODE1,MX)+XMU(MY,MX)
C    1            *AB(MODE1,MY)+XMU(MZ,MX)*AB(MODE1,MZ)/2
C                 VMR(M4,M3,M2,M1,8)=XMU(MX,MX)*AB(MODE2,MX)+XMU(MY,MX)
C    1            *AB(MODE2,MY)+XMU(MZ,MX)*AB(MODE2,MZ)/2
C                 VMR(M4,M3,M2,M1,9)=XMU(MX,MX)*AB(MODE3,MX)+XMU(MY,MX)
C    1            *AB(MODE3,MY)+XMU(MZ,MX)*AB(MODE3,MZ)/2
C                 VMR(M4,M3,M2,M1,10)=XMU(MX,MX)*AB(MODE4,MX)+
C    1            XMU(MY,MX)*AB(MODE4,MY)+XMU(MZ,MX)*AB(MODE4,MZ)/2
C                 VMR(M4,M3,M2,M1,11)=XMU(MX,MY)*AB(MODE1,MX)+
C    1            XMU(MY,MY)*AB(MODE1,MY)+XMU(MZ,MY)*AB(MODE1,MZ)/2
C                 VMR(M4,M3,M2,M1,12)=XMU(MX,MY)*AB(MODE2,MX)+
C    1            XMU(MY,MY)*AB(MODE2,MY)+XMU(MZ,MY)*AB(MODE2,MZ)/2
C                 VMR(M4,M3,M2,M1,13)=XMU(MX,MY)*AB(MODE3,MX)+
C    1            XMU(MY,MY)*AB(MODE3,MY)+XMU(MZ,MY)*AB(MODE3,MZ)/2
C                 VMR(M4,M3,M2,M1,14)=XMU(MX,MY)*AB(MODE4,MX)+
C    1            XMU(MY,MY)*AB(MODE4,MY)+XMU(MZ,MY)*AB(MODE4,MZ)/2
C                 VMR(M4,M3,M2,M1,15)=XMU(MX,MZ)*AB(MODE1,MX)+
C    1            XMU(MY,MZ)*AB(MODE1,MY)+XMU(MZ,MZ)*AB(MODE1,MZ)/2
C                 VMR(M4,M3,M2,M1,16)=XMU(MX,MZ)*AB(MODE2,MX)+
C    1            XMU(MY,MZ)*AB(MODE2,MY)+XMU(MZ,MZ)*AB(MODE2,MZ)/2
C                 VMR(M4,M3,M2,M1,17)=XMU(MX,MZ)*AB(MODE3,MX)+
C    1            XMU(MY,MZ)*AB(MODE3,MY)+XMU(MZ,MZ)*AB(MODE3,MZ)/2
C                 VMR(M4,M3,M2,M1,18)=XMU(MX,MZ)*AB(MODE4,MX)+
C    1            XMU(MY,MZ)*AB(MODE4,MY)+XMU(MZ,MZ)*AB(MODE4,MZ)/2
C                 VMR(M4,M3,M2,M1,19)=ZZ
C               END IF
              END IF
            END DO
          END DO
        END DO
      END DO
      IF(JMAX.EQ.0)THEN
C**INTRINSIC
        IF(MOLINC.LE.0)GO TO 9999
        DO K1=1,MODE1
          CALL INTARR(NBF,MBF,K1,I1,J1,L1)
          K11=K1-1
          DO K2=1,K11
            CALL INTARR(NBF,MBF,K2,I2,J2,L2)
            K22=K2-1
            DO K3=1,K22
              CALL INTARR(NBF,MBF,K3,I3,J3,L3)
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3)THEN
                CALL DUMCR3(XQ1,XQ2,XQ3,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1          AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2          JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE1,MM1,
     1          MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,1)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE4)THEN
                CALL DUMCR3(XQ1,XQ2,XQ4,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1          AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2          JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE1,MM1,
     1          MD1,MODE2,MM2,MD2,MODE4,MM4,MD4,2)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4)THEN
                CALL DUMCR3(XQ1,XQ3,XQ4,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1          AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2          JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE1,MM1,
     1          MD1,MODE3,MM3,MD3,MODE4,MM4,MD4,3)
              END IF
              IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4)THEN
                CALL DUMCR3(XQ2,XQ3,XQ4,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1          AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2          JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE2,MM2,
     1          MD2,MODE3,MM3,MD3,MODE4,MM4,MD4,4)
              END IF
            END DO
          END DO
        END DO
        DO K1=1,MODE1
          CALL INTARR(NBF,MBF,K1,I1,J1,L1)
          K11=K1-1
          DO K2=1,K11
            CALL INTARR(NBF,MBF,K2,I2,J2,L2)
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE2)THEN
              CALL DUMCR2(XQ1,XQ2,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1        XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     2        VP1,V1,V1R,MMX1)
              CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE1,MM1,MD1,
     1        MODE2,MM2,MD2,1)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE3)THEN
              CALL DUMCR2(XQ1,XQ3,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1        XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     2        VP1,V1,V1R,MMX1)
              CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE1,MM1,MD1,
     1        MODE3,MM3,MD3,2)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE4)THEN
              CALL DUMCR2(XQ1,XQ4,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1        XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     2        VP1,V1,V1R,MMX1)
              CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE1,MM1,MD1,
     1        MODE4,MM4,MD4,3)
            END IF
            IF(K1.EQ.MODE2.AND.K2.EQ.MODE3)THEN
              CALL DUMCR2(XQ2,XQ3,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1        XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     2        VP1,V1,V1R,MMX1)
              CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE2,MM2,MD2,
     1        MODE3,MM3,MD3,4)
            END IF
            IF(K1.EQ.MODE2.AND.K2.EQ.MODE4)THEN
              CALL DUMCR2(XQ2,XQ4,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1        XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     2        VP1,V1,V1R,MMX1)
              CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE2,MM2,MD2,
     1        MODE4,MM4,MD4,5)
            END IF
            IF(K1.EQ.MODE3.AND.K2.EQ.MODE4)THEN
              CALL DUMCR2(XQ3,XQ4,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1        XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     2        VP1,V1,V1R,MMX1)
              CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE3,MM3,MD3,
     1        MODE4,MM4,MD4,6)
            END IF
          END DO
        END DO
        DO K1=1,MODE1
          CALL INTARR(NBF,MBF,K1,I1,J1,L1)
          IF(K1.EQ.MODE1)THEN
            CALL DUMCR1(XQ1,J1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1      XX,X0,XL,XM,K1,V1,V1R,VM,VMR,JMAX,0,MODINT)
            CALL FIX81(V1,V1R,J1,VP1,MMX1,K1,MODE1,MM1,MD1,1)
          END IF
          IF(K1.EQ.MODE2)THEN
            CALL DUMCR1(XQ2,J1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1      XX,X0,XL,XM,K1,V1,V1R,VM,VMR,JMAX,0,MODINT)
            CALL FIX81(V1,V1R,J1,VP1,MMX1,K1,MODE2,MM2,MD2,2)
          END IF
          IF(K1.EQ.MODE3)THEN
            CALL DUMCR1(XQ3,J1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1      XX,X0,XL,XM,K1,V1,V1R,VM,VMR,JMAX,0,MODINT)
            CALL FIX81(V1,V1R,J1,VP1,MMX1,K1,MODE3,MM3,MD3,3)
          END IF
          IF(K1.EQ.MODE4)THEN
            CALL DUMCR1(XQ4,J1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1      XX,X0,XL,XM,K1,V1,V1R,VM,VMR,JMAX,0,MODINT)
            CALL FIX81(V1,V1R,J1,VP1,MMX1,K1,MODE4,MM4,MD4,4)
          END IF
        END DO
        DO M1=1,MM1/MD1
          X1=VP1(M1,1)
          DO M2=1,MM2/MD2
            X2=VP1(M2,2)
            DO K=1,6
              X12(K)=VP2(M2,M1,K,1)
            END DO
            DO M3=1,MM3/MD3
              X3=VP1(M3,3)
              DO K=1,6
                X13(K)=VP2(M3,M1,K,2)
                X23(K)=VP2(M3,M2,K,4)
              END DO
              DO K=1,10
                X123(K)=VP3(M3,M2,M1,K,1)
              END DO
              DO M4=1,MM4/MD4
                X4=VP1(M4,4)
                DO K=1,6
                  X14(K)=VP2(M4,M1,K,3)
                  X24(K)=VP2(M4,M2,K,5)
                  X34(K)=VP2(M4,M3,K,6)
                END DO
                DO K=1,10
                  X124(K)=VP3(M4,M2,M1,K,2)
                  X134(K)=VP3(M4,M3,M1,K,3)
                  X234(K)=VP3(M4,M3,M2,K,4)
                END DO
                CALL GET84(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,B,BB,
     1          NMODE,ZZ,M1,M2,M3,M4,MODE1,MODE2,MODE3,MODE4)
                ZZ=ZZ-X1-X2-X3-X4-X12(6)-X13(6)-X14(6)-X23(6)-X24(6)-
     1          X34(6)-X123(10)-X124(10)-X134(10)-X234(10)
                IF(JCOUPC.GE.0)THEN
                  ZZ=ZZ-V0
                ELSE
                  ZZ=ZZ-V0R
                END IF
                BB(MODE1)=BB(MODE1)-X12(1)-X13(1)-X14(1)-X123(1)-
     1          X124(1)-X134(1)
                BB(MODE2)=BB(MODE2)-X12(2)-X23(1)-X24(1)-X123(2)-
     1          X124(2)-X234(1)
                BB(MODE3)=BB(MODE3)-X13(2)-X23(2)-X34(1)-X123(3)-
     1          X134(2)-X234(2)
                BB(MODE4)=BB(MODE4)-X14(2)-X24(2)-X34(2)-X124(3)-
     1          X134(3)-X234(3)
                B(MODE1,MODE1)=B(MODE1,MODE1)-X12(3)-X13(3)-X14(3)-
     1          X123(4)-X124(4)-X134(4)
                B(MODE1,MODE2)=B(MODE1,MODE2)-X12(4)-X123(5)-X124(5)
                B(MODE1,MODE3)=B(MODE1,MODE3)-X13(4)-X123(6)-X134(5)
                B(MODE1,MODE4)=B(MODE1,MODE4)-X14(4)-X124(6)-X134(6)
                B(MODE2,MODE2)=B(MODE2,MODE2)-X12(5)-X23(3)-X24(3)-
     1          X123(7)-X124(7)-X234(4)
                B(MODE2,MODE3)=B(MODE2,MODE3)-X23(4)-X123(8)-X234(5)
                B(MODE2,MODE4)=B(MODE2,MODE4)-X24(4)-X124(8)-X234(6)
                B(MODE3,MODE3)=B(MODE3,MODE3)-X13(5)-X23(5)-X34(3)-
     1          X123(9)-X134(7)-X234(7)
                B(MODE3,MODE4)=B(MODE3,MODE4)-X34(4)-X134(8)-X234(8)
                B(MODE4,MODE4)=B(MODE4,MODE4)-X14(5)-X24(5)-X34(5)-
     1          X124(9)-X134(9)-X234(9)
                CALL SET84(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,B,BB,
     1          NMODE,ZZ,M1,M2,M3,M4,MODE1,MODE2,MODE3,MODE4)
              END DO
            END DO
          END DO
        END DO
9999    CONTINUE
        IF(IND.NE.0)THEN
          CALL OUT84(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4)
        END IF
      ELSE
        CALL OUT94(VM,VMR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4)
      END IF
      CALL FLUSH(I84)
      CALL FLUSH(I94)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DUMVR4(XQ1,XQ2,XQ3,XQ4,MM1,MM2,MM3,MM4,NMODE,NATOM,QQ,
     1BB,BS,BT,BBS,B,BBT,BSS,XX,XXP,X0,XL,XM,MODE1,MODE2,MODE3,MODE4,V,
     2VR,VM,VMR,JMAX,XQTAU,VR0,VR1,VR2,VR3,VR4,KVP,IND,MODINT,NBF,MBF,
     3V1,V1R,V2,V2R,V3,V3R,MMTAU)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
C**INTRINSIC
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM4,MM3,MM2,MM1,21),VM(MM4,MM3,MM2,MM1,24),VR0(3,1),
     1VR1(KVP,6,MMTAU,4),VR2(KVP,KVP,10,MMTAU,6),
     2VR3(KVP,KVP,KVP,15,MMTAU,4),VR4(KVP,KVP,KVP,KVP,21,MMTAU),V0(3),
     3V1(KVP,6,MMTAU),V2(KVP,KVP,10,MMTAU),V3(KVP,KVP,KVP,MMTAU)
      REAL*4 VR(MM4,MM3,MM2,MM1,21),VMR(MM4,MM3,MM2,MM1,24),
     3V1R(KVP,6,MMTAU),V2R(KVP,KVP,10,MMTAU),V3R(KVP,KVP,KVP,MMTAU)
      DIMENSION XQTAU(1),NBF(1),MBF(1)
      DIMENSION X(4),X1(6),X2(6),X3(6),X4(6),X12(10),X13(10),X14(10),
     1X23(10),X24(10),X34(10),X123(15),X124(15),X134(15),X234(15)
      DIMENSION MODINT(NMODE),XM(NATOM)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),XQ4(MM4)
CCCC  DIMENSION QQ(NMODE),BB(NMODE,NMODE,3,362)
CCCC  DIMENSION BBS(NMODE,NMODE,362),BSS(NMODE,362),BBT(NMODE)
CCCC  DIMENSION BS(NMODE,3,362),BT(NMODE,NMODE),B(NMODE,3,3,362)
CCCC  DIMENSION XX(NATOM,3,362),X0(NATOM,3),XL(NATOM,NMODE,3,362)
      DIMENSION QQ(NMODE),BB(NMODE,NMODE,3,722)
      DIMENSION BBS(NMODE,NMODE,722),BSS(NMODE,722),BBT(NMODE)
      DIMENSION BS(NMODE,3,722),BT(NMODE,NMODE),B(NMODE,3,3,722)
      DIMENSION XX(NATOM,3,722),X0(NATOM,3),XL(NATOM,NMODE,3,722)
      DIMENSION XXP(NATOM,3,722)
      DIMENSION SUP3(3)
      COMMON/MOMI/XK(3,3),XMU(3,3)
      COMMON/MOMI0/XMU0(4,4),XIN0(4,4),XM0(4,4),SST
      COMMON/WHICH/IWHICH
      COMMON/TYPE/LINEAR
      COMMON/TORS/QTAU
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/FILASS/IOUT,INP
C**TEMPORARY (DIMENSIONS)
      COMMON/MULT/MULT(1000)
C**ASSUME STARTING VALUE TAU: INIT
C**ASSUME NEXT VALUE TAU: INIT+INCTAU
C**ITAU=2 EQUIVALENT TO ITAU=722
      COMMON/REACTN/IREACT,MMXTAU,INIT,INCTAU
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      MX=1
      MY=2
      MZ=3
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      IF(N1.EQ.NT.AND.MDT.GT.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.GT.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.GT.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.GT.1)MD4=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.GT.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.GT.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.GT.1)MD4=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.GT.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.GT.1)MD4=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.GT.1)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.GT.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.GT.1)MD4=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.GT.1)MD4=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.GT.1)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.GT.1)MD4=1
C**LOOP ROUND TAU
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
          QTAU=XQTAU(MTAU)
        END IF
        DO K=1,NMODE
          QQ(K)=0
          MULT(K)=0
        END DO
        MULT(MODE1)=1
        MULT(MODE2)=1
        MULT(MODE3)=1
        MULT(MODE4)=1
        DO M1=1,MM1/MD1
          QQ(MODE1)=XQ1(M1)
          DO M2=1,MM2/MD2
            QQ(MODE2)=XQ2(M2)
            DO M3=1,MM3/MD3
              QQ(MODE3)=XQ3(M3)
              DO M4=1,MM4/MD4
                QQ(MODE4)=XQ4(M4)
                IF(LINEAR)THEN
                  CALL CORIOL(NMODE,NATOM,QQ,BB,BS,BT,B,BBT,XX,X0,XL,
     1            XM,ZZ)
                ELSE
                  CALL MILLER(NMODE,NATOM,QQ,BB,BS,BBS,B,BSS,XX,XL,XXP,
     1            XM,BBT,BT,ZZ,ITAU,JMAX)
                END IF
                IF(JMAX.EQ.0)THEN
                  IF(MOLINC.LE.0)THEN
                    CALL VSET84(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,BT,
     1              BBT,NMODE,ZZ,M1,M2,M3,M4,MODE1,MODE2,MODE3,MODE4,
     2              NSMODE)
                  ELSE
                    VR4(M4,M3,M2,M1,1,MTAU)=BBT(MODE1)
                    VR4(M4,M3,M2,M1,2,MTAU)=BBT(MODE2)
                    VR4(M4,M3,M2,M1,3,MTAU)=BBT(MODE3)
                    VR4(M4,M3,M2,M1,4,MTAU)=BBT(MODE4)
                    VR4(M4,M3,M2,M1,5,MTAU)=BBT(NSMODE)
                    VR4(M4,M3,M2,M1,6,MTAU)=BT(MODE1,MODE1)
                    VR4(M4,M3,M2,M1,7,MTAU)=BT(MODE1,MODE2)
                    VR4(M4,M3,M2,M1,8,MTAU)=BT(MODE1,MODE3)
                    VR4(M4,M3,M2,M1,9,MTAU)=BT(MODE1,MODE4)
                    VR4(M4,M3,M2,M1,10,MTAU)=BT(MODE1,NSMODE)
                    VR4(M4,M3,M2,M1,11,MTAU)=BT(MODE2,MODE2)
                    VR4(M4,M3,M2,M1,12,MTAU)=BT(MODE2,MODE3)
                    VR4(M4,M3,M2,M1,13,MTAU)=BT(MODE2,MODE4)
                    VR4(M4,M3,M2,M1,14,MTAU)=BT(MODE2,NSMODE)
                    VR4(M4,M3,M2,M1,15,MTAU)=BT(MODE3,MODE3)
                    VR4(M4,M3,M2,M1,16,MTAU)=BT(MODE3,MODE4)
                    VR4(M4,M3,M2,M1,17,MTAU)=BT(MODE3,NSMODE)
                    VR4(M4,M3,M2,M1,18,MTAU)=BT(MODE4,MODE4)
                    VR4(M4,M3,M2,M1,19,MTAU)=BT(MODE4,NSMODE)
                    VR4(M4,M3,M2,M1,20,MTAU)=BT(NSMODE,NSMODE)
                    VR4(M4,M3,M2,M1,21,MTAU)=ZZ
                  END IF
                ELSE
C**GET WHAT'S REQUIRED
            DO I=1,3
              SUP3(I)=0
              DO K=1,NMODE-1
                DO L=1,NMODE-1
                  SUP3(I)=SUP3(I)+QQ(K)*MULT(L)*BB(K,L,I,ITAU)*BBT(L)
                END DO
              END DO
            END DO
            ZZ=0
            DO K=1,NMODE-1
              DO L=1,NMODE-1
                ZZ=ZZ+QQ(K)*MULT(L)*BBS(K,L,ITAU)*BBT(L)
              END DO
            END DO
            DO I=1,3
              DO L=1,NMODE-1
                BS(L,I,ITAU)=0
                DO K=1,NMODE-1
                  BS(L,I,ITAU)=BS(L,I,ITAU)+QQ(K)*MULT(L)*
     1            BB(K,L,I,ITAU)
                END DO
              END DO
            END DO
            DO L=1,NMODE-1
              BSS(L,ITAU)=0
              DO K=1,NMODE-1
                BSS(L,ITAU)=BSS(L,ITAU)+QQ(K)*MULT(L)*
     1          BBS(K,L,ITAU)
              END DO
            END DO
C**GOT WHAT'S REQUIRED
                  CALL VSET94(VM,VMR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1            SUP3,BS,BSS,NMODE,ZZ,M1,M2,M3,M4,MODE1,MODE2,MODE3,
     2            MODE4,ITAU)
C                 IF(JCOUPC.GT.0)THEN
C                   VM(M4,M3,M2,M1,1)=XMU0(MX,MX)/2
C                   VM(M4,M3,M2,M1,2)=XMU0(MY,MY)/2
C                   VM(M4,M3,M2,M1,3)=XMU0(MZ,MZ)/2
C                   VM(M4,M3,M2,M1,4)=XMU0(MX,MZ)/2
C                   VM(M4,M3,M2,M1,5)=XMU0(MY,MZ)/2
C                   VM(M4,M3,M2,M1,6)=XMU0(MX,MY)/2
C                   VM(M4,M3,M2,M1,7)=-SST*XMU0(MX,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MX)+SUP3(MY)*XMU0(MY,MX)+
C    2                  SUP3(MZ)*XMU0(MZ,MX))/2+ZZ*XMU0(MX,4)/2
C                   VM(M4,M3,M2,M1,8)=(BS(MODE1,MX,ITAU)*XMU0(MX,MX)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MX)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MX))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MX,4)/2
C                   VM(M4,M3,M2,M1,9)=(BS(MODE2,MX,ITAU)*XMU0(MX,MX)+
C    1                  BS(MODE2,MY,ITAU)*XMU0(MY,MX)+
C    2                  BS(MODE2,MZ,ITAU)*XMU0(MZ,MX))/2+
C    3                  BSS(MODE2,ITAU)*XMU0(MX,4)/2
C                   VM(M4,M3,M2,M1,10)=(BS(MODE3,MX,ITAU)*XMU0(MX,MX)+
C    1                  BS(MODE3,MY,ITAU)*XMU0(MY,MX)+
C    2                  BS(MODE3,MZ,ITAU)*XMU0(MZ,MX))/2+
C    3                  BSS(MODE3,ITAU)*XMU0(MX,4)/2
C                   VM(M4,M3,M2,M1,11)=(BS(MODE4,MX,ITAU)*XMU0(MX,MX)+
C    1                  BS(MODE4,MY,ITAU)*XMU0(MY,MX)+
C    2                  BS(MODE4,MZ,ITAU)*XMU0(MZ,MX))/2+
C    3                  BSS(MODE4,ITAU)*XMU0(MX,4)/2
C                   VM(M4,M3,M2,M1,12)=-XMU0(MX,4)/2
C                   VM(M4,M3,M2,M1,13)=-SST*XMU0(MY,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MY)+SUP3(MY)*XMU0(MY,MY)+
C    2                  SUP3(MZ)*XMU0(MZ,MY))/2+ZZ*XMU0(MY,4)/2
C                   VM(M4,M3,M2,M1,14)=(BS(MODE1,MX,ITAU)*XMU0(MX,MY)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MY)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MY))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MY,4)/2
C                   VM(M4,M3,M2,M1,15)=(BS(MODE2,MX,ITAU)*XMU0(MX,MY)+
C    1                  BS(MODE2,MY,ITAU)*XMU0(MY,MY)+
C    2                  BS(MODE2,MZ,ITAU)*XMU0(MZ,MY))/2+
C    3                  BSS(MODE2,ITAU)*XMU0(MY,4)/2
C                   VM(M4,M3,M2,M1,16)=(BS(MODE3,MX,ITAU)*XMU0(MX,MY)+
C    1                  BS(MODE3,MY,ITAU)*XMU0(MY,MY)+
C    2                  BS(MODE3,MZ,ITAU)*XMU0(MZ,MY))/2+
C    3                  BSS(MODE3,ITAU)*XMU0(MY,4)/2
C                   VM(M4,M3,M2,M1,17)=(BS(MODE4,MX,ITAU)*XMU0(MX,MY)+
C    1                  BS(MODE4,MY,ITAU)*XMU0(MY,MY)+
C    2                  BS(MODE4,MZ,ITAU)*XMU0(MZ,MY))/2+
C    3                  BSS(MODE4,ITAU)*XMU0(MY,4)/2
C                   VM(M4,M3,M2,M1,18)=-XMU0(MY,4)/2
C                   VM(M4,M3,M2,M1,19)=-SST*XMU0(MZ,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MZ)+SUP3(MY)*XMU0(MY,MZ)+
C    2                  SUP3(MZ)*XMU0(MZ,MZ))/2+ZZ*XMU0(MZ,4)/2
C                   VM(M4,M3,M2,M1,20)=(BS(MODE1,MX,ITAU)*XMU0(MX,MZ)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MZ)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MZ))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MZ,4)/2
C                   VM(M4,M3,M2,M1,21)=(BS(MODE2,MX,ITAU)*XMU0(MX,MZ)+
C    1                  BS(MODE2,MY,ITAU)*XMU0(MY,MZ)+
C    2                  BS(MODE2,MZ,ITAU)*XMU0(MZ,MZ))/2+
C    3                  BSS(MODE2,ITAU)*XMU0(MZ,4)/2
C                   VM(M4,M3,M2,M1,22)=(BS(MODE3,MX,ITAU)*XMU0(MX,MZ)+
C    1                  BS(MODE3,MY,ITAU)*XMU0(MY,MZ)+
C    2                  BS(MODE3,MZ,ITAU)*XMU0(MZ,MZ))/2+
C    3                  BSS(MODE3,ITAU)*XMU0(MZ,4)/2
C                   VM(M4,M3,M2,M1,23)=(BS(MODE4,MX,ITAU)*XMU0(MX,MZ)+
C    1                  BS(MODE4,MY,ITAU)*XMU0(MY,MZ)+
C    2                  BS(MODE4,MZ,ITAU)*XMU0(MZ,MZ))/2+
C    3                  BSS(MODE4,ITAU)*XMU0(MZ,4)/2
C                   VM(M4,M3,M2,M1,24)=-XMU0(MZ,4)/2
C                 ELSE
C                   VMR(M4,M3,M2,M1,1)=XMU0(MX,MX)/2
C                   VMR(M4,M3,M2,M1,2)=XMU0(MY,MY)/2
C                   VMR(M4,M3,M2,M1,3)=XMU0(MZ,MZ)/2
C                   VMR(M4,M3,M2,M1,4)=XMU0(MX,MZ)/2
C                   VMR(M4,M3,M2,M1,5)=XMU0(MY,MZ)/2
C                   VMR(M4,M3,M2,M1,6)=XMU0(MX,MY)/2
C                   VMR(M4,M3,M2,M1,7)=-SST*XMU0(MX,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MX)+SUP3(MY)*XMU0(MY,MX)+
C    2                  SUP3(MZ)*XMU0(MZ,MX))/2+ZZ*XMU0(MX,4)/2
C                   VMR(M4,M3,M2,M1,8)=(BS(MODE1,MX,ITAU)*XMU0(MX,MX)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MX)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MX))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MX,4)/2
C                   VMR(M4,M3,M2,M1,9)=(BS(MODE2,MX,ITAU)*XMU0(MX,MX)+
C    1                  BS(MODE2,MY,ITAU)*XMU0(MY,MX)+
C    2                  BS(MODE2,MZ,ITAU)*XMU0(MZ,MX))/2+
C    3                  BSS(MODE2,ITAU)*XMU0(MX,4)/2
C                   VMR(M4,M3,M2,M1,10)=(BS(MODE3,MX,ITAU)*XMU0(MX,MX)+
C    1                  BS(MODE3,MY,ITAU)*XMU0(MY,MX)+
C    2                  BS(MODE3,MZ,ITAU)*XMU0(MZ,MX))/2+
C    3                  BSS(MODE3,ITAU)*XMU0(MX,4)/2
C                   VMR(M4,M3,M2,M1,11)=(BS(MODE4,MX,ITAU)*XMU0(MX,MX)+
C    1                  BS(MODE4,MY,ITAU)*XMU0(MY,MX)+
C    2                  BS(MODE4,MZ,ITAU)*XMU0(MZ,MX))/2+
C    3                  BSS(MODE4,ITAU)*XMU0(MX,4)/2
C                   VMR(M4,M3,M2,M1,12)=-XMU0(MX,4)/2
C                   VMR(M4,M3,M2,M1,13)=-SST*XMU0(MY,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MY)+SUP3(MY)*XMU0(MY,MY)+
C    2                  SUP3(MZ)*XMU0(MZ,MY))/2+ZZ*XMU0(MY,4)/2
C                   VMR(M4,M3,M2,M1,14)=(BS(MODE1,MX,ITAU)*XMU0(MX,MY)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MY)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MY))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MY,4)/2
C                   VMR(M4,M3,M2,M1,15)=(BS(MODE2,MX,ITAU)*XMU0(MX,MY)+
C    1                  BS(MODE2,MY,ITAU)*XMU0(MY,MY)+
C    2                  BS(MODE2,MZ,ITAU)*XMU0(MZ,MY))/2+
C    3                  BSS(MODE2,ITAU)*XMU0(MY,4)/2
C                   VMR(M4,M3,M2,M1,16)=(BS(MODE3,MX,ITAU)*XMU0(MX,MY)+
C    1                  BS(MODE3,MY,ITAU)*XMU0(MY,MY)+
C    2                  BS(MODE3,MZ,ITAU)*XMU0(MZ,MY))/2+
C    3                  BSS(MODE3,ITAU)*XMU0(MY,4)/2
C                   VMR(M4,M3,M2,M1,17)=(BS(MODE4,MX,ITAU)*XMU0(MX,MY)+
C    1                  BS(MODE4,MY,ITAU)*XMU0(MY,MY)+
C    2                  BS(MODE4,MZ,ITAU)*XMU0(MZ,MY))/2+
C    3                  BSS(MODE4,ITAU)*XMU0(MY,4)/2
C                   VMR(M4,M3,M2,M1,18)=-XMU0(MY,4)/2
C                   VMR(M4,M3,M2,M1,19)=-SST*XMU0(MZ,4)/2+
C    1                 (SUP3(MX)*XMU0(MX,MZ)+SUP3(MY)*XMU0(MY,MZ)+
C    2                  SUP3(MZ)*XMU0(MZ,MZ))/2+ZZ*XMU0(MZ,4)/2
C                   VMR(M4,M3,M2,M1,20)=(BS(MODE1,MX,ITAU)*XMU0(MX,MZ)+
C    1                  BS(MODE1,MY,ITAU)*XMU0(MY,MZ)+
C    2                  BS(MODE1,MZ,ITAU)*XMU0(MZ,MZ))/2+
C    3                  BSS(MODE1,ITAU)*XMU0(MZ,4)/2
C                   VMR(M4,M3,M2,M1,21)=(BS(MODE2,MX,ITAU)*XMU0(MX,MZ)+
C    1                  BS(MODE2,MY,ITAU)*XMU0(MY,MZ)+
C    2                  BS(MODE2,MZ,ITAU)*XMU0(MZ,MZ))/2+
C    3                  BSS(MODE2,ITAU)*XMU0(MZ,4)/2
C                   VMR(M4,M3,M2,M1,22)=(BS(MODE3,MX,ITAU)*XMU0(MX,MZ)+
C    1                  BS(MODE3,MY,ITAU)*XMU0(MY,MZ)+
C    2                  BS(MODE3,MZ,ITAU)*XMU0(MZ,MZ))/2+
C    3                  BSS(MODE3,ITAU)*XMU0(MZ,4)/2
C                   VMR(M4,M3,M2,M1,23)=(BS(MODE4,MX,ITAU)*XMU0(MX,MZ)+
C    1                  BS(MODE4,MY,ITAU)*XMU0(MY,MZ)+
C    2                  BS(MODE4,MZ,ITAU)*XMU0(MZ,MZ))/2+
C    3                  BSS(MODE4,ITAU)*XMU0(MZ,4)/2
C                   VMR(M4,M3,M2,M1,24)=-XMU0(MZ,4)/2
C                 END IF
                END IF
              END DO
            END DO
          END DO
        END DO
        IF(JMAX.EQ.0)THEN
          IF(MOLINC.LE.0)
     1    CALL VOUT84(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4)
        ELSE
          CALL VOUT94(VM,VMR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4)
C         IF(JCOUPC.GT.0)THEN
C           WRITE(94)VM
C         ELSE
C           WRITE(94)VMR
C         END IF
        END IF
      END DO
C**INTRINSIC
      IF(MOLINC.LE.0)GO TO 9999
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        K11=K1-1
        DO K2=1,K11
          CALL INTARR(NBF,MBF,K2,I2,J2,L2)
          K22=K2-1
          DO K3=1,K22
            CALL INTARR(NBF,MBF,K3,I3,J3,L3)
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3)THEN
              CALL DUMVR3(XQ1,XQ2,XQ3,J1,J2,J3,NMODE,NATOM,QQ,BB,BS,
     1        BT,BBS,B,BBT,BSS,XX,XXP,X0,XL,XM,MODE1,MODE2,MODE3,V3,
     2        V3R,VM,VMR,JMAX,XQTAU,VR0,VR1,VR2,VR3(1,1,1,1,1,1),KVP,
     3        IND,MODINT,NBF,MBF,V1,V1R,V2,V2R,MMTAU)
              CALL VFIX83(V3,V3R,J1,J2,J3,VR3,KVP,MMTAU,MDT,MM1,
     1        MD1,MM2,MD2,MM3,MD3,1)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE4)THEN
              CALL DUMVR3(XQ1,XQ2,XQ4,J1,J2,J3,NMODE,NATOM,QQ,BB,BS,
     1        BT,BBS,B,BBT,BSS,XX,XXP,X0,XL,XM,MODE1,MODE2,MODE4,V3,
     2        V3R,VM,VMR,JMAX,XQTAU,VR0,VR1,VR2,VR3(1,1,1,1,1,2),KVP,
     3        IND,MODINT,NBF,MBF,V1,V1R,V2,V2R,MMTAU)
              CALL VFIX83(V3,V3R,J1,J2,J3,VR3,KVP,MMTAU,MDT,MM1,
     1        MD1,MM2,MD2,MM4,MD4,2)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4)THEN
              CALL DUMVR3(XQ1,XQ3,XQ4,J1,J2,J3,NMODE,NATOM,QQ,BB,BS,
     1        BT,BBS,B,BBT,BSS,XX,XXP,X0,XL,XM,MODE1,MODE3,MODE4,V3,
     2        V3R,VM,VMR,JMAX,XQTAU,VR0,VR1,VR2,VR3(1,1,1,1,1,3),KVP,
     3        IND,MODINT,NBF,MBF,V1,V1R,V2,V2R,MMTAU)
              CALL VFIX83(V3,V3R,J1,J2,J3,VR3,KVP,MMTAU,MDT,MM1,
     1        MD1,MM3,MD3,MM4,MD4,3)
            END IF
            IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4)THEN
              CALL DUMVR3(XQ2,XQ3,XQ4,J1,J2,J3,NMODE,NATOM,QQ,BB,BS,
     1        BT,BBS,B,BBT,BSS,XX,XXP,X0,XL,XM,MODE2,MODE3,MODE4,V3,
     2        V3R,VM,VMR,JMAX,XQTAU,VR0,VR1,VR2,VR3(1,1,1,1,1,4),KVP,
     3        IND,MODINT,NBF,MBF,V1,V1R,V2,V2R,MMTAU)
              CALL VFIX83(V3,V3R,J1,J2,J3,VR3,KVP,MMTAU,MDT,MM2,
     1        MD2,MM3,MD3,MM4,MD4,4)
            END IF
          END DO
        END DO
      END DO
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        K11=K1-1
        DO K2=1,K11
          CALL INTARR(NBF,MBF,K2,I2,J2,L2)
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE2)THEN
            CALL DUMVR2(XQ1,XQ2,J1,J2,NMODE,NATOM,QQ,BB,BS,BT,BBS,B,
     1      BBT,BSS,XX,XXP,X0,XL,XM,MODE1,MODE2,V2,V2R,VM,VMR,JMAX,
     2      XQTAU,VR0,VR1,VR2(1,1,1,1,1),KVP,0,MODINT,NBF,MBF,V1,V1R,
     3      MMTAU)
            CALL VFIX82(V2,J1,J2,VR2,KVP,MMTAU,MDT,MM1,MD1,
     1      MM2,MD2,1)
          END IF
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE3)THEN
            CALL DUMVR2(XQ1,XQ3,J1,J2,NMODE,NATOM,QQ,BB,BS,BT,BBS,B,
     1      BBT,BSS,XX,XXP,X0,XL,XM,MODE1,MODE3,V2,V2R,VM,VMR,JMAX,
     2      XQTAU,VR0,VR1,VR2(1,1,1,1,2),KVP,0,MODINT,NBF,MBF,V1,V1R,
     3      MMTAU)
            CALL VFIX82(V2,J1,J2,VR2,KVP,MMTAU,MDT,MM1,MD1,
     1      MM3,MD3,2)
          END IF
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE4)THEN
            CALL DUMVR2(XQ1,XQ4,J1,J2,NMODE,NATOM,QQ,BB,BS,BT,BBS,B,
     1      BBT,BSS,XX,XXP,X0,XL,XM,MODE1,MODE4,V2,V2R,VM,VMR,JMAX,
     2      XQTAU,VR0,VR1,VR2(1,1,1,1,3),KVP,0,MODINT,NBF,MBF,V1,V1R,
     3      MMTAU)
            CALL VFIX82(V2,J1,J2,VR2,KVP,MMTAU,MDT,MM1,MD1,
     1      MM4,MD4,3)
          END IF
          IF(K1.EQ.MODE2.AND.K2.EQ.MODE3)THEN
            CALL DUMVR2(XQ2,XQ3,J1,J2,NMODE,NATOM,QQ,BB,BS,BT,BBS,B,
     1      BBT,BSS,XX,XXP,X0,XL,XM,MODE2,MODE3,V2,V2R,VM,VMR,JMAX,
     2      XQTAU,VR0,VR1,VR2(1,1,1,1,4),KVP,0,MODINT,NBF,MBF,V1,V1R,
     3      MMTAU)
            CALL VFIX82(V2,J1,J2,VR2,KVP,MMTAU,MDT,MM2,MD2,
     1      MM3,MD3,4)
          END IF
          IF(K1.EQ.MODE2.AND.K2.EQ.MODE4)THEN
            CALL DUMVR2(XQ2,XQ4,J1,J2,NMODE,NATOM,QQ,BB,BS,BT,BBS,B,
     1      BBT,BSS,XX,XXP,X0,XL,XM,MODE2,MODE4,V2,V2R,VM,VMR,JMAX,
     2      XQTAU,VR0,VR1,VR2(1,1,1,1,5),KVP,0,MODINT,NBF,MBF,V1,V1R,
     3      MMTAU)
            CALL VFIX82(V2,J1,J2,VR2,KVP,MMTAU,MDT,MM2,MD2,
     1      MM4,MD4,5)
          END IF
          IF(K1.EQ.MODE3.AND.K2.EQ.MODE4)THEN
            CALL DUMVR2(XQ3,XQ4,J1,J2,NMODE,NATOM,QQ,BB,BS,BT,BBS,B,
     1      BBT,BSS,XX,XXP,X0,XL,XM,MODE3,MODE4,V2,V2R,VM,VMR,JMAX,
     2      XQTAU,VR0,VR1,VR2(1,1,1,1,6),KVP,0,MODINT,NBF,MBF,V1,V1R,
     3      MMTAU)
            CALL VFIX82(V2,J1,J2,VR2,KVP,MMTAU,MDT,MM3,MD3,
     1      MM4,MD4,6)
          END IF
        END DO
      END DO
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        IF(K1.EQ.MODE1)THEN
          CALL DUMVR1(XQ1,J1,NMODE,NATOM,QQ,BB,BS,BT,BBS,B,BBT,BSS,XX,
     1    XXP,X0,XL,XM,MODE1,V1,V1R,VM,VMR,JMAX,XQTAU,VR0,VR1(1,1,1,1),
     2    KVP,0,MODINT)
          CALL VFIX81(V1,J1,VR1,KVP,MMTAU,MDT,MM1,MD1,1)
        END IF
        IF(K1.EQ.MODE2)THEN
          CALL DUMVR1(XQ2,J1,NMODE,NATOM,QQ,BB,BS,BT,BBS,B,BBT,BSS,XX,
     1    XXP,X0,XL,XM,MODE2,V1,V1R,VM,VMR,JMAX,XQTAU,VR0,VR1(1,1,1,2),
     2    KVP,0,MODINT)
          CALL VFIX81(V1,J1,VR1,KVP,MMTAU,MDT,MM2,MD2,2)
        END IF
        IF(K1.EQ.MODE3)THEN
          CALL DUMVR1(XQ3,J1,NMODE,NATOM,QQ,BB,BS,BT,BBS,B,BBT,BSS,XX,
     1    XXP,X0,XL,XM,MODE3,V1,V1R,VM,VMR,JMAX,XQTAU,VR0,VR1(1,1,1,3),
     2    KVP,0,MODINT)
          CALL VFIX81(V1,J1,VR1,KVP,MMTAU,MDT,MM3,MD3,3)
        END IF
        IF(K1.EQ.MODE4)THEN
          CALL DUMVR1(XQ4,J1,NMODE,NATOM,QQ,BB,BS,BT,BBS,B,BBT,BSS,XX,
     1    XXP,X0,XL,XM,MODE4,V1,V1R,VM,VMR,JMAX,XQTAU,VR0,VR1(1,1,1,4),
     2    KVP,0,MODINT)
          CALL VFIX81(V1,J1,VR1,KVP,MMTAU,MDT,MM4,MD4,4)
        END IF
      END DO
      CALL DUMVR0(NMODE,NATOM,QQ,BB,BS,BT,BBS,B,BBT,
     1BSS,XX,XXP,X0,XL,XM,V,VR,VM,VMR,JMAX,VR0,0,MODINT)
C**LOOP ROUND TAU
      DO MTAU=1,MMTAU/MDT
        DO K=1,3
          X(K)=VR0(K,MTAU)
        END DO
        DO M1=1,MM1/MD1
          DO K=1,6
            X1(K)=VR1(M1,K,MTAU,1)
          END DO
          DO M2=1,MM2/MD2
            DO K=1,6
              X2(K)=VR1(M2,K,MTAU,2)
            END DO
            DO K=1,10
              X12(K)=VR2(M2,M1,K,MTAU,1)
            END DO
            DO M3=1,MM3/MD3
              DO K=1,6
                X3(K)=VR1(M3,K,MTAU,3)
              END DO
              DO K=1,10
                X13(K)=VR2(M3,M1,K,MTAU,2)
                X23(K)=VR2(M3,M2,K,MTAU,4)
              END DO
              DO K=1,15
                X123(K)=VR3(M3,M2,M1,K,MTAU,1)
              END DO
              DO M4=1,MM4/MD4
                DO K=1,6
                  X4(K)=VR1(M4,K,MTAU,4)
                END DO
                DO K=1,10
                  X14(K)=VR2(M4,M1,K,MTAU,3)
                  X24(K)=VR2(M4,M2,K,MTAU,5)
                  X34(K)=VR2(M4,M3,K,MTAU,6)
                END DO
                DO K=1,15
                  X124(K)=VR3(M4,M2,M1,K,MTAU,2)
                  X134(K)=VR3(M4,M3,M1,K,MTAU,3)
                  X234(K)=VR3(M4,M3,M2,K,MTAU,4)
                END DO
                CALL VGET84(VR4,KVP,KVP,KVP,KVP,BT,BBT,NMODE,ZZ,M1,M2,
     1          M3,M4,MODE1,MODE2,MODE3,MODE4,NSMODE,MTAU)
                BBT(MODE1)=BBT(MODE1)-X1(1)-X12(1)-X13(1)-X14(1)-
     1          X123(1)-X124(1)-X134(1)
                BBT(MODE2)=BBT(MODE2)-X2(1)-X12(2)-X23(1)-X24(1)-
     1          X123(2)-X124(2)-X234(1)
                BBT(MODE3)=BBT(MODE3)-X3(1)-X13(2)-X23(2)-X34(1)-
     1          X123(3)-X134(2)-X234(2)
                BBT(MODE4)=BBT(MODE4)-X4(1)-X14(2)-X24(2)-X34(2)-
     1          X124(3)-X134(3)-X234(3)
                BBT(NSMODE)=BBT(NSMODE)-X(1)-X1(2)-X2(2)-X3(2)-X4(2)-
     1          X12(3)-X13(3)-X14(3)-X23(3)-X24(3)-X34(3)-X123(4)-
     2          X124(4)-X134(4)-X234(4)
                BT(MODE1,MODE1)=BT(MODE1,MODE1)-X1(3)-X12(4)-X13(4)-
     1          X14(4)-X123(5)-X124(5)-X134(5)
                BT(MODE1,MODE2)=BT(MODE1,MODE2)-X12(5)-X123(6)-X124(6)
                BT(MODE1,MODE3)=BT(MODE1,MODE3)-X13(5)-X134(6)-X123(7)
                BT(MODE1,MODE4)=BT(MODE1,MODE4)-X14(5)-X124(7)-X134(7)
                BT(MODE1,NSMODE)=BT(MODE1,NSMODE)-X1(4)-X12(6)-X13(6)-
     1          X14(6)-X123(8)-X124(8)-X134(8)
                BT(MODE2,MODE2)=BT(MODE2,MODE2)-X2(3)-X12(7)-X23(4)-
     1          X24(4)-X234(5)-X123(9)-X124(9)
                BT(MODE2,MODE3)=BT(MODE2,MODE3)-X23(5)-X234(6)-X123(10)
                BT(MODE2,MODE4)=BT(MODE2,MODE4)-X24(5)-X234(7)-X124(10)
                BT(MODE2,NSMODE)=BT(MODE2,NSMODE)-X2(4)-X12(8)-X23(6)-
     1          X24(6)-X234(8)-X123(11)-X124(11)
                BT(MODE3,MODE3)=BT(MODE3,MODE3)-X3(3)-X13(7)-X23(7)-
     1          X34(4)-X134(9)-X234(9)-X123(12)
                BT(MODE3,MODE4)=BT(MODE3,MODE4)-X34(5)-X134(10)-
     1          X234(10)
                BT(MODE3,NSMODE)=BT(MODE3,NSMODE)-X3(4)-X13(8)-X23(8)-
     1          X34(6)-X134(11)-X234(11)-X123(13)
                BT(MODE4,MODE4)=BT(MODE4,MODE4)-X4(3)-X14(7)-X24(7)-
     1          X34(7)-X124(12)-X134(12)-X234(12)
                BT(MODE4,NSMODE)=BT(MODE4,NSMODE)-X4(4)-X14(8)-X24(8)-
     1          X34(8)-X124(13)-X134(13)-X234(13)
                BT(NSMODE,NSMODE)=BT(NSMODE,NSMODE)-X(2)-X1(5)-X2(5)-
     1          X3(5)-X4(5)-X12(9)-X13(9)-X14(9)-X23(9)-X24(9)-X34(9)-
     2          X123(14)-X124(14)-X134(14)-X234(14)
                ZZ=ZZ-X(3)-X1(6)-X2(6)-X3(6)-X4(6)-X12(10)-X13(10)-
     1          X14(10)-X23(10)-X24(10)-X34(10)-X123(15)-X124(15)-
     2          X134(15)-X234(15)
                CALL VSET84(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,BT,
     1          BBT,NMODE,ZZ,M1,M2,M3,M4,MODE1,MODE2,MODE3,MODE4,
     2          NSMODE)
              END DO
            END DO
          END DO
        END DO
        CALL OUT74(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4)
      END DO
9999  CONTINUE
      CALL FLUSH(84)
      CALL FLUSH(94)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DUMPT5(XQ1,XQ2,XQ3,XQ4,XQ5,MM1,MM2,MM3,MM4,MM5,NMODE,
     1NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,MODE1,MODE2,MODE3,
     2MODE4,MODE5,V,VR,IND,MODINT,XTANPM,VP1,MMX1,VP2,MAX2,VP3,MAX3,
     3VP4,MAX4,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,V4,V4R,XMODQ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C****************************************
C**NEVER CALLED FOR FITTING OF POTENTIALS
C****************************************
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM5,MM4,MM3,MM2,MM1),V1(MMX1),V2(MAX2,MAX2),
     1V3(MAX3,MAX3,MAX3),V4(MAX4,MAX4,MAX4,MAX4),VP
      REAL*4 VR(MM5,MM4,MM3,MM2,MM1),V1R(MMX1),V2R(MAX2,MAX2),
     1V3R(MAX3,MAX3,MAX3),V4R(MAX4,MAX4,MAX4,MAX4),VPR
      DIMENSION VP1(MMX1,1),VP2(MAX2,MAX2,1),VP3(MAX3,MAX3,MAX3,1),
     1VP4(MAX4,MAX4,MAX4,MAX4,1)
      DIMENSION MODINT(NMODE),XTANPM(NMODE),NBF(1),MBF(1),XMODQ(NMODE)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),XQ4(MM4),XQ5(MM5)
      DIMENSION RR(NATOM,NATOM),QQ(NMODE)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT)
      COMMON/WHICH/IWHICH
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/UNITEX/I75,I76,I85,I86
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/VMIN/VMIN
      COMMON/CHKMAX/MAXCHK(6)
      COMMON/FUNDAM/WAVENM
      COMMON/FILASS/IOUT
      COMMON/POTREF/VP,VPR
      DO K=1,NMODE
        QQ(K)=0
      END DO
C**INTRINSIC
      IF(IND.NE.0)THEN
        MD1=MODINT(MODE1)
        MD2=MODINT(MODE2)
        MD3=MODINT(MODE3)
        MD4=MODINT(MODE4)
        MD5=MODINT(MODE5)
        DO I=1,NWSYM
          DO J=1,NSYM(I)
            IF(MODE1.EQ.ISYM(I,J))N1=I
            IF(MODE2.EQ.ISYM(I,J))N2=I
            IF(MODE3.EQ.ISYM(I,J))N3=I
            IF(MODE4.EQ.ISYM(I,J))N4=I
            IF(MODE5.EQ.ISYM(I,J))N5=I
          END DO
        END DO
        IF(N1.EQ.N2)MD2=1
        IF(N1.EQ.N3)MD3=1
        IF(N1.EQ.N4)MD4=1
        IF(N1.EQ.N5)MD5=1
        IF(N2.EQ.N3)MD3=1
        IF(N2.EQ.N4)MD4=1
        IF(N2.EQ.N5)MD5=1
        IF(N3.EQ.N4)MD4=1
        IF(N3.EQ.N5)MD5=1
        IF(N4.EQ.N5)MD5=1
        N12=ISYMP(N1,N2)
        IF(N12.EQ.N3)MD3=1
        IF(N12.EQ.N4)MD4=1
        IF(N12.EQ.N5)MD5=1
        N13=ISYMP(N1,N3)
        IF(N13.EQ.N4)MD4=1
        IF(N13.EQ.N5)MD5=1
        N14=ISYMP(N1,N4)
        IF(N14.EQ.N5)MD5=1
        N23=ISYMP(N2,N3)
        IF(N23.EQ.N4)MD4=1
        IF(N23.EQ.N5)MD5=1
        N24=ISYMP(N2,N4)
        IF(N24.EQ.N5)MD5=1
        N34=ISYMP(N3,N4)
        IF(N34.EQ.N5)MD5=1
        N123=ISYMP(N12,N3)
        IF(N123.EQ.N4)MD4=1
        IF(N123.EQ.N5)MD5=1
        N124=ISYMP(N12,N4)
        IF(N124.EQ.N5)MD5=1
        N134=ISYMP(N13,N4)
        IF(N134.EQ.N5)MD5=1
        N234=ISYMP(N23,N4)
        IF(N234.EQ.N5)MD5=1
        N1234=ISYMP(N12,N34)
        IF(N1234.EQ.N5)MD5=1
      ELSE
        MD1=1
        MD2=1
        MD3=1
        MD4=1
        MD5=1
      END IF
      MODCHK=IABS(MAXCHK(5))
      DO M1=1,MM1/MD1
        QQ(MODE1)=XQ1(M1)*XMODQ(MODE1)
        DO M2=1,MM2/MD2
          QQ(MODE2)=XQ2(M2)*XMODQ(MODE2)
          DO M3=1,MM3/MD3
            QQ(MODE3)=XQ3(M3)*XMODQ(MODE3)
            DO M4=1,MM4/MD4
              QQ(MODE4)=XQ4(M4)*XMODQ(MODE4)
              DO M5=1,MM5/MD5
                QQ(MODE5)=XQ5(M5)*XMODQ(MODE5)
                IF(IWHICH.GT.0)THEN
                  DO I=1,NATOM
                    DO J=1,3
                      XX(I,J)=X0(I,J)+XL(I,MODE1,J)*
     1                QQ(MODE1)/SQRT(XM(I))
                      XX(I,J)=XX(I,J)+XL(I,MODE2,J)*QQ(MODE2)/
     1                SQRT(XM(I))
                      XX(I,J)=XX(I,J)+XL(I,MODE3,J)*QQ(MODE3)/
     1                SQRT(XM(I))
                      XX(I,J)=XX(I,J)+XL(I,MODE4,J)*QQ(MODE4)/
     1                SQRT(XM(I))
                      XX(I,J)=XX(I,J)+XL(I,MODE5,J)*QQ(MODE5)/
     1                SQRT(XM(I))
                    END DO
                  END DO

!                  WRITE(17,'(I5)') NATOM
!                  WRITE(17,'(I4,F10.3,I4,F10.3,I4,F10.3,I4,F10.3,
!     1            I4,F10.3)') MODE1, QQ(MODE1), MODE2, QQ(MODE2),
!     2            MODE3, QQ(MODE3), MODE4, QQ(MODE4), MODE5, QQ(MODE5)
!                  WRITE(17,'(A,3F15.8)') 'H',XX( 1,:)*0.5291772083
!                  WRITE(17,'(A,3F15.8)') 'H',XX( 2,:)*0.5291772083
!                  WRITE(17,'(A,3F15.8)') 'H',XX( 3,:)*0.5291772083
!                  WRITE(17,'(A,3F15.8)') 'H',XX( 4,:)*0.5291772083
!                  WRITE(17,'(A,3F15.8)') 'O',XX( 5,:)*0.5291772083
!                  WRITE(17,'(A,3F15.8)') 'O',XX( 6,:)*0.5291772083
!                  WRITE(17,'(A,3F15.8)') 'O',XX( 7,:)*0.5291772083
!                  WRITE(17,'(A,3F15.8)') 'O',XX( 8,:)*0.5291772083
!                  WRITE(17,'(A,3F15.8)') 'C',XX( 9,:)*0.5291772083
!                  WRITE(17,'(A,3F15.8)') 'C',XX(10,:)*0.5291772083

                  CALL GETPOT(VDP,NATOM,XX,RR)
                ELSE
                  IF(IWHICH.EQ.0)THEN
                    CALL GETPT5(VDP,NPOT,IPOT,JPOT,CPOT,NMODE,QQ)
                  ELSE
                    CALL GETQPT(VDP,NMODE,QQ,XTANPM)
                  END IF
                END IF
C**INTRINSIC
C               IF(IND.NE.0)THEN
                  CALL SET75(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1            MM5/MD5,VDP,M1,M2,M3,M4,M5)
C               ELSE
C                 IF(JCOUPL.GE.0)THEN
C                   V(M5,M4,M3,M2,M1)=VDP
C                 ELSE
C                   VR(M5,M4,M3,M2,M1)=VDP
C                 END IF
C               END IF
                IF(VDP.LT.VMIN.AND.MAXCHK(5).GT.0)THEN
                  WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2,
     1            MODE3,MODE4,MODE5
                  WRITE(IOUT,*)'M1,M2,M3,M4,M5 ',M1,M2,M3,M4,M5
                  WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5 ',XQ1(M1),XQ2(M2),
     1            XQ3(M3),XQ4(M4),XQ5(M5)
                  WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
                  WRITE(IOUT,*)'*****************************'
                  WRITE(IOUT,*)
                END IF
              END DO
            END DO
          END DO
        END DO
      END DO
C*************************************************************
      IF(MODE1.EQ.MODCHK.OR.MODE2.EQ.MODCHK.OR.MODE3.EQ.MODCHK.OR.
     1MODE4.EQ.MODCHK.OR.MODE5.EQ.MODCHK)THEN
        IF(MODE1.EQ.MODCHK)THEN
          MX1=MM1/2
          MX2=MM2/MD2
          MX3=MM3/MD3
          MX4=MM4/MD4
          MX5=MM5/MD5
          MDD1=MD1
        END IF
        IF(MODE2.EQ.MODCHK)THEN
          MX1=MM2/2
          MX2=MM1/MD1
          MX3=MM3/MD3
          MX4=MM4/MD4
          MX5=MM5/MD5
          MDD1=MD2
        END IF
        IF(MODE3.EQ.MODCHK)THEN
          MX1=MM3/2
          MX2=MM1/MD1
          MX3=MM2/MD2
          MX4=MM4/MD4
          MX5=MM5/MD5
          MDD1=MD3
        END IF
        IF(MODE4.EQ.MODCHK)THEN
          MX1=MM4/2
          MX2=MM1/MD1
          MX3=MM2/MD2
          MX4=MM3/MD3
          MX5=MM5/MD5
          MDD1=MD4
        END IF
        IF(MODE5.EQ.MODCHK)THEN
          MX1=MM5/2
          MX2=MM1/MD1
          MX3=MM2/MD2
          MX4=MM3/MD3
          MX5=MM4/MD4
          MDD1=MD5
        END IF
        IF(MAXCHK(5).GT.0)THEN
          WRITE(IOUT,*)'START GRID INSPECTION FOR MODE ',MODCHK
        ELSE
          WRITE(IOUT,*)'START HOLE SEARCH FOR MODE ',MODCHK
        END IF
        DO M2=1,MX2
          DO M3=1,MX3
            DO M4=1,MX4
              DO M5=1,MX5
                IF(MODE1.EQ.MODCHK)THEN
                  MZ2=M2
                  MZ3=M3
                  MZ4=M4
                  MZ5=M5
                END IF
                IF(MODE2.EQ.MODCHK)THEN
                  MZ1=M2
                  MZ3=M3
                  MZ4=M4
                  MZ5=M5
                END IF
                IF(MODE3.EQ.MODCHK)THEN
                  MZ1=M2
                  MZ2=M3
                  MZ4=M4
                  MZ5=M5
                END IF
                IF(MODE4.EQ.MODCHK)THEN
                  MZ1=M2
                  MZ2=M3
                  MZ3=M4
                  MZ5=M5
                END IF
                IF(MODE5.EQ.MODCHK)THEN
                  MZ1=M2
                  MZ2=M3
                  MZ3=M4
                  MZ4=M5
                END IF
                IF(MAXCHK(5).LT.0)THEN
                  VLAST=-1.0D+20
                  MIN=0
                  GRAD=0
                  GRADDF=1
                  GRDFDF=0
                  DO M1=MX1,1,-1
                    IF(MODE1.EQ.MODCHK)MZ1=M1
                    IF(MODE2.EQ.MODCHK)MZ2=M1
                    IF(MODE3.EQ.MODCHK)MZ3=M1
                    IF(MODE4.EQ.MODCHK)MZ4=M1
                    IF(MODE5.EQ.MODCHK)MZ5=M1
                    VDP=VFUN5(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1              MM5/MD5,MZ1,MZ2,MZ3,MZ4,MZ5,VMIN,WAVENM)/WAVENM+
     2              VMIN
                    GRADPR=GRAD
                    GRDFPR=GRADDF
                    IF(M1.NE.MX1)THEN
                      IF(MODE1.EQ.MODCHK)
     1                GRAD=WAVENM*(VDP-VLAST)/(XQ1(M1)-XQ1(M1+1))
                      IF(MODE2.EQ.MODCHK)
     1                GRAD=WAVENM*(VDP-VLAST)/(XQ2(M1)-XQ2(M1+1))
                      IF(MODE3.EQ.MODCHK)
     1                GRAD=WAVENM*(VDP-VLAST)/(XQ3(M1)-XQ3(M1+1))
                      IF(MODE4.EQ.MODCHK)
     1                GRAD=WAVENM*(VDP-VLAST)/(XQ4(M1)-XQ4(M1+1))
                      IF(MODE5.EQ.MODCHK)
     1                GRAD=WAVENM*(VDP-VLAST)/(XQ5(M1)-XQ5(M1+1))
                      GRADDF=(GRAD-GRADPR)/GRAD
                      GRDFDF=(GRADDF-GRDFPR)
                    END IF
                    IF(VDP.GT.VLAST.OR.MIN.EQ.0)THEN
                      IF(VDP.GT.VLAST.AND.VLAST.GT.-1.0D+20)MIN=1
                      IF(VDP.LT.VLAST.AND.GRDFDF.GT.0)MIN=-1
                      VDIFF=VDP-VLAST
                      VLAST=VDP
                      CALL SET75(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1                MM5/MD5,VDP,MZ1,MZ2,MZ3,MZ4,MZ5)
C                     IF(VDP.LT.VMIN)THEN
C                       WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,
C    1                  MODE2,MODE3,MODE4,MODE5
C                       WRITE(IOUT,*)'M1,M2,M3,M4,M5 ',MZ1,MZ2,MZ3,MZ4,
C    1                  MZ5
C                       WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5 ',XQ1(MZ1),
C    1                  XQ2(MZ2),XQ3(MZ3),XQ4(MZ4),XQ5(MZ5)
C                       WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
C                       WRITE(IOUT,*)'*****************************'
C                       WRITE(IOUT,*)
C                     END IF
                    ELSE
                      CALL SET75(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1                MM5/MD5,VLAST+VDIFF,MZ1,MZ2,MZ3,MZ4,MZ5)
                      VLAST=VLAST+VDIFF
C                     IF(VLAST.LT.VMIN)THEN
C                       WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,
C    1                  MODE2,MODE3,MODE4,MODE5
C                       WRITE(IOUT,*)'M1,M2,M3,M4,M5 ',MZ1,MZ2,MZ3,MZ4,
C    1                  MZ5
C                       WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5 ',XQ1(MZ1),
C    1                  XQ2(MZ2),XQ3(MZ3),XQ4(MZ4),XQ5(MZ5)
C                       WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
C                       WRITE(IOUT,*)'*****************************'
C                       WRITE(IOUT,*)
C                     END IF
                    END IF
                  END DO
                  IF(MDD1.EQ.2)GO TO 1000
                  VLAST=-1.0D+20
                  MIN=0
                  GRAD=0
                  GRADDF=1
                  GRDFDF=0
                  DO M1=MX1+1,2*MX1
                    IF(MODE1.EQ.MODCHK)MZ1=M1
                    IF(MODE2.EQ.MODCHK)MZ2=M1
                    IF(MODE3.EQ.MODCHK)MZ3=M1
                    IF(MODE4.EQ.MODCHK)MZ4=M1
                    IF(MODE5.EQ.MODCHK)MZ5=M1
                    VDP=VFUN5(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1              MM5/MD5,MZ1,MZ2,MZ3,MZ4,MZ5,VMIN,WAVENM)/WAVENM+
     2              VMIN
                    GRADPR=GRAD
                    GRDFPR=GRADDF
                    IF(M1.NE.MX1+1)THEN
                      IF(MODE1.EQ.MODCHK)
     1                GRAD=WAVENM*(VDP-VLAST)/(XQ1(M1)-XQ1(M1-1))
                      IF(MODE2.EQ.MODCHK)
     1                GRAD=WAVENM*(VDP-VLAST)/(XQ2(M1)-XQ2(M1-1))
                      IF(MODE3.EQ.MODCHK)
     1                GRAD=WAVENM*(VDP-VLAST)/(XQ3(M1)-XQ3(M1-1))
                      IF(MODE4.EQ.MODCHK)
     1                GRAD=WAVENM*(VDP-VLAST)/(XQ4(M1)-XQ4(M1-1))
                      IF(MODE5.EQ.MODCHK)
     1                GRAD=WAVENM*(VDP-VLAST)/(XQ5(M1)-XQ5(M1-1))
                      GRADDF=(GRAD-GRADPR)/GRAD
                      GRDFDF=(GRADDF-GRDFPR)
                    END IF
                    IF(VDP.GT.VLAST.OR.MIN.EQ.0)THEN
                      IF(VDP.GT.VLAST.AND.VLAST.GT.-1.0D+20)MIN=1
                      IF(VDP.LT.VLAST.AND.GRDFDF.GT.0)MIN=-1
                      VDIFF=VDP-VLAST
                      VLAST=VDP
                      CALL SET75(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1                MM5/MD5,VDP,MZ1,MZ2,MZ3,MZ4,MZ5)
C                     IF(VDP.LT.VMIN)THEN
C                       WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,
C    1                  MODE2,MODE3,MODE4,MODE5
C                       WRITE(IOUT,*)'M1,M2,M3,M4,M5 ',MZ1,MZ2,MZ3,MZ4,
C    1                  MZ5
C                       WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5 ',XQ1(MZ1),
C    1                  XQ2(MZ2),XQ3(MZ3),XQ4(MZ4),XQ5(MZ5)
C                       WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
C                       WRITE(IOUT,*)'*****************************'
C                       WRITE(IOUT,*)
C                     END IF
                    ELSE
                      CALL SET75(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1                MM5/MD5,VLAST+VDIFF,MZ1,MZ2,MZ3,MZ4,MZ5)
                      VLAST=VLAST+VDIFF
C                     IF(VLAST.LT.VMIN)THEN
C                       WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,
C    1                  MODE2,MODE3,MODE4,MODE5
C                       WRITE(IOUT,*)'M1,M2,M3,M4,M5 ',MZ1,MZ2,MZ3,MZ4,
C    1                  MZ5
C                       WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5 ',XQ1(MZ1),
C    1                  XQ2(MZ2),XQ3(MZ3),XQ4(MZ4),XQ5(MZ5)
C                       WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
C                       WRITE(IOUT,*)'*****************************'
C                       WRITE(IOUT,*)
C                     END IF
                    END IF
                  END DO
1000              CONTINUE
                END IF
                IF(MODE1.EQ.MODCHK)THEN
                  MARK=0
                  DO M1=1,MM1/MD1
                    VDP=VFUN5(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1              MM5/MD5,M1,MZ2,MZ3,MZ4,MZ5,VMIN,WAVENM)
                    IF(VDP.LT.0.AND.MAXCHK(5).LT.0)THEN
                      MARK=1
                      WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1                MODE1,MODE2,MODE3,MODE4,MODE5
                      WRITE(IOUT,*)'M1,M2,M3,M4,M5 ',M1,MZ2,MZ3,MZ4,MZ5
                      WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5 ',XQ1(M1),XQ2(MZ2),
     1                XQ3(MZ3),XQ4(MZ4),XQ5(MZ5)
                      WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                      WRITE(IOUT,*)'*****************************'
                      WRITE(IOUT,*)
                    END IF
                  END DO
                  IF(MAXCHK(5).GT.0.OR.MARK.NE.0)THEN
                    WRITE(IOUT,*)'MODES',MODE2,MODE3,MODE4,MODE5,
     1              XQ2(MZ2),XQ3(MZ3),XQ4(MZ4),XQ5(MZ5)
                    WRITE(IOUT,*)'MODE',MODE1,(XQ1(M1),M1=1,MM1/MD1)
                    WRITE(IOUT,*)'V',(VFUN5(V,VR,MM1/MD1,MM2/MD2,
     1              MM3/MD3,MM4/MD4,MM5/MD5,M1,MZ2,MZ3,MZ4,MZ5,VMIN,
     2              WAVENM),M1=1,MM1/MD1)
                  END IF
                END IF
                IF(MODE2.EQ.MODCHK)THEN
                  MARK=0
                  DO M1=1,MM2/MD2
                    VDP=VFUN5(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1              MM5/MD5,MZ1,M1,MZ3,MZ4,MZ5,VMIN,WAVENM)
                    IF(VDP.LT.0.AND.MAXCHK(5).LT.0)THEN
                      MARK=1
                      WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1                MODE1,MODE2,MODE3,MODE4,MODE5
                      WRITE(IOUT,*)'M1,M2,M3,M4,M5 ',MZ1,M1,MZ3,MZ4,MZ5
                      WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5 ',XQ1(MZ1),XQ2(M1),
     1                XQ3(MZ3),XQ4(MZ4),XQ5(MZ5)
                      WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                      WRITE(IOUT,*)'*****************************'
                      WRITE(IOUT,*)
                    END IF
                  END DO
                  IF(MAXCHK(5).GT.0.OR.MARK.NE.0)THEN
                    WRITE(IOUT,*)'MODES',MODE1,MODE3,MODE4,MODE5,
     1              XQ1(MZ1),XQ3(MZ3),XQ4(MZ4),XQ5(MZ5)
                    WRITE(IOUT,*)'MODE',MODE2,(XQ2(M1),M1=1,MM2/MD2)
                    WRITE(IOUT,*)'V',(VFUN5(V,VR,MM1/MD1,MM2/MD2,
     1              MM3/MD3,MM4/MD4,MM5/MD5,MZ1,M1,MZ3,MZ4,MZ5,VMIN,
     2              WAVENM),M1=1,MM2/MD2)
                  END IF
                END IF
                IF(MODE3.EQ.MODCHK)THEN
                  MARK=0
                  DO M1=1,MM3/MD3
                    VDP=VFUN5(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1              MM5/MD5,MZ1,MZ2,M1,MZ4,MZ5,VMIN,WAVENM)
                    IF(VDP.LT.0.AND.MAXCHK(5).LT.0)THEN
                      MARK=1
                      WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1                MODE1,MODE2,MODE3,MODE4,MODE5
                      WRITE(IOUT,*)'M1,M2,M3,M4,M5 ',MZ1,MZ2,M1,MZ4,MZ5
                      WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5 ',XQ1(MZ1),XQ2(MZ2),
     1                XQ3(M1),XQ4(MZ4),XQ5(MZ5)
                      WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                      WRITE(IOUT,*)'*****************************'
                      WRITE(IOUT,*)
                    END IF
                  END DO
                  IF(MAXCHK(5).GT.0.OR.MARK.NE.0)THEN
                    WRITE(IOUT,*)'MODES',MODE1,MODE2,MODE4,MODE5,
     1              XQ1(MZ1),XQ2(MZ2),XQ4(MZ4),XQ5(MZ5)
                    WRITE(IOUT,*)'MODE',MODE3,(XQ3(M1),M1=1,MM3/MD3)
                    WRITE(IOUT,*)'V',(VFUN5(V,VR,MM1/MD1,MM2/MD2,
     1              MM3/MD3,MM4/MD4,MM5/MD5,MZ1,MZ2,M1,MZ4,MZ5,VMIN,
     2              WAVENM),M1=1,MM3/MD3)
                  END IF
                END IF
                IF(MODE4.EQ.MODCHK)THEN
                  MARK=0
                  DO M1=1,MM4/MD4
                    VDP=VFUN5(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1              MM5/MD5,MZ1,MZ2,MZ3,M1,MZ5,VMIN,WAVENM)
                    IF(VDP.LT.0.AND.MAXCHK(5).LT.0)THEN
                      MARK=1
                      WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1                MODE1,MODE2,MODE3,MODE4,MODE5
                      WRITE(IOUT,*)'M1,M2,M3,M4,M5 ',MZ1,MZ2,MZ3,M1,MZ5
                      WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5 ',XQ1(MZ1),XQ2(MZ2),
     1                XQ3(MZ3),XQ4(M1),XQ5(MZ5)
                      WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                      WRITE(IOUT,*)'*****************************'
                      WRITE(IOUT,*)
                    END IF
                  END DO
                  IF(MAXCHK(5).GT.0.OR.MARK.NE.0)THEN
                    WRITE(IOUT,*)'MODES',MODE1,MODE2,MODE3,MODE5,
     1              XQ1(MZ1),XQ2(MZ2),XQ3(MZ3),XQ5(MZ5)
                    WRITE(IOUT,*)'MODE',MODE4,(XQ4(M1),M1=1,MM4/MD4)
                    WRITE(IOUT,*)'V',(VFUN5(V,VR,MM1/MD1,MM2/MD2,
     1              MM3/MD3,MM4/MD4,MM5/MD5,MZ1,MZ2,MZ3,M1,MZ5,VMIN,
     2              WAVENM),M1=1,MM4/MD4)
                  END IF
                END IF
                IF(MODE5.EQ.MODCHK)THEN
                  MARK=0
                  DO M1=1,MM5/MD5
                    VDP=VFUN5(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1              MM5/MD5,MZ1,MZ2,MZ3,MZ4,M1,VMIN,WAVENM)
                    IF(VDP.LT.0.AND.MAXCHK(5).LT.0)THEN
                      MARK=1
                      WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1                MODE1,MODE2,MODE3,MODE4,MODE5
                      WRITE(IOUT,*)'M1,M2,M3,M4,M5 ',MZ1,MZ2,MZ3,MZ4,M1
                      WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5 ',XQ1(MZ1),XQ2(MZ2),
     1                XQ3(MZ3),XQ4(MZ4),XQ5(M1)
                      WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                      WRITE(IOUT,*)'*****************************'
                      WRITE(IOUT,*)
                    END IF
                  END DO
                  IF(MAXCHK(5).GT.0.OR.MARK.NE.0)THEN
                    WRITE(IOUT,*)'MODES',MODE1,MODE2,MODE3,MODE4,
     1              XQ1(MZ1),XQ2(MZ2),XQ3(MZ3),XQ4(MZ4)
                    WRITE(IOUT,*)'MODE',MODE5,(XQ5(M1),M1=1,MM5/MD5)
                    WRITE(IOUT,*)'V',(VFUN5(V,VR,MM1/MD1,MM2/MD2,
     1              MM3/MD3,MM4/MD4,MM5/MD5,MZ1,MZ2,MZ3,MZ4,M1,VMIN,
     2              WAVENM),M1=1,MM5/MD5)
                  END IF
                END IF
              END DO
            END DO
          END DO
        END DO
        IF(MAXCHK(5).GT.0)THEN
          WRITE(IOUT,*)'END GRID INSPECTION FOR MODE ',MODCHK
        ELSE
          WRITE(IOUT,*)'END HOLE SEARCH FOR MODE ',MODCHK
        END IF
        WRITE(IOUT,*)
      END IF

C**INTRINSIC
      IF(MOLINC.LE.0)GO TO 9999
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        K11=K1-1
        DO K2=1,K11
          CALL INTARR(NBF,MBF,K2,I2,J2,L2)
          K22=K2-1
          DO K3=1,K22
            CALL INTARR(NBF,MBF,K3,I3,J3,L3)
            K33=K3-1
            DO K4=1,K33
              CALL INTARR(NBF,MBF,K4,I4,J4,L4)
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3.AND.K4.EQ.
     1        MODE4)THEN
                CALL DUMPT4(XQ1,XQ2,XQ3,XQ4,J1,J2,J3,J4,NMODE,NATOM,QQ,
     1          RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,K4,V4,V4R,
     2          0,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3          DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4          MAX3,NP4,CP4,VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,
     5          INDL,INDN,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,XMODQ)
                CALL FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,
     1          MODE1,MM1,MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,MODE4,MM4,
     2          MD4,1)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3.AND.K4.EQ.
     1        MODE5)THEN
                CALL DUMPT4(XQ1,XQ2,XQ3,XQ5,J1,J2,J3,J4,NMODE,NATOM,QQ,
     1          RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,K4,V4,V4R,
     2          0,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3          DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4          MAX3,NP4,CP4,VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,
     5          INDL,INDN,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,XMODQ)
                CALL FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,
     1          MODE1,MM1,MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,MODE5,MM5,
     2          MD5,2)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE4.AND.K4.EQ.
     1        MODE5)THEN
                CALL DUMPT4(XQ1,XQ2,XQ4,XQ5,J1,J2,J3,J4,NMODE,NATOM,QQ,
     1          RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,K4,V4,V4R,
     2          0,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3          DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4          MAX3,NP4,CP4,VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,
     5          INDL,INDN,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,XMODQ)
                CALL FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,
     1          MODE1,MM1,MD1,MODE2,MM2,MD2,MODE4,MM4,MD4,MODE5,MM5,
     2          MD5,3)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4.AND.K4.EQ.
     1        MODE5)THEN
                CALL DUMPT4(XQ1,XQ3,XQ4,XQ5,J1,J2,J3,J4,NMODE,NATOM,QQ,
     1          RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,K4,V4,V4R,
     2          0,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3          DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4          MAX3,NP4,CP4,VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,
     5          INDL,INDN,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,XMODQ)
                CALL FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,
     1          MODE1,MM1,MD1,MODE3,MM3,MD3,MODE4,MM4,MD4,MODE5,MM5,
     2          MD5,4)
              END IF
              IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4.AND.K4.EQ.
     1        MODE5)THEN
                CALL DUMPT4(XQ2,XQ3,XQ4,XQ5,J1,J2,J3,J4,NMODE,NATOM,QQ,
     1          RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,K4,V4,V4R,
     2          0,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3          DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4          MAX3,NP4,CP4,VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,
     5          INDL,INDN,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,XMODQ)
                CALL FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,
     1          MODE2,MM2,MD2,MODE3,MM3,MD3,MODE4,MM4,MD4,MODE5,MM5,
     2          MD5,5)
              END IF
            END DO
          END DO
        END DO
      END DO
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        K11=K1-1
        DO K2=1,K11
          CALL INTARR(NBF,MBF,K2,I2,J2,L2)
          K22=K2-1
          DO K3=1,K22
            CALL INTARR(NBF,MBF,K3,I3,J3,L3)
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3)THEN
              CALL DUMPT3(XQ1,XQ2,XQ3,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,
     1        MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,1)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE4)THEN
              CALL DUMPT3(XQ1,XQ2,XQ4,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,
     1        MD1,MODE2,MM2,MD2,MODE4,MM4,MD4,2)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE5)THEN
              CALL DUMPT3(XQ1,XQ2,XQ5,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,
     1        MD1,MODE2,MM2,MD2,MODE5,MM5,MD5,3)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4)THEN
              CALL DUMPT3(XQ1,XQ3,XQ4,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,
     1        MD1,MODE3,MM3,MD3,MODE4,MM4,MD4,4)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE5)THEN
              CALL DUMPT3(XQ1,XQ3,XQ5,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,
     1        MD1,MODE3,MM3,MD3,MODE5,MM5,MD5,5)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE4.AND.K3.EQ.MODE5)THEN
              CALL DUMPT3(XQ1,XQ4,XQ5,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,
     1        MD1,MODE4,MM4,MD4,MODE5,MM5,MD5,6)
            END IF
            IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4)THEN
              CALL DUMPT3(XQ2,XQ3,XQ4,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE2,MM2,
     1        MD2,MODE3,MM3,MD3,MODE4,MM4,MD4,7)
            END IF
            IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE5)THEN
              CALL DUMPT3(XQ2,XQ3,XQ5,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE2,MM2,
     1        MD2,MODE3,MM3,MD3,MODE5,MM5,MD5,8)
            END IF
            IF(K1.EQ.MODE2.AND.K2.EQ.MODE4.AND.K3.EQ.MODE5)THEN
              CALL DUMPT3(XQ2,XQ4,XQ5,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE2,MM2,
     1        MD2,MODE4,MM4,MD4,MODE5,MM5,MD5,9)
            END IF
            IF(K1.EQ.MODE3.AND.K2.EQ.MODE4.AND.K3.EQ.MODE5)THEN
              CALL DUMPT3(XQ3,XQ4,XQ5,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE3,MM3,
     1        MD3,MODE4,MM4,MD4,MODE5,MM5,MD5,10)
            END IF
          END DO
        END DO
      END DO
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        K11=K1-1
        DO K2=1,K11
          CALL INTARR(NBF,MBF,K2,I2,J2,L2)
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE2)THEN
            CALL DUMPT2(XQ1,XQ2,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE1,MM1,MD1,MODE2,
     1      MM2,MD2,1)
          END IF
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE3)THEN
            CALL DUMPT2(XQ1,XQ3,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE1,MM1,MD1,MODE3,
     1      MM3,MD3,2)
          END IF
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE4)THEN
            CALL DUMPT2(XQ1,XQ4,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE1,MM1,MD1,MODE4,
     1      MM4,MD4,3)
          END IF
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE5)THEN
            CALL DUMPT2(XQ1,XQ5,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE1,MM1,MD1,MODE5,
     1      MM5,MD5,4)
          END IF
          IF(K1.EQ.MODE2.AND.K2.EQ.MODE3)THEN
            CALL DUMPT2(XQ2,XQ3,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE2,MM2,MD2,MODE3,
     1      MM3,MD3,5)
          END IF
          IF(K1.EQ.MODE2.AND.K2.EQ.MODE4)THEN
            CALL DUMPT2(XQ2,XQ4,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE2,MM2,MD2,MODE4,
     1      MM4,MD4,6)
          END IF
          IF(K1.EQ.MODE2.AND.K2.EQ.MODE5)THEN
            CALL DUMPT2(XQ2,XQ5,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE2,MM2,MD2,MODE5,
     1      MM5,MD5,7)
          END IF
          IF(K1.EQ.MODE3.AND.K2.EQ.MODE4)THEN
            CALL DUMPT2(XQ3,XQ4,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE3,MM3,MD3,MODE4,
     1      MM4,MD4,8)
          END IF
          IF(K1.EQ.MODE3.AND.K2.EQ.MODE5)THEN
            CALL DUMPT2(XQ3,XQ5,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE3,MM3,MD3,MODE5,
     1      MM5,MD5,9)
          END IF
          IF(K1.EQ.MODE4.AND.K2.EQ.MODE5)THEN
            CALL DUMPT2(XQ4,XQ5,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE4,MM4,MD4,MODE5,
     1      MM5,MD5,10)
          END IF
        END DO
      END DO
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        IF(K1.EQ.MODE1)THEN
          CALL DUMPT1(XQ1,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,K1,V1,V1R,0,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2    XMODQ)
          CALL FIX71(V1,V1R,J1,VP1,MMX1,K1,MODE1,MM1,MD1,1)
        END IF
        IF(K1.EQ.MODE2)THEN
          CALL DUMPT1(XQ2,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,K1,V1,V1R,0,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2    XMODQ)
          CALL FIX71(V1,V1R,J1,VP1,MMX1,K1,MODE2,MM2,MD2,2)
        END IF
        IF(K1.EQ.MODE3)THEN
          CALL DUMPT1(XQ3,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,K1,V1,V1R,0,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2    XMODQ)
          CALL FIX71(V1,V1R,J1,VP1,MMX1,K1,MODE3,MM3,MD3,3)
        END IF
        IF(K1.EQ.MODE4)THEN
          CALL DUMPT1(XQ4,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,K1,V1,V1R,0,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2    XMODQ)
          CALL FIX71(V1,V1R,J1,VP1,MMX1,K1,MODE4,MM4,MD4,4)
        END IF
        IF(K1.EQ.MODE5)THEN
          CALL DUMPT1(XQ5,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,K1,V1,V1R,0,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2    XMODQ)
          CALL FIX71(V1,V1R,J1,VP1,MMX1,K1,MODE5,MM5,MD5,5)
        END IF
      END DO
      DO M1=1,MM1/MD1
        X1=VP1(M1,1)
        DO M2=1,MM2/MD2
          X2=VP1(M2,2)
          X12=VP2(M2,M1,1)
          DO M3=1,MM3/MD3
            X3=VP1(M3,3)
            X13=VP2(M3,M1,2)
            X23=VP2(M3,M2,5)
            X123=VP3(M3,M2,M1,1)
            DO M4=1,MM4/MD4
              X4=VP1(M4,4)
              X14=VP2(M4,M1,3)
              X24=VP2(M4,M2,6)
              X34=VP2(M4,M3,8)
              X124=VP3(M4,M2,M1,2)
              X134=VP3(M4,M3,M1,4)
              X234=VP3(M4,M3,M2,7)
              X1234=VP4(M4,M3,M2,M1,1)
              DO M5=1,MM5/MD5
                X5=VP1(M5,5)
                X15=VP2(M5,M1,4)
                X25=VP2(M5,M2,7)
                X35=VP2(M5,M3,9)
                X45=VP2(M5,M4,10)
                X125=VP3(M5,M2,M1,3)
                X135=VP3(M5,M3,M1,5)
                X145=VP3(M5,M4,M1,6)
                X235=VP3(M5,M3,M2,8)
                X245=VP3(M5,M4,M2,9)
                X345=VP3(M5,M4,M3,10)
                X1235=VP4(M5,M3,M2,M1,2)
                X1245=VP4(M5,M4,M2,M1,3)
                X1345=VP4(M5,M4,M3,M1,4)
                X2345=VP4(M5,M4,M3,M2,5)
                CALL GET75(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1          MM5/MD5,VDP,M1,M2,M3,M4,M5)
                VDP=VDP-X1-X2-X3-X4-X5-X12-X13-X14-X15-X23-X24-X25-X34-
     1          X35-X45-X123-X124-X125-X134-X135-X145-X234-X235-X245-
     1          X345-X1234-X1235-X1245-X1345-X2345
                IF(JCOUPL.GE.0)THEN
                  VDP=VDP-VP
                ELSE
                  VDP=VDP-VPR
                END IF
                CALL SET75(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1          MM5/MD5,VDP,M1,M2,M3,M4,M5)
              END DO
            END DO
          END DO
        END DO
      END DO
9999  CONTINUE
      IF(IND.NE.0)THEN
        CALL OUT75(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,MM5/MD5)
      END IF
      CALL FLUSH(I75)
      RETURN
      END
C****************************************************************
      DOUBLE PRECISION FUNCTION VFUN5(V,VR,MM1,MM2,MM3,MM4,MM5,M1,M2,
     1M3,M4,M5,VMIN,WAVENM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION V(MM5,MM4,MM3,MM2,MM1)
      REAL*4 VR(MM5,MM4,MM3,MM2,MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GT.0)THEN
        VFUN5=(V(M5,M4,M3,M2,M1)-VMIN)*WAVENM
      ELSE
        VFUN5=(VR(M5,M4,M3,M2,M1)-VMIN)*WAVENM
      END IF
      RETURN
      END
C****************************************************************
      SUBROUTINE DUMVT5(XQ1,XQ2,XQ3,XQ4,XQ5,MM1,MM2,MM3,MM4,MM5,NMODE,
     1NATOM,QQ,RR,XX,X0,XL,XM,MODE1,MODE2,MODE3,MODE4,MODE5,V,VR,MODINT,
     2MMTAU,XMODQ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR,ABINIT
C**INTRINSIC
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM5,MM4,MM3,MM2,MM1)
      REAL*4 VR(MM5,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE),XMODQ(NMODE)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),XQ4(MM4),XQ5(MM5)
      DIMENSION RR(NATOM,NATOM),QQ(NMODE)
      DIMENSION X0(NATOM,3),XM(NATOM)
CCCC  DIMENSION XX(NATOM,3,362),XL(NATOM,NMODE,3,362)
      DIMENSION XX(NATOM,3,722),XL(NATOM,NMODE,3,722)
      COMMON/WHICH/IWHICH
      COMMON/ABINIT/ABINIT
      COMMON/TYPE/LINEAR
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
C**ASSUME STARTING VALUE TAU: INIT
C**ASSUME NEXT VALUE TAU: INIT+INCTAU
C**ITAU=2 EQUIVALENT TO ITAU=722
      COMMON/REACTN/IREACT,MMXTAU,INIT,INCTAU
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/FILASS/IOUT
      IF(LINEAR)THEN
        ITAU=1
      ELSE
        ITAU=INIT-INCTAU
      END IF
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N4.EQ.N5)MD5=1
      IF(N1.EQ.NT.AND.MDT.GT.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.GT.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.GT.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.GT.1)MD4=1
      IF(N5.EQ.NT.AND.MDT.GT.1)MD5=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.GT.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.GT.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N1T.EQ.N5.AND.MDT.GT.1)MD5=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.GT.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N2T.EQ.N5.AND.MDT.GT.1)MD5=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N3T.EQ.N5.AND.MDT.GT.1)MD5=1
      N4T=ISYMP(N4,NT)
      IF(N4T.EQ.N5.AND.MDT.GT.1)MD5=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.GT.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N12T.EQ.N5.AND.MDT.GT.1)MD5=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N13T.EQ.N5.AND.MDT.GT.1)MD5=1
      N14T=ISYMP(N14,NT)
      IF(N14T.EQ.N5.AND.MDT.GT.1)MD5=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N23T.EQ.N5.AND.MDT.GT.1)MD5=1
      N24T=ISYMP(N24,NT)
      IF(N24T.EQ.N5.AND.MDT.GT.1)MD5=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N124.EQ.N5)MD5=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N123T.EQ.N5.AND.MDT.GT.1)MD5=1
      N124T=ISYMP(N124,NT)
      IF(N124T.EQ.N5.AND.MDT.GT.1)MD5=1
      N134T=ISYMP(N134,NT)
      IF(N134T.EQ.N5.AND.MDT.GT.1)MD5=1
      N234T=ISYMP(N234,NT)
      IF(N234T.EQ.N5.AND.MDT.GT.1)MD5=1
      N1234=ISYMP(N123,N4)
      IF(N1234.EQ.N5)MD5=1
      N1234T=ISYMP(N1234,NT)
      IF(N1234T.EQ.N5.AND.MDT.GT.1)MD5=1
C**LOOP ROUND TAU
      DO MTAU=1,MMTAU/MDT
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720
        DO K=1,NMODE
          QQ(K)=0
        END DO
        DO M1=1,MM1/MD1
          QQ(MODE1)=XQ1(M1)*XMODQ(MODE1)
          DO M2=1,MM2/MD2
            QQ(MODE2)=XQ2(M2)*XMODQ(MODE2)
            DO M3=1,MM3/MD3
              QQ(MODE3)=XQ3(M3)*XMODQ(MODE3)
              DO M4=1,MM4/MD4
                QQ(MODE4)=XQ4(M4)*XMODQ(MODE4)
                DO M5=1,MM5/MD5
                  QQ(MODE5)=XQ5(M5)*XMODQ(MODE5)
                  IF(IWHICH.NE.0)THEN
                    DO I=1,NATOM
                      DO J=1,3
                        XX(I,J,1)=(XX(I,J,ITAU)+XL(I,MODE1,J,ITAU)*
     1                  QQ(MODE1))/SQRT(XM(I))
                        XX(I,J,1)=XX(I,J,1)+XL(I,MODE2,J,ITAU)*
     1                  QQ(MODE2)/SQRT(XM(I))
                        XX(I,J,1)=XX(I,J,1)+XL(I,MODE3,J,ITAU)*
     1                  QQ(MODE3)/SQRT(XM(I))
                        XX(I,J,1)=XX(I,J,1)+XL(I,MODE4,J,ITAU)*
     1                  QQ(MODE4)/SQRT(XM(I))
                        XX(I,J,1)=XX(I,J,1)+XL(I,MODE5,J,ITAU)*
     1                  QQ(MODE5)/SQRT(XM(I))
                      END DO
                    END DO
                    IF(ABINIT)THEN
                      CALL GETAPT(VDP,NATOM,XX,RR,QQ,NMODE,ITAU)
                    ELSE
                      CALL GETPOT(VDP,NATOM,XX,RR)
                    END IF
                  ELSE
                  END IF
C**INTRINSIC
                  IF(MOLINC.LE.0)THEN
                    CALL SET75(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1              MM5/MD5,VDP,M1,M2,M3,M4,M5)
                  ELSE
                  END IF
                END DO
              END DO
            END DO
          END DO
        END DO
        IF(MOLINC.LE.0)
     1  CALL OUT75(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,MM5/MD5)
      END DO
9999  CONTINUE
      CALL FLUSH(75)
      RETURN
      END
C****************************************************************
      SUBROUTINE DUMCR5(XQ1,XQ2,XQ3,XQ4,XQ5,MM1,MM2,MM3,MM4,MM5,NMODE,
     1NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,MODE1,MODE2,MODE3,MODE4,
     2MODE5,V,VR,VM,VMR,JMAX,IND,MODINT,NBF,MBF,VP1,VP2,VP3,VP4,V1,V1R,
     3V2,V2R,V3,V3R,V4,V4R,MMX1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM5,MM4,MM3,MM2,16),V1(MMX1),V2(MMX1,MMX1,6),
     1V3(MMX1,MMX1,MMX1,10),V4(MMX1,MMX1,MMX1,MMX1,15)
      REAL*4 VR(MM5,MM4,MM3,MM2,16),V1R(MMX1),V2R(MMX1,MMX1,6),
     1V3R(MMX1,MMX1,MMX1,10),V4R(MMX1,MMX1,MMX1,MMX1,15)
      REAL*8 V0,VM0(6)
      REAL*4 V0R,VM0R(6)
      LOGICAL LINEAR
      DIMENSION VP1(MMX1,5),VP2(MMX1,MMX1,6,10),
     1VP3(MMX1,MMX1,MMX1,10,10),VP4(MMX1,MMX1,MMX1,MMX1,15,5)
      DIMENSION X12(6),X13(6),X14(6),X15(6),X23(6),X24(6),X25(6)
      DIMENSION X34(6),X35(6),X45(6)
      DIMENSION X123(10),X124(10),X125(10),X134(10),X135(10),X145(10)
      DIMENSION X234(10),X235(10),X245(10),X345(10)
      DIMENSION X1234(15),X1235(15),X1245(15),X1345(15),X2345(15)
      DIMENSION MODINT(NMODE),NBF(1),MBF(1)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),XQ4(MM4),XQ5(MM5)
      DIMENSION QQ(NMODE),XZ(NMODE,NMODE,3)
      DIMENSION AB(NMODE,3),B(NMODE,NMODE),AA(NMODE,3,3),BB(NMODE)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      COMMON/MOMI/XK(3,3),XMU(3,3)
      COMMON/TYPE/LINEAR
      COMMON/JCORIO/JCORIO
      COMMON/WHICH/IWHICH
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/IND85X/IND85
      COMMON/TORS/QTAU
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/FILASS/IOUT,INP
C**TEMPORARY (DIMENSIONS)
      COMMON/MULT/MULT(1000)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/MUREF/V0,VM0,V0R,VM0R
      JCORIO=JMAX
      MX=1
      MY=2
      MZ=3
C**INTRINSIC
      IF(IND.NE.0)THEN
        MD1=MODINT(MODE1)
        MD2=MODINT(MODE2)
        MD3=MODINT(MODE3)
        MD4=MODINT(MODE4)
        MD5=MODINT(MODE5)
        DO I=1,NWSYM
          DO J=1,NSYM(I)
            IF(MODE1.EQ.ISYM(I,J))N1=I
            IF(MODE2.EQ.ISYM(I,J))N2=I
            IF(MODE3.EQ.ISYM(I,J))N3=I
            IF(MODE4.EQ.ISYM(I,J))N4=I
            IF(MODE5.EQ.ISYM(I,J))N5=I
          END DO
        END DO
        IF(N1.EQ.N2)MD2=1
        IF(N1.EQ.N3)MD3=1
        IF(N1.EQ.N4)MD4=1
        IF(N1.EQ.N5)MD5=1
        IF(N2.EQ.N3)MD3=1
        IF(N2.EQ.N4)MD4=1
        IF(N2.EQ.N5)MD5=1
        IF(N3.EQ.N4)MD4=1
        IF(N3.EQ.N5)MD5=1
        IF(N4.EQ.N5)MD5=1
        N12=ISYMP(N1,N2)
        IF(N12.EQ.N3)MD3=1
        IF(N12.EQ.N4)MD4=1
        IF(N12.EQ.N5)MD5=1
        N13=ISYMP(N1,N3)
        IF(N13.EQ.N4)MD4=1
        IF(N13.EQ.N5)MD5=1
        N14=ISYMP(N1,N4)
        IF(N14.EQ.N5)MD5=1
        N23=ISYMP(N2,N3)
        IF(N23.EQ.N4)MD4=1
        IF(N23.EQ.N5)MD5=1
        N24=ISYMP(N2,N4)
        IF(N24.EQ.N5)MD5=1
        N34=ISYMP(N3,N4)
        IF(N34.EQ.N5)MD5=1
        N123=ISYMP(N12,N3)
        IF(N123.EQ.N4)MD4=1
        IF(N123.EQ.N5)MD5=1
        N124=ISYMP(N12,N4)
        IF(N124.EQ.N5)MD5=1
        N134=ISYMP(N13,N4)
        IF(N134.EQ.N5)MD5=1
        N234=ISYMP(N23,N4)
        IF(N234.EQ.N5)MD5=1
        N1234=ISYMP(N12,N34)
        IF(N1234.EQ.N5)MD5=1
      ELSE
        MD1=1
        MD2=1
        MD3=1
        MD4=1
        MD5=1
      END IF
      IF(JMAX.EQ.0)THEN
C**INTRINSIC
        IF(MOLINC.GT.0)THEN
          DO K1=1,MODE1
            CALL INTARR(NBF,MBF,K1,I1,J1,L1)
            K11=K1-1
            DO K2=1,K11
              CALL INTARR(NBF,MBF,K2,I2,J2,L2)
              K22=K2-1
              DO K3=1,K22
                CALL INTARR(NBF,MBF,K3,I3,J3,L3)
                K33=K3-1
                DO K4=1,K33
                  CALL INTARR(NBF,MBF,K4,I4,J4,L4)
                  IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3.AND.
     1            K4.EQ.MODE4)THEN
                    CALL DUMCR4(XQ1,XQ2,XQ3,XQ4,J1,J2,J3,J4,NMODE,
     1              NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,K4,V4,
     2              V4R,VM,VMR,JMAX,0,MODINT,NBF,MBF,VP1,VP2,VP3,V1,
     3              V1R,V2,V2R,V3,V3R,MMX1)
                    CALL FIX84(V4,V4R,J1,J2,J3,J4,VP4,MMX1,K1,K2,K3,K4,
     1              MODE1,MM1,MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,MODE4,
     2              MM4,MD4,1)
                  END IF
                  IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3.AND.
     1            K5.EQ.MODE5)THEN
                    CALL DUMCR4(XQ1,XQ2,XQ3,XQ5,J1,J2,J3,J4,NMODE,
     1              NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,K4,V4,
     2              V4R,VM,VMR,JMAX,0,MODINT,NBF,MBF,VP1,VP2,VP3,V1,
     3              V1R,V2,V2R,V3,V3R,MMX1)
                    CALL FIX84(V4,V4R,J1,J2,J3,J4,VP4,MMX1,K1,K2,K3,K4,
     1              MODE1,MM1,MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,MODE5,
     2              MM5,MD5,2)
                  END IF
                  IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K4.EQ.MODE4.AND.
     1            K5.EQ.MODE5)THEN
                    CALL DUMCR4(XQ1,XQ2,XQ4,XQ5,J1,J2,J3,J4,NMODE,
     1              NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,K4,V4,
     2              V4R,VM,VMR,JMAX,0,MODINT,NBF,MBF,VP1,VP2,VP3,V1,
     3              V1R,V2,V2R,V3,V3R,MMX1)
                    CALL FIX84(V4,V4R,J1,J2,J3,J4,VP4,MMX1,K1,K2,K3,K4,
     1              MODE1,MM1,MD1,MODE2,MM2,MD2,MODE4,MM4,MD4,MODE5,
     2              MM5,MD5,3)
                  END IF
                  IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4.AND.
     1            K4.EQ.MODE5)THEN
                    CALL DUMCR4(XQ1,XQ3,XQ4,XQ5,J1,J2,J3,J4,NMODE,
     1              NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,K4,V4,
     2              V4R,VM,VMR,JMAX,0,MODINT,NBF,MBF,VP1,VP2,VP3,V1,
     3              V1R,V2,V2R,V3,V3R,MMX1)
                    CALL FIX84(V4,V4R,J1,J2,J3,J4,VP4,MMX1,K1,K2,K3,K4,
     1              MODE1,MM1,MD1,MODE3,MM3,MD3,MODE4,MM4,MD4,MODE5,
     2              MM5,MD5,4)
                  END IF
                  IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4.AND.
     1            K4.EQ.MODE5)THEN
                    CALL DUMCR4(XQ2,XQ3,XQ4,XQ5,J1,J2,J3,J4,NMODE,
     1              NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,K4,V4,
     2              V4R,VM,VMR,JMAX,0,MODINT,NBF,MBF,VP1,VP2,VP3,V1,
     3              V1R,V2,V2R,V3,V3R,MMX1)
                    CALL FIX84(V4,V4R,J1,J2,J3,J4,VP4,MMX1,K1,K2,K3,K4,
     1              MODE2,MM2,MD2,MODE3,MM3,MD3,MODE4,MM4,MD4,MODE5,
     2              MM5,MD5,5)
                  END IF
                END DO
              END DO
            END DO
          END DO
          DO K1=1,MODE1
            CALL INTARR(NBF,MBF,K1,I1,J1,L1)
            K11=K1-1
            DO K2=1,K11
              CALL INTARR(NBF,MBF,K2,I2,J2,L2)
              K22=K2-1
              DO K3=1,K22
                CALL INTARR(NBF,MBF,K3,I3,J3,L3)
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3)THEN
                  CALL DUMCR3(XQ1,XQ2,XQ3,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE1,
     1            MM1,MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,1)
                END IF
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE4)THEN
                  CALL DUMCR3(XQ1,XQ2,XQ4,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE1,
     1            MM1,MD1,MODE2,MM2,MD2,MODE4,MM4,MD4,2)
                END IF
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE5)THEN
                  CALL DUMCR3(XQ1,XQ2,XQ5,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE1,
     1            MM1,MD1,MODE2,MM2,MD2,MODE5,MM5,MD5,3)
                END IF
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4)THEN
                  CALL DUMCR3(XQ1,XQ3,XQ4,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE1,
     1            MM1,MD1,MODE3,MM3,MD3,MODE4,MM4,MD4,4)
                END IF
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE5)THEN
                  CALL DUMCR3(XQ1,XQ3,XQ5,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE1,
     1            MM1,MD1,MODE3,MM3,MD3,MODE5,MM5,MD5,5)
                END IF
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE4.AND.K3.EQ.MODE5)THEN
                  CALL DUMCR3(XQ1,XQ4,XQ5,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE1,
     1            MM1,MD1,MODE4,MM4,MD4,MODE5,MM5,MD5,6)
                END IF
                IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4)THEN
                  CALL DUMCR3(XQ2,XQ3,XQ4,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE2,
     1            MM2,MD2,MODE3,MM3,MD3,MODE4,MM4,MD4,7)
                END IF
                IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE5)THEN
                  CALL DUMCR3(XQ2,XQ3,XQ5,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE2,
     1            MM2,MD2,MODE3,MM3,MD3,MODE5,MM5,MD5,8)
                END IF
                IF(K1.EQ.MODE2.AND.K2.EQ.MODE4.AND.K3.EQ.MODE5)THEN
                  CALL DUMCR3(XQ2,XQ4,XQ5,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE2,
     1            MM2,MD2,MODE4,MM4,MD4,MODE5,MM5,MD5,9)
                END IF
                IF(K1.EQ.MODE3.AND.K2.EQ.MODE4.AND.K3.EQ.MODE5)THEN
                  CALL DUMCR3(XQ3,XQ4,XQ5,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE3,
     1            MM3,MD3,MODE4,MM4,MD4,MODE5,MM5,MD5,10)
                END IF
              END DO
            END DO
          END DO
          DO K1=1,MODE1
            CALL INTARR(NBF,MBF,K1,I1,J1,L1)
            K11=K1-1
            DO K2=1,K11
              CALL INTARR(NBF,MBF,K2,I2,J2,L2)
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE2)THEN
                CALL DUMCR2(XQ1,XQ2,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1          XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     2          VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE1,MM1,MD1,
     1          MODE2,MM2,MD2,1)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE3)THEN
                CALL DUMCR2(XQ1,XQ3,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1          XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     2          VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE1,MM1,MD1,
     1          MODE3,MM3,MD3,2)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE4)THEN
                CALL DUMCR2(XQ1,XQ4,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1          XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     2          VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE1,MM1,MD1,
     1          MODE4,MM4,MD4,3)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE5)THEN
                CALL DUMCR2(XQ1,XQ5,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1          XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     2          VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE1,MM1,MD1,
     1          MODE5,MM5,MD5,4)
              END IF
              IF(K1.EQ.MODE2.AND.K2.EQ.MODE3)THEN
                CALL DUMCR2(XQ2,XQ3,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1          XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     2          VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE2,MM2,MD2,
     1          MODE3,MM3,MD3,5)
              END IF
              IF(K1.EQ.MODE2.AND.K2.EQ.MODE4)THEN
                CALL DUMCR2(XQ2,XQ4,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1          XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     2          VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE2,MM2,MD2,
     1          MODE4,MM4,MD4,6)
              END IF
              IF(K1.EQ.MODE2.AND.K2.EQ.MODE5)THEN
                CALL DUMCR2(XQ2,XQ5,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1          XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     2          VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE2,MM2,MD2,
     1          MODE5,MM5,MD5,7)
              END IF
              IF(K1.EQ.MODE3.AND.K2.EQ.MODE4)THEN
                CALL DUMCR2(XQ3,XQ4,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1          XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     2          VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE3,MM3,MD3,
     1          MODE4,MM4,MD4,8)
              END IF
              IF(K1.EQ.MODE3.AND.K2.EQ.MODE5)THEN
                CALL DUMCR2(XQ3,XQ5,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1          XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     2          VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE3,MM3,MD3,
     1          MODE5,MM5,MD5,9)
              END IF
              IF(K1.EQ.MODE4.AND.K2.EQ.MODE5)THEN
                CALL DUMCR2(XQ4,XQ5,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1          XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     2          VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE4,MM4,MD4,
     1          MODE5,MM5,MD5,10)
              END IF
            END DO
          END DO
          DO K1=1,MODE1
            CALL INTARR(NBF,MBF,K1,I1,J1,L1)
            IF(K1.EQ.MODE1)THEN
              CALL DUMCR1(XQ1,J1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1        XX,X0,XL,XM,K1,V1,V1R,VM,VMR,JMAX,0,MODINT)
              CALL FIX81(V1,V1R,J1,VP1,MMX1,K1,MODE1,MM1,MD1,1)
            END IF
            IF(K1.EQ.MODE2)THEN
              CALL DUMCR1(XQ2,J1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1        XX,X0,XL,XM,K1,V1,V1R,VM,VMR,JMAX,0,MODINT)
              CALL FIX81(V1,V1R,J1,VP1,MMX1,K1,MODE2,MM2,MD2,2)
            END IF
            IF(K1.EQ.MODE3)THEN
              CALL DUMCR1(XQ3,J1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1        XX,X0,XL,XM,K1,V1,V1R,VM,VMR,JMAX,0,MODINT)
              CALL FIX81(V1,V1R,J1,VP1,MMX1,K1,MODE3,MM3,MD3,3)
            END IF
            IF(K1.EQ.MODE4)THEN
              CALL DUMCR1(XQ4,J1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1        XX,X0,XL,XM,K1,V1,V1R,VM,VMR,JMAX,0,MODINT)
              CALL FIX81(V1,V1R,J1,VP1,MMX1,K1,MODE4,MM4,MD4,4)
            END IF
            IF(K1.EQ.MODE5)THEN
              CALL DUMCR1(XQ5,J1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1        XX,X0,XL,XM,K1,V1,V1R,VM,VMR,JMAX,0,MODINT)
              CALL FIX81(V1,V1R,J1,VP1,MMX1,K1,MODE5,MM5,MD5,5)
            END IF
          END DO
        END IF
      END IF
      DO K=1,NMODE
        QQ(K)=0
        MULT(K)=0
      END DO
      MULT(MODE1)=1
      MULT(MODE2)=1
      MULT(MODE3)=1
      MULT(MODE4)=1
      MULT(MODE5)=1
      DO M1=1,MM1/MD1
        QQ(MODE1)=XQ1(M1)
C**
        DO M2=1,MM2/MD2
          QQ(MODE2)=XQ2(M2)
          DO M3=1,MM3/MD3
            QQ(MODE3)=XQ3(M3)
            DO M4=1,MM4/MD4
              QQ(MODE4)=XQ4(M4)
              DO M5=1,MM5/MD5
                QQ(MODE5)=XQ5(M5)
                CALL CORIOL(NMODE,NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,
     1          ZZ)
                IF(JMAX.EQ.0)THEN
                  IF(LINEAR)ZZ=0
C**INTRINSIC
C                 IF(IND.NE.0)THEN
                    CALL SET85(V,VR,MM2/MD2,MM3/MD3,MM4/MD4,
     1              MM5/MD5,B,BB,NMODE,ZZ,M2,M3,M4,M5,MODE1,MODE2,
     2              MODE3,MODE4,MODE5)
C                 ELSE
C                   V(M5,M4,M3,M2,1)=B(MODE1,MODE1)
C                   V(M5,M4,M3,M2,2)=B(MODE1,MODE2)
C                   V(M5,M4,M3,M2,3)=B(MODE1,MODE3)
C                   V(M5,M4,M3,M2,4)=B(MODE1,MODE4)
C                   V(M5,M4,M3,M2,5)=B(MODE1,MODE5)
C                   V(M5,M4,M3,M2,6)=B(MODE2,MODE2)
C                   V(M5,M4,M3,M2,7)=B(MODE2,MODE3)
C                   V(M5,M4,M3,M2,8)=B(MODE2,MODE4)
C                   V(M5,M4,M3,M2,9)=B(MODE2,MODE5)
C                   V(M5,M4,M3,M2,10)=B(MODE3,MODE3)
C                   V(M5,M4,M3,M2,11)=B(MODE3,MODE4)
C                   V(M5,M4,M3,M2,12)=B(MODE3,MODE5)
C                   V(M5,M4,M3,M2,13)=B(MODE4,MODE4)
C                   V(M5,M4,M3,M2,14)=B(MODE4,MODE5)
C                   V(M5,M4,M3,M2,15)=B(MODE5,MODE5)
C                   V(M5,M4,M3,M2,16)=ZZ
C                 END IF
                ELSE
CC                IF(.NOT.LINEAR)ZZ=0
CC                CALL SET95(VM,VMR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
CC   1            MM5/MD5,AB,NMODE,ZZ,M1,M2,M3,M4,M5,MODE1,MODE2,MODE3,
CC   2            MODE4,MODE5)
                END IF
              END DO
            END DO
          END DO
        END DO
        IF(JMAX.EQ.0)THEN
C**INTRINSIC
          IF(MOLINC.LE.0)GO TO 9999
CC        DO M1=1,MM1/MD1
            X1=VP1(M1,1)
            DO M2=1,MM2/MD2
              X2=VP1(M2,2)
              DO K=1,6
                X12(K)=VP2(M2,M1,K,1)
              END DO
              DO M3=1,MM3/MD3
                X3=VP1(M3,3)
                DO K=1,6
                  X13(K)=VP2(M3,M1,K,2)
                  X23(K)=VP2(M3,M2,K,5)
                END DO
                DO K=1,10
                  X123(K)=VP3(M3,M2,M1,K,1)
                END DO
                DO M4=1,MM4/MD4
                  X4=VP1(M4,4)
                  DO K=1,6
                    X14(K)=VP2(M4,M1,K,3)
                    X24(K)=VP2(M4,M2,K,6)
                    X34(K)=VP2(M4,M3,K,8)
                  END DO
                  DO K=1,10
                    X124(K)=VP3(M4,M2,M1,K,2)
                    X134(K)=VP3(M4,M3,M1,K,4)
                    X234(K)=VP3(M4,M3,M2,K,7)
                  END DO
                  DO K=1,15
                    X1234(K)=VP4(M4,M3,M2,M1,K,1)
                  END DO
                  DO M5=1,MM5/MD5
                    X5=VP1(M5,5)
                    DO K=1,6
                      X15(K)=VP2(M5,M1,K,4)
                      X25(K)=VP2(M5,M2,K,7)
                      X35(K)=VP2(M5,M3,K,9)
                      X45(K)=VP2(M5,M4,K,10)
                    END DO
                    DO K=1,10
                      X125(K)=VP3(M5,M2,M1,K,3)
                      X135(K)=VP3(M5,M3,M1,K,5)
                      X145(K)=VP3(M5,M4,M1,K,6)
                      X235(K)=VP3(M5,M3,M2,K,8)
                      X245(K)=VP3(M5,M4,M2,K,9)
                      X345(K)=VP3(M5,M4,M3,K,10)
                    END DO
                    DO K=1,15
                      X1235(K)=VP4(M5,M3,M2,M1,K,2)
                      X1245(K)=VP4(M5,M4,M2,M1,K,3)
                      X1345(K)=VP4(M5,M4,M3,M1,K,4)
                      X2345(K)=VP4(M5,M4,M3,M2,K,5)
                    END DO
                    CALL GET85(V,VR,MM2/MD2,MM3/MD3,MM4/MD4,
     1              MM5/MD5,B,BB,NMODE,ZZ,M2,M3,M4,M5,MODE1,MODE2,
     2              MODE3,MODE4,MODE5)
                    ZZ=ZZ-X1-X2-X3-X4-X5-X12(6)-X13(6)-X14(6)-X15(6)-
     1              X23(6)-X24(6)-X25(6)-X34(6)-X35(6)-X45(6)-
     2              X123(10)-X124(10)-X125(10)-X134(10)-X135(10)-
     3              X145(10)-X234(10)-X235(10)-X245(10)-X345(10)-
     4              X1234(15)-X1235(15)-X1245(15)-X1345(15)-X2345(15)
                    IF(JCOUPC.GE.0)THEN
                      ZZ=ZZ-V0
                    ELSE
                      ZZ=ZZ-V0R
                    END IF
                    B(MODE1,MODE1)=B(MODE1,MODE1)-X12(3)-X13(3)-X14(3)-
     1              X15(3)-X123(4)-X124(4)-X125(4)-X134(4)-X135(4)-
     2              X145(4)-X1234(5)-X1235(5)-X1245(5)-X1345(5)
                    B(MODE1,MODE2)=B(MODE1,MODE2)-X12(4)-X123(5)-
     1              X124(5)-X125(5)-X1234(6)-X1235(6)-X1245(6)
                    B(MODE1,MODE3)=B(MODE1,MODE3)-X13(4)-X123(6)-
     1              X134(5)-X135(5)-X1234(7)-X1235(7)-X1345(6)
                    B(MODE1,MODE4)=B(MODE1,MODE4)-X14(4)-X124(6)-
     1              X134(6)-X145(5)-X1234(8)-X1245(7)-X1345(7)
                    B(MODE1,MODE5)=B(MODE1,MODE5)-X15(4)-X125(6)-
     1              X135(6)-X145(6)-X1235(8)-X1245(8)-X1345(8)
                    B(MODE2,MODE2)=B(MODE2,MODE2)-X12(5)-X23(3)-X24(3)-
     1              X25(3)-X123(7)-X124(7)-X125(7)-X234(4)-X235(4)-
     2              X245(4)-X1234(9)-X1235(9)-X1245(9)-X2345(5)
                    B(MODE2,MODE3)=B(MODE2,MODE3)-X23(4)-X123(8)-
     1              X234(5)-X235(5)-X1234(10)-X1235(10)-X2345(6)
                    B(MODE2,MODE4)=B(MODE2,MODE4)-X24(4)-X124(8)-
     1              X234(6)-X245(5)-X1234(11)-X1245(10)-X2345(7)
                    B(MODE2,MODE5)=B(MODE2,MODE5)-X25(4)-X125(8)-
     1              X235(6)-X245(6)-X1235(11)-X1245(11)-X2345(8)
                    B(MODE3,MODE3)=B(MODE3,MODE3)-X13(5)-X23(5)-X34(3)-
     1              X35(3)-X123(9)-X134(7)-X135(7)-X234(7)-X235(7)-
     2              X345(4)-X1234(12)-X1235(12)-X1345(9)-X2345(9)
                    B(MODE3,MODE4)=B(MODE3,MODE4)-X34(4)-X134(8)-
     1              X234(8)-X345(5)-X1234(13)-X1345(10)-X2345(10)
                    B(MODE3,MODE5)=B(MODE3,MODE5)-X35(4)-X135(8)-
     1              X235(8)-X345(6)-X1235(13)-X1345(11)-X2345(11)
                    B(MODE4,MODE4)=B(MODE4,MODE4)-X14(5)-X24(5)-X34(5)-
     1              X45(3)-X124(9)-X134(9)-X145(7)-X234(9)-X245(7)-
     2              X345(7)-X1234(14)-X1245(12)-X1345(12)-X2345(12)
                    B(MODE4,MODE5)=B(MODE4,MODE5)-X45(4)-X145(8)-
     1              X245(8)-X345(8)-X1245(13)-X1345(13)-X2345(13)
                    B(MODE5,MODE5)=B(MODE5,MODE5)-X15(5)-X25(5)-X35(5)-
     1              X45(5)-X125(9)-X135(9)-X145(9)-X235(9)-X245(9)-
     2              X345(9)-X1235(14)-X1245(14)-X1345(14)-X2345(14)
                    CALL SET85(V,VR,MM2/MD2,MM3/MD3,MM4/MD4,
     1              MM5/MD5,B,BB,NMODE,ZZ,M2,M3,M4,M5,MODE1,MODE2,
     2              MODE3,MODE4,MODE5)
                  END DO
                END DO
              END DO
            END DO
CC        END DO
9999      CONTINUE
          IF(IND.NE.0)THEN
            CALL OUT85(V,VR,MM2/MD2,MM3/MD3,MM4/MD4,MM5/MD5)
          ELSE
            CALL OUT85X(V,MM2/MD2,MM3/MD3,MM4/MD4,MM5/MD5,IND85)
          END IF
        ELSE
CC        CALL OUT95(VM,VMR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,MM5/MD5)
        END IF
C**
      END DO
      CALL FLUSH(I85)
CC    CALL FLUSH(I95)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DUMPT6(XQ1,XQ2,XQ3,XQ4,XQ5,XQ6,MM1,MM2,MM3,MM4,MM5,
     1MM6,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,MODE1,
     2MODE2,MODE3,MODE4,MODE5,MODE6,V,VR,IND,MODINT,XTANPM,VP1,MMX1,
     3VP2,MAX2,VP3,MAX3,VP4,MAX4,VP5,MAX5,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,
     4V4,V4R,V5,V5R,XMODQ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C****************************************
C**NEVER CALLED FOR FITTING OF POTENTIALS
C****************************************
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM6,MM5,MM4,MM3,MM2,MM1),V1(MMX1),V2(MAX2,MAX2),
     1V3(MAX3,MAX3,MAX3),V4(MAX4,MAX4,MAX4,MAX4),
     2V5(MAX5,MAX5,MAX5,MAX5,MAX5),VP
      REAL*4 VR(MM6,MM5,MM4,MM3,MM2,MM1),V1R(MMX1),V2R(MAX2,MAX2),
     1V3R(MAX3,MAX3,MAX3),V4R(MAX4,MAX4,MAX4,MAX4),
     2V5R(MAX5,MAX5,MAX5,MAX5,MAX5),VPR
      DIMENSION VP1(MMX1,1),VP2(MAX2,MAX2,1),VP3(MAX3,MAX3,MAX3,1),
     1VP4(MAX4,MAX4,MAX4,MAX4,1),VP5(MAX5,MAX5,MAX5,MAX5,MAX5,1)
      DIMENSION MODINT(NMODE),XTANPM(NMODE),NBF(1),MBF(1),XMODQ(NMODE)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),XQ4(MM4),XQ5(MM5),XQ6(MM6)
      DIMENSION RR(NATOM,NATOM),QQ(NMODE)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT)
      COMMON/WHICH/IWHICH
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/UNITEX/I75,I76,I85,I86
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/VMIN/VMIN
      COMMON/CHKMAX/MAXCHK(6)
      COMMON/FUNDAM/WAVENM
      COMMON/FILASS/IOUT,INP
      COMMON/POTREF/VP,VPR
      DO K=1,NMODE
        QQ(K)=0
      END DO
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      MD6=MODINT(MODE6)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
          IF(MODE6.EQ.ISYM(I,J))N6=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N1.EQ.N6)MD6=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N2.EQ.N6)MD6=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N3.EQ.N6)MD6=1
      IF(N4.EQ.N5)MD5=1
      IF(N4.EQ.N6)MD6=1
      IF(N5.EQ.N6)MD6=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      IF(N12.EQ.N6)MD6=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      IF(N13.EQ.N6)MD6=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      IF(N14.EQ.N6)MD6=1
      N15=ISYMP(N1,N5)
      IF(N15.EQ.N6)MD6=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      IF(N23.EQ.N6)MD6=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      IF(N24.EQ.N6)MD6=1
      N25=ISYMP(N2,N5)
      IF(N25.EQ.N6)MD6=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      IF(N34.EQ.N6)MD6=1
      N35=ISYMP(N3,N5)
      IF(N35.EQ.N6)MD6=1
      N45=ISYMP(N4,N5)
      IF(N45.EQ.N6)MD6=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      IF(N123.EQ.N6)MD6=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      IF(N124.EQ.N6)MD6=1
      N125=ISYMP(N12,N5)
      IF(N125.EQ.N6)MD6=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      IF(N134.EQ.N6)MD6=1
      N135=ISYMP(N13,N5)
      IF(N135.EQ.N6)MD6=1
      N145=ISYMP(N14,N5)
      IF(N145.EQ.N6)MD6=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      IF(N234.EQ.N6)MD6=1
      N235=ISYMP(N23,N5)
      IF(N235.EQ.N6)MD6=1
      N245=ISYMP(N24,N5)
      IF(N245.EQ.N6)MD6=1
      N345=ISYMP(N34,N5)
      IF(N345.EQ.N6)MD6=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      IF(N1234.EQ.N6)MD6=1
      N1235=ISYMP(N12,N35)
      IF(N1235.EQ.N6)MD6=1
      N1245=ISYMP(N12,N45)
      IF(N1245.EQ.N6)MD6=1
      N1345=ISYMP(N13,N45)
      IF(N1345.EQ.N6)MD6=1
      N2345=ISYMP(N23,N45)
      IF(N2345.EQ.N6)MD6=1
      N12345=ISYMP(N123,N45)
      IF(N12345.EQ.N6)MD6=1
C
      MODCHK=IABS(MAXCHK(6))
      DO M1=1,MM1/MD1
        QQ(MODE1)=XQ1(M1)*XMODQ(MODE1)
        DO M2=1,MM2/MD2
          QQ(MODE2)=XQ2(M2)*XMODQ(MODE2)
          DO M3=1,MM3/MD3
            QQ(MODE3)=XQ3(M3)*XMODQ(MODE3)
            DO M4=1,MM4/MD4
              QQ(MODE4)=XQ4(M4)*XMODQ(MODE4)
              DO M5=1,MM5/MD5
                QQ(MODE5)=XQ5(M5)*XMODQ(MODE5)
                DO M6=1,MM6/MD6
                  QQ(MODE6)=XQ6(M6)*XMODQ(MODE6)
                  IF(IWHICH.NE.0)THEN
                    DO I=1,NATOM
                      DO J=1,3
                        XX(I,J)=X0(I,J)+XL(I,MODE1,J)*
     1                  QQ(MODE1)/SQRT(XM(I))
                        XX(I,J)=XX(I,J)+XL(I,MODE2,J)*QQ(MODE2)/
     1                  SQRT(XM(I))
                        XX(I,J)=XX(I,J)+XL(I,MODE3,J)*QQ(MODE3)/
     1                  SQRT(XM(I))
                        XX(I,J)=XX(I,J)+XL(I,MODE4,J)*QQ(MODE4)/
     1                  SQRT(XM(I))
                        XX(I,J)=XX(I,J)+XL(I,MODE5,J)*QQ(MODE5)/
     1                  SQRT(XM(I))
                        XX(I,J)=XX(I,J)+XL(I,MODE6,J)*QQ(MODE6)/
     1                  SQRT(XM(I))
                      END DO
                    END DO

!                    WRITE(18,'(I5)') NATOM
!                    WRITE(18,'(I4,F10.3,I4,F10.3,I4,F10.3,I4,F10.3
!     1              I4,F10.3,I4,F10.3)') MODE1, QQ(MODE1), MODE2,
!     2              QQ(MODE2), MODE3, QQ(MODE3), MODE4, QQ(MODE4),
!     3              MODE5, QQ(MODE5), MODE6, QQ(MODE6)
!                    WRITE(18,'(A,3F15.8)') 'H',XX( 1,:)*0.5291772083
!                    WRITE(18,'(A,3F15.8)') 'H',XX( 2,:)*0.5291772083
!                    WRITE(18,'(A,3F15.8)') 'H',XX( 3,:)*0.5291772083
!                    WRITE(18,'(A,3F15.8)') 'H',XX( 4,:)*0.5291772083
!                    WRITE(18,'(A,3F15.8)') 'O',XX( 5,:)*0.5291772083
!                    WRITE(18,'(A,3F15.8)') 'O',XX( 6,:)*0.5291772083
!                    WRITE(18,'(A,3F15.8)') 'O',XX( 7,:)*0.5291772083
!                    WRITE(18,'(A,3F15.8)') 'O',XX( 8,:)*0.5291772083
!                    WRITE(18,'(A,3F15.8)') 'C',XX( 9,:)*0.5291772083
!                    WRITE(18,'(A,3F15.8)') 'C',XX(10,:)*0.5291772083

                    CALL GETPOT(VDP,NATOM,XX,RR)
                  ELSE
                    IF(IWHICH.EQ.0)THEN
                      CALL GETPT6(VDP,NPOT,IPOT,JPOT,CPOT,NMODE,QQ)
                    ELSE
                      CALL GETQPT(VDP,NMODE,QQ,XTANPM)
                    END IF
                  END IF
                  CALL SET76(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1            MM5/MD5,MM6/MD6,VDP,M1,M2,M3,M4,M5,M6)
                  IF(VDP.LT.VMIN.AND.MAXCHK(6).GT.0)THEN
                    WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,MODE2,
     1              MODE3,MODE4,MODE5,MODE6
                    WRITE(IOUT,*)'M1,M2,M3,M4,M5,M6 ',M1,M2,M3,M4,M5,M6
                    WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5,Q6 ',XQ1(M1),XQ2(M2),
     1              XQ3(M3),XQ4(M4),XQ5(M5),XQ6(M6)
                    WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
                    WRITE(IOUT,*)'*****************************'
                    WRITE(IOUT,*)
                  END IF
                END DO
              END DO
            END DO
          END DO
        END DO
      END DO
C*************************************************************
      IF(MODE1.EQ.MODCHK.OR.MODE2.EQ.MODCHK.OR.MODE3.EQ.MODCHK.OR.
     1MODE4.EQ.MODCHK.OR.MODE5.EQ.MODCHK.OR.MODE6.EQ.MODCHK)THEN
        IF(MODE1.EQ.MODCHK)THEN
          MX1=MM1/2
          MX2=MM2/MD2
          MX3=MM3/MD3
          MX4=MM4/MD4
          MX5=MM5/MD5
          MX6=MM6/MD6
          MDD1=MD1
        END IF
        IF(MODE2.EQ.MODCHK)THEN
          MX1=MM2/2
          MX2=MM1/MD1
          MX3=MM3/MD3
          MX4=MM4/MD4
          MX5=MM5/MD5
          MX6=MM6/MD6
          MDD1=MD2
        END IF
        IF(MODE3.EQ.MODCHK)THEN
          MX1=MM3/2
          MX2=MM1/MD1
          MX3=MM2/MD2
          MX4=MM4/MD4
          MX5=MM5/MD5
          MX6=MM6/MD6
          MDD1=MD3
        END IF
        IF(MODE4.EQ.MODCHK)THEN
          MX1=MM4/2
          MX2=MM1/MD1
          MX3=MM2/MD2
          MX4=MM3/MD3
          MX5=MM5/MD5
          MX6=MM6/MD6
          MDD1=MD4
        END IF
        IF(MODE5.EQ.MODCHK)THEN
          MX1=MM5/2
          MX2=MM1/MD1
          MX3=MM2/MD2
          MX4=MM3/MD3
          MX5=MM4/MD4
          MX6=MM6/MD6
          MDD1=MD5
        END IF
        IF(MODE6.EQ.MODCHK)THEN
          MX1=MM6/2
          MX2=MM1/MD1
          MX3=MM2/MD2
          MX4=MM3/MD3
          MX5=MM4/MD4
          MX5=MM5/MD5
          MDD1=MD6
        END IF
        IF(MAXCHK(6).GT.0)THEN
          WRITE(IOUT,*)'START GRID INSPECTION FOR MODE ',MODCHK
        ELSE
          WRITE(IOUT,*)'START HOLE SEARCH FOR MODE ',MODCHK
        END IF
        DO M2=1,MX2
          DO M3=1,MX3
            DO M4=1,MX4
              DO M5=1,MX5
                DO M6=1,MX6
                  IF(MODE1.EQ.MODCHK)THEN
                    MZ2=M2
                    MZ3=M3
                    MZ4=M4
                    MZ5=M5
                    MZ6=M6
                  END IF
                  IF(MODE2.EQ.MODCHK)THEN
                    MZ1=M2
                    MZ3=M3
                    MZ4=M4
                    MZ5=M5
                    MZ6=M6
                  END IF
                  IF(MODE3.EQ.MODCHK)THEN
                    MZ1=M2
                    MZ2=M3
                    MZ4=M4
                    MZ5=M5
                    MZ6=M6
                  END IF
                  IF(MODE4.EQ.MODCHK)THEN
                    MZ1=M2
                    MZ2=M3
                    MZ3=M4
                    MZ5=M5
                    MZ6=M6
                  END IF
                  IF(MODE5.EQ.MODCHK)THEN
                    MZ1=M2
                    MZ2=M3
                    MZ3=M4
                    MZ4=M5
                    MZ6=M6
                  END IF
                  IF(MODE6.EQ.MODCHK)THEN
                    MZ1=M2
                    MZ2=M3
                    MZ3=M4
                    MZ4=M5
                    MZ5=M6
                  END IF
                  IF(MAXCHK(6).LT.0)THEN
                    VLAST=-1.0D+20
                    MIN=0
                    GRAD=0
                    GRADDF=1
                    GRDFDF=0
                    DO M1=MX1,1,-1
                      IF(MODE1.EQ.MODCHK)MZ1=M1
                      IF(MODE2.EQ.MODCHK)MZ2=M1
                      IF(MODE3.EQ.MODCHK)MZ3=M1
                      IF(MODE4.EQ.MODCHK)MZ4=M1
                      IF(MODE5.EQ.MODCHK)MZ5=M1
                      IF(MODE6.EQ.MODCHK)MZ6=M1
                      VDP=VFUN6(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1                MM5/MD5,MM6/MD6,MZ1,MZ2,MZ3,MZ4,MZ5,MZ6,VMIN,
     2                WAVENM)/WAVENM+VMIN
                      GRADPR=GRAD
                      GRDFPR=GRADDF
                      IF(M1.NE.MX1)THEN
                        IF(MODE1.EQ.MODCHK)
     1                  GRAD=WAVENM*(VDP-VLAST)/(XQ1(M1)-XQ1(M1+1))
                        IF(MODE2.EQ.MODCHK)
     1                  GRAD=WAVENM*(VDP-VLAST)/(XQ2(M1)-XQ2(M1+1))
                        IF(MODE3.EQ.MODCHK)
     1                  GRAD=WAVENM*(VDP-VLAST)/(XQ3(M1)-XQ3(M1+1))
                        IF(MODE4.EQ.MODCHK)
     1                  GRAD=WAVENM*(VDP-VLAST)/(XQ4(M1)-XQ4(M1+1))
                        IF(MODE5.EQ.MODCHK)
     1                  GRAD=WAVENM*(VDP-VLAST)/(XQ5(M1)-XQ5(M1+1))
                        IF(MODE6.EQ.MODCHK)
     1                  GRAD=WAVENM*(VDP-VLAST)/(XQ6(M1)-XQ6(M1+1))
                        GRADDF=(GRAD-GRADPR)/GRAD
                        GRDFDF=(GRADDF-GRDFPR)
                      END IF
                      IF(VDP.GT.VLAST.OR.MIN.EQ.0)THEN
                        IF(VDP.GT.VLAST.AND.VLAST.GT.-1.0D+20)MIN=1
                        IF(VDP.LT.VLAST.AND.GRDFDF.GT.0)MIN=-1
                        VDIFF=VDP-VLAST
                        VLAST=VDP
                        CALL SET76(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,
     1                  MM4/MD4,MM5/MD5,MM6/MD6,VDP,MZ1,MZ2,MZ3,MZ4,
     2                  MZ5,MZ6)
C                       IF(VDP.LT.VMIN)THEN
C                         WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,
C    1                    MODE2,MODE3,MODE4,MODE5,MODE6
C                         WRITE(IOUT,*)'M1,M2,M3,M4,M5,M6 ',MZ1,MZ2,
C    1                    MZ3,MZ4,MZ5,MZ6
C                         WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5,Q6 ',XQ1(MZ1),
C    1                    XQ2(MZ2),XQ3(MZ3),XQ4(MZ4),XQ5(MZ5),XQ6(MZ6)
C                         WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
C                         WRITE(IOUT,*)'*****************************'
C                         WRITE(IOUT,*)
C                       END IF
                      ELSE
                        CALL SET76(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,
     1                  MM4/MD4,MM5/MD5,MM6/MD6,VLAST+VDIFF,MZ1,MZ2,
     2                  MZ3,MZ4,MZ5,MZ6)
                        VLAST=VLAST+VDIFF
C                       IF(VLAST.LT.VMIN)THEN
C                         WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,
C    1                    MODE2,MODE3,MODE4,MODE5,MODE6
C                         WRITE(IOUT,*)'M1,M2,M3,M4,M5,M6 ',MZ1,MZ2,
C    1                    MZ3,MZ4,MZ5,MZ6
C                         WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5,Q6 ',XQ1(MZ1),
C    1                    XQ2(MZ2),XQ3(MZ3),XQ4(MZ4),XQ5(MZ5),XQ6(MZ6)
C                         WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
C                         WRITE(IOUT,*)'*****************************'
C                         WRITE(IOUT,*)
C                       END IF
                      END IF
                    END DO
                    IF(MDD1.EQ.2)GO TO 1000
                    VLAST=-1.0D+20
                    MIN=0
                    GRAD=0
                    GRADDF=1
                    GRDFDF=0
                    DO M1=MX1+1,2*MX1
                      IF(MODE1.EQ.MODCHK)MZ1=M1
                      IF(MODE2.EQ.MODCHK)MZ2=M1
                      IF(MODE3.EQ.MODCHK)MZ3=M1
                      IF(MODE4.EQ.MODCHK)MZ4=M1
                      IF(MODE5.EQ.MODCHK)MZ5=M1
                      IF(MODE6.EQ.MODCHK)MZ6=M1
                      VDP=VFUN6(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1                MM5/MD5,MM6/MD6,MZ1,MZ2,MZ3,MZ4,MZ5,MZ6,VMIN,
     2                WAVENM)/WAVENM+VMIN
                      GRADPR=GRAD
                      GRDFPR=GRADDF
                      IF(M1.NE.MX1+1)THEN
                        IF(MODE1.EQ.MODCHK)
     1                  GRAD=WAVENM*(VDP-VLAST)/(XQ1(M1)-XQ1(M1-1))
                        IF(MODE2.EQ.MODCHK)
     1                  GRAD=WAVENM*(VDP-VLAST)/(XQ2(M1)-XQ2(M1-1))
                        IF(MODE3.EQ.MODCHK)
     1                  GRAD=WAVENM*(VDP-VLAST)/(XQ3(M1)-XQ3(M1-1))
                        IF(MODE4.EQ.MODCHK)
     1                  GRAD=WAVENM*(VDP-VLAST)/(XQ4(M1)-XQ4(M1-1))
                        IF(MODE5.EQ.MODCHK)
     1                  GRAD=WAVENM*(VDP-VLAST)/(XQ5(M1)-XQ5(M1-1))
                        IF(MODE6.EQ.MODCHK)
     1                  GRAD=WAVENM*(VDP-VLAST)/(XQ6(M1)-XQ6(M1-1))
                        GRADDF=(GRAD-GRADPR)/GRAD
                        GRDFDF=(GRADDF-GRDFPR)
                      END IF
                      IF(VDP.GT.VLAST.OR.MIN.EQ.0)THEN
                        IF(VDP.GT.VLAST.AND.VLAST.GT.-1.0D+20)MIN=1
                        IF(VDP.LT.VLAST.AND.GRDFDF.GT.0)MIN=-1
                        VDIFF=VDP-VLAST
                        VLAST=VDP
                        CALL SET76(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,
     1                  MM4/MD4,MM5/MD5,MM6/MD6,VDP,MZ1,MZ2,MZ3,MZ4,
     2                  MZ5,MZ6)
C                       IF(VDP.LT.VMIN)THEN
C                         WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,
C    1                    MODE2,MODE3,MODE4,MODE5
C                         WRITE(IOUT,*)'M1,M2,M3,M4,M5,M6 ',MZ1,MZ2,
C    1                    MZ3,MZ4,MZ5,MZ6
C                         WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5,Q6 ',XQ1(MZ1),
C    1                    XQ2(MZ2),XQ3(MZ3),XQ4(MZ4),XQ5(MZ5),XQ6(MZ6)
C                         WRITE(IOUT,*)'POTENTIAL ',(VDP)*WAVENM
C                         WRITE(IOUT,*)'*****************************'
C                         WRITE(IOUT,*)
C                       END IF
                      ELSE
                        CALL SET76(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,
     1                  MM4/MD4,MM5/MD5,MM6/MD6,VLAST+VDIFF,MZ1,MZ2,
     2                  MZ3,MZ4,MZ5,MZ6)
                        VLAST=VLAST+VDIFF
C                       IF(VLAST.LT.VMIN)THEN
C                         WRITE(IOUT,*)'SUSPECT V FOR MODES ',MODE1,
C    1                    MODE2,MODE3,MODE4,MODE5
C                         WRITE(IOUT,*)'M1,M2,M3,M4,M5,M6 ',MZ1,MZ2,
C    1                    MZ3,MZ4,MZ5,MZ6
C                         WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5,Q6 ',XQ1(MZ1),
C    1                    XQ2(MZ2),XQ3(MZ3),XQ4(MZ4),XQ5(MZ5),XQ6(MZ6)
C                         WRITE(IOUT,*)'POTENTIAL ',(VLAST)*WAVENM
C                         WRITE(IOUT,*)'*****************************'
C                         WRITE(IOUT,*)
C                       END IF
                      END IF
                    END DO
1000                CONTINUE
                  END IF
                  IF(MODE1.EQ.MODCHK)THEN
                    MARK=0
                    DO M1=1,MM1/MD1
                      VDP=VFUN6(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1                MM5/MD5,MM6/MD6,M1,MZ2,MZ3,MZ4,MZ5,MZ6,VMIN,
     2                WAVENM)
                      IF(VDP.LT.0.AND.MAXCHK(6).LT.0)THEN
                        MARK=1
                        WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1                  MODE1,MODE2,MODE3,MODE4,MODE5,MODE6
                        WRITE(IOUT,*)'M1,M2,M3,M4,M5,M6 ',M1,MZ2,MZ3,
     1                  MZ4,MZ5,MZ6
                        WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5,Q6 ',XQ1(M1),
     1                  XQ2(MZ2),XQ3(MZ3),XQ4(MZ4),XQ5(MZ5),XQ6(MZ6)
                        WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                        WRITE(IOUT,*)'*****************************'
                        WRITE(IOUT,*)
                      END IF
                    END DO
                    IF(MAXCHK(6).GT.0.OR.MARK.NE.0)THEN
                      WRITE(IOUT,*)'MODES',MODE2,MODE3,MODE4,MODE5,
     1                MODE6,XQ2(MZ2),XQ3(MZ3),XQ4(MZ4),XQ5(MZ5),
     2                XQ6(MZ6)
                      WRITE(IOUT,*)'MODE',MODE1,(XQ1(M1),M1=1,MM1/MD1)
                      WRITE(IOUT,*)'V',(VFUN6(V,VR,MM1/MD1,MM2/MD2,
     1                MM3/MD3,MM4/MD4,MM5/MD5,MM6/MD6,M1,MZ2,MZ3,MZ4,
     2                MZ5,MZ6,VMIN,WAVENM),M1=1,MM1/MD1)
                    END IF
                  END IF
                  IF(MODE2.EQ.MODCHK)THEN
                    MARK=0
                    DO M1=1,MM2/MD2
                      VDP=VFUN6(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1                MM5/MD5,MM6/MD6,MZ1,M1,MZ3,MZ4,MZ5,MZ6,VMIN,
     2                WAVENM)
                      IF(VDP.LT.0.AND.MAXCHK(6).LT.0)THEN
                        MARK=1
                        WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1                  MODE1,MODE2,MODE3,MODE4,MODE5,MODE6
                        WRITE(IOUT,*)'M1,M2,M3,M4,M5,M6 ',MZ1,M1,MZ3,
     1                  MZ4,MZ5,MZ6
                        WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5,Q6 ',XQ1(MZ1),
     1                  XQ2(M1),XQ3(MZ3),XQ4(MZ4),XQ5(MZ5),XQ6(MZ6)
                        WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                        WRITE(IOUT,*)'*****************************'
                        WRITE(IOUT,*)
                      END IF
                    END DO
                    IF(MAXCHK(6).GT.0.OR.MARK.NE.0)THEN
                      WRITE(IOUT,*)'MODES',MODE1,MODE3,MODE4,MODE5,
     1                MODE6,XQ1(MZ1),XQ3(MZ3),XQ4(MZ4),XQ5(MZ5),
     2                XQ6(MZ6)
                      WRITE(IOUT,*)'MODE',MODE2,(XQ2(M1),M1=1,MM2/MD2)
                      WRITE(IOUT,*)'V',(VFUN6(V,VR,MM1/MD1,MM2/MD2,
     1                MM3/MD3,MM4/MD4,MM5/MD5,MM6/MD6,MZ1,M1,MZ3,MZ4,
     2                MZ5,MZ6,VMIN,WAVENM),M1=1,MM2/MD2)
                    END IF
                  END IF
                  IF(MODE3.EQ.MODCHK)THEN
                    MARK=0
                    DO M1=1,MM3/MD3
                      VDP=VFUN6(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1                MM5/MD5,MM6/MD6,MZ1,MZ2,M1,MZ4,MZ5,MZ6,VMIN,
     2                WAVENM)
                      IF(VDP.LT.0.AND.MAXCHK(6).LT.0)THEN
                        MARK=1
                        WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1                  MODE1,MODE2,MODE3,MODE4,MODE5,MODE6
                        WRITE(IOUT,*)'M1,M2,M3,M4,M5,M6 ',MZ1,MZ2,M1,
     1                  MZ4,MZ5,MZ6
                        WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5,Q6 ',XQ1(MZ1),
     1                  XQ2(MZ2),XQ3(M1),XQ4(MZ4),XQ5(MZ5),XQ6(MZ6)
                        WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                        WRITE(IOUT,*)'*****************************'
                        WRITE(IOUT,*)
                      END IF
                    END DO
                    IF(MAXCHK(6).GT.0.OR.MARK.NE.0)THEN
                      WRITE(IOUT,*)'MODES',MODE1,MODE2,MODE4,MODE5,
     1                MODE6,XQ1(MZ1),XQ2(MZ2),XQ4(MZ4),XQ5(MZ5),
     2                XQ6(MZ6)
                      WRITE(IOUT,*)'MODE',MODE3,(XQ3(M1),M1=1,MM3/MD3)
                      WRITE(IOUT,*)'V',(VFUN6(V,VR,MM1/MD1,MM2/MD2,
     1                MM3/MD3,MM4/MD4,MM5/MD5,MM6/MD6,MZ1,MZ2,M1,MZ4,
     2                MZ5,MZ6,VMIN,WAVENM),M1=1,MM3/MD3)
                    END IF
                  END IF
                  IF(MODE4.EQ.MODCHK)THEN
                    MARK=0
                    DO M1=1,MM4/MD4
                      VDP=VFUN6(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1                MM5/MD5,MM6/MD6,MZ1,MZ2,MZ3,M1,MZ5,MZ6,VMIN,
     2                WAVENM)
                      IF(VDP.LT.0.AND.MAXCHK(6).LT.0)THEN
                        MARK=1
                        WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1                  MODE1,MODE2,MODE3,MODE4,MODE5,MODE6
                        WRITE(IOUT,*)'M1,M2,M3,M4,M5,M6 ',MZ1,MZ2,MZ3,
     1                  M1,MZ5,MZ6
                        WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5,Q6 ',XQ1(MZ1),
     1                  XQ2(MZ2),XQ3(MZ3),XQ4(M1),XQ5(MZ5),XQ6(MZ6)
                        WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                        WRITE(IOUT,*)'*****************************'
                        WRITE(IOUT,*)
                      END IF
                    END DO
                    IF(MAXCHK(6).GT.0.OR.MARK.NE.0)THEN
                      WRITE(IOUT,*)'MODES',MODE1,MODE2,MODE3,MODE5,
     1                MODE6,XQ1(MZ1),XQ2(MZ2),XQ3(MZ3),XQ5(MZ5),
     2                XQ6(MZ6)
                      WRITE(IOUT,*)'MODE',MODE4,(XQ4(M1),M1=1,MM4/MD4)
                      WRITE(IOUT,*)'V',(VFUN6(V,VR,MM1/MD1,MM2/MD2,
     1                MM3/MD3,MM4/MD4,MM5/MD5,MM6/MD6,MZ1,MZ2,MZ3,M1,
     2                MZ5,MZ6,VMIN,WAVENM),M1=1,MM4/MD4)
                    END IF
                  END IF
                  IF(MODE5.EQ.MODCHK)THEN
                    MARK=0
                    DO M1=1,MM5/MD5
                      VDP=VFUN6(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1                MM5/MD5,MM6/MD6,MZ1,MZ2,MZ3,MZ4,M1,MZ6,VMIN,
     2                WAVENM)
                      IF(VDP.LT.0.AND.MAXCHK(6).LT.0)THEN
                        MARK=1
                        WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1                  MODE1,MODE2,MODE3,MODE4,MODE5,MODE6
                        WRITE(IOUT,*)'M1,M2,M3,M4,M5,M6 ',MZ1,MZ2,MZ3,
     1                  MZ4,M1,MZ6
                        WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5,Q6 ',XQ1(MZ1),
     1                  XQ2(MZ2),XQ3(MZ3),XQ4(MZ4),XQ5(M1),XQ6(MZ6)
                        WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                        WRITE(IOUT,*)'*****************************'
                        WRITE(IOUT,*)
                      END IF
                    END DO
                    IF(MAXCHK(6).GT.0.OR.MARK.NE.0)THEN
                      WRITE(IOUT,*)'MODES',MODE1,MODE2,MODE3,MODE4,
     1                MODE6,XQ1(MZ1),XQ2(MZ2),XQ3(MZ3),XQ4(MZ4),
     2                XQ6(MZ6)
                      WRITE(IOUT,*)'MODE',MODE5,(XQ5(M1),M1=1,MM5/MD5)
                      WRITE(IOUT,*)'V',(VFUN6(V,VR,MM1/MD1,MM2/MD2,
     1                MM3/MD3,MM4/MD4,MM5/MD5,MM6/MD6,MZ1,MZ2,MZ3,MZ4,
     2                M1,MZ6,VMIN,WAVENM),M1=1,MM5/MD5)
                    END IF
                  END IF
                  IF(MODE6.EQ.MODCHK)THEN
                    MARK=0
                    DO M1=1,MM6/MD6
                      VDP=VFUN6(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1                MM5/MD5,MM6/MD6,MZ1,MZ2,MZ3,MZ4,MZ5,M1,VMIN,
     2                WAVENM)
                      IF(VDP.LT.0.AND.MAXCHK(6).LT.0)THEN
                        MARK=1
                        WRITE(IOUT,*)'STILL HAVE SUSPECT V FOR MODES ',
     1                  MODE1,MODE2,MODE3,MODE4,MODE5,MODE6
                        WRITE(IOUT,*)'M1,M2,M3,M4,M5,M6 ',MZ1,MZ2,MZ3,
     1                  MZ4,MZ5,M1
                        WRITE(IOUT,*)'Q1,Q2,Q3,Q4,Q5,Q6 ',XQ1(MZ1),
     1                  XQ2(MZ2),XQ3(MZ3),XQ4(MZ4),XQ5(MZ5),XQ6(M1)
                        WRITE(IOUT,*)'POTENTIAL ',VDP+VMIN*WAVENM
                        WRITE(IOUT,*)'*****************************'
                        WRITE(IOUT,*)
                      END IF
                    END DO
                    IF(MAXCHK(6).GT.0.OR.MARK.NE.0)THEN
                      WRITE(IOUT,*)'MODES',MODE1,MODE2,MODE3,MODE4,
     1                MODE5,XQ1(MZ1),XQ2(MZ2),XQ3(MZ3),XQ4(MZ4),
     2                XQ5(MZ5)
                      WRITE(IOUT,*)'MODE',MODE6,(XQ6(M1),M1=1,MM6/MD6)
                      WRITE(IOUT,*)'V',(VFUN6(V,VR,MM1/MD1,MM2/MD2,
     1                MM3/MD3,MM4/MD4,MM5/MD5,MM6/MD6,MZ1,MZ2,MZ3,MZ4,
     2                MZ5,M1,VMIN,WAVENM),M1=1,MM6/MD6)
                    END IF
                  END IF
                END DO
              END DO
            END DO
          END DO
        END DO
        IF(MAXCHK(6).GT.0)THEN
          WRITE(IOUT,*)'END GRID INSPECTION FOR MODE ',MODCHK
        ELSE
          WRITE(IOUT,*)'END HOLE SEARCH FOR MODE ',MODCHK
        END IF
        WRITE(IOUT,*)
      END IF

C**INTRINSIC
      IF(MOLINC.LE.0)GO TO 9999
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        K11=K1-1
        DO K2=1,K11
          CALL INTARR(NBF,MBF,K2,I2,J2,L2)
          K22=K2-1
          DO K3=1,K22
            CALL INTARR(NBF,MBF,K3,I3,J3,L3)
            K33=K3-1
            DO K4=1,K33
              CALL INTARR(NBF,MBF,K4,I4,J4,L4)
              K44=K4-1
              DO K5=1,K44
                CALL INTARR(NBF,MBF,K5,I5,J5,L5)
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3.AND.K4.
     1          EQ.MODE4.AND.K5.EQ.MODE5)THEN
                  CALL DUMPT5(XQ1,XQ2,XQ3,XQ4,XQ5,J1,J2,J3,J4,J5,NMODE,
     1            NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,
     2            K4,K5,V5,V5R,0,MODINT,XTANPM,VP1,MMX1,VP2,MAX2,VP3,
     3            MAX3,VP4,MAX4,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,V4,V4R,
     4            XMODQ)
                  CALL FIX75(V5,V5R,J1,J2,J3,J4,J5,VP5,MAX5,K1,K2,K3,
     1            K4,K5,MODE1,MM1,MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,
     2            MODE4,MM4,MD4,MODE5,MM5,MD5,1)
                END IF
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3.AND.K4.
     1          EQ.MODE4.AND.K5.EQ.MODE6)THEN
                  CALL DUMPT5(XQ1,XQ2,XQ3,XQ4,XQ6,J1,J2,J3,J4,J5,NMODE,
     1            NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,
     2            K4,K5,V5,V5R,0,MODINT,XTANPM,VP1,MMX1,VP2,MAX2,VP3,
     3            MAX3,VP4,MAX4,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,V4,V4R,
     4            XMODQ)
                  CALL FIX75(V5,V5R,J1,J2,J3,J4,J5,VP5,MAX5,K1,K2,K3,
     1            K4,K5,MODE1,MM1,MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,
     2            MODE4,MM4,MD4,MODE6,MM6,MD6,2)
                END IF
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3.AND.K4.
     1          EQ.MODE5.AND.K5.EQ.MODE6)THEN
                  CALL DUMPT5(XQ1,XQ2,XQ3,XQ5,XQ6,J1,J2,J3,J4,J5,NMODE,
     1            NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,
     2            K4,K5,V5,V5R,0,MODINT,XTANPM,VP1,MMX1,VP2,MAX2,VP3,
     3            MAX3,VP4,MAX4,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,V4,V4R,
     4            XMODQ)
                  CALL FIX75(V5,V5R,J1,J2,J3,J4,J5,VP5,MAX5,K1,K2,K3,
     1            K4,K5,MODE1,MM1,MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,
     2            MODE5,MM5,MD5,MODE6,MM6,MD6,3)
                END IF
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE4.AND.K4.
     1          EQ.MODE5.AND.K5.EQ.MODE6)THEN
                  CALL DUMPT5(XQ1,XQ2,XQ4,XQ5,XQ6,J1,J2,J3,J4,J5,NMODE,
     1            NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,
     2            K4,K5,V5,V5R,0,MODINT,XTANPM,VP1,MMX1,VP2,MAX2,VP3,
     3            MAX3,VP4,MAX4,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,V4,V4R,
     4            XMODQ)
                  CALL FIX75(V5,V5R,J1,J2,J3,J4,J5,VP5,MAX5,K1,K2,K3,
     1            K4,K5,MODE1,MM1,MD1,MODE2,MM2,MD2,MODE4,MM4,MD4,
     2            MODE5,MM5,MD5,MODE6,MM6,MD6,4)
                END IF
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4.AND.K4.
     1          EQ.MODE5.AND.K5.EQ.MODE6)THEN
                  CALL DUMPT5(XQ1,XQ3,XQ4,XQ5,XQ6,J1,J2,J3,J4,J5,NMODE,
     1            NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,
     2            K4,K5,V5,V5R,0,MODINT,XTANPM,VP1,MMX1,VP2,MAX2,VP3,
     3            MAX3,VP4,MAX4,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,V4,V4R,
     4            XMODQ)
                  CALL FIX75(V5,V5R,J1,J2,J3,J4,J5,VP5,MAX5,K1,K2,K3,
     1            K4,K5,MODE1,MM1,MD1,MODE3,MM3,MD3,MODE4,MM4,MD4,
     2            MODE5,MM5,MD5,MODE6,MM6,MD6,5)
                END IF
                IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4.AND.K4.
     1          EQ.MODE5.AND.K5.EQ.MODE6)THEN
                  CALL DUMPT5(XQ2,XQ3,XQ4,XQ5,XQ6,J1,J2,J3,J4,J5,NMODE,
     1            NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,
     2            K4,K5,V5,V5R,0,MODINT,XTANPM,VP1,MMX1,VP2,MAX2,VP3,
     3            MAX3,VP4,MAX4,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,V4,V4R,
     4            XMODQ)
                  CALL FIX75(V5,V5R,J1,J2,J3,J4,J5,VP5,MAX5,K1,K2,K3,
     1            K4,K5,MODE2,MM2,MD2,MODE3,MM3,MD3,MODE4,MM4,MD4,
     2            MODE5,MM5,MD5,MODE6,MM6,MD6,6)
                END IF
              END DO
            END DO
          END DO
        END DO
      END DO
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        K11=K1-1
        DO K2=1,K11
          CALL INTARR(NBF,MBF,K2,I2,J2,L2)
          K22=K2-1
          DO K3=1,K22
            CALL INTARR(NBF,MBF,K3,I3,J3,L3)
            K33=K3-1
            DO K4=1,K33
              CALL INTARR(NBF,MBF,K4,I4,J4,L4)
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3.AND.K4.EQ.
     1        MODE4)THEN
                CALL DUMPT4(XQ1,XQ2,XQ3,XQ4,J1,J2,J3,J4,NMODE,NATOM,QQ,
     1          RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,K4,V4,V4R,
     2          0,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3          DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4          MAX3,NP4,CP4,VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,
     5          INDL,INDN,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,XMODQ)
                CALL FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,
     1          MODE1,MM1,MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,MODE4,MM4,
     2          MD4,1)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3.AND.K4.EQ.
     1        MODE5)THEN
                CALL DUMPT4(XQ1,XQ2,XQ3,XQ5,J1,J2,J3,J4,NMODE,NATOM,QQ,
     1          RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,K4,V4,V4R,
     2          0,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3          DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4          MAX3,NP4,CP4,VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,
     5          INDL,INDN,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,XMODQ)
                CALL FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,
     1          MODE1,MM1,MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,MODE5,MM5,
     2          MD5,2)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3.AND.K4.EQ.
     1        MODE6)THEN
                CALL DUMPT4(XQ1,XQ2,XQ3,XQ6,J1,J2,J3,J4,NMODE,NATOM,QQ,
     1          RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,K4,V4,V4R,
     2          0,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3          DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4          MAX3,NP4,CP4,VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,
     5          INDL,INDN,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,XMODQ)
                CALL FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,
     1          MODE1,MM1,MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,MODE6,MM6,
     2          MD6,3)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE4.AND.K4.EQ.
     1        MODE5)THEN
                CALL DUMPT4(XQ1,XQ2,XQ4,XQ5,J1,J2,J3,J4,NMODE,NATOM,QQ,
     1          RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,K4,V4,V4R,
     2          0,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3          DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4          MAX3,NP4,CP4,VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,
     5          INDL,INDN,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,XMODQ)
                CALL FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,
     1          MODE1,MM1,MD1,MODE2,MM2,MD2,MODE4,MM4,MD4,MODE5,MM5,
     2          MD5,4)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE4.AND.K4.EQ.
     1        MODE6)THEN
                CALL DUMPT4(XQ1,XQ2,XQ4,XQ6,J1,J2,J3,J4,NMODE,NATOM,QQ,
     1          RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,K4,V4,V4R,
     2          0,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3          DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4          MAX3,NP4,CP4,VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,
     5          INDL,INDN,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,XMODQ)
                CALL FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,
     1          MODE1,MM1,MD1,MODE2,MM2,MD2,MODE4,MM4,MD4,MODE6,MM6,
     2          MD6,5)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE5.AND.K4.EQ.
     1        MODE6)THEN
                CALL DUMPT4(XQ1,XQ2,XQ5,XQ6,J1,J2,J3,J4,NMODE,NATOM,QQ,
     1          RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,K4,V4,V4R,
     2          0,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3          DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4          MAX3,NP4,CP4,VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,
     5          INDL,INDN,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,XMODQ)
                CALL FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,
     1          MODE1,MM1,MD1,MODE2,MM2,MD2,MODE5,MM5,MD5,MODE6,MM6,
     2          MD6,6)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4.AND.K4.EQ.
     1        MODE5)THEN
                CALL DUMPT4(XQ1,XQ3,XQ4,XQ5,J1,J2,J3,J4,NMODE,NATOM,QQ,
     1          RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,K4,V4,V4R,
     2          0,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3          DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4          MAX3,NP4,CP4,VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,
     5          INDL,INDN,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,XMODQ)
                CALL FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,
     1          MODE1,MM1,MD1,MODE3,MM3,MD3,MODE4,MM4,MD4,MODE5,MM5,
     2          MD5,7)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4.AND.K4.EQ.
     1        MODE6)THEN
                CALL DUMPT4(XQ1,XQ3,XQ4,XQ6,J1,J2,J3,J4,NMODE,NATOM,QQ,
     1          RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,K4,V4,V4R,
     2          0,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3          DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4          MAX3,NP4,CP4,VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,
     5          INDL,INDN,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,XMODQ)
                CALL FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,
     1          MODE1,MM1,MD1,MODE3,MM3,MD3,MODE4,MM4,MD4,MODE6,MM6,
     2          MD6,8)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE5.AND.K4.EQ.
     1        MODE6)THEN
                CALL DUMPT4(XQ1,XQ3,XQ5,XQ6,J1,J2,J3,J4,NMODE,NATOM,QQ,
     1          RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,K4,V4,V4R,
     2          0,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3          DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4          MAX3,NP4,CP4,VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,
     5          INDL,INDN,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,XMODQ)
                CALL FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,
     1          MODE1,MM1,MD1,MODE3,MM3,MD3,MODE5,MM5,MD5,MODE6,MM6,
     2          MD6,9)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE4.AND.K3.EQ.MODE5.AND.K4.EQ.
     1        MODE6)THEN
                CALL DUMPT4(XQ1,XQ4,XQ5,XQ6,J1,J2,J3,J4,NMODE,NATOM,QQ,
     1          RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,K4,V4,V4R,
     2          0,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3          DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4          MAX3,NP4,CP4,VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,
     5          INDL,INDN,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,XMODQ)
                CALL FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,
     1          MODE1,MM1,MD1,MODE4,MM4,MD4,MODE5,MM5,MD5,MODE6,MM6,
     2          MD6,10)
              END IF
              IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4.AND.K4.EQ.
     1        MODE5)THEN
                CALL DUMPT4(XQ2,XQ3,XQ4,XQ5,J1,J2,J3,J4,NMODE,NATOM,QQ,
     1          RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,K4,V4,V4R,
     2          0,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3          DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4          MAX3,NP4,CP4,VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,
     5          INDL,INDN,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,XMODQ)
                CALL FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,
     1          MODE2,MM2,MD2,MODE3,MM3,MD3,MODE4,MM4,MD4,MODE5,MM5,
     2          MD5,11)
              END IF
              IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4.AND.K4.EQ.
     1        MODE6)THEN
                CALL DUMPT4(XQ2,XQ3,XQ4,XQ6,J1,J2,J3,J4,NMODE,NATOM,QQ,
     1          RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,K4,V4,V4R,
     2          0,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3          DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4          MAX3,NP4,CP4,VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,
     5          INDL,INDN,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,XMODQ)
                CALL FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,
     1          MODE2,MM2,MD2,MODE3,MM3,MD3,MODE4,MM4,MD4,MODE6,MM6,
     2          MD6,12)
              END IF
              IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE5.AND.K4.EQ.
     1        MODE6)THEN
                CALL DUMPT4(XQ2,XQ3,XQ5,XQ6,J1,J2,J3,J4,NMODE,NATOM,QQ,
     1          RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,K4,V4,V4R,
     2          0,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3          DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4          MAX3,NP4,CP4,VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,
     5          INDL,INDN,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,XMODQ)
                CALL FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,
     1          MODE2,MM2,MD2,MODE3,MM3,MD3,MODE5,MM5,MD5,MODE6,MM6,
     2          MD6,13)
              END IF
              IF(K1.EQ.MODE2.AND.K2.EQ.MODE4.AND.K3.EQ.MODE5.AND.K4.EQ.
     1        MODE6)THEN
                CALL DUMPT4(XQ2,XQ4,XQ5,XQ6,J1,J2,J3,J4,NMODE,NATOM,QQ,
     1          RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,K4,V4,V4R,
     2          0,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3          DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4          MAX3,NP4,CP4,VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,
     5          INDL,INDN,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,XMODQ)
                CALL FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,
     1          MODE2,MM2,MD2,MODE4,MM4,MD4,MODE5,MM5,MD5,MODE6,MM6,
     2          MD6,14)
              END IF
              IF(K1.EQ.MODE3.AND.K2.EQ.MODE4.AND.K3.EQ.MODE5.AND.K4.EQ.
     1        MODE6)THEN
                CALL DUMPT4(XQ3,XQ4,XQ5,XQ6,J1,J2,J3,J4,NMODE,NATOM,QQ,
     1          RR,XX,X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,K4,V4,V4R,
     2          0,MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3          DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4          MAX3,NP4,CP4,VP4,DP4A,DP4B,DP4C,DP4D,NTOT4,MAX4,INDK,
     5          INDL,INDN,NBF,MBF,V1,V1R,V2,V2R,V3,V3R,XMODQ)
                CALL FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,
     1          MODE3,MM3,MD3,MODE4,MM4,MD4,MODE5,MM5,MD5,MODE6,MM6,
     2          MD6,15)
              END IF
            END DO
          END DO
        END DO
      END DO
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        K11=K1-1
        DO K2=1,K11
          CALL INTARR(NBF,MBF,K2,I2,J2,L2)
          K22=K2-1
          DO K3=1,K22
            CALL INTARR(NBF,MBF,K3,I3,J3,L3)
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3)THEN
              CALL DUMPT3(XQ1,XQ2,XQ3,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,
     1        MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,1)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE4)THEN
              CALL DUMPT3(XQ1,XQ2,XQ4,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,
     1        MD1,MODE2,MM2,MD2,MODE4,MM4,MD4,2)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE5)THEN
              CALL DUMPT3(XQ1,XQ2,XQ5,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,
     1        MD1,MODE2,MM2,MD2,MODE5,MM5,MD5,3)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE6)THEN
              CALL DUMPT3(XQ1,XQ2,XQ6,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,
     1        MD1,MODE2,MM2,MD2,MODE6,MM6,MD6,4)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4)THEN
              CALL DUMPT3(XQ1,XQ3,XQ4,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,
     1        MD1,MODE3,MM3,MD3,MODE4,MM4,MD4,5)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE5)THEN
              CALL DUMPT3(XQ1,XQ3,XQ5,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,
     1        MD1,MODE3,MM3,MD3,MODE5,MM5,MD5,6)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE6)THEN
              CALL DUMPT3(XQ1,XQ3,XQ6,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,
     1        MD1,MODE3,MM3,MD3,MODE6,MM6,MD6,7)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE4.AND.K3.EQ.MODE5)THEN
              CALL DUMPT3(XQ1,XQ4,XQ5,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,
     1        MD1,MODE4,MM4,MD4,MODE5,MM5,MD5,8)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE4.AND.K3.EQ.MODE6)THEN
              CALL DUMPT3(XQ1,XQ4,XQ6,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,
     1        MD1,MODE4,MM4,MD4,MODE6,MM6,MD6,9)
            END IF
            IF(K1.EQ.MODE1.AND.K2.EQ.MODE5.AND.K3.EQ.MODE6)THEN
              CALL DUMPT3(XQ1,XQ5,XQ6,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,
     1        MD1,MODE5,MM5,MD5,MODE6,MM6,MD6,10)
            END IF
            IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4)THEN
              CALL DUMPT3(XQ2,XQ3,XQ4,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE2,MM2,
     1        MD2,MODE3,MM3,MD3,MODE4,MM4,MD4,11)
            END IF
            IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE5)THEN
              CALL DUMPT3(XQ2,XQ3,XQ5,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE2,MM2,
     1        MD2,MODE3,MM3,MD3,MODE5,MM5,MD5,12)
            END IF
            IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE6)THEN
              CALL DUMPT3(XQ2,XQ3,XQ6,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE2,MM2,
     1        MD2,MODE3,MM3,MD3,MODE6,MM6,MD6,13)
            END IF
            IF(K1.EQ.MODE2.AND.K2.EQ.MODE4.AND.K3.EQ.MODE5)THEN
              CALL DUMPT3(XQ2,XQ4,XQ5,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE2,MM2,
     1        MD2,MODE4,MM4,MD4,MODE5,MM5,MD5,14)
            END IF
            IF(K1.EQ.MODE2.AND.K2.EQ.MODE4.AND.K3.EQ.MODE6)THEN
              CALL DUMPT3(XQ2,XQ4,XQ6,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE2,MM2,
     1        MD2,MODE4,MM4,MD4,MODE6,MM6,MD6,15)
            END IF
            IF(K1.EQ.MODE2.AND.K2.EQ.MODE5.AND.K3.EQ.MODE6)THEN
              CALL DUMPT3(XQ2,XQ5,XQ6,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE2,MM2,
     1        MD2,MODE5,MM5,MD5,MODE6,MM6,MD6,16)
            END IF
            IF(K1.EQ.MODE3.AND.K2.EQ.MODE4.AND.K3.EQ.MODE5)THEN
              CALL DUMPT3(XQ3,XQ4,XQ5,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE3,MM3,
     1        MD3,MODE4,MM4,MD4,MODE5,MM5,MD5,17)
            END IF
            IF(K1.EQ.MODE3.AND.K2.EQ.MODE4.AND.K3.EQ.MODE6)THEN
              CALL DUMPT3(XQ3,XQ4,XQ6,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE3,MM3,
     1        MD3,MODE4,MM4,MD4,MODE6,MM6,MD6,18)
            END IF
            IF(K1.EQ.MODE3.AND.K2.EQ.MODE5.AND.K3.EQ.MODE6)THEN
              CALL DUMPT3(XQ3,XQ5,XQ6,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE3,MM3,
     1        MD3,MODE5,MM5,MD5,MODE6,MM6,MD6,19)
            END IF
            IF(K1.EQ.MODE4.AND.K2.EQ.MODE5.AND.K3.EQ.MODE6)THEN
              CALL DUMPT3(XQ4,XQ5,XQ6,J1,J2,J3,NMODE,NATOM,QQ,RR,XX,
     1        X0,XL,XM,NPOT,IPOT,JPOT,CPOT,K1,K2,K3,V3,V3R,0,
     2        MODINT,XTANPM,NP1,CP1,VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,
     3        DP2A,DP2B,NTOT2,MAX2,NP3,CP3,VP3,DP3A,DP3B,DP3C,NTOT3,
     4        MAX3,INDK,INDL,NBF,MBF,V1,V1R,V2,V2R,XMODQ)
              CALL FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE4,MM4,
     1        MD4,MODE5,MM5,MD5,MODE6,MM6,MD6,20)
            END IF
          END DO
        END DO
      END DO
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        K11=K1-1
        DO K2=1,K11
          CALL INTARR(NBF,MBF,K2,I2,J2,L2)
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE2)THEN
            CALL DUMPT2(XQ1,XQ2,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE1,MM1,MD1,MODE2,
     1      MM2,MD2,1)
          END IF
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE3)THEN
            CALL DUMPT2(XQ1,XQ3,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE1,MM1,MD1,MODE3,
     1      MM3,MD3,2)
          END IF
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE4)THEN
            CALL DUMPT2(XQ1,XQ4,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE1,MM1,MD1,MODE4,
     1      MM4,MD4,3)
          END IF
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE5)THEN
            CALL DUMPT2(XQ1,XQ5,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE1,MM1,MD1,MODE5,
     1      MM5,MD5,4)
          END IF
          IF(K1.EQ.MODE1.AND.K2.EQ.MODE6)THEN
            CALL DUMPT2(XQ1,XQ6,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE1,MM1,MD1,MODE6,
     1      MM6,MD6,5)
          END IF
          IF(K1.EQ.MODE2.AND.K2.EQ.MODE3)THEN
            CALL DUMPT2(XQ2,XQ3,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE2,MM2,MD2,MODE3,
     1      MM3,MD3,6)
          END IF
          IF(K1.EQ.MODE2.AND.K2.EQ.MODE4)THEN
            CALL DUMPT2(XQ2,XQ4,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE2,MM2,MD2,MODE4,
     1      MM4,MD4,7)
          END IF
          IF(K1.EQ.MODE2.AND.K2.EQ.MODE5)THEN
            CALL DUMPT2(XQ2,XQ5,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE2,MM2,MD2,MODE5,
     1      MM5,MD5,8)
          END IF
          IF(K1.EQ.MODE2.AND.K2.EQ.MODE6)THEN
            CALL DUMPT2(XQ2,XQ6,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE2,MM2,MD2,MODE6,
     1      MM6,MD6,9)
          END IF
          IF(K1.EQ.MODE3.AND.K2.EQ.MODE4)THEN
            CALL DUMPT2(XQ3,XQ4,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE3,MM3,MD3,MODE4,
     1      MM4,MD4,10)
          END IF
          IF(K1.EQ.MODE3.AND.K2.EQ.MODE5)THEN
            CALL DUMPT2(XQ3,XQ5,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE3,MM3,MD3,MODE5,
     1      MM5,MD5,11)
          END IF
          IF(K1.EQ.MODE3.AND.K2.EQ.MODE6)THEN
            CALL DUMPT2(XQ3,XQ6,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE3,MM3,MD3,MODE6,
     1      MM6,MD6,12)
          END IF
          IF(K1.EQ.MODE4.AND.K2.EQ.MODE5)THEN
            CALL DUMPT2(XQ4,XQ5,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE4,MM4,MD4,MODE5,
     1      MM5,MD5,13)
          END IF
          IF(K1.EQ.MODE4.AND.K2.EQ.MODE6)THEN
            CALL DUMPT2(XQ4,XQ6,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE4,MM4,MD4,MODE6,
     1      MM6,MD6,14)
          END IF
          IF(K1.EQ.MODE5.AND.K2.EQ.MODE6)THEN
            CALL DUMPT2(XQ5,XQ6,J1,J2,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,
     1      NPOT,IPOT,JPOT,CPOT,K1,K2,V2,V2R,0,MODINT,XTANPM,NP1,CP1,
     2      VP1,DP1,NTOT1,MMX1,NP2,CP2,VP2,DP2A,DP2B,NTOT2,MAX2,INDK,
     3      NBF,MBF,V1,V1R,XMODQ)
            CALL FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE5,MM5,MD5,MODE6,
     1      MM6,MD6,15)
          END IF
        END DO
      END DO
      DO K1=1,MODE1
        CALL INTARR(NBF,MBF,K1,I1,J1,L1)
        IF(K1.EQ.MODE1)THEN
          CALL DUMPT1(XQ1,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,K1,V1,V1R,0,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2    XMODQ)
          CALL FIX71(V1,V1R,J1,VP1,MMX1,K1,MODE1,MM1,MD1,1)
        END IF
        IF(K1.EQ.MODE2)THEN
          CALL DUMPT1(XQ2,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,K1,V1,V1R,0,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2    XMODQ)
          CALL FIX71(V1,V1R,J1,VP1,MMX1,K1,MODE2,MM2,MD2,2)
        END IF
        IF(K1.EQ.MODE3)THEN
          CALL DUMPT1(XQ3,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,K1,V1,V1R,0,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2    XMODQ)
          CALL FIX71(V1,V1R,J1,VP1,MMX1,K1,MODE3,MM3,MD3,3)
        END IF
        IF(K1.EQ.MODE4)THEN
          CALL DUMPT1(XQ4,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,K1,V1,V1R,0,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2    XMODQ)
          CALL FIX71(V1,V1R,J1,VP1,MMX1,K1,MODE4,MM4,MD4,4)
        END IF
        IF(K1.EQ.MODE5)THEN
          CALL DUMPT1(XQ5,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,K1,V1,V1R,0,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2    XMODQ)
          CALL FIX71(V1,V1R,J1,VP1,MMX1,K1,MODE5,MM5,MD5,5)
        END IF
        IF(K1.EQ.MODE6)THEN
          CALL DUMPT1(XQ6,J1,NMODE,NATOM,QQ,RR,XX,X0,XL,XM,NPOT,IPOT,
     1    JPOT,CPOT,K1,V1,V1R,0,MODINT,XTANPM,NP1,CP1,JP1,VP1,DP1,MMX1,
     2    XMODQ)
          CALL FIX71(V1,V1R,J1,VP1,MMX1,K1,MODE6,MM6,MD6,6)
        END IF
      END DO
      DO M1=1,MM1/MD1
        X1=VP1(M1,1)
        DO M2=1,MM2/MD2
          X2=VP1(M2,2)
          X12=VP2(M2,M1,1)
          DO M3=1,MM3/MD3
            X3=VP1(M3,3)
            X13=VP2(M3,M1,2)
            X23=VP2(M3,M2,6)
            X123=VP3(M3,M2,M1,1)
            DO M4=1,MM4/MD4
              X4=VP1(M4,4)
              X14=VP2(M4,M1,3)
              X24=VP2(M4,M2,7)
              X34=VP2(M4,M3,10)
              X124=VP3(M4,M2,M1,2)
              X134=VP3(M4,M3,M1,5)
              X234=VP3(M4,M3,M2,11)
              X1234=VP4(M4,M3,M2,M1,1)
              DO M5=1,MM5/MD5
                X5=VP1(M5,5)
                X15=VP2(M5,M1,4)
                X25=VP2(M5,M2,8)
                X35=VP2(M5,M3,11)
                X45=VP2(M5,M4,13)
                X125=VP3(M5,M2,M1,3)
                X135=VP3(M5,M3,M1,6)
                X145=VP3(M5,M4,M1,8)
                X235=VP3(M5,M3,M2,12)
                X245=VP3(M5,M4,M2,14)
                X345=VP3(M5,M4,M3,17)
                X1235=VP4(M5,M3,M2,M1,2)
                X1245=VP4(M5,M4,M2,M1,4)
                X1345=VP4(M5,M4,M3,M1,7)
                X2345=VP4(M5,M4,M3,M2,11)
                X12345=VP5(M5,M4,M3,M2,M1,1)
                DO M6=1,MM6/MD6
                  X6=VP1(M6,6)
                  X16=VP2(M6,M1,5)
                  X26=VP2(M6,M2,9)
                  X36=VP2(M6,M3,12)
                  X46=VP2(M6,M4,14)
                  X56=VP2(M6,M5,15)
                  X126=VP3(M6,M2,M1,4)
                  X136=VP3(M6,M3,M1,7)
                  X146=VP3(M6,M4,M1,9)
                  X156=VP3(M6,M5,M1,10)
                  X236=VP3(M6,M3,M2,13)
                  X246=VP3(M6,M4,M2,15)
                  X256=VP3(M6,M5,M2,16)
                  X346=VP3(M6,M4,M3,18)
                  X356=VP3(M6,M5,M3,19)
                  X456=VP3(M6,M5,M4,20)
                  X1236=VP4(M6,M3,M2,M1,3)
                  X1246=VP4(M6,M4,M2,M1,5)
                  X1256=VP4(M6,M5,M2,M1,6)
                  X1346=VP4(M6,M4,M3,M1,8)
                  X1356=VP4(M6,M5,M3,M1,9)
                  X1456=VP4(M6,M5,M4,M1,10)
                  X2346=VP4(M6,M4,M3,M2,12)
                  X2356=VP4(M6,M5,M3,M2,13)
                  X2456=VP4(M6,M5,M4,M2,14)
                  X3456=VP4(M6,M5,M4,M3,15)
                  X12346=VP5(M6,M4,M3,M2,M1,2)
                  X12356=VP5(M6,M5,M3,M2,M1,3)
                  X12456=VP5(M6,M5,M4,M2,M1,4)
                  X13456=VP5(M6,M5,M4,M3,M1,5)
                  X23456=VP5(M6,M5,M4,M3,M2,6)
                  CALL GET76(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1            MM5/MD5,MM6/MD6,VDP,M1,M2,M3,M4,M5,M6)
                  VDP=VDP-X1-X2-X3-X4-X5-X6-X12-X13-X14-X15-X16-X23-
     1            X24-X25-X26-X34-X35-X36-X45-X46-X56-X123-X124-X125-
     2            X126-X134-X135-X136-X145-X146-X156-X234-X235-X236-
     3            X245-X246-X256-X345-X346-X356-X456-X1234-X1235-X1236-
     4            X1245-X1246-X1256-X1345-X1346-X1356-X1456-X2345-
     5            X2346-X2356-X2456-X3456-X12345-X12346-X12356-X12456-
     6            X13456-X23456
                  IF(JCOUPL.GE.0)THEN
                    VDP=VDP-VP
                  ELSE
                    VDP=VDP-VPR
                  END IF
                  CALL SET76(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
     1            MM5/MD5,MM6/MD6,VDP,M1,M2,M3,M4,M5,M6)
                END DO
              END DO
            END DO
          END DO
        END DO
      END DO
9999  CONTINUE
      CALL OUT76(V,VR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,MM5/MD5,MM6/MD6)
      CALL FLUSH(I76)
      RETURN
      END
C****************************************************************
      DOUBLE PRECISION FUNCTION VFUN6(V,VR,MM1,MM2,MM3,MM4,MM5,MM6,M1,
     1M2,M3,M4,M5,M6,VMIN,WAVENM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION V(MM6,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VR(MM6,MM5,MM4,MM3,MM2,MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GT.0)THEN
        VFUN6=(V(M6,M5,M4,M3,M2,M1)-VMIN)*WAVENM
      ELSE
        VFUN6=(VR(M6,M5,M4,M3,M2,M1)-VMIN)*WAVENM
      END IF
      RETURN
      END
C****************************************************************
      SUBROUTINE DUMCR6(XQ1,XQ2,XQ3,XQ4,XQ5,XQ6,MM1,MM2,MM3,MM4,MM5,
     1MM6,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,MODE1,MODE2,MODE3,
     2MODE4,MODE5,MODE6,V,VR,VM,VMR,JMAX,IND,MODINT,NBF,MBF,VP1,VP2,
     3VP3,VP4,VP5,V1,V1R,V2,V2R,V3,V3R,V4,V4R,V5,V5R,MMX1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 V(MM6,MM5,MM4,MM3,22),V1(MMX1),V2(MMX1,MMX1,6),
     1V3(MMX1,MMX1,MMX1,10),V4(MMX1,MMX1,MMX1,MMX1,15),
     2V5(MMX1,MMX1,MMX1,MMX1,16)
      REAL*4 VR(MM6,MM5,MM4,MM3,22),V1R(MMX1),V2R(MMX1,MMX1,6),
     1V3R(MMX1,MMX1,MMX1,10),V4R(MMX1,MMX1,MMX1,MMX1,15),
     2V5R(MMX1,MMX1,MMX1,MMX1,16)
      REAL*8 V0,VM0(6)
      REAL*4 V0R,VM0R(6)
      LOGICAL LINEAR
      DIMENSION VP1(MMX1,6),VP2(MMX1,MMX1,6,15),
     1VP3(MMX1,MMX1,MMX1,10,20),VP4(MMX1,MMX1,MMX1,MMX1,15,15),
     2VP5(MMX1,MMX1,MMX1,MMX1,MMX1,16,6)
      DIMENSION X12(6),X13(6),X14(6),X15(6),X16(6),X23(6),X24(6)
      DIMENSION X25(6),X26(6),X34(6),X35(6),X36(6),X45(6),X46(6)
      DIMENSION X56(6),X123(10),X124(10),X125(10),X126(10),X134(10)
      DIMENSION X135(10),X136(10),X145(10),X146(10),X156(10),X234(10)
      DIMENSION X235(10),X236(10),X245(10),X246(10),X256(10),X345(10)
      DIMENSION X346(10),X356(10),X456(10),X1234(15),X1235(15)
      DIMENSION X1236(15),X1245(15),X1246(15),X1256(15),X1345(15)
      DIMENSION X1346(15),X1356(15),X1456(15),X2345(15),X2346(15)
      DIMENSION X2356(15),X2456(15),X3456(15),X12345(16),X12346(16)
      DIMENSION X12356(16),X12456(16),X13456(16),X23456(16)
      DIMENSION MODINT(NMODE),NBF(1),MBF(1)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),XQ4(MM4),XQ5(MM5),XQ6(MM6)
      DIMENSION QQ(NMODE),XZ(NMODE,NMODE,3)
      DIMENSION AB(NMODE,3),B(NMODE,NMODE),AA(NMODE,3,3),BB(NMODE)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      COMMON/MOMI/XK(3,3),XMU(3,3)
      COMMON/TYPE/LINEAR
      COMMON/JCORIO/JCORIO
      COMMON/WHICH/IWHICH
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/IND85X/IND85
      COMMON/TORS/QTAU
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/FILASS/IOUT,INP
C**TEMPORARY (DIMENSIONS)
      COMMON/MULT/MULT(1000)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/MUREF/V0,VM0,V0R,VM0R
      JCORIO=JMAX
      MX=1
      MY=2
      MZ=3
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      MD5=MODINT(MODE5)
      MD6=MODINT(MODE6)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(MODE5.EQ.ISYM(I,J))N5=I
          IF(MODE6.EQ.ISYM(I,J))N6=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N1.EQ.N6)MD6=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N2.EQ.N6)MD6=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N3.EQ.N6)MD6=1
      IF(N4.EQ.N5)MD5=1
      IF(N4.EQ.N6)MD6=1
      IF(N5.EQ.N6)MD6=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      IF(N12.EQ.N6)MD6=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      IF(N13.EQ.N6)MD6=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      IF(N14.EQ.N6)MD6=1
      N15=ISYMP(N1,N5)
      IF(N15.EQ.N6)MD6=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      IF(N23.EQ.N6)MD6=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      IF(N24.EQ.N6)MD6=1
      N25=ISYMP(N2,N5)
      IF(N25.EQ.N6)MD6=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      IF(N34.EQ.N6)MD6=1
      N35=ISYMP(N3,N5)
      IF(N35.EQ.N6)MD6=1
      N45=ISYMP(N4,N5)
      IF(N45.EQ.N6)MD6=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      IF(N123.EQ.N6)MD6=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      IF(N124.EQ.N6)MD6=1
      N125=ISYMP(N12,N5)
      IF(N125.EQ.N6)MD6=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      IF(N134.EQ.N6)MD6=1
      N135=ISYMP(N13,N5)
      IF(N135.EQ.N6)MD6=1
      N145=ISYMP(N14,N5)
      IF(N145.EQ.N6)MD6=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      IF(N234.EQ.N6)MD6=1
      N235=ISYMP(N23,N5)
      IF(N235.EQ.N6)MD6=1
      N245=ISYMP(N24,N5)
      IF(N245.EQ.N6)MD6=1
      N345=ISYMP(N34,N5)
      IF(N345.EQ.N6)MD6=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      IF(N1234.EQ.N6)MD6=1
      N1235=ISYMP(N12,N35)
      IF(N1235.EQ.N6)MD6=1
      N1245=ISYMP(N12,N45)
      IF(N1245.EQ.N6)MD6=1
      N1345=ISYMP(N13,N45)
      IF(N1345.EQ.N6)MD6=1
      N2345=ISYMP(N23,N45)
      IF(N2345.EQ.N6)MD6=1
      N12345=ISYMP(N123,N45)
      IF(N12345.EQ.N6)MD6=1
      IF(JMAX.EQ.0)THEN
C**INTRINSIC
        IF(MOLINC.GT.0)THEN
          DO K1=1,MODE1
            CALL INTARR(NBF,MBF,K1,I1,J1,L1)
            K11=K1-1
            DO K2=1,K11
              CALL INTARR(NBF,MBF,K2,I2,J2,L2)
              K22=K2-1
              DO K3=1,K22
                CALL INTARR(NBF,MBF,K3,I3,J3,L3)
                K33=K3-1
                DO K4=1,K33
                  CALL INTARR(NBF,MBF,K4,I4,J4,L4)
                  K44=K4-1
                  DO K5=1,K44
                    CALL INTARR(NBF,MBF,K5,I5,J5,L5)
                    IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3.
     1              AND.K4.EQ.MODE4.AND.K5.EQ.MODE5)THEN
                      IND85=181
                      CALL DUMCR5(XQ1,XQ2,XQ3,XQ4,XQ5,J1,J2,J3,J4,J5,
     1                NMODE,NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,
     2                K3,K4,K5,V5,V5R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     3                VP1,VP2,VP3,VP4,V1,V1R,V2,V2R,V3,V3R,V4,V4R,
     4                MMX1)
                      CALL FIX85(V5,V5R,J1,J2,J3,J4,J5,VP5,MMX1,K1,
     1                K2,K3,K4,K5,MODE1,MM1,MD1,MODE2,MM2,MD2,MODE3,
     2                MM3,MD3,MODE4,MM4,MD4,MODE5,MM5,MD5,1)
                    END IF
                    IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3.
     1              AND.K4.EQ.MODE4.AND.K5.EQ.MODE6)THEN
                      IND85=182
                      CALL DUMCR5(XQ1,XQ2,XQ3,XQ4,XQ6,J1,J2,J3,J4,J5,
     1                NMODE,NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,
     2                K3,K4,K5,V5,V5R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     3                VP1,VP2,VP3,VP4,V1,V1R,V2,V2R,V3,V3R,V4,V4R,
     4                MMX1)
                      CALL FIX85(V5,V5R,J1,J2,J3,J4,J5,VP5,MMX1,K1,
     1                K2,K3,K4,K5,MODE1,MM1,MD1,MODE2,MM2,MD2,MODE3,
     2                MM3,MD3,MODE4,MM4,MD4,MODE6,MM6,MD6,2)
                    END IF
                    IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3.
     1              AND.K4.EQ.MODE5.AND.K5.EQ.MODE6)THEN
                      IND85=183
                      CALL DUMCR5(XQ1,XQ2,XQ3,XQ5,XQ6,J1,J2,J3,J4,J5,
     1                NMODE,NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,
     2                K3,K4,K5,V5,V5R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     3                VP1,VP2,VP3,VP4,V1,V1R,V2,V2R,V3,V3R,V4,V4R,
     4                MMX1)
                      CALL FIX85(V5,V5R,J1,J2,J3,J4,J5,VP5,MMX1,K1,
     1                K2,K3,K4,K5,MODE1,MM1,MD1,MODE2,MM2,MD2,MODE3,
     2                MM3,MD3,MODE5,MM5,MD5,MODE6,MM6,MD6,3)
                    END IF
                    IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE4.
     1              AND.K4.EQ.MODE5.AND.K5.EQ.MODE6)THEN
                      IND85=184
                      CALL DUMCR5(XQ1,XQ2,XQ4,XQ5,XQ6,J1,J2,J3,J4,J5,
     1                NMODE,NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,
     2                K3,K4,K5,V5,V5R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     3                VP1,VP2,VP3,VP4,V1,V1R,V2,V2R,V3,V3R,V4,V4R,
     4                MMX1)
                      CALL FIX85(V5,V5R,J1,J2,J3,J4,J5,VP5,MMX1,K1,
     1                K2,K3,K4,K5,MODE1,MM1,MD1,MODE2,MM2,MD2,MODE4,
     2                MM4,MD4,MODE5,MM5,MD5,MODE6,MM6,MD6,4)
                    END IF
                    IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4.
     1              AND.K4.EQ.MODE5.AND.K5.EQ.MODE6)THEN
                      IND85=185
                      CALL DUMCR5(XQ1,XQ3,XQ4,XQ5,XQ6,J1,J2,J3,J4,J5,
     1                NMODE,NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,
     2                K3,K4,K5,V5,V5R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     3                VP1,VP2,VP3,VP4,V1,V1R,V2,V2R,V3,V3R,V4,V4R,
     4                MMX1)
                      CALL FIX85(V5,V5R,J1,J2,J3,J4,J5,VP5,MMX1,K1,
     1                K2,K3,K4,K5,MODE1,MM1,MD1,MODE3,MM3,MD3,MODE4,
     2                MM4,MD4,MODE5,MM5,MD5,MODE6,MM6,MD6,5)
                    END IF
                    IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4.
     1              AND.K4.EQ.MODE5.AND.K5.EQ.MODE6)THEN
                      IND85=186
                      CALL DUMCR5(XQ2,XQ3,XQ4,XQ5,XQ6,J1,J2,J3,J4,J5,
     1                NMODE,NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,
     2                K3,K4,K5,V5,V5R,VM,VMR,JMAX,0,MODINT,NBF,MBF,
     3                VP1,VP2,VP3,VP4,V1,V1R,V2,V2R,V3,V3R,V4,V4R,
     4                MMX1)
                      CALL FIX85(V5,V5R,J1,J2,J3,J4,J5,VP5,MMX1,K1,
     1                K2,K3,K4,K5,MODE2,MM2,MD2,MODE3,MM3,MD3,MODE4,
     2                MM4,MD4,MODE5,MM5,MD5,MODE6,MM6,MD6,6)
                    END IF
                  END DO
                END DO
              END DO
            END DO
          END DO
          DO K1=1,MODE1
            CALL INTARR(NBF,MBF,K1,I1,J1,L1)
            K11=K1-1
            DO K2=1,K11
              CALL INTARR(NBF,MBF,K2,I2,J2,L2)
              K22=K2-1
              DO K3=1,K22
                CALL INTARR(NBF,MBF,K3,I3,J3,L3)
                K33=K3-1
                DO K4=1,K33
                  CALL INTARR(NBF,MBF,K4,I4,J4,L4)
                  IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3.AND.
     1            K4.EQ.MODE4)THEN
                    CALL DUMCR4(XQ1,XQ2,XQ3,XQ4,J1,J2,J3,J4,NMODE,
     1              NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,K4,
     2              V4,V4R,VM,VMR,JMAX,0,MODINT,NBF,MBF,VP1,VP2,VP3,
     3              V1,V1R,V2,V2R,V3,V3R,MMX1)
                    CALL FIX84(V4,V4R,J1,J2,J3,J4,VP4,MMX1,K1,K2,K3,
     1              K4,MODE1,MM1,MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,
     2              MODE4,MM4,MD4,1)
                  END IF
                  IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3.AND.
     1            K5.EQ.MODE5)THEN
                    CALL DUMCR4(XQ1,XQ2,XQ3,XQ5,J1,J2,J3,J4,NMODE,
     1              NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,K4,
     2              V4,V4R,VM,VMR,JMAX,0,MODINT,NBF,MBF,VP1,VP2,VP3,
     3              V1,V1R,V2,V2R,V3,V3R,MMX1)
                    CALL FIX84(V4,V4R,J1,J2,J3,J4,VP4,MMX1,K1,K2,K3,
     1              K4,MODE1,MM1,MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,
     2              MODE5,MM5,MD5,2)
                  END IF
                  IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K4.EQ.MODE3.AND.
     1            K5.EQ.MODE6)THEN
                    CALL DUMCR4(XQ1,XQ2,XQ3,XQ6,J1,J2,J3,J4,NMODE,
     1              NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,K4,
     2              V4,V4R,VM,VMR,JMAX,0,MODINT,NBF,MBF,VP1,VP2,VP3,
     3              V1,V1R,V2,V2R,V3,V3R,MMX1)
                    CALL FIX84(V4,V4R,J1,J2,J3,J4,VP4,MMX1,K1,K2,K3,
     1              K4,MODE1,MM1,MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,
     2              MODE6,MM6,MD6,3)
                  END IF
                  IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE4.AND.
     1            K4.EQ.MODE5)THEN
                    CALL DUMCR4(XQ1,XQ2,XQ4,XQ5,J1,J2,J3,J4,NMODE,
     1              NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,K4,
     2              V4,V4R,VM,VMR,JMAX,0,MODINT,NBF,MBF,VP1,VP2,VP3,
     3              V1,V1R,V2,V2R,V3,V3R,MMX1)
                    CALL FIX84(V4,V4R,J1,J2,J3,J4,VP4,MMX1,K1,K2,K3,
     1              K4,MODE1,MM1,MD1,MODE2,MM2,MD2,MODE4,MM4,MD4,
     2              MODE5,MM5,MD5,4)
                  END IF
                  IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE4.AND.
     1            K4.EQ.MODE6)THEN
                    CALL DUMCR4(XQ1,XQ2,XQ4,XQ6,J1,J2,J3,J4,NMODE,
     1              NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,K4,
     2              V4,V4R,VM,VMR,JMAX,0,MODINT,NBF,MBF,VP1,VP2,VP3,
     3              V1,V1R,V2,V2R,V3,V3R,MMX1)
                    CALL FIX84(V4,V4R,J1,J2,J3,J4,VP4,MMX1,K1,K2,K3,
     1              K4,MODE1,MM1,MD1,MODE2,MM2,MD2,MODE4,MM4,MD4,
     2              MODE6,MM6,MD6,5)
                  END IF
                  IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE5.AND.
     1            K4.EQ.MODE6)THEN
                    CALL DUMCR4(XQ1,XQ2,XQ5,XQ6,J1,J2,J3,J4,NMODE,
     1              NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,K4,
     2              V4,V4R,VM,VMR,JMAX,0,MODINT,NBF,MBF,VP1,VP2,VP3,
     3              V1,V1R,V2,V2R,V3,V3R,MMX1)
                    CALL FIX84(V4,V4R,J1,J2,J3,J4,VP4,MMX1,K1,K2,K3,
     1              K4,MODE1,MM1,MD1,MODE2,MM2,MD2,MODE5,MM5,MD5,
     2              MODE6,MM6,MD6,6)
                  END IF
                  IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4.AND.
     1            K4.EQ.MODE5)THEN
                    CALL DUMCR4(XQ1,XQ3,XQ4,XQ5,J1,J2,J3,J4,NMODE,
     1              NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,K4,
     2              V4,V4R,VM,VMR,JMAX,0,MODINT,NBF,MBF,VP1,VP2,VP3,
     3              V1,V1R,V2,V2R,V3,V3R,MMX1)
                    CALL FIX84(V4,V4R,J1,J2,J3,J4,VP4,MMX1,K1,K2,K3,
     1              K4,MODE1,MM1,MD1,MODE3,MM3,MD3,MODE4,MM4,MD4,
     2              MODE5,MM5,MD5,7)
                  END IF
                  IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4.AND.
     1            K4.EQ.MODE6)THEN
                    CALL DUMCR4(XQ1,XQ3,XQ4,XQ6,J1,J2,J3,J4,NMODE,
     1              NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,K4,
     2              V4,V4R,VM,VMR,JMAX,0,MODINT,NBF,MBF,VP1,VP2,VP3,
     3              V1,V1R,V2,V2R,V3,V3R,MMX1)
                    CALL FIX84(V4,V4R,J1,J2,J3,J4,VP4,MMX1,K1,K2,K3,
     1              K4,MODE1,MM1,MD1,MODE3,MM3,MD3,MODE4,MM4,MD4,
     2              MODE6,MM6,MD6,8)
                  END IF
                  IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE5.AND.
     1            K4.EQ.MODE6)THEN
                    CALL DUMCR4(XQ1,XQ3,XQ5,XQ6,J1,J2,J3,J4,NMODE,
     1              NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,K4,
     2              V4,V4R,VM,VMR,JMAX,0,MODINT,NBF,MBF,VP1,VP2,VP3,
     3              V1,V1R,V2,V2R,V3,V3R,MMX1)
                    CALL FIX84(V4,V4R,J1,J2,J3,J4,VP4,MMX1,K1,K2,K3,
     1              K4,MODE1,MM1,MD1,MODE3,MM3,MD3,MODE5,MM5,MD5,
     2              MODE6,MM6,MD6,9)
                  END IF
                  IF(K1.EQ.MODE1.AND.K2.EQ.MODE4.AND.K3.EQ.MODE5.AND.
     1            K4.EQ.MODE6)THEN
                    CALL DUMCR4(XQ1,XQ4,XQ5,XQ6,J1,J2,J3,J4,NMODE,
     1              NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,K4,
     2              V4,V4R,VM,VMR,JMAX,0,MODINT,NBF,MBF,VP1,VP2,VP3,
     3              V1,V1R,V2,V2R,V3,V3R,MMX1)
                    CALL FIX84(V4,V4R,J1,J2,J3,J4,VP4,MMX1,K1,K2,K3,
     1              K4,MODE1,MM1,MD1,MODE4,MM4,MD4,MODE5,MM5,MD5,
     2              MODE6,MM6,MD6,10)
                  END IF
                  IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4.AND.
     1            K4.EQ.MODE5)THEN
                    CALL DUMCR4(XQ2,XQ3,XQ4,XQ5,J1,J2,J3,J4,NMODE,
     1              NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,K4,
     2              V4,V4R,VM,VMR,JMAX,0,MODINT,NBF,MBF,VP1,VP2,VP3,
     3              V1,V1R,V2,V2R,V3,V3R,MMX1)
                    CALL FIX84(V4,V4R,J1,J2,J3,J4,VP4,MMX1,K1,K2,K3,
     1              K4,MODE2,MM2,MD2,MODE3,MM3,MD3,MODE4,MM4,MD4,
     2              MODE5,MM5,MD5,11)
                  END IF
                  IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4.AND.
     1            K4.EQ.MODE6)THEN
                    CALL DUMCR4(XQ2,XQ3,XQ4,XQ6,J1,J2,J3,J4,NMODE,
     1              NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,K4,
     2              V4,V4R,VM,VMR,JMAX,0,MODINT,NBF,MBF,VP1,VP2,VP3,
     3              V1,V1R,V2,V2R,V3,V3R,MMX1)
                    CALL FIX84(V4,V4R,J1,J2,J3,J4,VP4,MMX1,K1,K2,K3,
     1              K4,MODE2,MM2,MD2,MODE3,MM3,MD3,MODE4,MM4,MD4,
     2              MODE6,MM6,MD6,12)
                  END IF
                  IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE5.AND.
     1            K4.EQ.MODE6)THEN
                    CALL DUMCR4(XQ2,XQ3,XQ5,XQ6,J1,J2,J3,J4,NMODE,
     1              NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,K4,
     2              V4,V4R,VM,VMR,JMAX,0,MODINT,NBF,MBF,VP1,VP2,VP3,
     3              V1,V1R,V2,V2R,V3,V3R,MMX1)
                    CALL FIX84(V4,V4R,J1,J2,J3,J4,VP4,MMX1,K1,K2,K3,
     1              K4,MODE2,MM2,MD2,MODE3,MM3,MD3,MODE5,MM5,MD5,
     2              MODE6,MM6,MD6,13)
                  END IF
                  IF(K1.EQ.MODE2.AND.K2.EQ.MODE4.AND.K3.EQ.MODE5.AND.
     1            K4.EQ.MODE6)THEN
                    CALL DUMCR4(XQ2,XQ4,XQ5,XQ6,J1,J2,J3,J4,NMODE,
     1              NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,K4,
     2              V4,V4R,VM,VMR,JMAX,0,MODINT,NBF,MBF,VP1,VP2,VP3,
     3              V1,V1R,V2,V2R,V3,V3R,MMX1)
                    CALL FIX84(V4,V4R,J1,J2,J3,J4,VP4,MMX1,K1,K2,K3,
     1              K4,MODE2,MM2,MD2,MODE4,MM4,MD4,MODE5,MM5,MD5,
     2              MODE6,MM6,MD6,14)
                  END IF
                  IF(K1.EQ.MODE3.AND.K2.EQ.MODE4.AND.K3.EQ.MODE5.AND.
     1            K4.EQ.MODE6)THEN
                    CALL DUMCR4(XQ3,XQ4,XQ5,XQ6,J1,J2,J3,J4,NMODE,
     1              NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,K4,
     2              V4,V4R,VM,VMR,JMAX,0,MODINT,NBF,MBF,VP1,VP2,VP3,
     3              V1,V1R,V2,V2R,V3,V3R,MMX1)
                    CALL FIX84(V4,V4R,J1,J2,J3,J4,VP4,MMX1,K1,K2,K3,
     1              K4,MODE3,MM3,MD3,MODE4,MM4,MD4,MODE5,MM5,MD5,
     2              MODE6,MM6,MD6,15)
                  END IF
                END DO
              END DO
            END DO
          END DO
          DO K1=1,MODE1
            CALL INTARR(NBF,MBF,K1,I1,J1,L1)
            K11=K1-1
            DO K2=1,K11
              CALL INTARR(NBF,MBF,K2,I2,J2,L2)
              K22=K2-1
              DO K3=1,K22
                CALL INTARR(NBF,MBF,K3,I3,J3,L3)
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3)THEN
                  CALL DUMCR3(XQ1,XQ2,XQ3,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE1,
     1            MM1,MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,1)
                END IF
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE4)THEN
                  CALL DUMCR3(XQ1,XQ2,XQ4,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE1,
     1            MM1,MD1,MODE2,MM2,MD2,MODE4,MM4,MD4,2)
                END IF
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE5)THEN
                  CALL DUMCR3(XQ1,XQ2,XQ5,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE1,
     1            MM1,MD1,MODE2,MM2,MD2,MODE5,MM5,MD5,3)
                END IF
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE6)THEN
                  CALL DUMCR3(XQ1,XQ2,XQ6,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE1,
     1            MM1,MD1,MODE3,MM3,MD3,MODE4,MM4,MD4,4)
                END IF
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4)THEN
                  CALL DUMCR3(XQ1,XQ3,XQ4,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE1,
     1            MM1,MD1,MODE3,MM3,MD3,MODE4,MM4,MD4,5)
                END IF
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE5)THEN
                  CALL DUMCR3(XQ1,XQ3,XQ5,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE1,
     1            MM1,MD1,MODE3,MM3,MD3,MODE5,MM5,MD5,6)
                END IF
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE3.AND.K3.EQ.MODE6)THEN
                  CALL DUMCR3(XQ1,XQ3,XQ6,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE1,
     1            MM1,MD1,MODE3,MM3,MD3,MODE6,MM6,MD6,7)
                END IF
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE4.AND.K3.EQ.MODE5)THEN
                  CALL DUMCR3(XQ1,XQ4,XQ5,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE1,
     1            MM1,MD1,MODE4,MM4,MD4,MODE5,MM5,MD5,8)
                END IF
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE4.AND.K3.EQ.MODE6)THEN
                  CALL DUMCR3(XQ1,XQ4,XQ6,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE1,
     1            MM1,MD1,MODE4,MM4,MD4,MODE6,MM6,MD6,9)
                END IF
                IF(K1.EQ.MODE1.AND.K2.EQ.MODE5.AND.K3.EQ.MODE6)THEN
                  CALL DUMCR3(XQ1,XQ5,XQ6,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE1,
     1            MM1,MD1,MODE5,MM5,MD5,MODE6,MM6,MD6,10)
                END IF
                IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE4)THEN
                  CALL DUMCR3(XQ2,XQ3,XQ4,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE2,
     1            MM2,MD2,MODE3,MM3,MD3,MODE4,MM4,MD4,11)
                END IF
                IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE5)THEN
                  CALL DUMCR3(XQ2,XQ3,XQ5,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE2,
     1            MM2,MD2,MODE3,MM3,MD3,MODE5,MM5,MD5,12)
                END IF
                IF(K1.EQ.MODE2.AND.K2.EQ.MODE3.AND.K3.EQ.MODE6)THEN
                  CALL DUMCR3(XQ2,XQ3,XQ6,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE2,
     1            MM2,MD2,MODE3,MM3,MD3,MODE6,MM6,MD6,13)
                END IF
                IF(K1.EQ.MODE2.AND.K2.EQ.MODE4.AND.K3.EQ.MODE5)THEN
                  CALL DUMCR3(XQ2,XQ4,XQ5,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE2,
     1            MM2,MD2,MODE4,MM4,MD4,MODE5,MM5,MD5,14)
                END IF
                IF(K1.EQ.MODE2.AND.K2.EQ.MODE4.AND.K3.EQ.MODE6)THEN
                  CALL DUMCR3(XQ2,XQ4,XQ6,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE2,
     1            MM2,MD2,MODE4,MM4,MD4,MODE6,MM6,MD6,15)
                END IF
                IF(K1.EQ.MODE2.AND.K2.EQ.MODE5.AND.K3.EQ.MODE6)THEN
                  CALL DUMCR3(XQ2,XQ5,XQ6,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE2,
     1            MM2,MD2,MODE5,MM5,MD5,MODE6,MM6,MD6,16)
                END IF
                IF(K1.EQ.MODE3.AND.K2.EQ.MODE4.AND.K3.EQ.MODE5)THEN
                  CALL DUMCR3(XQ3,XQ4,XQ5,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE3,
     1            MM3,MD3,MODE4,MM4,MD4,MODE5,MM5,MD5,17)
                END IF
                IF(K1.EQ.MODE3.AND.K2.EQ.MODE4.AND.K3.EQ.MODE6)THEN
                  CALL DUMCR3(XQ3,XQ4,XQ6,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE3,
     1            MM3,MD3,MODE4,MM4,MD4,MODE6,MM6,MD6,18)
                END IF
                IF(K1.EQ.MODE3.AND.K2.EQ.MODE5.AND.K3.EQ.MODE6)THEN
                  CALL DUMCR3(XQ3,XQ5,XQ6,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE3,
     1            MM3,MD3,MODE5,MM5,MD5,MODE6,MM6,MD6,19)
                END IF
                IF(K1.EQ.MODE4.AND.K2.EQ.MODE5.AND.K3.EQ.MODE6)THEN
                  CALL DUMCR3(XQ4,XQ5,XQ6,J1,J2,J3,NMODE,NATOM,QQ,XZ,
     1            AB,B,AA,BB,XX,X0,XL,XM,K1,K2,K3,V3,V3R,VM,VMR,
     2            JMAX,0,MODINT,NBF,MBF,VP1,VP2,V1,V1R,V2,V2R,MMX1)
                  CALL FIX83(V3,V3R,J1,J2,J3,VP3,MMX1,K1,K2,K3,MODE4,
     1            MM4,MD4,MODE5,MM5,MD5,MODE6,MM6,MD6,20)
                END IF
              END DO
            END DO
          END DO
          DO K1=1,MODE1
            CALL INTARR(NBF,MBF,K1,I1,J1,L1)
            K11=K1-1
            DO K2=1,K11
              CALL INTARR(NBF,MBF,K2,I2,J2,L2)
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE2)THEN
                CALL DUMCR2(XQ1,XQ2,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,
     1          BB,XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,
     2          MBF,VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE1,MM1,MD1,
     1          MODE2,MM2,MD2,1)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE3)THEN
                CALL DUMCR2(XQ1,XQ3,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,
     1          BB,XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,
     2          MBF,VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE1,MM1,MD1,
     1          MODE3,MM3,MD3,2)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE4)THEN
                CALL DUMCR2(XQ1,XQ4,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,
     1          BB,XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,
     2          MBF,VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE1,MM1,MD1,
     1          MODE4,MM4,MD4,3)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE5)THEN
                CALL DUMCR2(XQ1,XQ5,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,
     1          BB,XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,
     2          MBF,VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE1,MM1,MD1,
     1          MODE5,MM5,MD5,4)
              END IF
              IF(K1.EQ.MODE1.AND.K2.EQ.MODE6)THEN
                CALL DUMCR2(XQ1,XQ6,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,
     1          BB,XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,
     2          MBF,VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE1,MM1,MD1,
     1          MODE6,MM6,MD6,5)
              END IF
              IF(K1.EQ.MODE2.AND.K2.EQ.MODE3)THEN
                CALL DUMCR2(XQ2,XQ3,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,
     1          BB,XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,
     2          MBF,VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE2,MM2,MD2,
     1          MODE3,MM3,MD3,6)
              END IF
              IF(K1.EQ.MODE2.AND.K2.EQ.MODE4)THEN
                CALL DUMCR2(XQ2,XQ4,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,
     1          BB,XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,
     2          MBF,VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE2,MM2,MD2,
     1          MODE4,MM4,MD4,7)
              END IF
              IF(K1.EQ.MODE2.AND.K2.EQ.MODE5)THEN
                CALL DUMCR2(XQ2,XQ5,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,
     1          BB,XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,
     2          MBF,VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE2,MM2,MD2,
     1          MODE5,MM5,MD5,8)
              END IF
              IF(K1.EQ.MODE2.AND.K2.EQ.MODE6)THEN
                CALL DUMCR2(XQ2,XQ6,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,
     1          BB,XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,
     2          MBF,VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE2,MM2,MD2,
     1          MODE6,MM6,MD6,9)
              END IF
              IF(K1.EQ.MODE3.AND.K2.EQ.MODE4)THEN
                CALL DUMCR2(XQ3,XQ4,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,
     1          BB,XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,
     2          MBF,VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE3,MM3,MD3,
     1          MODE4,MM4,MD4,10)
              END IF
              IF(K1.EQ.MODE3.AND.K2.EQ.MODE5)THEN
                CALL DUMCR2(XQ3,XQ5,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,
     1          BB,XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,
     2          MBF,VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE3,MM3,MD3,
     1          MODE5,MM5,MD5,11)
              END IF
              IF(K1.EQ.MODE3.AND.K2.EQ.MODE6)THEN
                CALL DUMCR2(XQ3,XQ6,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,
     1          BB,XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,
     2          MBF,VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE3,MM3,MD3,
     1          MODE6,MM6,MD6,12)
              END IF
              IF(K1.EQ.MODE4.AND.K2.EQ.MODE5)THEN
                CALL DUMCR2(XQ4,XQ5,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,
     1          BB,XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,
     2          MBF,VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE4,MM4,MD4,
     1          MODE5,MM5,MD5,13)
              END IF
              IF(K1.EQ.MODE4.AND.K2.EQ.MODE6)THEN
                CALL DUMCR2(XQ4,XQ6,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,
     1          BB,XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,
     2          MBF,VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE4,MM4,MD4,
     1          MODE6,MM6,MD6,14)
              END IF
              IF(K1.EQ.MODE5.AND.K2.EQ.MODE6)THEN
                CALL DUMCR2(XQ5,XQ6,J1,J2,NMODE,NATOM,QQ,XZ,AB,B,AA,
     1          BB,XX,X0,XL,XM,K1,K2,V2,V2R,VM,VMR,JMAX,0,MODINT,NBF,
     2          MBF,VP1,V1,V1R,MMX1)
                CALL FIX82(V2,V2R,J1,J2,VP2,MMX1,K1,K2,MODE5,MM5,MD5,
     1          MODE6,MM6,MD6,15)
              END IF
            END DO
          END DO
          DO K1=1,MODE1
            CALL INTARR(NBF,MBF,K1,I1,J1,L1)
            IF(K1.EQ.MODE1)THEN
              CALL DUMCR1(XQ1,J1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1        XX,X0,XL,XM,K1,V1,V1R,VM,VMR,JMAX,0,MODINT)
              CALL FIX81(V1,V1R,J1,VP1,MMX1,K1,MODE1,MM1,MD1,1)
            END IF
            IF(K1.EQ.MODE2)THEN
              CALL DUMCR1(XQ2,J1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1        XX,X0,XL,XM,K1,V1,V1R,VM,VMR,JMAX,0,MODINT)
              CALL FIX81(V1,V1R,J1,VP1,MMX1,K1,MODE2,MM2,MD2,2)
            END IF
            IF(K1.EQ.MODE3)THEN
              CALL DUMCR1(XQ3,J1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1        XX,X0,XL,XM,K1,V1,V1R,VM,VMR,JMAX,0,MODINT)
              CALL FIX81(V1,V1R,J1,VP1,MMX1,K1,MODE3,MM3,MD3,3)
            END IF
            IF(K1.EQ.MODE4)THEN
              CALL DUMCR1(XQ4,J1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1        XX,X0,XL,XM,K1,V1,V1R,VM,VMR,JMAX,0,MODINT)
              CALL FIX81(V1,V1R,J1,VP1,MMX1,K1,MODE4,MM4,MD4,4)
            END IF
            IF(K1.EQ.MODE5)THEN
              CALL DUMCR1(XQ5,J1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1        XX,X0,XL,XM,K1,V1,V1R,VM,VMR,JMAX,0,MODINT)
              CALL FIX81(V1,V1R,J1,VP1,MMX1,K1,MODE5,MM5,MD5,5)
            END IF
            IF(K1.EQ.MODE6)THEN
              CALL DUMCR1(XQ6,J1,NMODE,NATOM,QQ,XZ,AB,B,AA,BB,
     1        XX,X0,XL,XM,K1,V1,V1R,VM,VMR,JMAX,0,MODINT)
              CALL FIX81(V1,V1R,J1,VP1,MMX1,K1,MODE6,MM6,MD6,6)
            END IF
          END DO
        END IF
      END IF
      DO K=1,NMODE
        QQ(K)=0
        MULT(K)=0
      END DO
      MULT(MODE1)=1
      MULT(MODE2)=1
      MULT(MODE3)=1
      MULT(MODE4)=1
      MULT(MODE5)=1
      MULT(MODE6)=1
      DO M1=1,MM1/MD1
        QQ(MODE1)=XQ1(M1)
        DO M2=1,MM2/MD2
          QQ(MODE2)=XQ2(M2)
C**
          DO M3=1,MM3/MD3
            QQ(MODE3)=XQ3(M3)
            DO M4=1,MM4/MD4
              QQ(MODE4)=XQ4(M4)
              DO M5=1,MM5/MD5
                QQ(MODE5)=XQ5(M5)
                DO M6=1,MM6/MD6
                  QQ(MODE6)=XQ6(M6)
                  CALL CORIOL(NMODE,NATOM,QQ,XZ,AB,B,AA,BB,XX,X0,XL,XM,
     1            ZZ)
                  IF(JMAX.EQ.0)THEN
                    IF(LINEAR)ZZ=0
C**INTRINSIC
C                   IF(IND.NE.0)THEN
                      CALL SET86(V,VR,MM3/MD3,MM4/MD4,
     1                MM5/MD5,MM6/MD6,B,BB,NMODE,ZZ,M3,M4,M5,M6,
     2                MODE1,MODE2,MODE3,MODE4,MODE5,MODE6)
C                   ELSE
C                     V(M6,M5,M4,M3,1)=B(MODE1,MODE1)
C                     V(M6,M5,M4,M3,2)=B(MODE1,MODE2)
C                     V(M6,M5,M4,M3,3)=B(MODE1,MODE3)
C                     V(M6,M5,M4,M3,4)=B(MODE1,MODE4)
C                     V(M6,M5,M4,M3,5)=B(MODE1,MODE5)
C                     V(M6,M5,M4,M3,6)=B(MODE1,MODE6)
C                     V(M6,M5,M4,M3,7)=B(MODE2,MODE2)
C                     V(M6,M5,M4,M3,8)=B(MODE2,MODE3)
C                     V(M6,M5,M4,M3,9)=B(MODE2,MODE4)
C                     V(M6,M5,M4,M3,10)=B(MODE2,MODE5)
C                     V(M6,M5,M4,M3,11)=B(MODE2,MODE6)
C                     V(M6,M5,M4,M3,12)=B(MODE3,MODE3)
C                     V(M6,M5,M4,M3,13)=B(MODE3,MODE4)
C                     V(M6,M5,M4,M3,14)=B(MODE3,MODE5)
C                     V(M6,M5,M4,M3,15)=B(MODE3,MODE6)
C                     V(M6,M5,M4,M3,16)=B(MODE4,MODE4)
C                     V(M6,M5,M4,M3,17)=B(MODE4,MODE5)
C                     V(M6,M5,M4,M3,18)=B(MODE4,MODE6)
C                     V(M6,M5,M4,M3,19)=B(MODE5,MODE5)
C                     V(M6,M5,M4,M3,20)=B(MODE5,MODE6)
C                     V(M6,M5,M4,M3,21)=B(MODE6,MODE6)
C                     V(M6,M5,M4,M3,22)=ZZ
C                   END IF
                  ELSE
CC                  IF(.NOT.LINEAR)ZZ=0
CC                  CALL SET96(VM,VMR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,
CC   1              MM5/MD5,MM6/MD6,AB,NMODE,ZZ,M1,M2,M3,M4,M5,M6,
CC   2              MODE1,MODE2,MODE3,MODE4,MODE5,MODE6)
                  END IF
                END DO
              END DO
            END DO
          END DO
          IF(JMAX.EQ.0)THEN
C**INTRINSIC
            IF(MOLINC.LE.0)GO TO 9999
CC          DO M1=1,MM1/MD1
              X1=VP1(M1,1)
CC            DO M2=1,MM2/MD2
                X2=VP1(M2,2)
                DO K=1,6
                  X12(K)=VP2(M2,M1,K,1)
                END DO
                DO M3=1,MM3/MD3
                  X3=VP1(M3,3)
                  DO K=1,6
                    X13(K)=VP2(M3,M1,K,2)
                    X23(K)=VP2(M3,M2,K,6)
                  END DO
                  DO K=1,10
                    X123(K)=VP3(M3,M2,M1,K,1)
                  END DO
                  DO M4=1,MM4/MD4
                    X4=VP1(M4,4)
                    DO K=1,6
                      X14(K)=VP2(M4,M1,K,3)
                      X24(K)=VP2(M4,M2,K,7)
                      X34(K)=VP2(M4,M3,K,10)
                    END DO
                    DO K=1,10
                      X124(K)=VP3(M4,M2,M1,K,2)
                      X134(K)=VP3(M4,M3,M1,K,5)
                      X234(K)=VP3(M4,M3,M2,K,11)
                    END DO
                    DO K=1,15
                      X1234(K)=VP4(M4,M3,M2,M1,K,1)
                    END DO
                    DO M5=1,MM5/MD5
                      X5=VP1(M5,5)
                      DO K=1,6
                        X15(K)=VP2(M5,M1,K,4)
                        X25(K)=VP2(M5,M2,K,8)
                        X35(K)=VP2(M5,M3,K,11)
                        X45(K)=VP2(M5,M4,K,13)
                      END DO
                      DO K=1,10
                        X125(K)=VP3(M5,M2,M1,K,3)
                        X135(K)=VP3(M5,M3,M1,K,6)
                        X145(K)=VP3(M5,M4,M1,K,8)
                        X235(K)=VP3(M5,M3,M2,K,12)
                        X245(K)=VP3(M5,M4,M2,K,14)
                        X345(K)=VP3(M5,M4,M3,K,17)
                      END DO
                      DO K=1,15
                        X1235(K)=VP4(M5,M3,M2,M1,K,2)
                        X1245(K)=VP4(M5,M4,M2,M1,K,4)
                        X1345(K)=VP4(M5,M4,M3,M1,K,7)
                        X2345(K)=VP4(M5,M4,M3,M2,K,11)
                      END DO
                      DO K=1,16
                        X12345(K)=VP5(M5,M4,M3,M2,M1,K,1)
                      END DO
                      DO M6=1,MM6/MD6
                        X6=VP1(M6,6)
                        DO K=1,6
                          X16(K)=VP2(M6,M1,K,5)
                          X26(K)=VP2(M6,M2,K,9)
                          X36(K)=VP2(M6,M3,K,12)
                          X46(K)=VP2(M6,M4,K,14)
                          X56(K)=VP2(M6,M5,K,15)
                        END DO
                        DO K=1,10
                          X126(K)=VP3(M6,M2,M1,K,4)
                          X136(K)=VP3(M6,M3,M1,K,7)
                          X146(K)=VP3(M6,M4,M1,K,9)
                          X156(K)=VP3(M6,M5,M1,K,10)
                          X236(K)=VP3(M6,M3,M2,K,13)
                          X246(K)=VP3(M6,M4,M2,K,15)
                          X256(K)=VP3(M6,M5,M2,K,16)
                          X346(K)=VP3(M6,M4,M3,K,18)
                          X356(K)=VP3(M6,M5,M3,K,19)
                          X456(K)=VP3(M6,M5,M4,K,20)
                        END DO
                        DO K=1,15
                          X1236(K)=VP4(M6,M3,M2,M1,K,3)
                          X1246(K)=VP4(M6,M4,M2,M1,K,5)
                          X1256(K)=VP4(M6,M5,M2,M1,K,6)
                          X1346(K)=VP4(M6,M4,M3,M1,K,8)
                          X1356(K)=VP4(M6,M5,M3,M1,K,9)
                          X1456(K)=VP4(M6,M5,M4,M1,K,10)
                          X2346(K)=VP4(M6,M4,M3,M2,K,12)
                          X2356(K)=VP4(M6,M5,M3,M2,K,13)
                          X2456(K)=VP4(M6,M5,M4,M2,K,14)
                          X3456(K)=VP4(M6,M5,M4,M3,K,15)
                        END DO
                        DO K=1,16
                          X12346(K)=VP5(M6,M4,M3,M2,M1,K,2)
                          X12356(K)=VP5(M6,M5,M3,M2,M1,K,3)
                          X12456(K)=VP5(M6,M5,M4,M2,M1,K,4)
                          X13456(K)=VP5(M6,M5,M4,M3,M1,K,5)
                          X23456(K)=VP5(M6,M5,M4,M3,M2,K,6)
                        END DO
                        CALL GET86(V,VR,MM3/MD3,MM4/MD4,
     1                  MM5/MD5,MM6/MD6,B,BB,NMODE,ZZ,M3,M4,M5,M6,
     2                  MODE1,MODE2,MODE3,MODE4,MODE5,MODE6)
                        ZZ=ZZ-X1-X2-X3-X4-X5-X6-X12(6)-X13(6)-X14(6)-
     1                  X15(6)-X16(6)-X23(6)-X24(6)-X25(6)-X26(6)-
     2                  X34(6)-X35(6)-X36(6)-X45(6)-X46(6)-X56(6)-
     3                  X123(10)-X124(10)-X125(10)-X126(10)-X134(10)-
     3                  X135(10)-X136(10)-X145(10)-X146(10)-X156(10)-
     4                  X234(10)-X235(10)-X236(10)-X245(10)-X246(10)-
     5                  X256(10)-X345(10)-X346(10)-X356(10)-X456(10)-
     6                  X1234(15)-X1235(15)-X1236(15)-X1245(15)-
     7                  X1246(15)-X1256(15)-X1345(15)-X1346(15)-
     8                  X1356(15)-X1456(15)-X2345(15)-X2346(15)-
     9                  X2356(15)-X2456(15)-X3456(15)-X12345(16)-
     1                  X12346(16)-X12356(16)-X12456(16)-X13456(16)-
     2                  X23456(16)
                        IF(JCOUPC.GE.0)THEN
                          ZZ=ZZ-V0
                        ELSE
                          ZZ=ZZ-V0R
                        END IF
                        B(MODE1,MODE1)=B(MODE1,MODE1)-X12(3)-X13(3)-
     1                  X14(3)-X15(3)-X16(3)-X123(4)-X124(4)-X125(4)-
     2                  X126(4)-X134(4)-X135(4)-X136(4)-X145(4)-X146(4)
     3                 -X156(4)-X1234(5)-X1235(5)-X1236(5)-X1245(5)-
     3                  X1246(5)-X1256(5)-X1345(5)-X1346(5)-X1356(5)-
     4                  X1456(5)-X12345(1)-X12346(1)-X12356(1)-
     5                  X12456(1)-X13456(1)
                        B(MODE1,MODE2)=B(MODE1,MODE2)-X12(4)-X123(5)-
     1                  X124(5)-X125(5)-X126(5)-X1234(6)-X1235(6)-
     2                  X1236(6)-X1245(6)-X1246(6)-X1256(6)-X12345(2)-
     3                  X12346(2)-X12356(2)-X12456(2)
                        B(MODE1,MODE3)=B(MODE1,MODE3)-X13(4)-X123(6)-
     1                  X134(5)-X135(5)-X136(5)-X1234(7)-X1235(7)-
     2                  X1236(7)-X1345(6)-X1346(5)-X1356(5)-X12345(3)-
     3                  X12346(3)-X12356(3)-X13456(2)
                        B(MODE1,MODE4)=B(MODE1,MODE4)-X14(4)-X124(6)-
     1                  X134(6)-X145(5)-X146(5)-X1234(8)-X1245(7)-
     2                  X1246(7)-X1345(7)-X1346(7)-X1456(5)-X12345(4)-
     3                  X12346(4)-X12456(3)-X13456(3)
                        B(MODE1,MODE5)=B(MODE1,MODE5)-X15(4)-X125(6)-
     1                  X135(6)-X145(6)-X156(5)-X1235(8)-X1245(8)-
     2                  X1256(7)-X1345(8)-X1356(7)-X1456(7)-X12345(5)-
     3                  X12356(4)-X12456(4)-X13456(4)
                        B(MODE1,MODE6)=B(MODE1,MODE6)-X16(4)-X126(6)-
     1                  X136(6)-X146(6)-X156(6)-X1236(8)-X1246(8)-
     2                  X1256(8)-X1346(8)-X1356(8)-X1456(8)-X12346(5)-
     3                  X12356(5)-X12456(5)-X13456(5)
                        B(MODE2,MODE2)=B(MODE2,MODE2)-X12(5)-X23(3)-
     1                  X24(3)-X25(3)-X26(3)-X123(7)-X124(7)-X125(7)-
     2                  X126(7)-X234(4)-X235(4)-X236(4)-X245(4)-X246(4)
     3                 -X256(4)-X1234(9)-X1235(9)-X1236(9)-X1245(9)-
     3                  X1246(9)-X1256(9)-X2345(5)-X2346(5)-X2356(5)-
     4                  X2456(5)-X12345(6)-X12346(6)-X12356(6)-
     5                  X12456(6)-X23456(1)
                        B(MODE2,MODE3)=B(MODE2,MODE3)-X23(4)-X123(8)-
     1                  X234(5)-X235(5)-X236(5)-X1234(10)-X1235(10)-
     2                  X1236(10)-X2345(6)-X2346(6)-X2356(6)-X12345(7)-
     3                  X12346(7)-X12356(7)-X23456(2)
                        B(MODE2,MODE4)=B(MODE2,MODE4)-X24(4)-X124(8)-
     1                  X234(6)-X245(5)-X246(5)-X1234(11)-X1245(10)-
     2                  X1246(10)-X2345(7)-X2346(7)-X2456(6)-X12345(8)-
     3                  X12346(8)-X12456(7)-X23456(3)
                        B(MODE2,MODE5)=B(MODE2,MODE5)-X25(4)-X125(8)-
     1                  X235(6)-X245(6)-X256(5)-X1235(11)-X1245(11)-
     2                  X1256(10)-X2345(8)-X2356(7)-X2456(7)-X12345(9)-
     3                  X12356(8)-X12456(8)-X23456(4)
                        B(MODE2,MODE6)=B(MODE2,MODE6)-X25(6)-X126(8)-
     1                  X236(6)-X246(6)-X256(6)-X1236(11)-X1246(11)-
     2                  X1256(11)-X2346(8)-X2356(8)-X2456(8)-X12346(9)-
     3                  X12356(9)-X12456(9)-X23456(5)
                        B(MODE3,MODE3)=B(MODE3,MODE3)-X13(5)-X23(5)-
     1                  X34(3)-X35(3)-X36(3)-X123(9)-X134(7)-X135(7)-
     2                  X136(7)-X234(7)-X235(7)-X236(7)-X345(4)-X346(4)
     3                 -X356(4)-X1234(12)-X1235(12)-X1236(12)-X1345(9)-
     3                  X1346(9)-X1356(9)-X2345(9)-X2346(9)-X2356(9)-
     4                  X3456(5)-X12345(10)-X12346(10)-X12356(10)-
     5                  X13456(6)-X23456(6)
                        B(MODE3,MODE4)=B(MODE3,MODE4)-X34(4)-X134(8)-
     1                  X234(8)-X345(5)-X346(5)-X1234(13)-X1345(10)-
     2                  X1346(10)-X2345(10)-X2346(10)-X3456(6)-
     3                  X12345(11)-X12346(11)-X13456(7)-X23456(7)
                        B(MODE3,MODE5)=B(MODE3,MODE5)-X35(4)-X135(8)-
     1                  X235(8)-X345(6)-X356(5)-X1235(13)-X1345(11)-
     2                  X1356(10)-X2345(11)-X2356(10)-X3456(7)-
     3                  X12345(12)-X12356(11)-X13456(8)-X23456(8)
                        B(MODE3,MODE6)=B(MODE3,MODE6)-X36(4)-X136(8)-
     1                  X236(8)-X346(6)-X356(6)-X1236(13)-X1346(11)-
     2                  X1356(11)-X2346(11)-X2356(11)-X3456(8)-
     3                  X12346(12)-X12356(12)-X13456(9)-X23456(9)
                        B(MODE4,MODE4)=B(MODE4,MODE4)-X14(5)-X24(5)-
     1                  X34(5)-X45(3)-X46(3)-X124(9)-X134(9)-X145(7)-
     2                  X146(7)-X234(9)-X245(7)-X246(7)-X345(7)-X346(7)
     3                 -X456(4)-X1234(14)-X1245(12)-X1246(12)-X1345(12)
     4                 -X1346(12)-X1456(9)-X2345(12)-X2346(12)-X2456(9)
     5                 -X3456(9)-X12345(13)-X12346(13)-X12456(10)-
     6                  X13456(10)-X23456(10)
                        B(MODE4,MODE5)=B(MODE4,MODE5)-X45(4)-X145(8)-
     1                  X245(8)-X345(8)-X456(5)-X1245(13)-X1345(13)-
     2                  X1456(10)-X2345(13)-X2456(10)-X3456(10)-
     3                  X12345(14)-X12456(11)-X13456(11)-X23456(11)
                        B(MODE4,MODE6)=B(MODE4,MODE6)-X46(4)-X146(8)-
     1                  X246(8)-X346(8)-X456(6)-X1246(13)-X1346(13)-
     2                  X1456(11)-X2346(13)-X2456(11)-X3456(11)-
     3                  X12346(14)-X12456(12)-X13456(12)-X23456(12)
                        B(MODE5,MODE5)=B(MODE5,MODE5)-X15(5)-X25(5)-
     1                  X35(5)-X45(5)-X56(3)-X125(9)-X135(9)-X145(9)-
     2                  X156(7)-X235(9)-X245(9)-X256(7)-X345(9)-X356(7)
     3                 -X456(7)-X1235(14)-X1245(14)-X1256(12)-X1345(14)
     4                 -X1356(12)-X1456(12)-X2345(14)-X2356(12)-
     5                  X2456(12)-X3456(12)-X12345(15)-X12356(13)-
     6                  X12456(13)-X13456(13)-X23456(13)
                        B(MODE5,MODE6)=B(MODE5,MODE6)-X56(4)-X156(8)-
     1                  X256(8)-X356(8)-X456(8)-X1256(13)-X1356(13)-
     2                  X1456(13)-X2356(13)-X2456(13)-X3456(13)-
     3                  X12356(14)-X12456(14)-X13456(14)-X23456(14)
                        B(MODE6,MODE6)=B(MODE6,MODE6)-X16(5)-X26(5)-
     1                  X36(5)-X46(3)-X56(3)-X126(9)-X136(9)-X146(9)-
     2                  X156(9)-X236(9)-X246(9)-X256(9)-X346(9)-X356(9)
     3                 -X456(9)-X1236(14)-X1246(14)-X1256(14)-X1346(14)
     4                 -X1356(14)-X1456(14)-X2346(14)-X2356(14)-
     5                  X2456(14)-X3456(14)-X12346(15)-X12356(15)-
     6                  X12456(15)-X13456(15)-X23456(15)
                        CALL SET86(V,VR,MM3/MD3,MM4/MD4,MM5/MD5,
     1                  MM6/MD6,B,BB,NMODE,ZZ,M2,M3,M4,M5,MODE1,MODE2,
     2                  MODE3,MODE4,MODE5,MODE6)
                      END DO
                    END DO
                  END DO
                END DO
CC            END DO
CC          END DO
9999        CONTINUE
            CALL OUT86(V,VR,MM3/MD3,MM4/MD4,MM5/MD5,
     1      MM6/MD6)
          ELSE
CC          CALL OUT96(VM,VMR,MM1/MD1,MM2/MD2,MM3/MD3,MM4/MD4,MM5/MD5,
CC          MM6/MD6)
          END IF
C**
        END DO
      END DO
      CALL FLUSH(I86)
CC    CALL FLUSH(I96)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE IN70(H,N,M)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION H(N,M,3)
      DO K=1,3
        DO J=1,M
          READ(70)(H(I,J,K),I=1,N)
        END DO
      END DO
      RETURN
      END
C****************************************************************
      SUBROUTINE SET71(V,VR,MM,VDP,M)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM)
      REAL*4 VR(MM)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GT.0)THEN
        V(M)=VDP
      ELSE
        VR(M)=VDP
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE FIX71(V1,V1R,J1,VP1,MMX1,K,MODE,MM,MD,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V1(J1)
      REAL*4 V1R(J1)
      DIMENSION VP1(MMX1,1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
C     IF(K.EQ.MODE)THEN
        DO M=1,MM/MD
          IF(JCOUPL.GT.0)THEN
            VP1(M,IND)=V1(M)
          ELSE
            VP1(M,IND)=V1R(M)
          END IF
        END DO
C     END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VFIX71(V1,V1R,J1,VT1,KVP,MMTAU,MDT,MM,MD,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V1(J1,MMTAU)
      REAL*4 V1R(J1,MMTAU)
      DIMENSION VT1(KVP,MMTAU,1)
      DO MTAU=1,MMTAU/MDT
        DO M=1,MM/MD
          VT1(M,MTAU,IND)=V1(M,MTAU)
        END DO
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE IN71(V1,V1R,MK1,MDD1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V1(MK1)
      REAL*4 V1R(MK1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      IF(JCOUPL.GT.0)THEN
        READ(I71)V1
      ELSE
        READ(I71)V1R
      END IF
      IF(MDD1.EQ.2)THEN
        IF(JCOUPL.GT.0)THEN
          DO J=1,MK1
            V1(MK1+J)=V1(MK1+1-J)
          END DO
        ELSE
          DO J=1,MK1
            V1R(MK1+J)=V1R(MK1+1-J)
          END DO
        END IF
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE OUT71(V,VR,MM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM)
      REAL*4 VR(MM)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/FILASS/IOUT
      IF(JCOUPL.GT.0)THEN
        WRITE(I71)V
      ELSE
        WRITE(I71)VR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE GET81(V,VR,MM1,ZZ,M1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM1)
      REAL*4 VR(MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPC.GE.0)THEN
        IF(ICOUPC.GT.0)ZZ=V(M1)
      ELSE
        IF(ICOUPC.GT.0)ZZ=VR(M1)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE SET81(V,VR,MM,ZZ,M)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM)
      REAL*4 VR(MM)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPC.GE.0)THEN
        IF(ICOUPC.GT.0)V(M)=ZZ
      ELSE
        IF(ICOUPC.GT.0)VR(M)=ZZ
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE FIX81(V1,V1R,J1,VP1,MMX1,K,MODE,MM,MD,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V1(J1)
      REAL*4 V1R(J1)
      DIMENSION VP1(MMX1,1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      DO M=1,MM/MD
        IF(JCOUPC.GE.0)THEN
          VP1(M,IND)=V1(M)
        ELSE
          VP1(M,IND)=V1R(M)
        END IF
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VFIX81(V1,J1,VR1,KVP,MMTAU,MDT,MM,MD,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V1(J1,6,MMTAU)
      DIMENSION VR1(KVP,6,MMTAU,1)
      DO MTAU=1,MMTAU/MDT
        DO K=1,6
          DO M=1,MM/MD
            VR1(M,K,MTAU,IND)=V1(M,K,MTAU)
          END DO
        END DO
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE OUT81(V,VR,MM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM)
      REAL*4 VR(MM)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      IF(JCOUPC.GE.0)THEN
        IF(ICOUPC.GT.0)WRITE(I81)V
      ELSE
        IF(ICOUPC.GT.0)WRITE(I81)VR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE IN6781(VR,VRR,VP,VPR,VC,VCR,MM,J21)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM),VC(MM),VR(J21,MM)
      REAL*4 VPR(MM),VCR(MM),VRR(J21,MM)
      COMMON/WHICH/IWHICH
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/XSAVES/ICOUPX,ICOUCX,JCOUPS,JCOUCS
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      ICCCCC=ICOUPC
      IF(MOLINC.EQ.0)THEN
        ICCCCC=ICOUCX
      END IF
      IF(JCOUPC.GE.0)THEN
        IF(J21.GT.1.AND.ICCCCC.GE.1)READ(I61)VR
        IF(ICCCCC.GT.0)READ(I81)VC
      ELSE
        IF(J21.GT.1.AND.ICCCCC.GE.1)READ(I61)VRR
        IF(ICCCCC.GT.0)READ(I81)VCR
      END IF
      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(I71)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(I71)VPR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VSET81(V,VR,MM1,B,BB,NMODE,ZZ,M1,MODE1,MODE2)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM1,6)
      REAL*4 VR(MM1,6)
      DIMENSION B(NMODE,NMODE),BB(NMODE)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.1)RETURN
      IF(JCOUPC.GE.0)THEN
        V(M1,1)=BB(MODE1)
        V(M1,2)=BB(MODE2)
        V(M1,3)=B(MODE1,MODE1)
        V(M1,4)=B(MODE1,MODE2)
        V(M1,5)=B(MODE2,MODE2)
        V(M1,6)=ZZ
      ELSE
        VR(M1,1)=BB(MODE1)
        VR(M1,2)=BB(MODE2)
        VR(M1,3)=B(MODE1,MODE1)
        VR(M1,4)=B(MODE1,MODE2)
        VR(M1,5)=B(MODE2,MODE2)
        VR(M1,6)=ZZ
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VGET81(V,MM1,B,BB,NMODE,ZZ,M1,MODE1,MODE2,MTAU)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM1,6,1)
      DIMENSION B(NMODE,NMODE),BB(NMODE)
      BB(MODE1)=V(M1,1,MTAU)
      BB(MODE2)=V(M1,2,MTAU)
      B(MODE1,MODE1)=V(M1,3,MTAU)
      B(MODE1,MODE2)=V(M1,4,MTAU)
      B(MODE2,MODE2)=V(M1,5,MTAU)
      ZZ=V(M1,6,MTAU)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VOUT81(V,VR,MM1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM1,6)
      REAL*4 VR(MM1,6)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/FILASS/IOUT
      IF(JCOUPC.GE.0)THEN
        IF(ICOUPC.GT.0)WRITE(I81)V
      ELSE
        IF(ICOUPC.GT.0)WRITE(I81)VR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE SET91(VM,VMR,MM,ZZ,M)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VM(MM,7)
      REAL*4 VMR(MM,7)
      COMMON/MOMI/XK(3,3),XMU(3,3)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.1)RETURN
      MX=1
      MY=2
      MZ=3
      IF(JCOUPC.GE.0)THEN
        VM(M,1)=XMU(MX,MX)/2
        VM(M,2)=XMU(MY,MY)/2
        VM(M,3)=XMU(MZ,MZ)/2
        VM(M,4)=XMU(MX,MZ)/2
        VM(M,5)=XMU(MY,MZ)/2
        VM(M,6)=XMU(MX,MY)/2
        VM(M,7)=ZZ
      ELSE
        VMR(M,1)=XMU(MX,MX)/2
        VMR(M,2)=XMU(MY,MY)/2
        VMR(M,3)=XMU(MZ,MZ)/2
        VMR(M,4)=XMU(MX,MZ)/2
        VMR(M,5)=XMU(MY,MZ)/2
        VMR(M,6)=XMU(MX,MY)/2
        VMR(M,7)=ZZ
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE OUT91(VM,VMR,MM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VM(MM,7)
      REAL*4 VMR(MM,7)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      IF(JCOUPC.GE.0)THEN
        IF(ICOUPC.GT.0)WRITE(I91)VM
      ELSE
        IF(ICOUPC.GT.0)WRITE(I91)VMR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VSET91(VM,VMR,MM1,SUP3,BS,BSS,NMODE,ZZ,M1,MODE1,ITAU)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VM(MM1,15) 
      REAL*4 VMR(MM1,15)
      DIMENSION BS(NMODE,3,722),BSS(NMODE,722),SUP3(3)
      COMMON/MOMI0/XMU0(4,4),XIN0(4,4),XM0(4,4),SST,DETMU
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.1)RETURN
      MX=1
      MY=2
      MZ=3
      IF(JCOUPC.GE.0)THEN
        VM(M1,1)=XMU0(MX,MX)/2
        VM(M1,2)=XMU0(MY,MY)/2
        VM(M1,3)=XMU0(MZ,MZ)/2
        VM(M1,4)=XMU0(MX,MZ)/2
        VM(M1,5)=XMU0(MY,MZ)/2
        VM(M1,6)=XMU0(MX,MY)/2
        VM(M1,7)=0
        VM(M1,8)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MX)+
     1            BS(MODE1,MY,ITAU)*XMU0(MY,MX)+
     2            BS(MODE1,MZ,ITAU)*XMU0(MZ,MX))/2-
     3            BSS(MODE1,ITAU)*XMU0(MX,4)/2
        VM(M1,9)=XMU0(MX,4)/2
        VM(M1,10)=0
        VM(M1,11)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MY)+
     1            BS(MODE1,MY,ITAU)*XMU0(MY,MY)+
     2            BS(MODE1,MZ,ITAU)*XMU0(MZ,MY))/2-
     3            BSS(MODE1,ITAU)*XMU0(MY,4)/2
        VM(M1,12)=XMU0(MY,4)/2
        VM(M1,13)=0
        VM(M1,14)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MZ)+
     1            BS(MODE1,MY,ITAU)*XMU0(MY,MZ)+
     2            BS(MODE1,MZ,ITAU)*XMU0(MZ,MZ))/2-
     3            BSS(MODE1,ITAU)*XMU0(MZ,4)/2
        VM(M1,15)=XMU0(MZ,4)/2
      ELSE
        VMR(M1,1)=XMU0(MX,MX)/2
        VMR(M1,2)=XMU0(MY,MY)/2
        VMR(M1,3)=XMU0(MZ,MZ)/2
        VMR(M1,4)=XMU0(MX,MZ)/2
        VMR(M1,5)=XMU0(MY,MZ)/2
        VMR(M1,6)=XMU0(MX,MY)/2
        VMR(M1,7)=0
        VMR(M1,8)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MX)+
     1            BS(MODE1,MY,ITAU)*XMU0(MY,MX)+
     2            BS(MODE1,MZ,ITAU)*XMU0(MZ,MX))/2-
     3            BSS(MODE1,ITAU)*XMU0(MX,4)/2
        VMR(M1,9)=XMU0(MX,4)/2
        VMR(M1,10)=0
        VMR(M1,11)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MY)+
     1            BS(MODE1,MY,ITAU)*XMU0(MY,MY)+
     2            BS(MODE1,MZ,ITAU)*XMU0(MZ,MY))/2-
     3            BSS(MODE1,ITAU)*XMU0(MY,4)/2
        VMR(M1,12)=XMU0(MY,4)/2
        VMR(M1,13)=0
        VMR(M1,14)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MZ)+
     1            BS(MODE1,MY,ITAU)*XMU0(MY,MZ)+
     2            BS(MODE1,MZ,ITAU)*XMU0(MZ,MZ))/2-
     3            BSS(MODE1,ITAU)*XMU0(MZ,4)/2
        VMR(M1,15)=XMU0(MZ,4)/2
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VOUT91(VM,VMR,MM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VM(MM,15)
      REAL*4 VMR(MM,15)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/FILASS/IOUT
      IF(JCOUPC.GE.0)THEN
        IF(ICOUPC.GT.0)WRITE(I91)VM
      ELSE
        IF(ICOUPC.GT.0)WRITE(I91)VMR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE GET72(V,VR,MM1,MM2,VDP,M1,M2)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM2,MM1)
      REAL*4 VR(MM2,MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GT.0)THEN
        VDP=V(M2,M1)
      ELSE
        VDP=VR(M2,M1)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE SET72(V,VR,MM1,MM2,VDP,M1,M2)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM2,MM1)
      REAL*4 VR(MM2,MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GT.0)THEN
        V(M2,M1)=VDP
      ELSE
        VR(M2,M1)=VDP
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE FIX72(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE1,MM1,MD1,MODE2,
     1MM2,MD2,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V2(J2,J1)
      REAL*4 V2R(J2,J1)
      DIMENSION VP2(MAX2,MAX2,1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
C     IF(K1.EQ.MODE1.AND.K2.EQ.MODE2)THEN
        DO M1=1,MM1/MD1
          DO M2=1,MM2/MD2
            IF(JCOUPL.GT.0)THEN
              VP2(M2,M1,IND)=V2(M2,M1)
            ELSE
              VP2(M2,M1,IND)=V2R(M2,M1)
            END IF
          END DO
        END DO
C     END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VFIX72(V2,V2R,J1,J2,VT2,KVP,MMTAU,MDT,MM1,MD1,MM2,MD2,
     1IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V2(J2,J1,MMTAU)
      REAL*4 V2R(J2,J1,MMTAU)
      DIMENSION VT2(KVP,KVP,MMTAU,1)
      DO MTAU=1,MMTAU/MDT
        DO M1=1,MM1/MD1
          DO M2=1,MM2/MD2
            VT2(M2,M1,MTAU,IND)=V2(M2,M1,MTAU)
          END DO
        END DO
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE IN72(V2,V2R,MK1,MK2,V2X,V2XR,MAX2,MDD1,MDD2,K1,K2,
     1MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V2(MK2,MK1),V2X(MAX2,MAX2)
      REAL*4 V2R(MK2,MK1),V2XR(MAX2,MAX2)
      DIMENSION MODINT(1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      IF(JCOUPL.GT.0)THEN
        READ(I72)V2
      ELSE
        READ(I72)V2R
      END IF
      IF(JCOUPL.GT.0)THEN
        DO J=1,MK1
          DO K=1,MK2
            V2X(K,MK1+1-J)=V2(K,MK1+1-J)
          END DO
        END DO
      ELSE
        DO J=1,MK1
          DO K=1,MK2
            V2XR(K,MK1+1-J)=V2R(K,MK1+1-J)
          END DO
        END DO
      END IF
      IF((MDD1.EQ.2.AND.MDD2.EQ.2).OR.MODINT(K1).EQ.1.OR.
     1MODINT(K2).EQ.1)THEN
        IF(MDD1.EQ.2)THEN
          IF(JCOUPL.GT.0)THEN
            DO J=1,MK1
              DO K=1,MK2
                V2X(K,MK1+J)=V2X(K,MK1+1-J)
              END DO
            END DO
          ELSE
            DO J=1,MK1
              DO K=1,MK2
                V2XR(K,MK1+J)=V2XR(K,MK1+1-J)
              END DO
            END DO
          END IF
        END IF
        IF(MDD2.EQ.2)THEN
          IF(JCOUPL.GT.0)THEN
            DO J=1,MK1*MDD1
              DO K=1,MK2
                V2X(MK2+K,J)=V2X(MK2+1-K,J)
              END DO
            END DO
          ELSE
            DO J=1,MK1*MDD1
              DO K=1,MK2
                V2XR(MK2+K,J)=V2XR(MK2+1-K,J)
              END DO
            END DO
          END IF
        END IF
      END IF
      IF(MDD2.EQ.1.AND.MODINT(K1).NE.1.AND.MODINT(K2).NE.1)THEN
        IF(JCOUPL.GT.0)THEN
          DO J=1,MK1
            DO K=1,MK2
              V2X(K,MK1+J)=V2X(MK2+1-K,MK1+1-J)
            END DO
          END DO
        ELSE
          DO J=1,MK1
            DO K=1,MK2
              V2XR(K,MK1+J)=V2XR(MK2+1-K,MK1+1-J)
            END DO
          END DO
        END IF
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE OUT72(V,VR,MM1,MM2)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM2,MM1)
      REAL*4 VR(MM2,MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/FILASS/IOUT
      IF(JCOUPL.GT.0)THEN
        WRITE(I72)V
      ELSE
        WRITE(I72)VR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE GET82(V,VR,MM1,MM2,B,BB,NMODE,ZZ,M1,M2,MODE1,MODE2)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM2,MM1,6)
      REAL*4 VR(MM2,MM1,6)
      DIMENSION B(NMODE,NMODE),BB(NMODE)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.2)RETURN
      IF(JCOUPC.GE.0)THEN
        BB(MODE1)=V(M2,M1,1)
        BB(MODE2)=V(M2,M1,2)
        B(MODE1,MODE1)=V(M2,M1,3)
        B(MODE1,MODE2)=V(M2,M1,4)
        B(MODE2,MODE2)=V(M2,M1,5)
        ZZ=V(M2,M1,6)
      ELSE
        BB(MODE1)=VR(M2,M1,1)
        BB(MODE2)=VR(M2,M1,2)
        B(MODE1,MODE1)=VR(M2,M1,3)
        B(MODE1,MODE2)=VR(M2,M1,4)
        B(MODE2,MODE2)=VR(M2,M1,5)
        ZZ=VR(M2,M1,6)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE SET82(V,VR,MM1,MM2,B,BB,NMODE,ZZ,M1,M2,MODE1,MODE2)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM2,MM1,6)
      REAL*4 VR(MM2,MM1,6)
      DIMENSION B(NMODE,NMODE),BB(NMODE)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.2)RETURN
      IF(JCOUPC.GE.0)THEN
        V(M2,M1,1)=BB(MODE1)
        V(M2,M1,2)=BB(MODE2)
        V(M2,M1,3)=B(MODE1,MODE1)
        V(M2,M1,4)=B(MODE1,MODE2)
        V(M2,M1,5)=B(MODE2,MODE2)
        V(M2,M1,6)=ZZ
      ELSE
        VR(M2,M1,1)=BB(MODE1)
        VR(M2,M1,2)=BB(MODE2)
        VR(M2,M1,3)=B(MODE1,MODE1)
        VR(M2,M1,4)=B(MODE1,MODE2)
        VR(M2,M1,5)=B(MODE2,MODE2)
        VR(M2,M1,6)=ZZ
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE FIX82(V2,V2R,J1,J2,VP2,MAX2,K1,K2,MODE1,MM1,MD1,
     1MODE2,MM2,MD2,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V2(J2,J1,6)
      REAL*4 V2R(J2,J1,6)
      DIMENSION VP2(MAX2,MAX2,6,1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      DO M1=1,MM1/MD1
        DO M2=1,MM2/MD2
          DO K=1,6
            IF(JCOUPC.GE.0)THEN
              VP2(M2,M1,K,IND)=V2(M2,M1,K)
            ELSE
              VP2(M2,M1,K,IND)=V2R(M2,M1,K)
            END IF
          END DO
        END DO
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VFIX82(V2,J1,J2,VR2,KVP,MMTAU,MDT,MM1,MD1,MM2,MD2,
     1IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V2(J2,J1,10,MMTAU)
      DIMENSION VR2(KVP,KVP,10,MMTAU,1)
      DO MTAU=1,MMTAU/MDT
        DO K=1,10
          DO M1=1,MM1/MD1
            DO M2=1,MM2/MD2
              VR2(M2,M1,K,MTAU,IND)=V2(M2,M1,K,MTAU)
            END DO
          END DO
        END DO
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE OUT82(V,VR,MM1,MM2)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM2,MM1,6)
      REAL*4 VR(MM2,MM1,6)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      IF(JCOUPC.GE.0)THEN
        IF(ICOUPC.GE.2)WRITE(I82)V
      ELSE
        IF(ICOUPC.GE.2)WRITE(I82)VR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE IN6782(VR,VRR,VP,VPR,VC,VCR,MM1,MM2,J21)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,6),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,6),VRR(J21,MM2,MM1)
      COMMON/WHICH/IWHICH
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/XSAVES/ICOUPX,ICOUCX,JCOUPS,JCOUCS
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      ICCCCC=ICOUPC
      IF(MOLINC.EQ.0)THEN
        ICCCCC=ICOUCX
      END IF
      IF(JCOUPC.GE.0)THEN
        IF(J21.GT.1.AND.ICCCCC.GE.2)READ(I62)VR
        IF(ICCCCC.GE.2)READ(I82)VC
      ELSE
        IF(J21.GT.1.AND.ICCCCC.GE.2)READ(I62)VRR
        IF(ICCCCC.GE.2)READ(I82)VCR
      END IF
      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(I72)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(I72)VPR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VSET82(V,VR,MM1,MM2,B,BB,NMODE,ZZ,M1,M2,MODE1,
     1MODE2,MODE3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM2,MM1,10)
      REAL*4 VR(MM2,MM1,10)
      DIMENSION B(NMODE,NMODE),BB(NMODE)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.2)RETURN
      IF(JCOUPC.GE.0)THEN
        V(M2,M1,1)=BB(MODE1)
        V(M2,M1,2)=BB(MODE2)
        V(M2,M1,3)=BB(MODE3)
        V(M2,M1,4)=B(MODE1,MODE1)
        V(M2,M1,5)=B(MODE1,MODE2)
        V(M2,M1,6)=B(MODE1,MODE3)
        V(M2,M1,7)=B(MODE2,MODE2)
        V(M2,M1,8)=B(MODE2,MODE3)
        V(M2,M1,9)=B(MODE3,MODE3)
        V(M2,M1,10)=ZZ
      ELSE
        VR(M2,M1,1)=BB(MODE1)
        VR(M2,M1,2)=BB(MODE2)
        VR(M2,M1,3)=BB(MODE3)
        VR(M2,M1,4)=B(MODE1,MODE1)
        VR(M2,M1,5)=B(MODE1,MODE2)
        VR(M2,M1,6)=B(MODE1,MODE3)
        VR(M2,M1,7)=B(MODE2,MODE2)
        VR(M2,M1,8)=B(MODE2,MODE3)
        VR(M2,M1,9)=B(MODE3,MODE3)
        VR(M2,M1,10)=ZZ
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VGET82(V,MM1,MM2,B,BB,NMODE,ZZ,M1,M2,MODE1,
     1MODE2,MODE3,MTAU)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM2,MM1,10,MTAU)
      DIMENSION B(NMODE,NMODE),BB(NMODE)
      BB(MODE1)=V(M2,M1,1,MTAU)
      BB(MODE2)=V(M2,M1,2,MTAU)
      BB(MODE3)=V(M2,M1,3,MTAU)
      B(MODE1,MODE1)=V(M2,M1,4,MTAU)
      B(MODE1,MODE2)=V(M2,M1,5,MTAU)
      B(MODE1,MODE3)=V(M2,M1,6,MTAU)
      B(MODE2,MODE2)=V(M2,M1,7,MTAU)
      B(MODE2,MODE3)=V(M2,M1,8,MTAU)
      B(MODE3,MODE3)=V(M2,M1,9,MTAU)
      ZZ=V(M2,M1,10,MTAU)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VOUT82(V,VR,MM1,MM2)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM2,MM1,10)
      REAL*4 VR(MM2,MM1,10)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/FILASS/IOUT
      IF(JCOUPC.GE.0)THEN
        IF(ICOUPC.GE.2)WRITE(I82)V
      ELSE
        IF(ICOUPC.GE.2)WRITE(I82)VR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE SET92(VM,VMR,MM1,MM2,AB,NMODE,ZZ,M1,M2,MODE1,MODE2)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VM(MM2,MM1,13)
      REAL*4 VMR(MM2,MM1,13)
      DIMENSION AB(NMODE,3)
      COMMON/MOMI/XK(3,3),XMU(3,3)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.2)RETURN
      MX=1
      MY=2
      MZ=3
      IF(JCOUPC.GE.0)THEN
        VM(M2,M1,1)=XMU(MX,MX)/2
        VM(M2,M1,2)=XMU(MY,MY)/2
        VM(M2,M1,3)=XMU(MZ,MZ)/2
        VM(M2,M1,4)=XMU(MX,MZ)/2
        VM(M2,M1,5)=XMU(MY,MZ)/2
        VM(M2,M1,6)=XMU(MX,MY)/2
        VM(M2,M1,7)=(XMU(MX,MX)*AB(MODE1,MX)+
     1  XMU(MY,MX)*AB(MODE1,MY)+XMU(MZ,MX)*AB(MODE1,MZ))/2
        VM(M2,M1,8)=(XMU(MX,MX)*AB(MODE2,MX)+
     1  XMU(MY,MX)*AB(MODE2,MY)+XMU(MZ,MX)*AB(MODE2,MZ))/2
        VM(M2,M1,9)=(XMU(MX,MY)*AB(MODE1,MX)+
     1  XMU(MY,MY)*AB(MODE1,MY)+XMU(MZ,MY)*AB(MODE1,MZ))/2
        VM(M2,M1,10)=(XMU(MX,MY)*AB(MODE2,MX)+
     1  XMU(MY,MY)*AB(MODE2,MY)+XMU(MZ,MY)*AB(MODE2,MZ))/2
        VM(M2,M1,11)=(XMU(MX,MZ)*AB(MODE1,MX)+
     1  XMU(MY,MZ)*AB(MODE1,MY)+XMU(MZ,MZ)*AB(MODE1,MZ))/2
        VM(M2,M1,12)=(XMU(MX,MZ)*AB(MODE2,MX)+
     1  XMU(MY,MZ)*AB(MODE2,MY)+XMU(MZ,MZ)*AB(MODE2,MZ))/2
        VM(M2,M1,13)=ZZ
      ELSE
        VMR(M2,M1,1)=XMU(MX,MX)/2
        VMR(M2,M1,2)=XMU(MY,MY)/2
        VMR(M2,M1,3)=XMU(MZ,MZ)/2
        VMR(M2,M1,4)=XMU(MX,MZ)/2
        VMR(M2,M1,5)=XMU(MY,MZ)/2
        VMR(M2,M1,6)=XMU(MX,MY)/2
        VMR(M2,M1,7)=(XMU(MX,MX)*AB(MODE1,MX)+
     1  XMU(MY,MX)*AB(MODE1,MY)+XMU(MZ,MX)*AB(MODE1,MZ))/2
        VMR(M2,M1,8)=(XMU(MX,MX)*AB(MODE2,MX)+
     1  XMU(MY,MX)*AB(MODE2,MY)+XMU(MZ,MX)*AB(MODE2,MZ))/2
        VMR(M2,M1,9)=(XMU(MX,MY)*AB(MODE1,MX)+
     1  XMU(MY,MY)*AB(MODE1,MY)+XMU(MZ,MY)*AB(MODE1,MZ))/2
        VMR(M2,M1,10)=(XMU(MX,MY)*AB(MODE2,MX)+
     1  XMU(MY,MY)*AB(MODE2,MY)+XMU(MZ,MY)*AB(MODE2,MZ))/2
        VMR(M2,M1,11)=(XMU(MX,MZ)*AB(MODE1,MX)+
     1  XMU(MY,MZ)*AB(MODE1,MY)+XMU(MZ,MZ)*AB(MODE1,MZ))/2
        VMR(M2,M1,12)=(XMU(MX,MZ)*AB(MODE2,MX)+
     1  XMU(MY,MZ)*AB(MODE2,MY)+XMU(MZ,MZ)*AB(MODE2,MZ))/2
        VMR(M2,M1,13)=ZZ
      END IF
      RETURN 
      END
C****************************************************************
C****************************************************************
      SUBROUTINE OUT92(VM,VMR,MM1,MM2)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VM(MM2,MM1,13)
      REAL*4 VMR(MM2,MM1,13)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      IF(JCOUPC.GE.0)THEN
        IF(ICOUPC.GE.2)WRITE(I92)VM
      ELSE
        IF(ICOUPC.GE.2)WRITE(I92)VMR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VSET92(VM,VMR,MM1,MM2,SUP3,BS,BSS,NMODE,ZZ,M1,M2,
     1MODE1,MODE2,ITAU)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VM(MM2,MM1,18)
      REAL*4 VMR(MM2,MM1,18)
      DIMENSION BS(NMODE,3,722),BSS(NMODE,722),SUP3(3)
      COMMON/MOMI0/XMU0(4,4),XIN0(4,4),XM0(4,4),SST,DETMU
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.2)RETURN
      MX=1
      MY=2
      MZ=3
      IF(JCOUPC.GE.0)THEN
        VM(M2,M1,1)=XMU0(MX,MX)/2
        VM(M2,M1,2)=XMU0(MY,MY)/2
        VM(M2,M1,3)=XMU0(MZ,MZ)/2
        VM(M2,M1,4)=XMU0(MX,MZ)/2
        VM(M2,M1,5)=XMU0(MY,MZ)/2
        VM(M2,M1,6)=XMU0(MX,MY)/2
        VM(M2,M1,7)=0
        VM(M2,M1,8)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MX)+
     1          BS(MODE1,MY,ITAU)*XMU0(MY,MX)+
     2          BS(MODE1,MZ,ITAU)*XMU0(MZ,MX))/2-
     3          BSS(MODE1,ITAU)*XMU0(MX,4)/2
        VM(M2,M1,9)=-(BS(MODE2,MX,ITAU)*XMU0(MX,MX)+
     1          BS(MODE2,MY,ITAU)*XMU0(MY,MX)+
     2          BS(MODE2,MZ,ITAU)*XMU0(MZ,MX))/2-
     3          BSS(MODE2,ITAU)*XMU0(MX,4)/2
        VM(M2,M1,10)=XMU0(MX,4)/2
        VM(M2,M1,11)=0
        VM(M2,M1,12)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MY)+
     1          BS(MODE1,MY,ITAU)*XMU0(MY,MY)+
     2          BS(MODE1,MZ,ITAU)*XMU0(MZ,MY))/2-
     3          BSS(MODE1,ITAU)*XMU0(MY,4)/2
        VM(M2,M1,13)=-(BS(MODE2,MX,ITAU)*XMU0(MX,MY)+
     1          BS(MODE2,MY,ITAU)*XMU0(MY,MY)+
     2          BS(MODE2,MZ,ITAU)*XMU0(MZ,MY))/2-
     3          BSS(MODE2,ITAU)*XMU0(MY,4)/2
        VM(M2,M1,14)=XMU0(MY,4)/2
        VM(M2,M1,15)=0
        VM(M2,M1,16)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MZ)+
     1          BS(MODE1,MY,ITAU)*XMU0(MY,MZ)+
     2          BS(MODE1,MZ,ITAU)*XMU0(MZ,MZ))/2-
     3          BSS(MODE1,ITAU)*XMU0(MZ,4)/2
        VM(M2,M1,17)=-(BS(MODE2,MX,ITAU)*XMU0(MX,MZ)+
     1          BS(MODE2,MY,ITAU)*XMU0(MY,MZ)+
     2          BS(MODE2,MZ,ITAU)*XMU0(MZ,MZ))/2-
     3          BSS(MODE2,ITAU)*XMU0(MZ,4)/2
        VM(M2,M1,18)=XMU0(MZ,4)/2
      ELSE
        VMR(M2,M1,1)=XMU0(MX,MX)/2
        VMR(M2,M1,2)=XMU0(MY,MY)/2
        VMR(M2,M1,3)=XMU0(MZ,MZ)/2
        VMR(M2,M1,4)=XMU0(MX,MZ)/2
        VMR(M2,M1,5)=XMU0(MY,MZ)/2
        VMR(M2,M1,6)=XMU0(MX,MY)/2
        VMR(M2,M1,7)=0
        VMR(M2,M1,8)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MX)+
     1          BS(MODE1,MY,ITAU)*XMU0(MY,MX)+
     2          BS(MODE1,MZ,ITAU)*XMU0(MZ,MX))/2-
     3          BSS(MODE1,ITAU)*XMU0(MX,4)/2
        VMR(M2,M1,9)=-(BS(MODE2,MX,ITAU)*XMU0(MX,MX)+
     1          BS(MODE2,MY,ITAU)*XMU0(MY,MX)+
     2          BS(MODE2,MZ,ITAU)*XMU0(MZ,MX))/2-
     3          BSS(MODE2,ITAU)*XMU0(MX,4)/2
        VMR(M2,M1,10)=XMU0(MX,4)/2
        VMR(M2,M1,11)=0
        VMR(M2,M1,12)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MY)+
     1          BS(MODE1,MY,ITAU)*XMU0(MY,MY)+
     2          BS(MODE1,MZ,ITAU)*XMU0(MZ,MY))/2-
     3          BSS(MODE1,ITAU)*XMU0(MY,4)/2
        VMR(M2,M1,13)=-(BS(MODE2,MX,ITAU)*XMU0(MX,MY)+
     1          BS(MODE2,MY,ITAU)*XMU0(MY,MY)+
     2          BS(MODE2,MZ,ITAU)*XMU0(MZ,MY))/2-
     3          BSS(MODE2,ITAU)*XMU0(MY,4)/2
        VMR(M2,M1,14)=XMU0(MY,4)/2
        VMR(M2,M1,15)=0
        VMR(M2,M1,16)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MZ)+
     1          BS(MODE1,MY,ITAU)*XMU0(MY,MZ)+
     2          BS(MODE1,MZ,ITAU)*XMU0(MZ,MZ))/2-
     3          BSS(MODE1,ITAU)*XMU0(MZ,4)/2
        VMR(M2,M1,17)=-(BS(MODE2,MX,ITAU)*XMU0(MX,MZ)+
     1          BS(MODE2,MY,ITAU)*XMU0(MY,MZ)+
     2          BS(MODE2,MZ,ITAU)*XMU0(MZ,MZ))/2-
     3          BSS(MODE2,ITAU)*XMU0(MZ,4)/2
        VMR(M2,M1,18)=XMU0(MZ,4)/2
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VOUT92(VM,VMR,MM1,MM2)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VM(MM2,MM1,18)
      REAL*4 VMR(MM2,MM1,18)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      IF(JCOUPC.GE.0)THEN
        IF(ICOUPC.GE.2)WRITE(I92)VM
      ELSE
        IF(ICOUPC.GE.2)WRITE(I92)VMR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE GET73(V,VR,MM1,MM2,MM3,VDP,M1,M2,M3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM3,MM2,MM1)
      REAL*4 VR(MM3,MM2,MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GT.0)THEN
        VDP=V(M3,M2,M1)
      ELSE
        VDP=VR(M3,M2,M1)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE SET73(V,VR,MM1,MM2,MM3,VDP,M1,M2,M3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM3,MM2,MM1)
      REAL*4 VR(MM3,MM2,MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GT.0)THEN
        V(M3,M2,M1)=VDP
      ELSE
        VR(M3,M2,M1)=VDP
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE FIX73(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,MD1,
     1MODE2,MM2,MD2,MODE3,MM3,MD3,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V3(J3,J2,J1)
      REAL*4 V3R(J3,J2,J1)
      DIMENSION VP3(MAX3,MAX3,MAX3,1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
C     IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3)THEN
        DO M1=1,MM1/MD1
          DO M2=1,MM2/MD2
            DO M3=1,MM3/MD3
              IF(JCOUPL.GT.0)THEN
                VP3(M3,M2,M1,IND)=V3(M3,M2,M1)
              ELSE
                VP3(M3,M2,M1,IND)=V3R(M3,M2,M1)
              END IF
            END DO
          END DO
        END DO
C     END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VFIX73(V3,V3R,J1,J2,J3,VT3,KVP,MMTAU,MDT,MM1,MD1,MM2,
     1MD2,MM3,MD3,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V3(J3,J2,J1,MMTAU)
      REAL*4 V3R(J3,J2,J1,MMTAU)
      DIMENSION VT3(KVP,KVP,KVP,MMTAU,1)
      DO MTAU=1,MMTAU/MDT
        DO M1=1,MM1/MD1
          DO M2=1,MM2/MD2
            DO M3=1,MM3/MD3
              VT3(M3,M2,M1,MTAU,IND)=V3(M3,M2,M1,MTAU)
            END DO
          END DO
        END DO
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE IN73(V3,V3R,MK1,MK2,MK3,V3X,V3XR,MAX3,MDD1,MDD2,MDD3,
     1K1,K2,K3,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V3(MK3,MK2,MK1),V3X(MAX3,MAX3,MAX3)
      REAL*4 V3R(MK3,MK2,MK1),V3XR(MAX3,MAX3,MAX3)
      DIMENSION MODINT(1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      IF(JCOUPL.GT.0)THEN
        READ(I73)V3
      ELSE
        READ(I73)V3R
      END IF
      IF(JCOUPL.GT.0)THEN
        DO J=1,MK1
          DO K=1,MK2
            DO L=1,MK3
              V3X(L,MK2+1-K,MK1+1-J)=V3(L,MK2+1-K,MK1+1-J)
            END DO
          END DO
        END DO
      ELSE
        DO J=1,MK1
          DO K=1,MK2
            DO L=1,MK3
              V3XR(L,MK2+1-K,MK1+1-J)=V3R(L,MK2+1-K,MK1+1-J)
            END DO
          END DO
        END DO
      END IF
      IF((MDD1.EQ.2.AND.MDD2.EQ.2).OR.MODINT(K1).EQ.1.OR.
     1MODINT(K2).EQ.1)THEN
        IF(MDD1.EQ.2)THEN
          IF(JCOUPL.GT.0)THEN
            DO J=1,MK1
              DO K=1,MK2
                DO L=1,MK3
                  V3X(L,K,MK1+J)=V3X(L,K,MK1+1-J)
                END DO
              END DO
            END DO
          ELSE
            DO J=1,MK1
              DO K=1,MK2
                DO L=1,MK3
                  V3XR(L,K,MK1+J)=V3XR(L,K,MK1+1-J)
                END DO
              END DO
            END DO
          END IF
        END IF
        IF(MDD2.EQ.2)THEN
          IF(JCOUPL.GT.0)THEN
            DO J=1,MK1*MDD1
              DO K=1,MK2
                DO L=1,MK3
                  V3X(L,MK2+K,J)=V3X(L,MK2+1-K,J)
                END DO
              END DO
            END DO
          ELSE
            DO J=1,MK1*MDD1
              DO K=1,MK2
                DO L=1,MK3
                  V3XR(L,MK2+K,J)=V3XR(L,MK2+1-K,J)
                END DO
              END DO
            END DO
          END IF
        END IF
      END IF
      IF(MDD2.EQ.1.AND.MODINT(K1).NE.1.AND.MODINT(K2).NE.1)THEN
        IF(JCOUPL.GT.0)THEN
          DO J=1,MK1
            DO K=1,MK2
              DO L=1,MK3
                V3X(L,K,MK1+J)=V3X(L,MK2+1-K,MK1+1-J)
              END DO
            END DO
          END DO
        ELSE
          DO J=1,MK1
            DO K=1,MK2
              DO L=1,MK3
                V3XR(L,K,MK1+J)=V3XR(L,MK2+1-K,MK1+1-J)
              END DO
            END DO
          END DO
        END IF
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE OUT73(V,VR,MM1,MM2,MM3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM3,MM2,MM1)
      REAL*4 VR(MM3,MM2,MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      IF(JCOUPL.GT.0)THEN
        WRITE(I73)V
      ELSE
        WRITE(I73)VR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE GET83(V,VR,MM1,MM2,MM3,B,BB,NMODE,ZZ,M1,M2,M3,MODE1,
     1MODE2,MODE3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM3,MM2,MM1,10)
      REAL*4 VR(MM3,MM2,MM1,10)
      DIMENSION B(NMODE,NMODE),BB(NMODE)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.3)RETURN
      IF(JCOUPC.GE.0)THEN
        BB(MODE1)=V(M3,M2,M1,1)
        BB(MODE2)=V(M3,M2,M1,2)
        BB(MODE3)=V(M3,M2,M1,3)
        B(MODE1,MODE1)=V(M3,M2,M1,4)
        B(MODE1,MODE2)=V(M3,M2,M1,5)
        B(MODE1,MODE3)=V(M3,M2,M1,6)
        B(MODE2,MODE2)=V(M3,M2,M1,7)
        B(MODE2,MODE3)=V(M3,M2,M1,8)
        B(MODE3,MODE3)=V(M3,M2,M1,9)
        ZZ=V(M3,M2,M1,10)
      ELSE
        BB(MODE1)=VR(M3,M2,M1,1)
        BB(MODE2)=VR(M3,M2,M1,2)
        BB(MODE3)=VR(M3,M2,M1,3)
        B(MODE1,MODE1)=VR(M3,M2,M1,4)
        B(MODE1,MODE2)=VR(M3,M2,M1,5)
        B(MODE1,MODE3)=VR(M3,M2,M1,6)
        B(MODE2,MODE2)=VR(M3,M2,M1,7)
        B(MODE2,MODE3)=VR(M3,M2,M1,8)
        B(MODE3,MODE3)=VR(M3,M2,M1,9)
        ZZ=VR(M3,M2,M1,10)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE SET83(V,VR,MM1,MM2,MM3,B,BB,NMODE,ZZ,M1,M2,M3,MODE1,
     1MODE2,MODE3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM3,MM2,MM1,10)
      REAL*4 VR(MM3,MM2,MM1,10)
      DIMENSION B(NMODE,NMODE),BB(NMODE)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.3)RETURN
      IF(JCOUPC.GE.0)THEN
        V(M3,M2,M1,1)=BB(MODE1)
        V(M3,M2,M1,2)=BB(MODE2)
        V(M3,M2,M1,3)=BB(MODE3)
        V(M3,M2,M1,4)=B(MODE1,MODE1)
        V(M3,M2,M1,5)=B(MODE1,MODE2)
        V(M3,M2,M1,6)=B(MODE1,MODE3)
        V(M3,M2,M1,7)=B(MODE2,MODE2)
        V(M3,M2,M1,8)=B(MODE2,MODE3)
        V(M3,M2,M1,9)=B(MODE3,MODE3)
        V(M3,M2,M1,10)=ZZ
      ELSE
        VR(M3,M2,M1,1)=BB(MODE1)
        VR(M3,M2,M1,2)=BB(MODE2)
        VR(M3,M2,M1,3)=BB(MODE3)
        VR(M3,M2,M1,4)=B(MODE1,MODE1)
        VR(M3,M2,M1,5)=B(MODE1,MODE2)
        VR(M3,M2,M1,6)=B(MODE1,MODE3)
        VR(M3,M2,M1,7)=B(MODE2,MODE2)
        VR(M3,M2,M1,8)=B(MODE2,MODE3)
        VR(M3,M2,M1,9)=B(MODE3,MODE3)
        VR(M3,M2,M1,10)=ZZ
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE FIX83(V3,V3R,J1,J2,J3,VP3,MAX3,K1,K2,K3,MODE1,MM1,
     1MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V3(J3,J2,J1,10)
      REAL*4 V3R(J3,J2,J1,10)
      DIMENSION VP3(MAX3,MAX3,MAX3,10,1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      DO M1=1,MM1/MD1
        DO M2=1,MM2/MD2
          DO M3=1,MM3/MD3
            DO K=1,10
              IF(JCOUPC.GE.0)THEN
                VP3(M3,M2,M1,K,IND)=V3(M3,M2,M1,K)
              ELSE
                VP3(M3,M2,M1,K,IND)=V3R(M3,M2,M1,K)
              END IF
            END DO
          END DO
        END DO
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VFIX83(V3,J1,J2,J3,VR3,KVP,MMTAU,MDT,MM1,MD1,MM2,MD2,
     1MM3,MD3,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V3(J3,J2,J1,15,MMTAU)
      DIMENSION VR3(KVP,KVP,KVP,15,MMTAU,1)
      DO MTAU=1,MMTAU/MDT
        DO K=1,15
          DO M1=1,MM1/MD1
            DO M2=1,MM2/MD2
              DO M3=1,MM3/MD3
                VR3(M3,M2,M1,K,MTAU,IND)=V3(M3,M2,M1,K,MTAU)
              END DO
            END DO
          END DO
        END DO
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE OUT83(V,VR,MM1,MM2,MM3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM3,MM2,MM1,10)
      REAL*4 VR(MM3,MM2,MM1,10)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      IF(JCOUPC.GE.0)THEN
        IF(ICOUPC.GE.3)WRITE(I83)V
      ELSE
        IF(ICOUPC.GE.3)WRITE(I83)VR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE IN6783(VR,VRR,VP,VPR,VC,VCR,MM1,MM2,MM3,J21)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,10),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,10),VRR(J21,MM3,MM2,MM1)
      COMMON/WHICH/IWHICH
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/XSAVES/ICOUPX,ICOUCX,JCOUPS,JCOUCS
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      ICCCCC=ICOUPC
      IF(MOLINC.EQ.0)THEN
        ICCCCC=ICOUCX
      END IF
      IF(JCOUPC.GT.0)THEN
        IF(J21.GT.1.AND.ICCCCC.GE.3)READ(I63)VR
        IF(ICCCCC.GE.3)READ(I83)VC
      ELSE
        IF(J21.GT.1.AND.ICCCCC.GE.3)READ(I63)VRR
        IF(ICCCCC.GE.3)READ(I83)VCR
      END IF
      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(I73)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(I73)VPR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VSET83(V,VR,MM1,MM2,MM3,B,BB,NMODE,ZZ,M1,M2,M3,
     1MODE1,MODE2,MODE3,MODE4)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM3,MM2,MM1,15)
      REAL*4 VR(MM3,MM2,MM1,15)
      DIMENSION B(NMODE,NMODE),BB(NMODE)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.3)RETURN
      IF(JCOUPC.GE.0)THEN
        V(M3,M2,M1,1)=BB(MODE1)
        V(M3,M2,M1,2)=BB(MODE2)
        V(M3,M2,M1,3)=BB(MODE3)
        V(M3,M2,M1,4)=BB(MODE4)
        V(M3,M2,M1,5)=B(MODE1,MODE1)
        V(M3,M2,M1,6)=B(MODE1,MODE2)
        V(M3,M2,M1,7)=B(MODE1,MODE3)
        V(M3,M2,M1,8)=B(MODE1,MODE4)
        V(M3,M2,M1,9)=B(MODE2,MODE2)
        V(M3,M2,M1,10)=B(MODE2,MODE3)
        V(M3,M2,M1,11)=B(MODE2,MODE4)
        V(M3,M2,M1,12)=B(MODE3,MODE3)
        V(M3,M2,M1,13)=B(MODE3,MODE4)
        V(M3,M2,M1,14)=B(MODE4,MODE4)
        V(M3,M2,M1,15)=ZZ
      ELSE
        VR(M3,M2,M1,1)=BB(MODE1)
        VR(M3,M2,M1,2)=BB(MODE2)
        VR(M3,M2,M1,3)=BB(MODE3)
        VR(M3,M2,M1,4)=BB(MODE4)
        VR(M3,M2,M1,5)=B(MODE1,MODE1)
        VR(M3,M2,M1,6)=B(MODE1,MODE2)
        VR(M3,M2,M1,7)=B(MODE1,MODE3)
        VR(M3,M2,M1,8)=B(MODE1,MODE4)
        VR(M3,M2,M1,9)=B(MODE2,MODE2)
        VR(M3,M2,M1,10)=B(MODE2,MODE3)
        VR(M3,M2,M1,11)=B(MODE2,MODE4)
        VR(M3,M2,M1,12)=B(MODE3,MODE3)
        VR(M3,M2,M1,13)=B(MODE3,MODE4)
        VR(M3,M2,M1,14)=B(MODE4,MODE4)
        VR(M3,M2,M1,15)=ZZ
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VGET83(V,MM1,MM2,MM3,B,BB,NMODE,ZZ,M1,M2,M3,
     1MODE1,MODE2,MODE3,MODE4,MTAU)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM3,MM2,MM1,15,MTAU)
      DIMENSION B(NMODE,NMODE),BB(NMODE)
      BB(MODE1)=V(M3,M2,M1,1,MTAU)
      BB(MODE2)=V(M3,M2,M1,2,MTAU)
      BB(MODE3)=V(M3,M2,M1,3,MTAU)
      BB(MODE4)=V(M3,M2,M1,4,MTAU)
      B(MODE1,MODE1)=V(M3,M2,M1,5,MTAU)
      B(MODE1,MODE2)=V(M3,M2,M1,6,MTAU)
      B(MODE1,MODE3)=V(M3,M2,M1,7,MTAU)
      B(MODE1,MODE4)=V(M3,M2,M1,8,MTAU)
      B(MODE2,MODE2)=V(M3,M2,M1,9,MTAU)
      B(MODE2,MODE3)=V(M3,M2,M1,10,MTAU)
      B(MODE2,MODE4)=V(M3,M2,M1,11,MTAU)
      B(MODE3,MODE3)=V(M3,M2,M1,12,MTAU)
      B(MODE3,MODE4)=V(M3,M2,M1,13,MTAU)
      B(MODE4,MODE4)=V(M3,M2,M1,14,MTAU)
      ZZ=V(M3,M2,M1,15,MTAU)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VOUT83(V,VR,MM1,MM2,MM3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM3,MM2,MM1,15)
      REAL*4 VR(MM3,MM2,MM1,15)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      IF(JCOUPC.GE.0)THEN
        IF(ICOUPC.GE.3)WRITE(I83)V
      ELSE
        IF(ICOUPC.GE.3)WRITE(I83)VR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE SET93(VM,VMR,MM1,MM2,MM3,AB,NMODE,ZZ,M1,M2,M3,MODE1,
     1MODE2,MODE3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VM(MM3,MM2,MM1,16)
      REAL*4 VMR(MM3,MM2,MM1,16)
      DIMENSION AB(NMODE,3)
      COMMON/MOMI/XK(3,3),XMU(3,3)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.3)RETURN
      MX=1
      MY=2
      MZ=3
      IF(JCOUPC.GE.0)THEN
        VM(M3,M2,M1,1)=XMU(MX,MX)/2
        VM(M3,M2,M1,2)=XMU(MY,MY)/2
        VM(M3,M2,M1,3)=XMU(MZ,MZ)/2
        VM(M3,M2,M1,4)=XMU(MX,MZ)/2
        VM(M3,M2,M1,5)=XMU(MY,MZ)/2
        VM(M3,M2,M1,6)=XMU(MX,MY)/2
        VM(M3,M2,M1,7)=(XMU(MX,MX)*AB(MODE1,MX)+
     1  XMU(MY,MX)*AB(MODE1,MY)+XMU(MZ,MX)*AB(MODE1,MZ))/2
        VM(M3,M2,M1,8)=(XMU(MX,MX)*AB(MODE2,MX)+
     1  XMU(MY,MX)*AB(MODE2,MY)+XMU(MZ,MX)*AB(MODE2,MZ))/2
        VM(M3,M2,M1,9)=(XMU(MX,MX)*AB(MODE3,MX)+
     1  XMU(MY,MX)*AB(MODE3,MY)+XMU(MZ,MX)*AB(MODE3,MZ))/2
        VM(M3,M2,M1,10)=(XMU(MX,MY)*AB(MODE1,MX)+
     1  XMU(MY,MY)*AB(MODE1,MY)+XMU(MZ,MY)*AB(MODE1,MZ))/2
        VM(M3,M2,M1,11)=(XMU(MX,MY)*AB(MODE2,MX)+
     1  XMU(MY,MY)*AB(MODE2,MY)+XMU(MZ,MY)*AB(MODE2,MZ))/2
        VM(M3,M2,M1,12)=(XMU(MX,MY)*AB(MODE3,MX)+
     1  XMU(MY,MY)*AB(MODE3,MY)+XMU(MZ,MY)*AB(MODE3,MZ))/2
        VM(M3,M2,M1,13)=(XMU(MX,MZ)*AB(MODE1,MX)+
     1  XMU(MY,MZ)*AB(MODE1,MY)+XMU(MZ,MZ)*AB(MODE1,MZ))/2
        VM(M3,M2,M1,14)=(XMU(MX,MZ)*AB(MODE2,MX)+
     1  XMU(MY,MZ)*AB(MODE2,MY)+XMU(MZ,MZ)*AB(MODE2,MZ))/2
        VM(M3,M2,M1,15)=(XMU(MX,MZ)*AB(MODE3,MX)+
     1  XMU(MY,MZ)*AB(MODE3,MY)+XMU(MZ,MZ)*AB(MODE3,MZ))/2
        VM(M3,M2,M1,16)=ZZ
      ELSE
        VMR(M3,M2,M1,1)=XMU(MX,MX)/2
        VMR(M3,M2,M1,2)=XMU(MY,MY)/2
        VMR(M3,M2,M1,3)=XMU(MZ,MZ)/2
        VMR(M3,M2,M1,4)=XMU(MX,MZ)/2
        VMR(M3,M2,M1,5)=XMU(MY,MZ)/2
        VMR(M3,M2,M1,6)=XMU(MX,MY)/2
        VMR(M3,M2,M1,7)=(XMU(MX,MX)*AB(MODE1,MX)+
     1  XMU(MY,MX)*AB(MODE1,MY)+XMU(MZ,MX)*AB(MODE1,MZ))/2
        VMR(M3,M2,M1,8)=(XMU(MX,MX)*AB(MODE2,MX)+
     1  XMU(MY,MX)*AB(MODE2,MY)+XMU(MZ,MX)*AB(MODE2,MZ))/2
        VMR(M3,M2,M1,9)=(XMU(MX,MX)*AB(MODE3,MX)+
     1  XMU(MY,MX)*AB(MODE3,MY)+XMU(MZ,MX)*AB(MODE3,MZ))/2
        VMR(M3,M2,M1,10)=(XMU(MX,MY)*AB(MODE1,MX)+
     1  XMU(MY,MY)*AB(MODE1,MY)+XMU(MZ,MY)*AB(MODE1,MZ))/2
        VMR(M3,M2,M1,11)=(XMU(MX,MY)*AB(MODE2,MX)+
     1  XMU(MY,MY)*AB(MODE2,MY)+XMU(MZ,MY)*AB(MODE2,MZ))/2
        VMR(M3,M2,M1,12)=(XMU(MX,MY)*AB(MODE3,MX)+
     1  XMU(MY,MY)*AB(MODE3,MY)+XMU(MZ,MY)*AB(MODE3,MZ))/2
        VMR(M3,M2,M1,13)=(XMU(MX,MZ)*AB(MODE1,MX)+
     1  XMU(MY,MZ)*AB(MODE1,MY)+XMU(MZ,MZ)*AB(MODE1,MZ))/2
        VMR(M3,M2,M1,14)=(XMU(MX,MZ)*AB(MODE2,MX)+
     1  XMU(MY,MZ)*AB(MODE2,MY)+XMU(MZ,MZ)*AB(MODE2,MZ))/2
        VMR(M3,M2,M1,15)=(XMU(MX,MZ)*AB(MODE3,MX)+
     1  XMU(MY,MZ)*AB(MODE3,MY)+XMU(MZ,MZ)*AB(MODE3,MZ))/2
        VMR(M3,M2,M1,16)=ZZ
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE OUT93(VM,VMR,MM1,MM2,MM3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VM(MM3,MM2,MM1,16)
      REAL*4 VMR(MM3,MM2,MM1,16)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      IF(JCOUPC.GE.0)THEN
        IF(ICOUPC.GE.3)WRITE(I93)VM
      ELSE
        IF(ICOUPC.GE.3)WRITE(I93)VMR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VSET93(VM,VMR,MM1,MM2,MM3,SUP3,BS,BSS,NMODE,ZZ,M1,M2,
     1M3,MODE1,MODE2,MODE3,ITAU)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VM(MM3,MM2,MM1,21)
      REAL*4 VMR(MM3,MM2,MM1,21)
      DIMENSION BS(NMODE,3,722),BSS(NMODE,722),SUP3(3)
      COMMON/MOMI0/XMU0(4,4),XIN0(4,4),XM0(4,4),SST,DETMU
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.3)RETURN
      MX=1
      MY=2
      MZ=3
      IF(JCOUPC.GE.0)THEN
        VM(M3,M2,M1,1)=XMU0(MX,MX)/2
        VM(M3,M2,M1,2)=XMU0(MY,MY)/2
        VM(M3,M2,M1,3)=XMU0(MZ,MZ)/2
        VM(M3,M2,M1,4)=XMU0(MX,MZ)/2
        VM(M3,M2,M1,5)=XMU0(MY,MZ)/2
        VM(M3,M2,M1,6)=XMU0(MX,MY)/2
        VM(M3,M2,M1,7)=0
        VM(M3,M2,M1,8)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MX)+
     1        BS(MODE1,MY,ITAU)*XMU0(MY,MX)+
     2        BS(MODE1,MZ,ITAU)*XMU0(MZ,MX))/2-
     3        BSS(MODE1,ITAU)*XMU0(MX,4)/2
        VM(M3,M2,M1,9)=-(BS(MODE2,MX,ITAU)*XMU0(MX,MX)+
     1        BS(MODE2,MY,ITAU)*XMU0(MY,MX)+
     2        BS(MODE2,MZ,ITAU)*XMU0(MZ,MX))/2-
     3        BSS(MODE2,ITAU)*XMU0(MX,4)/2
        VM(M3,M2,M1,10)=-(BS(MODE3,MX,ITAU)*XMU0(MX,MX)+
     1        BS(MODE3,MY,ITAU)*XMU0(MY,MX)+
     2        BS(MODE3,MZ,ITAU)*XMU0(MZ,MX))/2-
     3        BSS(MODE3,ITAU)*XMU0(MX,4)/2
        VM(M3,M2,M1,11)=XMU0(MX,4)/2
        VM(M3,M2,M1,12)=0
        VM(M3,M2,M1,13)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MY)+
     1        BS(MODE1,MY,ITAU)*XMU0(MY,MY)+
     2        BS(MODE1,MZ,ITAU)*XMU0(MZ,MY))/2-
     3        BSS(MODE1,ITAU)*XMU0(MY,4)/2
        VM(M3,M2,M1,14)=-(BS(MODE2,MX,ITAU)*XMU0(MX,MY)+
     1        BS(MODE2,MY,ITAU)*XMU0(MY,MY)+
     2        BS(MODE2,MZ,ITAU)*XMU0(MZ,MY))/2-
     3        BSS(MODE2,ITAU)*XMU0(MY,4)/2
        VM(M3,M2,M1,15)=-(BS(MODE3,MX,ITAU)*XMU0(MX,MY)+
     1        BS(MODE3,MY,ITAU)*XMU0(MY,MY)+
     2        BS(MODE3,MZ,ITAU)*XMU0(MZ,MY))/2-
     3        BSS(MODE3,ITAU)*XMU0(MY,4)/2
        VM(M3,M2,M1,16)=XMU0(MY,4)/2
        VM(M3,M2,M1,17)=0
        VM(M3,M2,M1,18)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MZ)+
     1        BS(MODE1,MY,ITAU)*XMU0(MY,MZ)+
     2        BS(MODE1,MZ,ITAU)*XMU0(MZ,MZ))/2-
     3        BSS(MODE1,ITAU)*XMU0(MZ,4)/2
        VM(M3,M2,M1,19)=-(BS(MODE2,MX,ITAU)*XMU0(MX,MZ)+
     1        BS(MODE2,MY,ITAU)*XMU0(MY,MZ)+
     2        BS(MODE2,MZ,ITAU)*XMU0(MZ,MZ))/2-
     3        BSS(MODE2,ITAU)*XMU0(MZ,4)/2
        VM(M3,M2,M1,20)=-(BS(MODE3,MX,ITAU)*XMU0(MX,MZ)+
     1        BS(MODE3,MY,ITAU)*XMU0(MY,MZ)+
     2        BS(MODE3,MZ,ITAU)*XMU0(MZ,MZ))/2-
     3        BSS(MODE3,ITAU)*XMU0(MZ,4)/2
        VM(M3,M2,M1,21)=XMU0(MZ,4)/2
      ELSE
        VMR(M3,M2,M1,1)=XMU0(MX,MX)/2
        VMR(M3,M2,M1,2)=XMU0(MY,MY)/2
        VMR(M3,M2,M1,3)=XMU0(MZ,MZ)/2
        VMR(M3,M2,M1,4)=XMU0(MX,MZ)/2
        VMR(M3,M2,M1,5)=XMU0(MY,MZ)/2
        VMR(M3,M2,M1,6)=XMU0(MX,MY)/2
        VMR(M3,M2,M1,7)=0
        VMR(M3,M2,M1,8)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MX)+
     1        BS(MODE1,MY,ITAU)*XMU0(MY,MX)+
     2        BS(MODE1,MZ,ITAU)*XMU0(MZ,MX))/2-
     3        BSS(MODE1,ITAU)*XMU0(MX,4)/2
        VMR(M3,M2,M1,9)=-(BS(MODE2,MX,ITAU)*XMU0(MX,MX)+
     1        BS(MODE2,MY,ITAU)*XMU0(MY,MX)+
     2        BS(MODE2,MZ,ITAU)*XMU0(MZ,MX))/2-
     3        BSS(MODE2,ITAU)*XMU0(MX,4)/2
        VMR(M3,M2,M1,10)=-(BS(MODE3,MX,ITAU)*XMU0(MX,MX)+
     1        BS(MODE3,MY,ITAU)*XMU0(MY,MX)+
     2        BS(MODE3,MZ,ITAU)*XMU0(MZ,MX))/2-
     3        BSS(MODE3,ITAU)*XMU0(MX,4)/2
        VMR(M3,M2,M1,11)=XMU0(MX,4)/2
        VMR(M3,M2,M1,12)=0
        VMR(M3,M2,M1,13)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MY)+
     1        BS(MODE1,MY,ITAU)*XMU0(MY,MY)+
     2        BS(MODE1,MZ,ITAU)*XMU0(MZ,MY))/2-
     3        BSS(MODE1,ITAU)*XMU0(MY,4)/2
        VMR(M3,M2,M1,14)=-(BS(MODE2,MX,ITAU)*XMU0(MX,MY)+
     1        BS(MODE2,MY,ITAU)*XMU0(MY,MY)+
     2        BS(MODE2,MZ,ITAU)*XMU0(MZ,MY))/2-
     3        BSS(MODE2,ITAU)*XMU0(MY,4)/2
        VMR(M3,M2,M1,15)=-(BS(MODE3,MX,ITAU)*XMU0(MX,MY)+
     1        BS(MODE3,MY,ITAU)*XMU0(MY,MY)+
     2        BS(MODE3,MZ,ITAU)*XMU0(MZ,MY))/2-
     3        BSS(MODE3,ITAU)*XMU0(MY,4)/2
        VMR(M3,M2,M1,16)=XMU0(MY,4)/2
        VMR(M3,M2,M1,17)=0
        VMR(M3,M2,M1,18)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MZ)+
     1        BS(MODE1,MY,ITAU)*XMU0(MY,MZ)+
     2        BS(MODE1,MZ,ITAU)*XMU0(MZ,MZ))/2-
     3        BSS(MODE1,ITAU)*XMU0(MZ,4)/2
        VMR(M3,M2,M1,19)=-(BS(MODE2,MX,ITAU)*XMU0(MX,MZ)+
     1        BS(MODE2,MY,ITAU)*XMU0(MY,MZ)+
     2        BS(MODE2,MZ,ITAU)*XMU0(MZ,MZ))/2-
     3        BSS(MODE2,ITAU)*XMU0(MZ,4)/2
        VMR(M3,M2,M1,20)=-(BS(MODE3,MX,ITAU)*XMU0(MX,MZ)+
     1        BS(MODE3,MY,ITAU)*XMU0(MY,MZ)+
     2        BS(MODE3,MZ,ITAU)*XMU0(MZ,MZ))/2-
     3        BSS(MODE3,ITAU)*XMU0(MZ,4)/2
        VMR(M3,M2,M1,21)=XMU0(MZ,4)/2
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VOUT93(VM,VMR,MM1,MM2,MM3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VM(MM3,MM2,MM1,21)
      REAL*4 VMR(MM3,MM2,MM1,21)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      IF(JCOUPC.GE.0)THEN
        IF(ICOUPC.GE.3)WRITE(I93)VM
      ELSE
        IF(ICOUPC.GE.3)WRITE(I93)VMR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE GET74(V,VR,MM1,MM2,MM3,MM4,VDP,M1,M2,M3,M4)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM4,MM3,MM2,MM1)
      REAL*4 VR(MM4,MM3,MM2,MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GT.0)THEN
        VDP=V(M4,M3,M2,M1)
      ELSE
        VDP=VR(M4,M3,M2,M1)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE SET74(V,VR,MM1,MM2,MM3,MM4,VDP,M1,M2,M3,M4)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM4,MM3,MM2,MM1)
      REAL*4 VR(MM4,MM3,MM2,MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GT.0)THEN
        V(M4,M3,M2,M1)=VDP
      ELSE
        VR(M4,M3,M2,M1)=VDP
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE FIX74(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,MODE1,
     1MM1,MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,MODE4,MM4,MD4,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V4(J4,J3,J2,J1)
      REAL*4 V4R(J4,J3,J2,J1)
      DIMENSION VP4(MAX4,MAX4,MAX4,MAX4,1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
C     IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3.AND.K4.EQ.MODE4)
C    1THEN
        DO M1=1,MM1/MD1
          DO M2=1,MM2/MD2
            DO M3=1,MM3/MD3
              DO M4=1,MM4/MD4
                IF(JCOUPL.GT.0)THEN
                  VP4(M4,M3,M2,M1,IND)=V4(M4,M3,M2,M1)
                ELSE
                  VP4(M4,M3,M2,M1,IND)=V4R(M4,M3,M2,M1)
                END IF
              END DO
            END DO
          END DO
        END DO
C     END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE OUT74(V,VR,MM1,MM2,MM3,MM4)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM4,MM3,MM2,MM1)
      REAL*4 VR(MM4,MM3,MM2,MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      IF(JCOUPL.GT.0)THEN
        WRITE(I74)V
      ELSE
        WRITE(I74)VR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE GET84(V,VR,MM1,MM2,MM3,MM4,B,BB,NMODE,ZZ,M1,M2,M3,M4,
     1MODE1,MODE2,MODE3,MODE4)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM4,MM3,MM2,MM1,15)
      REAL*4 VR(MM4,MM3,MM2,MM1,15)
      DIMENSION B(NMODE,NMODE),BB(NMODE)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.4)RETURN
      IF(JCOUPC.GE.0)THEN
        BB(MODE1)=V(M4,M3,M2,M1,1)
        BB(MODE2)=V(M4,M3,M2,M1,2)
        BB(MODE3)=V(M4,M3,M2,M1,3)
        BB(MODE4)=V(M4,M3,M2,M1,4)
        B(MODE1,MODE1)=V(M4,M3,M2,M1,5)
        B(MODE1,MODE2)=V(M4,M3,M2,M1,6)
        B(MODE1,MODE3)=V(M4,M3,M2,M1,7)
        B(MODE1,MODE4)=V(M4,M3,M2,M1,8)
        B(MODE2,MODE2)=V(M4,M3,M2,M1,9)
        B(MODE2,MODE3)=V(M4,M3,M2,M1,10)
        B(MODE2,MODE4)=V(M4,M3,M2,M1,11)
        B(MODE3,MODE3)=V(M4,M3,M2,M1,12)
        B(MODE3,MODE4)=V(M4,M3,M2,M1,13)
        B(MODE4,MODE4)=V(M4,M3,M2,M1,14)
        ZZ=V(M4,M3,M2,M1,15)
      ELSE
        BB(MODE1)=VR(M4,M3,M2,M1,1)
        BB(MODE2)=VR(M4,M3,M2,M1,2)
        BB(MODE3)=VR(M4,M3,M2,M1,3)
        BB(MODE4)=VR(M4,M3,M2,M1,4)
        B(MODE1,MODE1)=VR(M4,M3,M2,M1,5)
        B(MODE1,MODE2)=VR(M4,M3,M2,M1,6)
        B(MODE1,MODE3)=VR(M4,M3,M2,M1,7)
        B(MODE1,MODE4)=VR(M4,M3,M2,M1,8)
        B(MODE2,MODE2)=VR(M4,M3,M2,M1,9)
        B(MODE2,MODE3)=VR(M4,M3,M2,M1,10)
        B(MODE2,MODE4)=VR(M4,M3,M2,M1,11)
        B(MODE3,MODE3)=VR(M4,M3,M2,M1,12)
        B(MODE3,MODE4)=VR(M4,M3,M2,M1,13)
        B(MODE4,MODE4)=VR(M4,M3,M2,M1,14)
        ZZ=VR(M4,M3,M2,M1,15)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE SET84(V,VR,MM1,MM2,MM3,MM4,B,BB,NMODE,ZZ,M1,M2,M3,M4,
     1MODE1,MODE2,MODE3,MODE4)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM4,MM3,MM2,MM1,15)
      REAL*4 VR(MM4,MM3,MM2,MM1,15)
      DIMENSION B(NMODE,NMODE),BB(NMODE)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.4)RETURN
      IF(JCOUPC.GE.0)THEN
        V(M4,M3,M2,M1,1)=BB(MODE1)
        V(M4,M3,M2,M1,2)=BB(MODE2)
        V(M4,M3,M2,M1,3)=BB(MODE3)
        V(M4,M3,M2,M1,4)=BB(MODE4)
        V(M4,M3,M2,M1,5)=B(MODE1,MODE1)
        V(M4,M3,M2,M1,6)=B(MODE1,MODE2)
        V(M4,M3,M2,M1,7)=B(MODE1,MODE3)
        V(M4,M3,M2,M1,8)=B(MODE1,MODE4)
        V(M4,M3,M2,M1,9)=B(MODE2,MODE2)
        V(M4,M3,M2,M1,10)=B(MODE2,MODE3)
        V(M4,M3,M2,M1,11)=B(MODE2,MODE4)
        V(M4,M3,M2,M1,12)=B(MODE3,MODE3)
        V(M4,M3,M2,M1,13)=B(MODE3,MODE4)
        V(M4,M3,M2,M1,14)=B(MODE4,MODE4)
        V(M4,M3,M2,M1,15)=ZZ
      ELSE
        VR(M4,M3,M2,M1,1)=BB(MODE1)
        VR(M4,M3,M2,M1,2)=BB(MODE2)
        VR(M4,M3,M2,M1,3)=BB(MODE3)
        VR(M4,M3,M2,M1,4)=BB(MODE4)
        VR(M4,M3,M2,M1,5)=B(MODE1,MODE1)
        VR(M4,M3,M2,M1,6)=B(MODE1,MODE2)
        VR(M4,M3,M2,M1,7)=B(MODE1,MODE3)
        VR(M4,M3,M2,M1,8)=B(MODE1,MODE4)
        VR(M4,M3,M2,M1,9)=B(MODE2,MODE2)
        VR(M4,M3,M2,M1,10)=B(MODE2,MODE3)
        VR(M4,M3,M2,M1,11)=B(MODE2,MODE4)
        VR(M4,M3,M2,M1,12)=B(MODE3,MODE3)
        VR(M4,M3,M2,M1,13)=B(MODE3,MODE4)
        VR(M4,M3,M2,M1,14)=B(MODE4,MODE4)
        VR(M4,M3,M2,M1,15)=ZZ
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE FIX84(V4,V4R,J1,J2,J3,J4,VP4,MAX4,K1,K2,K3,K4,MODE1,
     1MM1,MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,MODE4,MM4,MD4,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V4(J4,J3,J2,J1,15)
      REAL*4 V4R(J4,J3,J2,J1,15)
      DIMENSION VP4(MAX4,MAX4,MAX4,MAX4,15,1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      DO M1=1,MM1/MD1
        DO M2=1,MM2/MD2
          DO M3=1,MM3/MD3
            DO M4=1,MM4/MD4
              DO K=1,15
                IF(JCOUPC.GE.0)THEN
                  VP4(M4,M3,M2,M1,K,IND)=V4(M4,M3,M2,M1,K)
                ELSE
                  VP4(M4,M3,M2,M1,K,IND)=V4R(M4,M3,M2,M1,K)
                END IF
              END DO
            END DO
          END DO
        END DO
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE OUT84(V,VR,MM1,MM2,MM3,MM4)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM4,MM3,MM2,MM1,15)
      REAL*4 VR(MM4,MM3,MM2,MM1,15)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      IF(JCOUPC.GE.0)THEN
        IF(ICOUPC.GE.4)WRITE(I84)V
      ELSE
        IF(ICOUPC.GE.4)WRITE(I84)VR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE IN6784(VR,VRR,VP,VPR,VC,VCR,MM1,MM2,MM3,MM4,J21)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,15),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,15),
     1VRR(J21,MM4,MM3,MM2,MM1)
      COMMON/WHICH/IWHICH
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/XSAVES/ICOUPX,ICOUCX,JCOUPS,JCOUCS
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      ICCCCC=ICOUPC
      IF(MOLINC.EQ.0)THEN
        ICCCCC=ICOUCX
      END IF
      IF(JCOUPC.GT.0)THEN
        IF(J21.GT.1..AND.ICCCCC.GE.4)READ(I64)VR
        IF(ICCCCC.GE.4)READ(I84)VC
      ELSE
        IF(J21.GT.1..AND.ICCCCC.GE.4)READ(I64)VRR
        IF(ICCCCC.GE.4)READ(I84)VCR
      END IF
      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(I74)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(I74)VPR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VSET84(V,VR,MM1,MM2,MM3,MM4,B,BB,NMODE,ZZ,M1,M2,M3,
     1M4,MODE1,MODE2,MODE3,MODE4,MODE5)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM4,MM3,MM2,MM1,21)
      REAL*4 VR(MM4,MM3,MM2,MM1,21)
      DIMENSION B(NMODE,NMODE),BB(NMODE)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.4)RETURN
      IF(JCOUPC.GE.0)THEN
        V(M4,M3,M2,M1,1)=BB(MODE1)
        V(M4,M3,M2,M1,2)=BB(MODE2)
        V(M4,M3,M2,M1,3)=BB(MODE3)
        V(M4,M3,M2,M1,4)=BB(MODE4)
        V(M4,M3,M2,M1,5)=BB(MODE5)
        V(M4,M3,M2,M1,6)=B(MODE1,MODE1)
        V(M4,M3,M2,M1,7)=B(MODE1,MODE2)
        V(M4,M3,M2,M1,8)=B(MODE1,MODE3)
        V(M4,M3,M2,M1,9)=B(MODE1,MODE4)
        V(M4,M3,M2,M1,10)=B(MODE1,MODE5)
        V(M4,M3,M2,M1,11)=B(MODE2,MODE2)
        V(M4,M3,M2,M1,12)=B(MODE2,MODE3)
        V(M4,M3,M2,M1,13)=B(MODE2,MODE4)
        V(M4,M3,M2,M1,14)=B(MODE2,MODE5)
        V(M4,M3,M2,M1,15)=B(MODE3,MODE3)
        V(M4,M3,M2,M1,16)=B(MODE3,MODE4)
        V(M4,M3,M2,M1,17)=B(MODE3,MODE5)
        V(M4,M3,M2,M1,18)=B(MODE4,MODE4)
        V(M4,M3,M2,M1,19)=B(MODE4,MODE5)
        V(M4,M3,M2,M1,20)=B(MODE5,MODE5)
        V(M4,M3,M2,M1,21)=ZZ
      ELSE
        VR(M4,M3,M2,M1,1)=BB(MODE1)
        VR(M4,M3,M2,M1,2)=BB(MODE2)
        VR(M4,M3,M2,M1,3)=BB(MODE3)
        VR(M4,M3,M2,M1,4)=BB(MODE4)
        VR(M4,M3,M2,M1,5)=BB(MODE5)
        VR(M4,M3,M2,M1,6)=B(MODE1,MODE1)
        VR(M4,M3,M2,M1,7)=B(MODE1,MODE2)
        VR(M4,M3,M2,M1,8)=B(MODE1,MODE3)
        VR(M4,M3,M2,M1,9)=B(MODE1,MODE4)
        VR(M4,M3,M2,M1,10)=B(MODE1,MODE5)
        VR(M4,M3,M2,M1,11)=B(MODE2,MODE2)
        VR(M4,M3,M2,M1,12)=B(MODE2,MODE3)
        VR(M4,M3,M2,M1,13)=B(MODE2,MODE4)
        VR(M4,M3,M2,M1,14)=B(MODE2,MODE5)
        VR(M4,M3,M2,M1,15)=B(MODE3,MODE3)
        VR(M4,M3,M2,M1,16)=B(MODE3,MODE4)
        VR(M4,M3,M2,M1,17)=B(MODE3,MODE5)
        VR(M4,M3,M2,M1,18)=B(MODE4,MODE4)
        VR(M4,M3,M2,M1,19)=B(MODE4,MODE5)
        VR(M4,M3,M2,M1,20)=B(MODE5,MODE5)
        VR(M4,M3,M2,M1,21)=ZZ
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VGET84(V,MM1,MM2,MM3,MM4,B,BB,NMODE,ZZ,M1,M2,M3,
     1M4,MODE1,MODE2,MODE3,MODE4,MODE5,MTAU)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM4,MM3,MM2,MM1,21,MTAU)
      DIMENSION B(NMODE,NMODE),BB(NMODE)
      BB(MODE1)=V(M4,M3,M2,M1,1,MTAU)
      BB(MODE2)=V(M4,M3,M2,M1,2,MTAU)
      BB(MODE3)=V(M4,M3,M2,M1,3,MTAU)
      BB(MODE4)=V(M4,M3,M2,M1,4,MTAU)
      BB(MODE5)=V(M4,M3,M2,M1,5,MTAU)
      B(MODE1,MODE1)=V(M4,M3,M2,M1,6,MTAU)
      B(MODE1,MODE2)=V(M4,M3,M2,M1,7,MTAU)
      B(MODE1,MODE3)=V(M4,M3,M2,M1,8,MTAU)
      B(MODE1,MODE4)=V(M4,M3,M2,M1,9,MTAU)
      B(MODE1,MODE5)=V(M4,M3,M2,M1,10,MTAU)
      B(MODE2,MODE2)=V(M4,M3,M2,M1,11,MTAU)
      B(MODE2,MODE3)=V(M4,M3,M2,M1,12,MTAU)
      B(MODE2,MODE4)=V(M4,M3,M2,M1,13,MTAU)
      B(MODE2,MODE5)=V(M4,M3,M2,M1,14,MTAU)
      B(MODE3,MODE3)=V(M4,M3,M2,M1,15,MTAU)
      B(MODE3,MODE4)=V(M4,M3,M2,M1,16,MTAU)
      B(MODE3,MODE5)=V(M4,M3,M2,M1,17,MTAU)
      B(MODE4,MODE4)=V(M4,M3,M2,M1,18,MTAU)
      B(MODE4,MODE5)=V(M4,M3,M2,M1,19,MTAU)
      B(MODE5,MODE5)=V(M4,M3,M2,M1,20,MTAU)
      ZZ=V(M4,M3,M2,M1,21,MTAU)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VOUT84(V,VR,MM1,MM2,MM3,MM4)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM4,MM3,MM2,MM1,21)
      REAL*4 VR(MM4,MM3,MM2,MM1,21)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      IF(JCOUPC.GE.0)THEN
        IF(ICOUPC.GE.4)WRITE(I84)V
      ELSE
        IF(ICOUPC.GE.4)WRITE(I84)VR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE SET94(VM,VMR,MM1,MM2,MM3,MM4,AB,NMODE,ZZ,M1,M2,M3,M4,
     1MODE1,MODE2,MODE3,MODE4)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VM(MM4,MM3,MM2,MM1,19)
      REAL*4 VMR(MM4,MM3,MM2,MM1,19)
      DIMENSION AB(NMODE,3)
      COMMON/MOMI/XK(3,3),XMU(3,3)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.4)RETURN
      MX=1
      MY=2
      MZ=3
      IF(JCOUPC.GE.0)THEN
        VM(M4,M3,M2,M1,1)=XMU(MX,MX)/2
        VM(M4,M3,M2,M1,2)=XMU(MY,MY)/2
        VM(M4,M3,M2,M1,3)=XMU(MZ,MZ)/2
        VM(M4,M3,M2,M1,4)=XMU(MX,MZ)/2
        VM(M4,M3,M2,M1,5)=XMU(MY,MZ)/2
        VM(M4,M3,M2,M1,6)=XMU(MX,MY)/2
        VM(M4,M3,M2,M1,7)=(XMU(MX,MX)*AB(MODE1,MX)+XMU(MY,MX)*
     1  AB(MODE1,MY)+XMU(MZ,MX)*AB(MODE1,MZ))/2
        VM(M4,M3,M2,M1,8)=(XMU(MX,MX)*AB(MODE2,MX)+XMU(MY,MX)*
     1  AB(MODE2,MY)+XMU(MZ,MX)*AB(MODE2,MZ))/2
        VM(M4,M3,M2,M1,9)=(XMU(MX,MX)*AB(MODE3,MX)+XMU(MY,MX)*
     1  AB(MODE3,MY)+XMU(MZ,MX)*AB(MODE3,MZ))/2
        VM(M4,M3,M2,M1,10)=(XMU(MX,MX)*AB(MODE4,MX)+XMU(MY,MX)
     1  *AB(MODE4,MY)+XMU(MZ,MX)*AB(MODE4,MZ))/2
        VM(M4,M3,M2,M1,11)=(XMU(MX,MY)*AB(MODE1,MX)+XMU(MY,MY)
     1  *AB(MODE1,MY)+XMU(MZ,MY)*AB(MODE1,MZ))/2
        VM(M4,M3,M2,M1,12)=(XMU(MX,MY)*AB(MODE2,MX)+XMU(MY,MY)
     1  *AB(MODE2,MY)+XMU(MZ,MY)*AB(MODE2,MZ))/2
        VM(M4,M3,M2,M1,13)=(XMU(MX,MY)*AB(MODE3,MX)+XMU(MY,MY)
     1  *AB(MODE3,MY)+XMU(MZ,MY)*AB(MODE3,MZ))/2
        VM(M4,M3,M2,M1,14)=(XMU(MX,MY)*AB(MODE4,MX)+XMU(MY,MY)
     1  *AB(MODE4,MY)+XMU(MZ,MY)*AB(MODE4,MZ))/2
        VM(M4,M3,M2,M1,15)=(XMU(MX,MZ)*AB(MODE1,MX)+XMU(MY,MZ)
     1  *AB(MODE1,MY)+XMU(MZ,MZ)*AB(MODE1,MZ))/2
        VM(M4,M3,M2,M1,16)=(XMU(MX,MZ)*AB(MODE2,MX)+XMU(MY,MZ)
     1  *AB(MODE2,MY)+XMU(MZ,MZ)*AB(MODE2,MZ))/2
        VM(M4,M3,M2,M1,17)=(XMU(MX,MZ)*AB(MODE3,MX)+XMU(MY,MZ)
     1  *AB(MODE3,MY)+XMU(MZ,MZ)*AB(MODE3,MZ))/2
        VM(M4,M3,M2,M1,18)=(XMU(MX,MZ)*AB(MODE4,MX)+XMU(MY,MZ)
     1  *AB(MODE4,MY)+XMU(MZ,MZ)*AB(MODE4,MZ))/2
        VM(M4,M3,M2,M1,19)=ZZ
      ELSE
        VMR(M4,M3,M2,M1,1)=XMU(MX,MX)/2
        VMR(M4,M3,M2,M1,2)=XMU(MY,MY)/2
        VMR(M4,M3,M2,M1,3)=XMU(MZ,MZ)/2
        VMR(M4,M3,M2,M1,4)=XMU(MX,MZ)/2
        VMR(M4,M3,M2,M1,5)=XMU(MY,MZ)/2
        VMR(M4,M3,M2,M1,6)=XMU(MX,MY)/2
        VMR(M4,M3,M2,M1,7)=(XMU(MX,MX)*AB(MODE1,MX)+XMU(MY,MX)
     1  *AB(MODE1,MY)+XMU(MZ,MX)*AB(MODE1,MZ))/2
        VMR(M4,M3,M2,M1,8)=(XMU(MX,MX)*AB(MODE2,MX)+XMU(MY,MX)
     1  *AB(MODE2,MY)+XMU(MZ,MX)*AB(MODE2,MZ))/2
        VMR(M4,M3,M2,M1,9)=(XMU(MX,MX)*AB(MODE3,MX)+XMU(MY,MX)
     1  *AB(MODE3,MY)+XMU(MZ,MX)*AB(MODE3,MZ))/2
        VMR(M4,M3,M2,M1,10)=(XMU(MX,MX)*AB(MODE4,MX)+
     1  XMU(MY,MX)*AB(MODE4,MY)+XMU(MZ,MX)*AB(MODE4,MZ))/2
        VMR(M4,M3,M2,M1,11)=(XMU(MX,MY)*AB(MODE1,MX)+
     1  XMU(MY,MY)*AB(MODE1,MY)+XMU(MZ,MY)*AB(MODE1,MZ))/2
        VMR(M4,M3,M2,M1,12)=(XMU(MX,MY)*AB(MODE2,MX)+
     1  XMU(MY,MY)*AB(MODE2,MY)+XMU(MZ,MY)*AB(MODE2,MZ))/2
        VMR(M4,M3,M2,M1,13)=(XMU(MX,MY)*AB(MODE3,MX)+
     1  XMU(MY,MY)*AB(MODE3,MY)+XMU(MZ,MY)*AB(MODE3,MZ))/2
        VMR(M4,M3,M2,M1,14)=(XMU(MX,MY)*AB(MODE4,MX)+
     1  XMU(MY,MY)*AB(MODE4,MY)+XMU(MZ,MY)*AB(MODE4,MZ))/2
        VMR(M4,M3,M2,M1,15)=(XMU(MX,MZ)*AB(MODE1,MX)+
     1  XMU(MY,MZ)*AB(MODE1,MY)+XMU(MZ,MZ)*AB(MODE1,MZ))/2
        VMR(M4,M3,M2,M1,16)=(XMU(MX,MZ)*AB(MODE2,MX)+
     1  XMU(MY,MZ)*AB(MODE2,MY)+XMU(MZ,MZ)*AB(MODE2,MZ))/2
        VMR(M4,M3,M2,M1,17)=(XMU(MX,MZ)*AB(MODE3,MX)+
     1  XMU(MY,MZ)*AB(MODE3,MY)+XMU(MZ,MZ)*AB(MODE3,MZ))/2
        VMR(M4,M3,M2,M1,18)=(XMU(MX,MZ)*AB(MODE4,MX)+
     1  XMU(MY,MZ)*AB(MODE4,MY)+XMU(MZ,MZ)*AB(MODE4,MZ))/2
        VMR(M4,M3,M2,M1,19)=ZZ
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE OUT94(VM,VMR,MM1,MM2,MM3,MM4)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VM(MM4,MM3,MM2,MM1,19)
      REAL*4 VMR(MM4,MM3,MM2,MM1,19)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      IF(JCOUPC.GE.0)THEN
        IF(ICOUPC.GE.4)WRITE(I94)VM
      ELSE
        IF(ICOUPC.GE.4)WRITE(I94)VMR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VSET94(VM,VMR,MM1,MM2,MM3,MM4,SUP3,BS,BSS,NMODE,ZZ,M1,
     1M2,M3,M4,MODE1,MODE2,MODE3,MODE4,ITAU)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VM(MM4,MM3,MM2,MM1,24)
      REAL*4 VMR(MM4,MM3,MM2,MM1,24)
      DIMENSION BS(NMODE,3,722),BSS(NMODE,722),SUP3(3)
      COMMON/MOMI0/XMU0(4,4),XIN0(4,4),XM0(4,4),SST,DETMU
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.4)RETURN
      MX=1
      MY=2
      MZ=3
      IF(JCOUPC.GE.0)THEN
        VM(M4,M3,M2,M1,1)=XMU0(MX,MX)/2
        VM(M4,M3,M2,M1,2)=XMU0(MY,MY)/2
        VM(M4,M3,M2,M1,3)=XMU0(MZ,MZ)/2
        VM(M4,M3,M2,M1,4)=XMU0(MX,MZ)/2
        VM(M4,M3,M2,M1,5)=XMU0(MY,MZ)/2
        VM(M4,M3,M2,M1,6)=XMU0(MX,MY)/2
        VM(M4,M3,M2,M1,7)=0
        VM(M4,M3,M2,M1,8)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MX)+
     1      BS(MODE1,MY,ITAU)*XMU0(MY,MX)+
     2      BS(MODE1,MZ,ITAU)*XMU0(MZ,MX))/2-
     3      BSS(MODE1,ITAU)*XMU0(MX,4)/2
        VM(M4,M3,M2,M1,9)=-(BS(MODE2,MX,ITAU)*XMU0(MX,MX)+
     1      BS(MODE2,MY,ITAU)*XMU0(MY,MX)+
     2      BS(MODE2,MZ,ITAU)*XMU0(MZ,MX))/2-
     3      BSS(MODE2,ITAU)*XMU0(MX,4)/2
        VM(M4,M3,M2,M1,10)=-(BS(MODE3,MX,ITAU)*XMU0(MX,MX)+
     1      BS(MODE3,MY,ITAU)*XMU0(MY,MX)+
     2      BS(MODE3,MZ,ITAU)*XMU0(MZ,MX))/2-
     3      BSS(MODE3,ITAU)*XMU0(MX,4)/2
        VM(M4,M3,M2,M1,11)=-(BS(MODE4,MX,ITAU)*XMU0(MX,MX)+
     1      BS(MODE4,MY,ITAU)*XMU0(MY,MX)+
     2      BS(MODE4,MZ,ITAU)*XMU0(MZ,MX))/2-
     3      BSS(MODE4,ITAU)*XMU0(MX,4)/2
        VM(M4,M3,M2,M1,12)=XMU0(MX,4)/2
        VM(M4,M3,M2,M1,13)=0
        VM(M4,M3,M2,M1,14)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MY)+
     1      BS(MODE1,MY,ITAU)*XMU0(MY,MY)+
     2      BS(MODE1,MZ,ITAU)*XMU0(MZ,MY))/2-
     3      BSS(MODE1,ITAU)*XMU0(MY,4)/2
        VM(M4,M3,M2,M1,15)=-(BS(MODE2,MX,ITAU)*XMU0(MX,MY)+
     1      BS(MODE2,MY,ITAU)*XMU0(MY,MY)+
     2      BS(MODE2,MZ,ITAU)*XMU0(MZ,MY))/2-
     3      BSS(MODE2,ITAU)*XMU0(MY,4)/2
        VM(M4,M3,M2,M1,16)=-(BS(MODE3,MX,ITAU)*XMU0(MX,MY)+
     1      BS(MODE3,MY,ITAU)*XMU0(MY,MY)+
     2      BS(MODE3,MZ,ITAU)*XMU0(MZ,MY))/2-
     3      BSS(MODE3,ITAU)*XMU0(MY,4)/2
        VM(M4,M3,M2,M1,17)=-(BS(MODE4,MX,ITAU)*XMU0(MX,MY)+
     1      BS(MODE4,MY,ITAU)*XMU0(MY,MY)+
     2      BS(MODE4,MZ,ITAU)*XMU0(MZ,MY))/2-
     3      BSS(MODE4,ITAU)*XMU0(MY,4)/2
        VM(M4,M3,M2,M1,18)=XMU0(MY,4)/2
        VM(M4,M3,M2,M1,19)=0
        VM(M4,M3,M2,M1,20)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MZ)+
     1      BS(MODE1,MY,ITAU)*XMU0(MY,MZ)+
     2      BS(MODE1,MZ,ITAU)*XMU0(MZ,MZ))/2-
     3      BSS(MODE1,ITAU)*XMU0(MZ,4)/2
        VM(M4,M3,M2,M1,21)=-(BS(MODE2,MX,ITAU)*XMU0(MX,MZ)+
     1      BS(MODE2,MY,ITAU)*XMU0(MY,MZ)+
     2      BS(MODE2,MZ,ITAU)*XMU0(MZ,MZ))/2-
     3      BSS(MODE2,ITAU)*XMU0(MZ,4)/2
        VM(M4,M3,M2,M1,22)=-(BS(MODE3,MX,ITAU)*XMU0(MX,MZ)+
     1      BS(MODE3,MY,ITAU)*XMU0(MY,MZ)+
     2      BS(MODE3,MZ,ITAU)*XMU0(MZ,MZ))/2-
     3      BSS(MODE3,ITAU)*XMU0(MZ,4)/2
        VM(M4,M3,M2,M1,23)=-(BS(MODE4,MX,ITAU)*XMU0(MX,MZ)+
     1      BS(MODE4,MY,ITAU)*XMU0(MY,MZ)+
     2      BS(MODE4,MZ,ITAU)*XMU0(MZ,MZ))/2-
     3      BSS(MODE4,ITAU)*XMU0(MZ,4)/2
        VM(M4,M3,M2,M1,24)=XMU0(MZ,4)/2
      ELSE
        VMR(M4,M3,M2,M1,1)=XMU0(MX,MX)/2
        VMR(M4,M3,M2,M1,2)=XMU0(MY,MY)/2
        VMR(M4,M3,M2,M1,3)=XMU0(MZ,MZ)/2
        VMR(M4,M3,M2,M1,4)=XMU0(MX,MZ)/2
        VMR(M4,M3,M2,M1,5)=XMU0(MY,MZ)/2
        VMR(M4,M3,M2,M1,6)=XMU0(MX,MY)/2
        VMR(M4,M3,M2,M1,7)=0
        VMR(M4,M3,M2,M1,8)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MX)+
     1      BS(MODE1,MY,ITAU)*XMU0(MY,MX)+
     2      BS(MODE1,MZ,ITAU)*XMU0(MZ,MX))/2-
     3      BSS(MODE1,ITAU)*XMU0(MX,4)/2
        VMR(M4,M3,M2,M1,9)=-(BS(MODE2,MX,ITAU)*XMU0(MX,MX)+
     1      BS(MODE2,MY,ITAU)*XMU0(MY,MX)+
     2      BS(MODE2,MZ,ITAU)*XMU0(MZ,MX))/2-
     3      BSS(MODE2,ITAU)*XMU0(MX,4)/2
        VMR(M4,M3,M2,M1,10)=-(BS(MODE3,MX,ITAU)*XMU0(MX,MX)+
     1      BS(MODE3,MY,ITAU)*XMU0(MY,MX)+
     2      BS(MODE3,MZ,ITAU)*XMU0(MZ,MX))/2-
     3      BSS(MODE3,ITAU)*XMU0(MX,4)/2
        VMR(M4,M3,M2,M1,11)=-(BS(MODE4,MX,ITAU)*XMU0(MX,MX)+
     1      BS(MODE4,MY,ITAU)*XMU0(MY,MX)+
     2      BS(MODE4,MZ,ITAU)*XMU0(MZ,MX))/2-
     3      BSS(MODE4,ITAU)*XMU0(MX,4)/2
        VMR(M4,M3,M2,M1,12)=XMU0(MX,4)/2
        VMR(M4,M3,M2,M1,13)=0
        VMR(M4,M3,M2,M1,14)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MY)+
     1      BS(MODE1,MY,ITAU)*XMU0(MY,MY)+
     2      BS(MODE1,MZ,ITAU)*XMU0(MZ,MY))/2-
     3      BSS(MODE1,ITAU)*XMU0(MY,4)/2
        VMR(M4,M3,M2,M1,15)=-(BS(MODE2,MX,ITAU)*XMU0(MX,MY)+
     1      BS(MODE2,MY,ITAU)*XMU0(MY,MY)+
     2      BS(MODE2,MZ,ITAU)*XMU0(MZ,MY))/2-
     3      BSS(MODE2,ITAU)*XMU0(MY,4)/2
        VMR(M4,M3,M2,M1,16)=-(BS(MODE3,MX,ITAU)*XMU0(MX,MY)+
     1      BS(MODE3,MY,ITAU)*XMU0(MY,MY)+
     2      BS(MODE3,MZ,ITAU)*XMU0(MZ,MY))/2-
     3      BSS(MODE3,ITAU)*XMU0(MY,4)/2
        VMR(M4,M3,M2,M1,17)=-(BS(MODE4,MX,ITAU)*XMU0(MX,MY)+
     1      BS(MODE4,MY,ITAU)*XMU0(MY,MY)+
     2      BS(MODE4,MZ,ITAU)*XMU0(MZ,MY))/2-
     3      BSS(MODE4,ITAU)*XMU0(MY,4)/2
        VMR(M4,M3,M2,M1,18)=XMU0(MY,4)/2
        VMR(M4,M3,M2,M1,19)=0
        VMR(M4,M3,M2,M1,20)=-(BS(MODE1,MX,ITAU)*XMU0(MX,MZ)+
     1      BS(MODE1,MY,ITAU)*XMU0(MY,MZ)+
     2      BS(MODE1,MZ,ITAU)*XMU0(MZ,MZ))/2-
     3      BSS(MODE1,ITAU)*XMU0(MZ,4)/2
        VMR(M4,M3,M2,M1,21)=-(BS(MODE2,MX,ITAU)*XMU0(MX,MZ)+
     1      BS(MODE2,MY,ITAU)*XMU0(MY,MZ)+
     2      BS(MODE2,MZ,ITAU)*XMU0(MZ,MZ))/2-
     3      BSS(MODE2,ITAU)*XMU0(MZ,4)/2
        VMR(M4,M3,M2,M1,22)=-(BS(MODE3,MX,ITAU)*XMU0(MX,MZ)+
     1      BS(MODE3,MY,ITAU)*XMU0(MY,MZ)+
     2      BS(MODE3,MZ,ITAU)*XMU0(MZ,MZ))/2-
     3      BSS(MODE3,ITAU)*XMU0(MZ,4)/2
        VMR(M4,M3,M2,M1,23)=-(BS(MODE4,MX,ITAU)*XMU0(MX,MZ)+
     1      BS(MODE4,MY,ITAU)*XMU0(MY,MZ)+
     2      BS(MODE4,MZ,ITAU)*XMU0(MZ,MZ))/2-
     3      BSS(MODE4,ITAU)*XMU0(MZ,4)/2
        VMR(M4,M3,M2,M1,24)=XMU0(MZ,4)/2
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VOUT94(VM,VMR,MM1,MM2,MM3,MM4)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VM(MM4,MM3,MM2,MM1,24)
      REAL*4 VMR(MM4,MM3,MM2,MM1,24)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      IF(JCOUPC.GE.0)THEN
        IF(ICOUPC.GE.4)WRITE(I94)VM
      ELSE
        IF(ICOUPC.GE.4)WRITE(I94)VMR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE GET75(V,VR,MM1,MM2,MM3,MM4,MM5,VDP,M1,M2,M3,M4,M5)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM5,MM4,MM3,MM2,MM1)
      REAL*4 VR(MM5,MM4,MM3,MM2,MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GT.0)THEN
        VDP=V(M5,M4,M3,M2,M1)
      ELSE
        VDP=VR(M5,M4,M3,M2,M1)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE SET75(V,VR,MM1,MM2,MM3,MM4,MM5,VDP,M1,M2,M3,M4,M5)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM5,MM4,MM3,MM2,MM1)
      REAL*4 VR(MM5,MM4,MM3,MM2,MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GT.0)THEN
        V(M5,M4,M3,M2,M1)=VDP
      ELSE
        VR(M5,M4,M3,M2,M1)=VDP
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE FIX75(V5,V5R,J1,J2,J3,J4,J5,VP5,MAX5,K1,K2,K3,K4,K5,
     1MODE1,MM1,MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,MODE4,MM4,MD4,MODE5,
     2MM5,MD5,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V5(J5,J4,J3,J2,J1)
      REAL*4 V5R(J5,J4,J3,J2,J1)
      DIMENSION VP5(MAX5,MAX5,MAX5,MAX5,MAX5,1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
C     IF(K1.EQ.MODE1.AND.K2.EQ.MODE2.AND.K3.EQ.MODE3.AND.K4.EQ.MODE4.
C    1AND.K5.EQ.MODE5)THEN
        DO M1=1,MM1/MD1
          DO M2=1,MM2/MD2
            DO M3=1,MM3/MD3
              DO M4=1,MM4/MD4
                DO M5=1,MM5/MD5
                  IF(JCOUPL.GT.0)THEN
                    VP5(M5,M4,M3,M2,M1,IND)=V5(M5,M4,M3,M2,M1)
                  ELSE
                    VP5(M5,M4,M3,M2,M1,IND)=V5R(M5,M4,M3,M2,M1)
                  END IF
                END DO
              END DO
            END DO
          END DO
        END DO
C     END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE OUT75(V,VR,MM1,MM2,MM3,MM4,MM5)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM5,MM4,MM3,MM2,MM1)
      REAL*4 VR(MM5,MM4,MM3,MM2,MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/FILASS/IOUT
      COMMON/UNITEX/I75,I76,I85,I86
      IF(JCOUPL.GT.0)THEN
        WRITE(I75)V
      ELSE
        WRITE(I75)VR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE GET85(V,VR,MM2,MM3,MM4,MM5,B,BB,NMODE,ZZ,M2,M3,
     1M4,M5,MODE1,MODE2,MODE3,MODE4,MODE5)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM5,MM4,MM3,MM2,16)
      REAL*4 VR(MM5,MM4,MM3,MM2,16)
      DIMENSION B(NMODE,NMODE),BB(NMODE)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.5)RETURN
      IF(JCOUPC.GE.0)THEN
        B(MODE1,MODE1)=V(M5,M4,M3,M2,1)
        B(MODE1,MODE2)=V(M5,M4,M3,M2,2)
        B(MODE1,MODE3)=V(M5,M4,M3,M2,3)
        B(MODE1,MODE4)=V(M5,M4,M3,M2,4)
        B(MODE1,MODE5)=V(M5,M4,M3,M2,5)
        B(MODE2,MODE2)=V(M5,M4,M3,M2,6)
        B(MODE2,MODE3)=V(M5,M4,M3,M2,7)
        B(MODE2,MODE4)=V(M5,M4,M3,M2,8)
        B(MODE2,MODE5)=V(M5,M4,M3,M2,9)
        B(MODE3,MODE3)=V(M5,M4,M3,M2,10)
        B(MODE3,MODE4)=V(M5,M4,M3,M2,11)
        B(MODE3,MODE5)=V(M5,M4,M3,M2,12)
        B(MODE4,MODE4)=V(M5,M4,M3,M2,13)
        B(MODE4,MODE5)=V(M5,M4,M3,M2,14)
        B(MODE5,MODE5)=V(M5,M4,M3,M2,15)
        ZZ=V(M5,M4,M3,M2,16)
      ELSE
        B(MODE1,MODE1)=VR(M5,M4,M3,M2,1)
        B(MODE1,MODE2)=VR(M5,M4,M3,M2,2)
        B(MODE1,MODE3)=VR(M5,M4,M3,M2,3)
        B(MODE1,MODE4)=VR(M5,M4,M3,M2,4)
        B(MODE1,MODE5)=VR(M5,M4,M3,M2,5)
        B(MODE2,MODE2)=VR(M5,M4,M3,M2,6)
        B(MODE2,MODE3)=VR(M5,M4,M3,M2,7)
        B(MODE2,MODE4)=VR(M5,M4,M3,M2,8)
        B(MODE2,MODE5)=VR(M5,M4,M3,M2,9)
        B(MODE3,MODE3)=VR(M5,M4,M3,M2,10)
        B(MODE3,MODE4)=VR(M5,M4,M3,M2,11)
        B(MODE3,MODE5)=VR(M5,M4,M3,M2,12)
        B(MODE4,MODE4)=VR(M5,M4,M3,M2,13)
        B(MODE4,MODE5)=VR(M5,M4,M3,M2,14)
        B(MODE5,MODE5)=VR(M5,M4,M3,M2,15)
        ZZ=VR(M5,M4,M3,M2,16)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE SET85(V,VR,MM2,MM3,MM4,MM5,B,BB,NMODE,ZZ,M2,M3,
     1M4,M5,MODE1,MODE2,MODE3,MODE4,MODE5)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM5,MM4,MM3,MM2,16)
      REAL*4 VR(MM5,MM4,MM3,MM2,16)
      DIMENSION B(NMODE,NMODE),BB(NMODE)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.5)RETURN
      IF(JCOUPC.GE.0)THEN
        V(M5,M4,M3,M2,1)=B(MODE1,MODE1)
        V(M5,M4,M3,M2,2)=B(MODE1,MODE2)
        V(M5,M4,M3,M2,3)=B(MODE1,MODE3)
        V(M5,M4,M3,M2,4)=B(MODE1,MODE4)
        V(M5,M4,M3,M2,5)=B(MODE1,MODE5)
        V(M5,M4,M3,M2,6)=B(MODE2,MODE2)
        V(M5,M4,M3,M2,7)=B(MODE2,MODE3)
        V(M5,M4,M3,M2,8)=B(MODE2,MODE4)
        V(M5,M4,M3,M2,9)=B(MODE2,MODE5)
        V(M5,M4,M3,M2,10)=B(MODE3,MODE3)
        V(M5,M4,M3,M2,11)=B(MODE3,MODE4)
        V(M5,M4,M3,M2,12)=B(MODE3,MODE5)
        V(M5,M4,M3,M2,13)=B(MODE4,MODE4)
        V(M5,M4,M3,M2,14)=B(MODE4,MODE5)
        V(M5,M4,M3,M2,15)=B(MODE5,MODE5)
        V(M5,M4,M3,M2,16)=ZZ
      ELSE
        VR(M5,M4,M3,M2,1)=B(MODE1,MODE1)
        VR(M5,M4,M3,M2,2)=B(MODE1,MODE2)
        VR(M5,M4,M3,M2,3)=B(MODE1,MODE3)
        VR(M5,M4,M3,M2,4)=B(MODE1,MODE4)
        VR(M5,M4,M3,M2,5)=B(MODE1,MODE5)
        VR(M5,M4,M3,M2,6)=B(MODE2,MODE2)
        VR(M5,M4,M3,M2,7)=B(MODE2,MODE3)
        VR(M5,M4,M3,M2,8)=B(MODE2,MODE4)
        VR(M5,M4,M3,M2,9)=B(MODE2,MODE5)
        VR(M5,M4,M3,M2,10)=B(MODE3,MODE3)
        VR(M5,M4,M3,M2,11)=B(MODE3,MODE4)
        VR(M5,M4,M3,M2,12)=B(MODE3,MODE5)
        VR(M5,M4,M3,M2,13)=B(MODE4,MODE4)
        VR(M5,M4,M3,M2,14)=B(MODE4,MODE5)
        VR(M5,M4,M3,M2,15)=B(MODE5,MODE5)
        VR(M5,M4,M3,M2,16)=ZZ
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE FIX85(V5,V5R,J1,J2,J3,J4,J5,VP5,MAX5,K1,K2,K3,K4,K5,
     1MODE1,MM1,MD1,MODE2,MM2,MD2,MODE3,MM3,MD3,MODE4,MM4,MD4,MODE5,
     2MM5,MD5,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V5(J5,J4,J3,J2,16)
      REAL*4 V5R(J5,J4,J3,J2,16)
      DIMENSION VP5(MAX5,MAX5,MAX5,MAX5,MAX5,16,1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/IND85X/IND85
      REWIND IND85
      DO M1=1,MM1/MD1
        READ(IND85)V5
        DO M2=1,MM2/MD2
          DO M3=1,MM3/MD3
            DO M4=1,MM4/MD4
              DO M5=1,MM5/MD5
                DO K=1,16
                  IF(JCOUPC.GE.0)THEN
                    VP5(M5,M4,M3,M2,M1,K,IND)=V5(M5,M4,M3,M2,K)
                  ELSE
                    VP5(M5,M4,M3,M2,M1,K,IND)=V5R(M5,M4,M3,M2,K)
                  END IF
                END DO
              END DO
            END DO
          END DO
        END DO
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE OUT85(V,VR,MM2,MM3,MM4,MM5)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM5,MM4,MM3,MM2,16)
      REAL*4 VR(MM5,MM4,MM3,MM2,16)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/UNITEX/I75,I76,I85,I86
      IF(JCOUPC.GE.0)THEN
        IF(ICOUPC.GE.5)WRITE(I85)V
      ELSE
        IF(ICOUPC.GE.5)WRITE(I85)VR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE OUT85X(V,MM2,MM3,MM4,MM5,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM5,MM4,MM3,MM2,16)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/UNITEX/I75,I76,I85,I86
      IF(ICOUPC.GE.5)WRITE(IND)V
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE IN6785(VP,VPR,VC,VCR,MM1,MM2,MM3,MM4,MM5)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM5,MM4,MM3,MM2,MM1),VC(MM5,MM4,MM3,MM2,16)
      REAL*4 VPR(MM5,MM4,MM3,MM2,MM1),VCR(MM5,MM4,MM3,MM2,16)
      COMMON/WHICH/IWHICH
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/XSAVES/ICOUPX,ICOUCX,JCOUPS,JCOUCS
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/UNITEX/I75,I76,I85,I86
      ICCCCC=ICOUPC
      IF(MOLINC.EQ.0)THEN
        ICCCCC=ICOUCX
      END IF
      IF(JCOUPC.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(I75)VP
        DO M1=1,MM1
          IF(ICCCCC.GE.5)READ(I85)VC
        END DO
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(I75)VPR
        DO M1=1,MM1
          IF(ICCCCC.GE.5)READ(I85)VCR
        END DO
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE GET76(V,VR,MM1,MM2,MM3,MM4,MM5,MM6,VDP,M1,M2,M3,M4,M5,
     1M6)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM6,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VR(MM6,MM5,MM4,MM3,MM2,MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GT.0)THEN
        VDP=V(M6,M5,M4,M3,M2,M1)
      ELSE
        VDP=VR(M6,M5,M4,M3,M2,M1)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE SET76(V,VR,MM1,MM2,MM3,MM4,MM5,MM6,VDP,M1,M2,M3,M4,M5,
     1M6)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM6,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VR(MM6,MM5,MM4,MM3,MM2,MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GT.0)THEN
        V(M6,M5,M4,M3,M2,M1)=VDP
      ELSE
        VR(M6,M5,M4,M3,M2,M1)=VDP
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE OUT76(V,VR,MM1,MM2,MM3,MM4,MM5,MM6)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM6,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VR(MM6,MM5,MM4,MM3,MM2,MM1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/UNITEX/I75,I76,I85,I86
      IF(JCOUPL.GT.0)THEN
        WRITE(I76)V
      ELSE
        WRITE(I76)VR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE GET86(V,VR,MM3,MM4,MM5,MM6,B,BB,NMODE,ZZ,
     1M3,M4,M5,M6,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM6,MM5,MM4,MM3,22)
      REAL*4 VR(MM6,MM5,MM4,MM3,22)
      DIMENSION B(NMODE,NMODE),BB(NMODE)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.6)RETURN
      IF(JCOUPC.GE.0)THEN
        B(MODE1,MODE1)=V(M6,M5,M4,M3,1)
        B(MODE1,MODE2)=V(M6,M5,M4,M3,2)
        B(MODE1,MODE3)=V(M6,M5,M4,M3,3)
        B(MODE1,MODE4)=V(M6,M5,M4,M3,4)
        B(MODE1,MODE5)=V(M6,M5,M4,M3,5)
        B(MODE1,MODE6)=V(M6,M5,M4,M3,6)
        B(MODE2,MODE2)=V(M6,M5,M4,M3,7)
        B(MODE2,MODE3)=V(M6,M5,M4,M3,8)
        B(MODE2,MODE4)=V(M6,M5,M4,M3,9)
        B(MODE2,MODE5)=V(M6,M5,M4,M3,10)
        B(MODE2,MODE6)=V(M6,M5,M4,M3,11)
        B(MODE3,MODE3)=V(M6,M5,M4,M3,12)
        B(MODE3,MODE4)=V(M6,M5,M4,M3,13)
        B(MODE3,MODE5)=V(M6,M5,M4,M3,14)
        B(MODE3,MODE6)=V(M6,M5,M4,M3,15)
        B(MODE4,MODE4)=V(M6,M5,M4,M3,16)
        B(MODE4,MODE5)=V(M6,M5,M4,M3,17)
        B(MODE4,MODE6)=V(M6,M5,M4,M3,18)
        B(MODE5,MODE5)=V(M6,M5,M4,M3,19)
        B(MODE5,MODE6)=V(M6,M5,M4,M3,20)
        B(MODE6,MODE6)=V(M6,M5,M4,M3,21)
        ZZ=V(M6,M5,M4,M3,22)
      ELSE
        B(MODE1,MODE1)=VR(M6,M5,M4,M3,1)
        B(MODE1,MODE2)=VR(M6,M5,M4,M3,2)
        B(MODE1,MODE3)=VR(M6,M5,M4,M3,3)
        B(MODE1,MODE4)=VR(M6,M5,M4,M3,4)
        B(MODE1,MODE5)=VR(M6,M5,M4,M3,5)
        B(MODE1,MODE6)=VR(M6,M5,M4,M3,6)
        B(MODE2,MODE2)=VR(M6,M5,M4,M3,7)
        B(MODE2,MODE3)=VR(M6,M5,M4,M3,8)
        B(MODE2,MODE4)=VR(M6,M5,M4,M3,9)
        B(MODE2,MODE5)=VR(M6,M5,M4,M3,10)
        B(MODE2,MODE6)=VR(M6,M5,M4,M3,11)
        B(MODE3,MODE3)=VR(M6,M5,M4,M3,12)
        B(MODE3,MODE4)=VR(M6,M5,M4,M3,13)
        B(MODE3,MODE5)=VR(M6,M5,M4,M3,14)
        B(MODE3,MODE6)=VR(M6,M5,M4,M3,15)
        B(MODE4,MODE4)=VR(M6,M5,M4,M3,16)
        B(MODE4,MODE5)=VR(M6,M5,M4,M3,17)
        B(MODE4,MODE6)=VR(M6,M5,M4,M3,18)
        B(MODE5,MODE5)=VR(M6,M5,M4,M3,19)
        B(MODE5,MODE6)=VR(M6,M5,M4,M3,20)
        B(MODE6,MODE6)=VR(M6,M5,M4,M3,21)
        ZZ=VR(M6,M5,M4,M3,22)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE SET86(V,VR,MM3,MM4,MM5,MM6,B,BB,NMODE,ZZ,
     1M3,M4,M5,M6,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM6,MM5,MM4,MM3,22)
      REAL*4 VR(MM6,MM5,MM4,MM3,22)
      DIMENSION B(NMODE,NMODE),BB(NMODE)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(ICOUPC.LT.6)RETURN
      IF(JCOUPC.GE.0)THEN
        V(M6,M5,M4,M3,1)=B(MODE1,MODE1)
        V(M6,M5,M4,M3,2)=B(MODE1,MODE2)
        V(M6,M5,M4,M3,3)=B(MODE1,MODE3)
        V(M6,M5,M4,M3,4)=B(MODE1,MODE4)
        V(M6,M5,M4,M3,5)=B(MODE1,MODE5)
        V(M6,M5,M4,M3,6)=B(MODE1,MODE6)
        V(M6,M5,M4,M3,7)=B(MODE2,MODE2)
        V(M6,M5,M4,M3,8)=B(MODE2,MODE3)
        V(M6,M5,M4,M3,9)=B(MODE2,MODE4)
        V(M6,M5,M4,M3,10)=B(MODE2,MODE5)
        V(M6,M5,M4,M3,11)=B(MODE2,MODE6)
        V(M6,M5,M4,M3,12)=B(MODE3,MODE3)
        V(M6,M5,M4,M3,13)=B(MODE3,MODE4)
        V(M6,M5,M4,M3,14)=B(MODE3,MODE5)
        V(M6,M5,M4,M3,15)=B(MODE3,MODE6)
        V(M6,M5,M4,M3,16)=B(MODE4,MODE4)
        V(M6,M5,M4,M3,17)=B(MODE4,MODE5)
        V(M6,M5,M4,M3,18)=B(MODE4,MODE6)
        V(M6,M5,M4,M3,19)=B(MODE5,MODE5)
        V(M6,M5,M4,M3,20)=B(MODE5,MODE6)
        V(M6,M5,M4,M3,21)=B(MODE6,MODE6)
        V(M6,M5,M4,M3,22)=ZZ
      ELSE
        VR(M6,M5,M4,M3,1)=B(MODE1,MODE1)
        VR(M6,M5,M4,M3,2)=B(MODE1,MODE2)
        VR(M6,M5,M4,M3,3)=B(MODE1,MODE3)
        VR(M6,M5,M4,M3,4)=B(MODE1,MODE4)
        VR(M6,M5,M4,M3,5)=B(MODE1,MODE5)
        VR(M6,M5,M4,M3,6)=B(MODE1,MODE6)
        VR(M6,M5,M4,M3,7)=B(MODE2,MODE2)
        VR(M6,M5,M4,M3,8)=B(MODE2,MODE3)
        VR(M6,M5,M4,M3,9)=B(MODE2,MODE4)
        VR(M6,M5,M4,M3,10)=B(MODE2,MODE5)
        VR(M6,M5,M4,M3,11)=B(MODE2,MODE6)
        VR(M6,M5,M4,M3,12)=B(MODE3,MODE3)
        VR(M6,M5,M4,M3,13)=B(MODE3,MODE4)
        VR(M6,M5,M4,M3,14)=B(MODE3,MODE5)
        VR(M6,M5,M4,M3,15)=B(MODE3,MODE6)
        VR(M6,M5,M4,M3,16)=B(MODE4,MODE4)
        VR(M6,M5,M4,M3,17)=B(MODE4,MODE5)
        VR(M6,M5,M4,M3,18)=B(MODE4,MODE6)
        VR(M6,M5,M4,M3,19)=B(MODE5,MODE5)
        VR(M6,M5,M4,M3,20)=B(MODE5,MODE6)
        VR(M6,M5,M4,M3,21)=B(MODE6,MODE6)
        VR(M6,M5,M4,M3,22)=ZZ
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE OUT86(V,VR,MM3,MM4,MM5,MM6)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V(MM6,MM5,MM4,MM3,22)
      REAL*4 VR(MM6,MM5,MM4,MM3,22)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/UNITEX/I75,I76,I85,I86
      IF(JCOUPC.GE.0)THEN
        IF(ICOUPC.GE.6)WRITE(I86)V
      ELSE
        IF(ICOUPC.GE.6)WRITE(I86)VR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE IN6786(VP,VPR,VC,VCR,MM1,MM2,MM3,MM4,MM5,MM6)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM6,MM5,MM4,MM3,MM2,MM1),VC(MM6,MM5,MM4,MM3,22)
      REAL*4 VPR(MM6,MM5,MM4,MM3,MM2,MM1),
     1VCR(MM6,MM5,MM4,MM3,22)
      COMMON/WHICH/IWHICH
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/XSAVES/ICOUPX,ICOUCX,JCOUPS,JCOUCS
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/UNITEX/I75,I76,I85,I86
      ICCCCC=ICOUPC
      IF(MOLINC.EQ.0)THEN
        ICCCCC=ICOUCX
      END IF
      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(I76)VP
        DO M1=1,MM1
          DO M2=1,MM2
            IF(ICCCCC.GE.6)READ(I86)VC
          END DO
        END DO
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(I76)VPR
        DO M1=1,MM1
          DO M2=1,MM2
            IF(ICCCCC.GE.6)READ(I86)VCR
          END DO
        END DO
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE CORIOL(NMODE,NATOM,QQ,XZ,AB,
     1B,AA,BB,XX,X0,XL,XM,ZZ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR,TRIAT
      DIMENSION QQ(NMODE),XZ(NMODE,NMODE,3),AB(NMODE,3)
      DIMENSION B(NMODE,NMODE),AA(NMODE,3,3),BB(NMODE)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      DIMENSION G1(3,3),SUP1(3,3),SUP2(3,3),SUP3(10)
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/TYPE/LINEAR
      COMMON/JCORIO/JCORIO
      COMMON/TRIATO/TRIAT
      COMMON/TORS/QTAU
      COMMON/FILASS/IOUT,INP
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOMI/XIN(3,3),XMU(3,3)
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
C**TEMPORARY (DIMENSIONS)
      COMMON/MULT/MULT(1000)
C**CARTESIAN COORDINATES
      DO I=1,NATOM
        DO J=1,3
          XX(I,J)=X0(I,J)
          DO K=1,NMODE
            XX(I,J)=XX(I,J)+XL(I,K,J)*QQ(K)/SQRT(XM(I))
          END DO
        END DO
      END DO
      DO K=1,NMODE
        DO I=1,3
          Y=0
          DO J=1,NMODE
            Y=Y+QQ(J)*XZ(J,K,I)*MULT(K)
          END DO
          AB(K,I)=Y
        END DO
      END DO
      IF(LINEAR)GO TO 1000
C*********************************************
C**MOMENT OF INERTIA TENSOR FOR BENT MOLECULES
C*********************************************
      DO I=1,3
        DO J=1,3
          G1(I,J)=0
        END DO
      END DO
      DO I=1,3
        DO J=1,3
          DO K=1,NMODE
            DO J1=1,NMODE
              DO J2=1,NMODE
                G1(I,J)=G1(I,J)+QQ(J1)*QQ(J2)*XZ(J1,K,I)*XZ(J2,K,J)
     1          *MULT(K)
              END DO
            END DO
          END DO
        END DO
      END DO
C**CALCULATE INVERSE MOMENT OF INERTIA
      ZZ=0
      DO I=1,NATOM
        DO J=1,3
          ZZ=ZZ+XM(I)*XX(I,J)*XX(I,J)
        END DO
      END DO
      DO I=1,3
        DO J=1,3
          XIN(I,J)=0
        END DO
      END DO
      DO I=1,3
        XIN(I,I)=ZZ
        DO J=1,3
          DO K=1,NATOM
            XIN(I,J)=XIN(I,J)-XM(K)*XX(K,I)*XX(K,J)
          END DO
        END DO
      END DO
      DO I=1,3
        DO J=1,3
          XIN(I,J)=XIN(I,J)-G1(I,J)
        END DO
      END DO
      DO I=1,3
        DO J=1,3
          SUP1(I,J)=XIN(I,J)
        END DO
      END DO
      IFAIL=1
      CALL MATINV(SUP1,3,3,SUP2,SUP3,IFAIL)
      IF(IFAIL.NE.0)THEN
        WRITE(IOUT,*)'ERROR IN MATINV'
        STOP 'ERROR IN MATINV'
      END IF
      DO I=1,3
        DO J=1,3
          XMU(I,J)=SUP2(I,J)
        END DO
      END DO
      ZZ=-(XMU(1,1)+XMU(2,2)+XMU(3,3))/8
C**CALCULATE VIBRATIONAL ANGULAR MOMENTUM TERMS
      DO L=1,NMODE
        DO K=1,NMODE
          Y=0
          DO I=1,3
            DO J=1,3
              Y=Y+XMU(I,J)*AB(L,I)*AB(K,J)
            END DO
          END DO
          B(L,K)=Y/2
        END DO
      END DO
      DO K=1,NMODE
        DO L=1,3
          DO I=1,3
            AA(K,L,I)=0
          END DO
        END DO
      END DO
      DO L=1,NMODE
        DO I=1,3
          DO J=1,3
            DO K=1,NMODE
              AA(L,I,J)=AA(L,I,J)+AB(K,I)*XZ(K,L,J)*
     1        MULT(K)*MULT(L)
            END DO
          END DO
        END DO
      END DO
      DO L=1,NMODE
        Y=0
        DO I=1,3
          DO J=1,3
            Y=Y+XMU(I,J)*AA(L,I,J)
          END DO
        END DO
        BB(L)=Y/2
      END DO
      RETURN
1000  CONTINUE
C***********************************************
C**MOMENT OF INERTIA TENSOR FOR LINEAR MOLECULES
C***********************************************
      DO K=1,NMODE
        AB(K,1)=0
        AB(K,3)=0
      END DO
C**CALCULATE INVERSE MOMENT OF INERTIA
      AI0=0
      DO I=1,NATOM
        AI0=AI0+XM(I)*X0(I,3)*X0(I,3)
      END DO
      AIPP=AI0
      DO I=1,NATOM
        DO K=1,NMODE
          AIPP=AIPP+SQRT(XM(I))*X0(I,3)*XL(I,K,3)*QQ(K)
        END DO
      END DO
      AIP=AIPP*AIPP/AI0
      YMU=1/AIP
C**ONLY X,Y COMPONENTS NON-ZERO FOR LINEAR MOLECULE
      DO I=1,3
        DO J=1,3
          XMU(J,I)=YMU
        END DO
      END DO
      DO I=1,3
        XMU(I,3)=0
        XMU(3,I)=0
      END DO
C**CALCULATE VIBRATIONAL ANGULAR MOMENTUM TERMS
C**WE ONLY USE NAMODE CONSECUTIVE ENTRIES FROM ZETA ARRAYS
C**(NONLIN + LINBND = NAMODE)
C**TORSION(S) IN POSITION(S) AFTER NAMODE (NAMODE+1 TO NSMODE)
C**SINCE THE LINEAR MODES ARE STORED 'X' FOLLOWED BY 'Y'
C**THESE WILL ALL BE FOUND IN THE ZETA(Y) ARRAY
C**THERE WILL BE NO CONTRIBUTION FROM ZETA(Z) ARRAY
C**WE DETERMINE piX**2 + piy**2 TOGETHER
C**SET FIRST AND SECOND DERIVS TO ZERO (INITIALLY)
      DO K=1,NSMODE
        BB(K)=0
        DO L=1,NSMODE
          B(L,K)=0
        END DO
      END DO
C*************************************************
C**FIRST DO TYPE 1 (BEND,BEND)
C*************************************************
C********************
C**SECOND DERIVATIVES
C********************
C**STRETCH-STRETCH
      DO L=1,NONLIN
        DO K=1,NONLIN
          Y=0
          DO I=NONLIN+1,NONLIN+LINBND
            Y=Y+QQ(I)*QQ(I)*XZ(I,K,2)*XZ(I,L,2)
          END DO
          B(L,K)=YMU*Y/2
        END DO
      END DO
C**STRETCH-BEND
      DO L=1,NONLIN
        DO K=NONLIN+1,NONLIN+LINBND
          Y=0
          DO I=1,NONLIN
            Y=Y+XZ(I,K,2)*QQ(I)
          END DO
          B(L,K)=-Y*QQ(K)*XZ(L,K,2)*YMU/2
        END DO
      END DO
C**BEND-BEND
      ZZ=0
      DO L=NONLIN+1,NONLIN+LINBND
        Y=0
        DO K=1,NONLIN
          DO I=1,NONLIN
            Y=Y+QQ(I)*QQ(K)*XZ(I,L,2)*XZ(K,L,2)
          END DO
        END DO
        B(L,L)=Y*YMU/2
        IF(QQ(L).NE.0)THEN
C**NO WATSON CORRECTION IF LINEAR (DUMMY)
C         IF(JCORIO.EQ.0)ZZ=ZZ+B(L,L)/(QQ(L)*QQ(L))
          IF(JCORIO.NE.0)THEN
            ZZ=ZZ+YMU*AB(L,2)/QQ(L)
          END IF
        END IF
      END DO
      IF(.NOT.TRIAT)THEN
C**TORSION
        Y=0
        DO L=1,NONLIN
          DO K=1,NONLIN
            DO I=NONLIN+1,NONLIN+LINBND
              IF(MULT(I).NE.0)THEN
                Y=Y+QQ(K)*QQ(L)*XZ(I,L,2)*XZ(I,K,2)/(QQ(I)*QQ(I))
              END IF
            END DO
          END DO
        END DO
        B(NSMODE,NSMODE)=Y*YMU/8
      END IF
C********************
C**FIRST DERIVATIVES
C********************
C**STRETCH
      DO L=1,NONLIN
        Z=0
        DO K=1,NONLIN+1,NONLIN+LINBND
          Y=0
          DO I=1,NONLIN
            Y=Y+QQ(I)*XZ(I,K,2)
          END DO
          Z=Z+Y*XZ(L,K,2)
        END DO
        BB(L)=-Z*YMU
      END DO
C**BEND
      DO L=NONLIN+1,NONLIN+LINBND
        Y=0
        DO K=1,NONLIN
          Y=Y+XZ(K,L,2)*XZ(K,L,2)
        END DO
        BB(L)=-Y*QQ(L)*YMU/2
      END DO
C*************************************************
C**NOW DO TYPE 2 (BEND,BEND')
C*************************************************
      IF(.NOT.TRIAT)THEN
C********************
C**SECOND DERIVATIVES
C********************
C**STRETCH-STRETCH
        DO L=1,NONLIN
          DO K=1,NONLIN
            Y=0
            DO I=NONLIN+1,NONLIN+LINBND
              DO J=NONLIN+1,NONLIN+LINBND
                IF(I.NE.J)THEN
                  Y=Y+QQ(I)*QQ(J)*XZ(I,L,2)*XZ(J,K,2)
                END IF
              END DO
            END DO
C?????      B(L,K)=YMU*Y*DCOS(2*QTAU)/2
          END DO
        END DO
C**STRETCH-BEND
        DO L=1,NONLIN
          DO K=NONLIN+1,NONLIN+LINBND
            Y=0
            DO I=NONLIN+1,NONLIN+LINBND
              IF(I.NE.K)THEN
                DO J=1,NONLIN
                  Y=Y+XZ(J,K,2)*QQ(J)*XZ(L,I,2)*QQ(I)
                END DO
              END IF
            END DO
C?????      B(L,K)=-Y*YMU*DCOS(2*QTAU)/2
          END DO
        END DO
C**BEND-BEND
        DO L=NONLIN+1,NONLIN+LINBND
          DO K=NONLIN+1,NONLIN+LINBND
            IF(K.NE.L)THEN
              Y=0
              DO I=1,NONLIN
                DO J=1,NONLIN
                  Y=Y+QQ(I)*QQ(J)*XZ(I,L,2)*XZ(J,K,2)
                END DO
              END DO
C?????        B(L,K)=Y*YMU*DCOS(2*QTAU)/2
            END IF
          END DO
        END DO
CC    IF(.NOT.TRIAT)THEN
C**TORSION
        Y=0
        DO L=1,NONLIN
          DO K=1,NONLIN
            DO I=NONLIN+1,NONLIN+LINBND
              DO J=NONLIN+1,NONLIN+LINBND
                IF(I.NE.J)THEN
                  IF(MULT(I).NE.0.AND.MULT(J).NE.0)THEN
                    Y=Y+QQ(K)*QQ(L)*XZ(I,L,2)*XZ(J,K,2)/(QQ(I)*QQ(J))
                  END IF
                END IF
              END DO
            END DO
          END DO
        END DO
C?????  B(NSMODE,NSMODE)=-Y*YMU*DCOS(2*QTAU)/8
C**STRETCH-TORSION
        DO L=1,NONLIN
          Y=0
          DO K=1,NONLIN
            DO I=NONLIN+1,NONLIN+LINBND
              DO J=NONLIN+1,NONLIN+LINBND
                IF(I.NE.J)THEN
                  IF(MULT(J).NE.0)THEN
                    Y=Y+QQ(K)*QQ(I)*XZ(I,L,2)*XZ(J,K,2)/QQ(J)
                  END IF
                END IF
              END DO
            END DO
          END DO
C?????    B(L,NSMODE)=Y*YMU*DSIN(2*QTAU)/4
        END DO
C**BEND-TORSION
        DO L=NONLIN+1,NONLIN+LINBND
          Y=0
          DO K=NONLIN+1,NONLIN+LINBND
            IF(L.NE.K)THEN
              DO I=1,NONLIN
                DO J=1,NONLIN
                  IF(MULT(K).NE.0)THEN
                    Y=Y+QQ(I)*QQ(J)*XZ(J,K,2)*XZ(I,L,2)/QQ(K)
                  END IF
                END DO
              END DO
            END IF
          END DO
C?????    B(L,NSMODE)=-Y*YMU*DSIN(2*QTAU)/4
        END DO
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE GETAB(NMODE,XZ,QQ,AB)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION QQ(NMODE),XZ(NMODE,NMODE,3),AB(NMODE,3)
C**TEMPORARY (DIMENSIONS)
      COMMON/MULT/MULT(1000)
      DO K=1,NMODE
        DO I=1,3
          Y=0
          DO J=1,NMODE
            Y=Y+QQ(J)*XZ(J,K,I)*MULT(K)
          END DO
          AB(K,I)=Y
        END DO
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE REDEFH(WK,XK,NN,MD)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION WK(NN,NN),XK(NN,NN)
      COMMON/DEGEN/IDEGEN,NDEGEN
      NR=0
      DO IR=IDEGEN,NN,MD
        NR=NR+1
        NL=0
        DO IL=IDEGEN,IR,MD
          NL=NL+1
          XK(NL,NR)=WK(IL,IR)
        END DO
      END DO
      NDEGEN=NR
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE REDEFE(WK,EVAL,NN,MD)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION WK(NN),EVAL(NN)
      COMMON/DEGEN/IDEGEN,NDEGEN
      NR=0
      DO IR=IDEGEN,NN,MD
        NR=NR+1
        EVAL(IR)=WK(NR)
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE REFORM(H,NH,XK,NB,NV,M,W,YK,SK,MODE,LMAX,EVAL,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL TRIAT,LINEAR
      DIMENSION H(NH,M,3,1),XK(NB,NB),W(NB),EVAL(NB)
      DIMENSION YK(NH,NH),SK(NB,NB)
      DIMENSION MODINT(1)
C**TEMPORARY (DIMENSION)
      DIMENSION MAXPOS(200)
      COMMON/PATH/ISCFCI
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/DEGEN/IDEGEN,NDEGEN
      COMMON/TYPE/LINEAR
      COMMON/TRIATO/TRIAT
      COMMON/CYCLE/ICYCLE
      COMMON/CIDIAG/ICID,ICI,JCI
      COMMON/SINCOS/ICS
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/DUMP/JDUMP(10),IDUMP,KDUMP,MDUMP,LDUMP
      COMMON/FILASS/IOUT,INP
C**TEMPORARY (DIMENSION)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
C***************************************************
      IF(NB.GT.200)STOP 'DIMENSION MAXPOS TOO SMALL'
C**CONTRACTED PRIMITIVES COEFFICIENTS IN XK
C**MOST RECENT SCF COEFFICIENTS IN XK
C     MD=MODINT(MODE)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE.EQ.ISYM(I,J))MD=I
        END DO
      END DO
      IF(MD.GT.1)MD=2

      NN=NB
      IF(IDEGEN.NE.0)NN=NDEGEN
CC    IF(JREACT.GT.0.AND.MODE.EQ.NSMODE)THEN
C**DETERMINE SYMMETRY OF 'TORSION'
CC      DO I=1,NWSYM
CC        DO J=1,NSYM(I)
CC          IF(MODE.EQ.ISYM(I,J))NT=I
CC        END DO
CC      END DO
C**GET 'CLEAN' VECTORS IF REQUIRED
CC      IF(NT.NE.1)CALL ROTATX(XK,EVAL,NB)
CC      DO N=1,NB
C**DETERMINE WHETHER 'COS' OR 'SIN'
CC        CFMAX=0
CC        DO J=1,NB
CC          IF(DABS(XK(J,N)).GT.CFMAX)THEN
CC            CFMAX=DABS(XK(J,N))
CC            MAXPOS(N)=J
CC          END IF
CC        END DO
CC        WRITE(IOUT,*)
CC        WRITE(IOUT,*)'LEVEL ',N,' ENERGY ',EVAL(N),' MAXPOS = ',
CC   1    MAXPOS(N)
CC        WRITE(IOUT,*)
CC        WRITE(IOUT,*)(XK(I,N),I=1,NB)
CC      END DO
CC    END IF
C**IF TORSION SET COS/SIN POINTERS
      IF(MODE.EQ.0)THEN
C**NEXT COS IS 2 PLUS IC
        IC=0
C**NEXT SIN IS 2 PLUS IS
        IS=-1
C**NO SIN(0.TAU) FOR INTEGRAL TAU
        IF(LMAX.EQ.1)IS=IS+2
      END IF
      DO K=1,3
        DO J=1,M
          DO N=1,NN
            W(N)=0
            DO I=1,NN
              IY=I
              IF(NDEGEN.NE.0)IY=IDEGEN+(I-1)*MD
              IF(MODE.EQ.0)THEN
                IF(ICS.EQ.1)IY=2*I+IC
                IF(ICS.EQ.2)IY=2*I+IS
              END IF
              IF(JREACT.GT.0.AND.MODE.EQ.NSMODE)THEN
C               IY=I+1-MOD(KA,2)
                IY=IY+1-MOD(KA,2)
              END IF
              W(N)=W(N)+XK(I,N)*H(IY,J,K,LMAX)
            END DO
          END DO
          DO N=1,NN
            I=N
            IF(NDEGEN.NE.0)I=IDEGEN+(N-1)*MD
            IF(MODE.EQ.0)THEN
              IF(ICS.EQ.1)I=2*N+IC
              IF(ICS.EQ.2)I=2*N+IS
            END IF 
            IF(JREACT.GT.0.AND.MODE.EQ.NSMODE)THEN
C             I=MAXPOS(N)+1-MOD(KA,2)
              I=I+1-MOD(KA,2)
            END IF
            H(I,J,K,LMAX)=W(N)
          END DO
        END DO
      END DO
      IF((MODE.EQ.0.AND.ICS.EQ.2).OR.
C    1(IREACT.GT.0.AND.MODE.EQ.NSMODE))THEN
     1(IREACT.GT.0.AND.MODE.EQ.NSMODE.AND.IDEGEN.EQ.MD))THEN
        DO I=1,NH+LMAX-2
          DO J=1,NH+LMAX-2
            YK(J,I)=0
          END DO
        END DO
        ITAU=INIT-INCTAU
        DO K=1,M
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
          DO I=1,NH+LMAX-2
            II=I+2-LMAX
            DO J=1,I
              JJ=J+2-LMAX
              YK(J,I)=YK(J,I)+H(II,K,1,LMAX)*H(JJ,K,1,LMAX)*DSTAU(ITAU)
            END DO
          END DO
        END DO
        WRITE(IOUT,*)'OVERLAP'
        DO I=1,NH+LMAX-2
          WRITE(IOUT,*)(YK(J,I),J=1,I)
        END DO
      END IF
      IF(ISCFCI.GT.0.AND.ICI.LT.0.AND.IDUMP.NE.0.AND.LDUMP.EQ.0)THEN
C**PREVIOUS SCF COEFFICIENTS ON (58)
C       IF(ICYCLE.GT.1)THEN
C         DO I=1,NB
C           READ(58)(W(IY),IY=1,NB)
C           DO IY=1,NB
C             SK(IY,I)=W(IY)
C           END DO
C         END DO
C         CALL DGEMM('T','T',NB,NB,NB,1.0D0,XK(1,1),
C    &    NB,SK(1,1),NB,0.0D0,YK(1,1),NH)
C         DO I=1,NB
C           DO IY=1,NB
C             XK(IY,I)=YK(IY,I)
C           END DO
C         END DO
C       END IF
C**INITIAL CONTRACTION COEFFICIENTS ON (60)
C**MOST RECENT SCF COEFFICIENTS ON (59)
        IF(ICYCLE.EQ.0.AND.MODE.NE.0)THEN
          INP=60
          IF(IDEGEN.EQ.MD)WRITE(INP)NV,NB
        END IF
C       IF(ICYCLE.NE.0)INP=59
C       DO I=1,NB
C         DO IY=1,NB
C           W(IY)=XK(IY,I)
C         END DO
C         IF(ICYCLE.NE.0)WRITE(INP)(W(IY),IY=1,NB)
C       END DO
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE ROTATX(XK,EVAL,N)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION XK(N,N),EVAL(N)
      COMMON/FILASS/IOUT
      COMMON/REACTL/JREACT,IFITRP
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
C******************************************************************
C**ROUTINE TO UNSCRAMBLE DEGENERATE 'SIN' & 'COS' FUNCTIONS
C******************************************************************
      DO J=1,N
        IF(J.LT.N)THEN
          IF(DABS(EVAL(J)-EVAL(J+1))*WAVENM.LT.1.0D0)THEN
C**FIND LARGEST 'SIN' COEFFICIENT
            SNMAX1=0
            SNMAX2=0
            DO I=2,N,2
C**FIRST FUNCTION
              IF(DABS(XK(I,J)).GT.SNMAX1)THEN
                SNMAX1=DABS(XK(I,J))
                MAXSF1=I
              END IF
C**SECOND FUNCTION
              IF(DABS(XK(I,J+1)).GT.SNMAX2)THEN
                SNMAX2=DABS(XK(I,J+1))
                MAXSF2=I
              END IF
            END DO
            IF(SNMAX1.GT.SNMAX2)THEN
              MAXSF=MAXSF1
            ELSE
              MAXSF=MAXSF2
            END IF
C**ROTATION ANGLE ZERO
            IF(DABS(XK(MAXSF,J)-XK(MAXSF+1,J)).LT.1.D-5)GO TO 100
C**ROTATION ANGLE INFINITE
            IF(DABS(XK(MAXSF,J+1)-XK(MAXSF+1,J+1)).LT.1.D-5)GO TO 100
            TH=(XK(MAXSF,J)-XK(MAXSF+1,J))/
     1         (-XK(MAXSF,J+1)+XK(MAXSF+1,J+1))
            TH=DATAN(TH)
            CTH=DCOS(TH)
            STH=DSIN(TH)
            DO I=1,N
              TEMP1=CTH*XK(I,J)+STH*XK(I,J+1)
              TEMP2=-STH*XK(I,J)+CTH*XK(I,J+1)
              XK(I,J)=TEMP1
              XK(I,J+1)=TEMP2
            END DO
            IF(JREACT.LE.0)GO TO 200
100         CONTINUE
            TH=45/RAD
            CTH=DCOS(TH)
            STH=DSIN(TH)
            DO I=1,N
              TEMP1=CTH*XK(I,J)+STH*XK(I,J+1)
              TEMP2=-STH*XK(I,J)+CTH*XK(I,J+1)
              XK(I,J)=TEMP1
              XK(I,J+1)=TEMP2
            END DO
200         CONTINUE
          END IF
        END IF
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE RECYCL(W,NB,INP,IOUT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION W(NB)
      DO I=1,NB
        READ(INP)W
        WRITE(IOUT)W
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
C**RPH ODD K
      SUBROUTINE OUTVCI(NB,M,H,NH,W,INCR,LMAX)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      COMMON/FILASS/IOUT,INP,MOUTIN,INP4,INP5,INP6,INP7
      DIMENSION H(NH,M,3,1),W(NB)
C**INCR=0 IF MODE IS 'Q', INCR=1 IF MODE IS 'S' FOR RPH
C**LMAX=1 IF J=0, LMAX=2 IF J>0
      ILOOP=1
      IF(INCR.EQ.1)ILOOP=LMAX
      INCCR=INCR
      DO IND=1,ILOOP
        DO K=1,3
          DO J=1,M
C**SIN(0) MISSING IF RPH INTEGRAL TAU (K=0 OR IND=1)
            DO I=1,NB-INCCR
              W(I)=H(I+INCCR,J,K,IND)
            END DO
            WRITE(INP4)W
          END DO
        END DO
        INCCR=INCCR-1
      END DO
      RETURN
      END
C**RPH ODD K
C****************************************************************
C****************************************************************
      SUBROUTINE INDUMP(NDUMP,MVSYM,IDUMP,ISCFCI,JDUMP)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION NDUMP(IDUMP,1)
      DIMENSION JDUMP(1)
      COMMON/FILASS/IOUT,INP
      DO I=1,MVSYM
        READ(INP,*)(NDUMP(J,I),J=1,JDUMP(I))
        DO J=1,JDUMP(I)
C         IF(NDUMP(J,I).LT.0)NDUMP(J,I)=0
          IF(NDUMP(J,I).GT.ISCFCI)NDUMP(J,I)=0
        END DO
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE OUTBAS(JSIZE,IP,ISIZE,NMODE)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION IP(ISIZE,NMODE)
      COMMON/FILASS/IOUT,INP,MOUTIN,INP4,INP5,INP6,INP7
      WRITE(INP4)JSIZE
      DO I=1,JSIZE
        WRITE(INP4)(IP(I,J),J=1,NMODE)
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE OUTCIV(ISIZE,XK,X,NDUMP,NSYM,LDUMP,IDUMP,WRK,NMODE)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LANCZ,LANZA,LANZB
      DIMENSION NDUMP(IDUMP,1),XK(ISIZE,1),X(ISIZE),WRK(1)
      COMMON/LANCZO/LANCZ,LANZA,LANZB
      COMMON/EVL/EVL
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/FILASS/IOUT,INP,MOUTIN,INP4,INP5,INP6,INP7
C**TEMPORARY (DIMENSIONS)
      DIMENSION IASS(60)
      REWIND 60
      WRITE(INP4)IDUMP
      DO J=1,IDUMP
        K=J
        IF(LDUMP.LT.0)THEN
          K=NDUMP(J,NSYM)
        END IF
        WRITE(INP4)K
        IF(K.GE.0)THEN
          WRITE(INP4)WRK(K)-EVL/WAVENM
1         READ(60)JX,KA,KC,(IASS(MODE),MODE=1,NMODE)
          IF(K.NE.JX)GO TO 1
          WRITE(INP4)(IASS(MODE),MODE=1,NMODE),KA,KC
C         IF(LANZA)THEN
          IF(LANCZ)THEN
            REWIND 54
            DO M=1,K
              READ(54)X
            END DO
            WRITE(INP4)(X(I),I=1,ISIZE)
          ELSE
            WRITE(INP4)(XK(I,K),I=1,ISIZE)
          END IF
        END IF
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE RZETA(NATOM,NMODE,XL,XZ,X0,R0,XM,NNMODE)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION XL(NATOM,NMODE,3),XZ(NMODE,NMODE,3)
      DIMENSION X0(NATOM,3),R0(NATOM,NATOM),XM(NATOM)
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
200   FORMAT(///,1X,'EQUILIBRIUM BOND DISTANCES',/)
205   FORMAT(1X,'ATOM ',I2,' ATOM ',I2,' ',F12.6)
210   FORMAT(///,1X,'CORIOLIS COUPLING CONSTANTS',/)
215   FORMAT(6(1X,F12.7))
220   FORMAT(/,1X,'X-DIRECTION')
225   FORMAT(/,1X,'Y-DIRECTION')
230   FORMAT(/,1X,'Z-DIRECTION')
C**CORIOLIS COUPLING
      DO J=1,3
        DO L=1,NNMODE
          DO K=1,NNMODE
            XZ(K,L,J)=0
          END DO
        END DO
      END DO
      DO I=1,NATOM
        DO K=1,NNMODE
          DO L=1,NNMODE
            XZ(K,L,1)=XZ(K,L,1)+(XL(I,K,2)*XL(I,L,3)-
     1                           XL(I,K,3)*XL(I,L,2))
            XZ(K,L,2)=XZ(K,L,2)+(XL(I,K,3)*XL(I,L,1)-
     1                           XL(I,K,1)*XL(I,L,3))
            XZ(K,L,3)=XZ(K,L,3)+(XL(I,K,1)*XL(I,L,2)-
     1                           XL(I,K,2)*XL(I,L,1))
          END DO
        END DO
      END DO
      IF(IPRINT.GT.2)WRITE(IOUT,210)
      IF(IPRINT.GT.2)WRITE(IOUT,220)
      DO K=1,NNMODE
        IF(IPRINT.GT.2)WRITE(IOUT,215)(XZ(K,L,1),L=1,NNMODE)
      END DO
      IF(IPRINT.GT.2)WRITE(IOUT,225)
      DO K=1,NNMODE
        IF(IPRINT.GT.2)WRITE(IOUT,215)(XZ(K,L,2),L=1,NNMODE)
      END DO
      IF(IPRINT.GT.2)WRITE(IOUT,230)
      DO K=1,NNMODE
        IF(IPRINT.GT.2)WRITE(IOUT,215)(XZ(K,L,3),L=1,NNMODE)
      END DO
C**EQUILIBRIUM BOND LENGTHS
      DO I=1,NATOM
        DO J=1,I
          R0(J,I)=0
        END DO
      END DO
      DO K=1,3
        DO I=1,NATOM
          DO J=1,I
            R0(J,I)=R0(J,I)+(X0(I,K)-X0(J,K))*(X0(I,K)-X0(J,K))
          END DO
        END DO
      END DO
      IF(IPRINT.GT.2)WRITE(IOUT,200)
      DO I=1,NATOM
        DO J=1,I
          R0(J,I)=SQRT(R0(J,I))
          R0(I,J)=R0(J,I)
          IF(I.NE.J.AND.IPRINT.GT.2)WRITE(IOUT,205)I,J,R0(I,J)
        END DO
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE TRZETA(NATOM,NMODE,XL,XZ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION XZ(NMODE,NMODE,3),XL(NATOM,NMODE,3)
C**CORIOLIS COUPLING
      DO J=1,3
        DO L=1,NMODE
          DO K=1,NMODE
            XZ(K,L,J)=0
          END DO
        END DO
      END DO
      DO I=1,NATOM
        DO K=1,NMODE
          DO L=1,NMODE
            XZ(K,L,1)=XZ(K,L,1)+(XL(I,K,2)*XL(I,L,3)-
     1                           XL(I,K,3)*XL(I,L,2))
            XZ(K,L,2)=XZ(K,L,2)+(XL(I,K,3)*XL(I,L,1)-
     1                           XL(I,K,1)*XL(I,L,3))
            XZ(K,L,3)=XZ(K,L,3)+(XL(I,K,1)*XL(I,L,2)-
     1                           XL(I,K,2)*XL(I,L,1))
          END DO
        END DO
      END DO
      RETURN
      END
C****************************************************************
      SUBROUTINE TAUMID(H,NN,HX,NNX,MM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION H(NN,MM,3,2),HX(NNX,MM,3,2)
      DO LMAX=1,2
        DO K=1,3
          DO M=1,MM
            DO I=1,NNX
              HX(I,M,K,LMAX)=H(I,M,K,LMAX)
            END DO
          END DO
        END DO
      END DO
      RETURN
      END
C****************************************************************
      SUBROUTINE TAUBAS(H,NN,NBF,HX,NNX,NVF,MODE,MM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION NBF(1),NVF(1),H(NN,MM,3,2),HX(NNX,MM,3,2)
      DO LMAX=1,2
        DO K=1,3
          DO M=1,MM
            DO I=1,NNX
              HX(I,M,K,LMAX)=H(I,M,K,LMAX)
            END DO
          END DO
        END DO
      END DO
      NBF(MODE)=NVF(MODE)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE INTARR(NBF,MBF,K,I1,I2,I3)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION NBF(1),MBF(1)
      I1=NBF(K)*MBF(K)*3
      I2=MBF(K)
      I3=NBF(K)
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE INTCPL(MAXCPL,NMODE,M,K,I)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION MAXCPL(NMODE,M)
      I=MAXCPL(K,M)
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE COMPARE(ISTAT,NSTAT,IP,ISIZE,NMODE,ITHAT,ITHIS,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION ISTAT(NSTAT,NMODE),IP(ISIZE,NMODE)
      IND=1
      DO K=1,NMODE
        IF(ISTAT(ITHAT,K).NE.IP(ITHIS,K))IND=0
      END DO
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE MOVEIP(ISTAT,NSTAT,IP,ISIZE,NMODE)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION ISTAT(NSTAT,NMODE),IP(ISIZE,NMODE)
      DO K=1,NMODE
        DO I=1,ISIZE
          IP(I,K)=ISTAT(I,K)
        END DO
      END DO
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE GETBP1(IP1,ISIZE1,NMODE,KMODE,MAXBAS,NSIZE1,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION MAXBAS(NMODE,1),IP1(ISIZE1,NMODE)
      COMMON/BASIS/NBAS(6,2),MAXSUM(6,2)
      COMMON/MXNMAX/MXNMAX,MAXJ
      COMMON/FILASS/IOUT,INP
      NSIZE1=1
C     NMAX1=MAXSUM(1,1)+1
C     NMAX2=MAXSUM(1,2)+1
      NMAX1=0
      NMAX2=0
      DO I=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(I,1)+1)
        NMAX2=MAX0(NMAX2,MAXSUM(I,2)+1)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI1K=MAXBFN(MAXBAS,NMODE,KMODE,1)
      CALL GETJP1(IP1,ISIZE1,NMODE,1,KMODE,JCI1K,NMAX,NSIZE1,MAXBAS,1,
     1KMODE)
      IF(IND.EQ.0)RETURN
C**2-DIM MATRIX IF LINEAR - ALWAYS STARTS COS(0.TAU)
      IP1(1,2)=1
C**LSIZE1 CONTAINS RUNNING TOTAL
      LSIZE1=NSIZE1
C**KEEP CURRENT POSITION IN 'I'
      I=2
C**TOTAL OF NSIZE1 TO LOOK AT
      DO IDUM=2,NSIZE1
C**SET UP LEADING TERM
        IP1(I,1)=(IDUM+1)/2
        LSTART=MOD(IDUM+1,2)
C**LEADING L EVEN OR ODD
        IF(LSTART.EQ.0)THEN
C**EVEN STARTS COS(0.TAU)
          IP1(I,2)=1
        ELSE
C**ODD STARTS SIN(2.TAU)
          IP1(I,2)=4
        END IF
C**DUPLICATE IDUM-1 ENTRIES
        DO J=1,IDUM-1
C**FIRST MOVE REMAINDER UP ONE PLACE
          DO K=I+1,LSIZE1
            IP1(LSIZE1-K+I+2,1)=IP1(LSIZE1-K+I+1,1)
          END DO
C**NOW DUPLICATE
          IF(LSTART.EQ.0)THEN
C**EVEN
            IF(MOD(J,2).EQ.0)THEN
              IP1(I+1,1)=IP1(I,1)
              IP1(I+1,2)=IP1(I,2)+1
            ELSE
              IP1(I+1,1)=IP1(I,1)-1
              IP1(I+1,2)=IP1(I,2)+7
            END IF
          ELSE
C**ODD
            IF(MOD(J,2).EQ.0)THEN
              IP1(I+1,1)=IP1(I,1)-1
              IP1(I+1,2)=IP1(I,2)+7
            ELSE
              IP1(I+1,1)=IP1(I,1)
              IP1(I+1,2)=IP1(I,2)+1
            END IF
          END IF
C**UPDATE POINTER AND TOTAL
          I=I+1
          LSIZE1=LSIZE1+1
        END DO
C**MOVE TO NEXT FUNCTION
        I=I+1
      END DO
      NSIZE1=LSIZE1
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE GETBP2(IP2,ISIZE2,NMODE,KMODE,LMODE,MAXBAS,NSIZE2,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION MAXBAS(NMODE,2),IP2(ISIZE2,NMODE)
      COMMON/BASIS/NBAS(6,2),MAXSUM(6,2)
      COMMON/MXNMAX/MXNMAX,MAXJ
      COMMON/FILASS/IOUT,INP
      NSIZE2=1
C     NMAX1=MAXSUM(1,1)+1
C     NMAX2=MAXSUM(1,2)+1
      NMAX1=0
      NMAX2=0
      DO I=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(I,1)+1)
        NMAX2=MAX0(NMAX2,MAXSUM(I,2)+1)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI1K=MAXBFN(MAXBAS,NMODE,KMODE,1)
      JCI1L=MAXBFN(MAXBAS,NMODE,LMODE,1)
      CALL GETJP1(IP2,ISIZE2,NMODE,1,KMODE,JCI1K,NMAX,NSIZE2,MAXBAS,2,
     1KMODE)
      CALL GETJP1(IP2,ISIZE2,NMODE,2,LMODE,JCI1L,NMAX,NSIZE2,MAXBAS,0,
     1LMODE)
C     NMAX1=MAXSUM(2,1)+2
C     NMAX2=MAXSUM(2,2)+2
      NMAX1=0
      NMAX2=0
      DO I=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(I,1)+2)
        NMAX2=MAX0(NMAX2,MAXSUM(I,2)+2)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI2K=MAXBFN(MAXBAS,NMODE,KMODE,2)
      JCI2L=MAXBFN(MAXBAS,NMODE,LMODE,2)
      CALL GETJP2(IP2,ISIZE2,NMODE,1,2,KMODE,LMODE,JCI2K,JCI2L,NMAX,
     1NSIZE2,MAXBAS,0,KMODE,LMODE)
      IF(IND.EQ.0)RETURN
C**3-DIM MATRIX IF LINEAR
C*************************************************************
C**
C**                     NOTE*NOTE*NOTE
C**
C**FOR STRETCH-BEND K WILL DENOTE BEND, L WILL DENOTE STRETCH
C**            K IS INDEX 1        L IS INDEX 2
C*************************************************************
C**LSIZE2 CONTAINS RUNNING TOTAL
      LSIZE2=NSIZE2
C**KEEP CURRENT POSITION IN 'I'
      I=1
C**TOTAL OF NSIZE2 TO LOOK AT
      DO IDUM=1,NSIZE2
        LSTART=MOD(IP2(I,1)+1,2)
C**LEADING L EVEN OR ODD
        IF(LSTART.EQ.0)THEN
C**EVEN STARTS COS(0.TAU)
          IP2(I,3)=1
        ELSE
C**ODD STARTS SIN(2.TAU)
          IP2(I,3)=4
        END IF
C**SET UP LEADING TERM FOR BEND
        IP2(I,1)=(IP2(I,1)+1)/2
        JDUM=2*(IP2(I,1)-1)+LSTART
C**DUPLICATE JDUM ENTRIES
        DO J=1,JDUM
C**FIRST MOVE REMAINDER UP ONE PLACE
          DO K=I+1,LSIZE2
            DO L=1,2
              IP2(LSIZE2-K+I+2,L)=IP2(LSIZE2-K+I+1,L)
            END DO
          END DO
C**NOW DUPLICATE (STRETCH INDEX ALWAYS THE SAME)
          IP2(I+1,2)=IP2(I,2)
          IF(LSTART.EQ.0)THEN
C**EVEN
            IF(MOD(J,2).EQ.0)THEN
              IP2(I+1,1)=IP2(I,1)
              IP2(I+1,3)=IP2(I,3)+1
            ELSE
              IP2(I+1,1)=IP2(I,1)-1
              IP2(I+1,3)=IP2(I,3)+7
            END IF
          ELSE
C**ODD
            IF(MOD(J,2).EQ.0)THEN
              IP2(I+1,1)=IP2(I,1)-1
              IP2(I+1,3)=IP2(I,3)+7
            ELSE
              IP2(I+1,1)=IP2(I,1)
              IP2(I+1,3)=IP2(I,3)+1
            END IF
          END IF
C**UPDATE POINTER AND TOTAL
          I=I+1
          LSIZE2=LSIZE2+1
        END DO
C**MOVE TO NEXT FUNCTION
        I=I+1
      END DO
      NSIZE2=LSIZE2
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE GETBP3(IP3,ISIZE3,NNMODE,KMODE,LMODE,NMODE,MAXBAS,
     1NSIZE3,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION MAXBAS(NNMODE,3),IP3(ISIZE3,NNMODE)
      COMMON/BASIS/NBAS(6,2),MAXSUM(6,2)
      COMMON/MXNMAX/MXNMAX,MAXJ
      COMMON/FILASS/IOUT,INP
      NSIZE3=1
C     NMAX1=MAXSUM(1,1)+1
C     NMAX2=MAXSUM(1,2)+1
      NMAX1=0
      NMAX2=0
      DO I=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(I,1)+1)
        NMAX2=MAX0(NMAX2,MAXSUM(I,2)+1)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI1K=MAXBFN(MAXBAS,NNMODE,KMODE,1)
      JCI1L=MAXBFN(MAXBAS,NNMODE,LMODE,1)
      JCI1N=MAXBFN(MAXBAS,NNMODE,NMODE,1)
      CALL GETJP1(IP3,ISIZE3,NNMODE,1,KMODE,JCI1K,NMAX,NSIZE3,MAXBAS,3,
     1KMODE)
      CALL GETJP1(IP3,ISIZE3,NNMODE,2,LMODE,JCI1L,NMAX,NSIZE3,MAXBAS,0,
     1LMODE)
      CALL GETJP1(IP3,ISIZE3,NNMODE,3,NMODE,JCI1N,NMAX,NSIZE3,MAXBAS,0,
     1NMODE)
C     NMAX1=MAXSUM(2,1)+2
C     NMAX2=MAXSUM(2,2)+2
      NMAX1=0
      NMAX2=0
      DO I=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(I,1)+2)
        NMAX2=MAX0(NMAX2,MAXSUM(I,2)+2)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI2K=MAXBFN(MAXBAS,NNMODE,KMODE,2)
      JCI2L=MAXBFN(MAXBAS,NNMODE,LMODE,2)
      JCI2N=MAXBFN(MAXBAS,NNMODE,NMODE,2)
      CALL GETJP2(IP3,ISIZE3,NNMODE,1,2,KMODE,LMODE,JCI2K,JCI2L,NMAX,
     1NSIZE3,MAXBAS,0,KMODE,LMODE)
      CALL GETJP2(IP3,ISIZE3,NNMODE,1,3,KMODE,NMODE,JCI2K,JCI2N,NMAX,
     1NSIZE3,MAXBAS,0,KMODE,NMODE)
      CALL GETJP2(IP3,ISIZE3,NNMODE,2,3,LMODE,NMODE,JCI2L,JCI2N,NMAX,
     1NSIZE3,MAXBAS,0,LMODE,NMODE)
C     NMAX1=MAXSUM(3,1)+3
C     NMAX2=MAXSUM(3,2)+3
      NMAX1=0
      NMAX2=0
      DO I=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(I,1)+3)
        NMAX2=MAX0(NMAX2,MAXSUM(I,2)+3)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI3K=MAXBFN(MAXBAS,NNMODE,KMODE,3)
      JCI3L=MAXBFN(MAXBAS,NNMODE,LMODE,3)
      JCI3N=MAXBFN(MAXBAS,NNMODE,NMODE,3)
      CALL GETJP3(IP3,ISIZE3,NNMODE,1,2,3,KMODE,LMODE,NMODE,JCI3K,
     1JCI3L,JCI3N,NMAX,NSIZE3,MAXBAS,0,KMODE,LMODE,NMODE)
      IF(IND.EQ.0)RETURN
C**3-DIM MATRIX IF LINEAR
C*************************************************************
C**
C**                     NOTE*NOTE*NOTE
C**
C**FOR STRETCH-BEND K WILL DENOTE BEND, L,N WILL DENOTE STRETCH
C**            K IS INDEX 1, L IS INDEX 2, N IS INDEX 3
C*************************************************************
C**LSIZE3 CONTAINS RUNNING TOTAL
      LSIZE3=NSIZE3
C**KEEP CURRENT POSITION IN 'I'
      I=1
C**TOTAL OF NSIZE3 TO LOOK AT
      DO IDUM=1,NSIZE3
        LSTART=MOD(IP3(I,1)+1,2)
C**LEADING L EVEN OR ODD
        IF(LSTART.EQ.0)THEN
C**EVEN STARTS COS(0.TAU)
          IP3(I,4)=1
        ELSE
C**ODD STARTS SIN(2.TAU)
          IP3(I,4)=4
        END IF
C**SET UP LEADING TERM FOR BEND
        IP3(I,1)=(IP3(I,1)+1)/2
        JDUM=2*(IP3(I,1)-1)+LSTART
C**DUPLICATE JDUM ENTRIES
        DO J=1,JDUM
C**FIRST MOVE REMAINDER UP ONE PLACE
          DO K=I+1,LSIZE3
            DO L=1,3
              IP3(LSIZE3-K+I+2,L)=IP3(LSIZE3-K+I+1,L)
            END DO
          END DO
C**NOW DUPLICATE (STRETCH INDICES ALWAYS THE SAME)
          IP3(I+1,2)=IP3(I,2)
          IP3(I+1,3)=IP3(I,3)
          IF(LSTART.EQ.0)THEN
C**EVEN
            IF(MOD(J,2).EQ.0)THEN
              IP3(I+1,1)=IP3(I,1)
              IP3(I+1,4)=IP3(I,4)+1
            ELSE
              IP3(I+1,1)=IP3(I,1)-1
              IP3(I+1,4)=IP3(I,4)+7
            END IF
          ELSE
C**ODD
            IF(MOD(J,2).EQ.0)THEN
              IP3(I+1,1)=IP3(I,1)-1
              IP3(I+1,4)=IP3(I,4)+7
            ELSE
              IP3(I+1,1)=IP3(I,1)
              IP3(I+1,4)=IP3(I,4)+1
            END IF
          END IF
C**UPDATE POINTER AND TOTAL
          I=I+1
          LSIZE3=LSIZE3+1
        END DO
C**MOVE TO NEXT FUNCTION
        I=I+1
      END DO
      NSIZE3=LSIZE3
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE GETBP4(IP4,ISIZE4,NMODE,K,L,N,M,MAXBAS,NSIZE4,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION MAXBAS(NMODE,4),IP4(ISIZE4,NMODE)
      COMMON/BASIS/NBAS(6,2),MAXSUM(6,2)
      COMMON/MXNMAX/MXNMAX,MAXJ
      COMMON/FILASS/IOUT,INP

!      write(iout,*) isize4,nmode,maxj,k,l,n,m ! for debug

!      write(iout,*) 'MAXBAS'
!      do i=1,4
!         write(iout,*) (maxbas(j,i), j=1,nmode)
!      end do

!      write(iout,*) 'MAXSUM'
!      do i=1,2
!         write(iout,*) (maxsum(j,i), j=1,6)
!      end do

!      write(iout,*) 'IP4'
!      do i=1,isize4
!         write(iout,*) (ip4(i,j), j=1,nmode)
!      end do

      NSIZE4=1
C     NMAX1=MAXSUM(1,1)+1
C     NMAX2=MAXSUM(1,2)+1
      NMAX1=0
      NMAX2=0
      DO I=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(I,1)+1)
        NMAX2=MAX0(NMAX2,MAXSUM(I,2)+1)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI1K=MAXBFN(MAXBAS,NMODE,K,1)
      JCI1L=MAXBFN(MAXBAS,NMODE,L,1)
      JCI1N=MAXBFN(MAXBAS,NMODE,N,1)
      JCI1M=MAXBFN(MAXBAS,NMODE,M,1)
      CALL GETJP1(IP4,ISIZE4,NMODE,1,K,JCI1K,NMAX,NSIZE4,MAXBAS,4,
     1K)
      CALL GETJP1(IP4,ISIZE4,NMODE,2,L,JCI1L,NMAX,NSIZE4,MAXBAS,0,
     1L)
      CALL GETJP1(IP4,ISIZE4,NMODE,3,N,JCI1N,NMAX,NSIZE4,MAXBAS,0,
     1N)
      CALL GETJP1(IP4,ISIZE4,NMODE,4,M,JCI1M,NMAX,NSIZE4,MAXBAS,0,
     1M)
C     NMAX1=MAXSUM(2,1)+2
C     NMAX2=MAXSUM(2,2)+2
      NMAX1=0
      NMAX2=0
      DO I=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(I,1)+2)
        NMAX2=MAX0(NMAX2,MAXSUM(I,2)+2)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI2K=MAXBFN(MAXBAS,NMODE,K,2)
      JCI2L=MAXBFN(MAXBAS,NMODE,L,2)
      JCI2N=MAXBFN(MAXBAS,NMODE,N,2)
      JCI2M=MAXBFN(MAXBAS,NMODE,M,2)
      CALL GETJP2(IP4,ISIZE4,NMODE,1,2,K,L,JCI2K,JCI2L,
     1NMAX,NSIZE4,MAXBAS,0,K,L)
      CALL GETJP2(IP4,ISIZE4,NMODE,1,3,K,N,JCI2K,JCI2N,
     1NMAX,NSIZE4,MAXBAS,0,K,N)
      CALL GETJP2(IP4,ISIZE4,NMODE,1,4,K,M,JCI2K,JCI2M,
     1NMAX,NSIZE4,MAXBAS,0,K,M)
      CALL GETJP2(IP4,ISIZE4,NMODE,2,3,L,N,JCI2L,JCI2N,
     1NMAX,NSIZE4,MAXBAS,0,L,N)
      CALL GETJP2(IP4,ISIZE4,NMODE,2,4,L,M,JCI2L,JCI2M,
     1NMAX,NSIZE4,MAXBAS,0,L,M)
      CALL GETJP2(IP4,ISIZE4,NMODE,3,4,N,M,JCI2N,JCI2M,
     1NMAX,NSIZE4,MAXBAS,0,N,M)
C     NMAX1=MAXSUM(3,1)+3
C     NMAX2=MAXSUM(3,2)+3
      NMAX1=0
      NMAX2=0
      DO I=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(I,1)+3)
        NMAX2=MAX0(NMAX2,MAXSUM(I,2)+3)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI3K=MAXBFN(MAXBAS,NMODE,K,3)
      JCI3L=MAXBFN(MAXBAS,NMODE,L,3)
      JCI3N=MAXBFN(MAXBAS,NMODE,N,3)
      JCI3M=MAXBFN(MAXBAS,NMODE,M,3)
      CALL GETJP3(IP4,ISIZE4,NMODE,1,2,3,K,L,N,JCI3K,
     1JCI3L,JCI3N,NMAX,NSIZE4,MAXBAS,0,K,L,N)
      CALL GETJP3(IP4,ISIZE4,NMODE,1,2,4,K,L,M,JCI3K,
     1JCI3L,JCI3M,NMAX,NSIZE4,MAXBAS,0,K,L,M)
      CALL GETJP3(IP4,ISIZE4,NMODE,1,3,4,K,N,M,JCI3K,
     1JCI3N,JCI3M,NMAX,NSIZE4,MAXBAS,0,K,N,M)
      CALL GETJP3(IP4,ISIZE4,NMODE,2,3,4,L,N,M,JCI3L,
     1JCI3N,JCI3M,NMAX,NSIZE4,MAXBAS,0,L,N,M)
C     NMAX1=MAXSUM(4,1)+4
C     NMAX2=MAXSUM(4,2)+4
      NMAX1=0
      NMAX2=0
      DO I=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(I,1)+4)
        NMAX2=MAX0(NMAX2,MAXSUM(I,2)+4)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI4K=MAXBFN(MAXBAS,NMODE,K,4)
      JCI4L=MAXBFN(MAXBAS,NMODE,L,4)
      JCI4N=MAXBFN(MAXBAS,NMODE,N,4)
      JCI4M=MAXBFN(MAXBAS,NMODE,M,4)
      CALL GETJP4(IP4,ISIZE4,NMODE,1,2,3,4,K,L,N,M,JCI4K,
     1JCI4L,JCI4N,JCI4M,NMAX,NSIZE4,MAXBAS,0,K,L,N,M)
!      write(iout,*) 'NSIZE4 after GETJP4', nsize4 ! for debug
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE GETBP5(IP5,ISIZE5,NMODE,K,L,N,M,MTAU,MAXBAS,NSIZE5,
     1IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION MAXBAS(NMODE,5),IP5(ISIZE5,NMODE)
      COMMON/BASIS/NBAS(6,2),MAXSUM(6,2)
      COMMON/MXNMAX/MXNMAX,MAXJ
      COMMON/FILASS/IOUT,INP
      NSIZE5=1
C     NMAX1=MAXSUM(1,1)+1
C     NMAX2=MAXSUM(1,2)+1
      NMAX1=0
      NMAX2=0
      DO I=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(I,1)+1)
        NMAX2=MAX0(NMAX2,MAXSUM(I,2)+1)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI1K=MAXBFN(MAXBAS,NMODE,K,1)
      JCI1L=MAXBFN(MAXBAS,NMODE,L,1)
      JCI1N=MAXBFN(MAXBAS,NMODE,N,1)
      JCI1M=MAXBFN(MAXBAS,NMODE,M,1)
      JCI1MT=MAXBFN(MAXBAS,NMODE,MTAU,1)
      CALL GETJP1(IP5,ISIZE5,NMODE,1,K,JCI1K,NMAX,NSIZE5,MAXBAS,5,
     1K)
      CALL GETJP1(IP5,ISIZE5,NMODE,2,L,JCI1L,NMAX,NSIZE5,MAXBAS,0,
     1L)
      CALL GETJP1(IP5,ISIZE5,NMODE,3,N,JCI1N,NMAX,NSIZE5,MAXBAS,0,
     1N)
      CALL GETJP1(IP5,ISIZE5,NMODE,4,M,JCI1M,NMAX,NSIZE5,MAXBAS,0,
     1M)
      CALL GETJP1(IP5,ISIZE5,NMODE,5,MTAU,JCI1MT,NMAX,NSIZE5,MAXBAS,0,
     1MTAU)
C     NMAX1=MAXSUM(2,1)+2
C     NMAX2=MAXSUM(2,2)+2
      NMAX1=0
      NMAX2=0
      DO I=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(I,1)+2)
        NMAX2=MAX0(NMAX2,MAXSUM(I,2)+2)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI2K=MAXBFN(MAXBAS,NMODE,K,2)
      JCI2L=MAXBFN(MAXBAS,NMODE,L,2)
      JCI2N=MAXBFN(MAXBAS,NMODE,N,2)
      JCI2M=MAXBFN(MAXBAS,NMODE,M,2)
      JCI2MT=MAXBFN(MAXBAS,NMODE,MTAU,2)
      CALL GETJP2(IP5,ISIZE5,NMODE,1,2,K,L,JCI2K,JCI2L,
     1NMAX,NSIZE5,MAXBAS,0,K,L)
      CALL GETJP2(IP5,ISIZE5,NMODE,1,3,K,N,JCI2K,JCI2N,
     1NMAX,NSIZE5,MAXBAS,0,K,N)
      CALL GETJP2(IP5,ISIZE5,NMODE,1,4,K,M,JCI2K,JCI2M,
     1NMAX,NSIZE5,MAXBAS,0,K,M)
      CALL GETJP2(IP5,ISIZE5,NMODE,1,5,K,MTAU,JCI2K,JCI2MT,
     1NMAX,NSIZE5,MAXBAS,0,K,MTAU)
      CALL GETJP2(IP5,ISIZE5,NMODE,2,3,L,N,JCI2L,JCI2N,
     1NMAX,NSIZE5,MAXBAS,0,L,N)
      CALL GETJP2(IP5,ISIZE5,NMODE,2,4,L,M,JCI2L,JCI2M,
     1NMAX,NSIZE5,MAXBAS,0,L,M)
      CALL GETJP2(IP5,ISIZE5,NMODE,2,5,L,MTAU,JCI2L,JCI2MT,
     1NMAX,NSIZE5,MAXBAS,0,L,MTAU)
      CALL GETJP2(IP5,ISIZE5,NMODE,3,4,N,M,JCI2N,JCI2M,
     1NMAX,NSIZE5,MAXBAS,0,N,M)
      CALL GETJP2(IP5,ISIZE5,NMODE,3,5,N,MTAU,JCI2N,JCI2MT,
     1NMAX,NSIZE5,MAXBAS,0,N,MTAU)
      CALL GETJP2(IP5,ISIZE5,NMODE,4,5,M,MTAU,JCI2M,JCI2MT,
     1NMAX,NSIZE5,MAXBAS,0,M,MTAU)
C     NMAX1=MAXSUM(3,1)+3
C     NMAX2=MAXSUM(3,2)+3
      NMAX1=0
      NMAX2=0
      DO I=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(I,1)+3)
        NMAX2=MAX0(NMAX2,MAXSUM(I,2)+3)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI3K=MAXBFN(MAXBAS,NMODE,K,3)
      JCI3L=MAXBFN(MAXBAS,NMODE,L,3)
      JCI3N=MAXBFN(MAXBAS,NMODE,N,3)
      JCI3M=MAXBFN(MAXBAS,NMODE,M,3)
      JCI3MT=MAXBFN(MAXBAS,NMODE,MTAU,3)
      CALL GETJP3(IP5,ISIZE5,NMODE,1,2,3,K,L,N,JCI3K,
     1JCI3L,JCI3N,NMAX,NSIZE5,MAXBAS,0,K,L,N)
      CALL GETJP3(IP5,ISIZE5,NMODE,1,2,4,K,L,M,JCI3K,
     1JCI3L,JCI3M,NMAX,NSIZE5,MAXBAS,0,K,L,M)
      CALL GETJP3(IP5,ISIZE5,NMODE,1,2,5,K,L,MTAU,JCI3K,
     1JCI3L,JCI3MT,NMAX,NSIZE5,MAXBAS,0,K,L,MTAU)
      CALL GETJP3(IP5,ISIZE5,NMODE,1,3,4,K,N,M,JCI3K,
     1JCI3N,JCI3M,NMAX,NSIZE5,MAXBAS,0,K,N,M)
      CALL GETJP3(IP5,ISIZE5,NMODE,1,3,5,K,N,MTAU,JCI3K,
     1JCI3N,JCI3MT,NMAX,NSIZE5,MAXBAS,0,K,N,MTAU)
      CALL GETJP3(IP5,ISIZE5,NMODE,1,4,5,K,M,MTAU,JCI3K,
     1JCI3M,JCI3MT,NMAX,NSIZE5,MAXBAS,0,K,M,MTAU)
      CALL GETJP3(IP5,ISIZE5,NMODE,2,3,4,L,N,M,JCI3L,
     1JCI3N,JCI3M,NMAX,NSIZE5,MAXBAS,0,L,N,M)
      CALL GETJP3(IP5,ISIZE5,NMODE,2,3,5,L,N,MTAU,JCI3L,
     1JCI3N,JCI3MT,NMAX,NSIZE5,MAXBAS,0,L,N,MTAU)
      CALL GETJP3(IP5,ISIZE5,NMODE,2,4,5,L,M,MTAU,JCI3L,
     1JCI3M,JCI3MT,NMAX,NSIZE5,MAXBAS,0,L,M,MTAU)
      CALL GETJP3(IP5,ISIZE5,NMODE,3,4,5,N,M,MTAU,JCI3N,
     1JCI3M,JCI3MT,NMAX,NSIZE5,MAXBAS,0,N,M,MTAU)
C     NMAX1=MAXSUM(4,1)+4
C     NMAX2=MAXSUM(4,2)+4
      NMAX1=0
      NMAX2=0
      DO I=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(I,1)+4)
        NMAX2=MAX0(NMAX2,MAXSUM(I,2)+4)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI4K=MAXBFN(MAXBAS,NMODE,K,4)
      JCI4L=MAXBFN(MAXBAS,NMODE,L,4)
      JCI4N=MAXBFN(MAXBAS,NMODE,N,4)
      JCI4M=MAXBFN(MAXBAS,NMODE,M,4)
      JCI4MT=MAXBFN(MAXBAS,NMODE,MTAU,4)
      CALL GETJP4(IP5,ISIZE5,NMODE,1,2,3,4,K,L,N,M,JCI4K,
     1JCI4L,JCI4N,JCI4M,NMAX,NSIZE5,MAXBAS,0,K,L,N,M)
      CALL GETJP4(IP5,ISIZE5,NMODE,1,2,3,5,K,L,N,MTAU,JCI4K,
     1JCI4L,JCI4N,JCI4MT,NMAX,NSIZE5,MAXBAS,0,K,L,N,MTAU)
      CALL GETJP4(IP5,ISIZE5,NMODE,1,2,4,5,K,L,M,MTAU,JCI4K,
     1JCI4L,JCI4M,JCI4MT,NMAX,NSIZE5,MAXBAS,0,K,L,M,MTAU)
      CALL GETJP4(IP5,ISIZE5,NMODE,1,3,4,5,K,N,M,MTAU,JCI4K,
     1JCI4N,JCI4M,JCI4MT,NMAX,NSIZE5,MAXBAS,0,K,N,M,MTAU)
      CALL GETJP4(IP5,ISIZE5,NMODE,2,3,4,5,L,N,M,MTAU,JCI4L,
     1JCI4N,JCI4M,JCI4MT,NMAX,NSIZE5,MAXBAS,0,L,N,M,MTAU)
C     NMAX1=MAXSUM(5,1)+5
C     NMAX2=MAXSUM(5,2)+5
      NMAX1=0
      NMAX2=0
      DO I=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(I,1)+5)
        NMAX2=MAX0(NMAX2,MAXSUM(I,2)+5)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI5K=MAXBFN(MAXBAS,NMODE,K,5)
      JCI5L=MAXBFN(MAXBAS,NMODE,L,5)
      JCI5N=MAXBFN(MAXBAS,NMODE,N,5)
      JCI5M=MAXBFN(MAXBAS,NMODE,M,5)
      JCI5MT=MAXBFN(MAXBAS,NMODE,MTAU,5)
      CALL GETJP5(IP5,ISIZE5,NMODE,1,2,3,4,5,K,L,N,M,MTAU,JCI5K,
     1JCI5L,JCI5N,JCI5M,JCI5MT,NMAX,NSIZE5,MAXBAS,0,K,L,N,M,MTAU)
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE GETBP6(IP6,ISIZE6,NMODE,K,L,N,M,J,I,MAXBAS,NSIZE6,
     1IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION MAXBAS(NMODE,6),IP6(ISIZE6,NMODE)
      COMMON/BASIS/NBAS(6,2),MAXSUM(6,2)
      COMMON/MXNMAX/MXNMAX,MAXJ
      COMMON/FILASS/IOUT,INP
      NSIZE6=1
C     NMAX1=MAXSUM(1,1)+1
C     NMAX2=MAXSUM(1,2)+1
      NMAX1=0
      NMAX2=0
      DO II=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(II,1)+1)
        NMAX2=MAX0(NMAX2,MAXSUM(II,2)+1)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI1K=MAXBFN(MAXBAS,NMODE,K,1)
      JCI1L=MAXBFN(MAXBAS,NMODE,L,1)
      JCI1N=MAXBFN(MAXBAS,NMODE,N,1)
      JCI1M=MAXBFN(MAXBAS,NMODE,M,1)
      JCI1J=MAXBFN(MAXBAS,NMODE,J,1)
      JCI1I=MAXBFN(MAXBAS,NMODE,I,1)
      CALL GETJP1(IP6,ISIZE6,NMODE,1,K,JCI1K,NMAX,NSIZE6,MAXBAS,6,
     1K)
      CALL GETJP1(IP6,ISIZE6,NMODE,2,L,JCI1L,NMAX,NSIZE6,MAXBAS,0,
     1L)
      CALL GETJP1(IP6,ISIZE6,NMODE,3,N,JCI1N,NMAX,NSIZE6,MAXBAS,0,
     1N)
      CALL GETJP1(IP6,ISIZE6,NMODE,4,M,JCI1M,NMAX,NSIZE6,MAXBAS,0,
     1M)
      CALL GETJP1(IP6,ISIZE6,NMODE,5,J,JCI1J,NMAX,NSIZE6,MAXBAS,0,
     1J)
      CALL GETJP1(IP6,ISIZE6,NMODE,6,I,JCI1I,NMAX,NSIZE6,MAXBAS,0,
     1I)
C     NMAX1=MAXSUM(2,1)+2
C     NMAX2=MAXSUM(2,2)+2
      NMAX1=0
      NMAX2=0
      DO II=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(II,1)+2)
        NMAX2=MAX0(NMAX2,MAXSUM(II,2)+2)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI2K=MAXBFN(MAXBAS,NMODE,K,2)
      JCI2L=MAXBFN(MAXBAS,NMODE,L,2)
      JCI2N=MAXBFN(MAXBAS,NMODE,N,2)
      JCI2M=MAXBFN(MAXBAS,NMODE,M,2)
      JCI2J=MAXBFN(MAXBAS,NMODE,J,2)
      JCI2I=MAXBFN(MAXBAS,NMODE,I,2)
      CALL GETJP2(IP6,ISIZE6,NMODE,1,2,K,L,JCI2K,JCI2L,
     1NMAX,NSIZE6,MAXBAS,0,K,L)
      CALL GETJP2(IP6,ISIZE6,NMODE,1,3,K,N,JCI2K,JCI2N,
     1NMAX,NSIZE6,MAXBAS,0,K,N)
      CALL GETJP2(IP6,ISIZE6,NMODE,1,4,K,M,JCI2K,JCI2M,
     1NMAX,NSIZE6,MAXBAS,0,K,M)
      CALL GETJP2(IP6,ISIZE6,NMODE,1,5,K,J,JCI2K,JCI2J,
     1NMAX,NSIZE6,MAXBAS,0,K,J)
      CALL GETJP2(IP6,ISIZE6,NMODE,1,6,K,I,JCI2K,JCI2I,
     1NMAX,NSIZE6,MAXBAS,0,K,I)
      CALL GETJP2(IP6,ISIZE6,NMODE,2,3,L,N,JCI2L,JCI2N,
     1NMAX,NSIZE6,MAXBAS,0,L,N)
      CALL GETJP2(IP6,ISIZE6,NMODE,2,4,L,M,JCI2L,JCI2M,
     1NMAX,NSIZE6,MAXBAS,0,L,M)
      CALL GETJP2(IP6,ISIZE6,NMODE,2,5,L,J,JCI2L,JCI2J,
     1NMAX,NSIZE6,MAXBAS,0,L,J)
      CALL GETJP2(IP6,ISIZE6,NMODE,2,6,L,I,JCI2L,JCI2I,
     1NMAX,NSIZE6,MAXBAS,0,L,I)
      CALL GETJP2(IP6,ISIZE6,NMODE,3,4,N,M,JCI2N,JCI2M,
     1NMAX,NSIZE6,MAXBAS,0,N,M)
      CALL GETJP2(IP6,ISIZE6,NMODE,3,5,N,J,JCI2N,JCI2J,
     1NMAX,NSIZE6,MAXBAS,0,N,J)
      CALL GETJP2(IP6,ISIZE6,NMODE,3,6,N,I,JCI2N,JCI2I,
     1NMAX,NSIZE6,MAXBAS,0,N,I)
      CALL GETJP2(IP6,ISIZE6,NMODE,4,5,M,J,JCI2M,JCI2J,
     1NMAX,NSIZE6,MAXBAS,0,M,J)
      CALL GETJP2(IP6,ISIZE6,NMODE,4,6,M,I,JCI2M,JCI2I,
     1NMAX,NSIZE6,MAXBAS,0,M,I)
      CALL GETJP2(IP6,ISIZE6,NMODE,5,6,J,I,JCI2J,JCI2I,
     1NMAX,NSIZE6,MAXBAS,0,J,I)
C     NMAX1=MAXSUM(3,1)+3
C     NMAX2=MAXSUM(3,2)+3
      NMAX1=0
      NMAX2=0
      DO II=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(II,1)+3)
        NMAX2=MAX0(NMAX2,MAXSUM(II,2)+3)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI3K=MAXBFN(MAXBAS,NMODE,K,3)
      JCI3L=MAXBFN(MAXBAS,NMODE,L,3)
      JCI3N=MAXBFN(MAXBAS,NMODE,N,3)
      JCI3M=MAXBFN(MAXBAS,NMODE,M,3)
      JCI3J=MAXBFN(MAXBAS,NMODE,J,3)
      JCI3I=MAXBFN(MAXBAS,NMODE,I,3)
      CALL GETJP3(IP6,ISIZE6,NMODE,1,2,3,K,L,N,JCI3K,
     1JCI3L,JCI3N,NMAX,NSIZE6,MAXBAS,0,K,L,N)
      CALL GETJP3(IP6,ISIZE6,NMODE,1,2,4,K,L,M,JCI3K,
     1JCI3L,JCI3M,NMAX,NSIZE6,MAXBAS,0,K,L,M)
      CALL GETJP3(IP6,ISIZE6,NMODE,1,2,5,K,L,J,JCI3K,
     1JCI3L,JCI3J,NMAX,NSIZE6,MAXBAS,0,K,L,J)
      CALL GETJP3(IP6,ISIZE6,NMODE,1,2,6,K,L,I,JCI3K,
     1JCI3L,JCI3I,NMAX,NSIZE6,MAXBAS,0,K,L,I)
      CALL GETJP3(IP6,ISIZE6,NMODE,1,3,4,K,N,M,JCI3K,
     1JCI3N,JCI3M,NMAX,NSIZE6,MAXBAS,0,K,N,M)
      CALL GETJP3(IP6,ISIZE6,NMODE,1,3,5,K,N,J,JCI3K,
     1JCI3N,JCI3J,NMAX,NSIZE6,MAXBAS,0,K,N,J)
      CALL GETJP3(IP6,ISIZE6,NMODE,1,3,6,K,N,I,JCI3K,
     1JCI3N,JCI3I,NMAX,NSIZE6,MAXBAS,0,K,N,I)
      CALL GETJP3(IP6,ISIZE6,NMODE,1,4,5,K,M,J,JCI3K,
     1JCI3M,JCI3J,NMAX,NSIZE6,MAXBAS,0,K,M,J)
      CALL GETJP3(IP6,ISIZE6,NMODE,1,4,6,K,M,I,JCI3K,
     1JCI3M,JCI3I,NMAX,NSIZE6,MAXBAS,0,K,M,I)
      CALL GETJP3(IP6,ISIZE6,NMODE,1,5,6,K,J,I,JCI3K,
     1JCI3J,JCI3I,NMAX,NSIZE6,MAXBAS,0,K,J,I)
      CALL GETJP3(IP6,ISIZE6,NMODE,2,3,4,L,N,M,JCI3L,
     1JCI3N,JCI3M,NMAX,NSIZE6,MAXBAS,0,L,N,M)
      CALL GETJP3(IP6,ISIZE6,NMODE,2,3,5,L,N,J,JCI3L,
     1JCI3N,JCI3J,NMAX,NSIZE6,MAXBAS,0,L,N,J)
      CALL GETJP3(IP6,ISIZE6,NMODE,2,3,6,L,N,I,JCI3L,
     1JCI3N,JCI3I,NMAX,NSIZE6,MAXBAS,0,L,N,I)
      CALL GETJP3(IP6,ISIZE6,NMODE,2,4,5,L,M,J,JCI3L,
     1JCI3M,JCI3J,NMAX,NSIZE6,MAXBAS,0,L,M,J)
      CALL GETJP3(IP6,ISIZE6,NMODE,2,4,6,L,M,I,JCI3L,
     1JCI3M,JCI3I,NMAX,NSIZE6,MAXBAS,0,L,M,I)
      CALL GETJP3(IP6,ISIZE6,NMODE,2,5,6,L,J,I,JCI3L,
     1JCI3J,JCI3I,NMAX,NSIZE6,MAXBAS,0,L,J,I)
      CALL GETJP3(IP6,ISIZE6,NMODE,3,4,5,N,M,J,JCI3N,
     1JCI3M,JCI3J,NMAX,NSIZE6,MAXBAS,0,N,M,J)
      CALL GETJP3(IP6,ISIZE6,NMODE,3,4,6,N,M,I,JCI3N,
     1JCI3M,JCI3I,NMAX,NSIZE6,MAXBAS,0,N,M,I)
      CALL GETJP3(IP6,ISIZE6,NMODE,3,5,6,N,J,I,JCI3N,
     1JCI3J,JCI3I,NMAX,NSIZE6,MAXBAS,0,N,J,I)
      CALL GETJP3(IP6,ISIZE6,NMODE,4,5,6,M,J,I,JCI3M,
     1JCI3J,JCI3I,NMAX,NSIZE6,MAXBAS,0,M,J,I)
C     NMAX1=MAXSUM(4,1)+4
C     NMAX2=MAXSUM(4,2)+4
      NMAX1=0
      NMAX2=0
      DO II=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(II,1)+4)
        NMAX2=MAX0(NMAX2,MAXSUM(II,2)+4)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI4K=MAXBFN(MAXBAS,NMODE,K,4)
      JCI4L=MAXBFN(MAXBAS,NMODE,L,4)
      JCI4N=MAXBFN(MAXBAS,NMODE,N,4)
      JCI4M=MAXBFN(MAXBAS,NMODE,M,4)
      JCI4J=MAXBFN(MAXBAS,NMODE,J,4)
      JCI4I=MAXBFN(MAXBAS,NMODE,I,4)
      CALL GETJP4(IP6,ISIZE6,NMODE,1,2,3,4,K,L,N,M,JCI4K,
     1JCI4L,JCI4N,JCI4M,NMAX,NSIZE6,MAXBAS,0,K,L,N,M)
      CALL GETJP4(IP6,ISIZE6,NMODE,1,2,3,5,K,L,N,J,JCI4K,
     1JCI4L,JCI4N,JCI4J,NMAX,NSIZE6,MAXBAS,0,K,L,N,J)
      CALL GETJP4(IP6,ISIZE6,NMODE,1,2,3,6,K,L,N,I,JCI4K,
     1JCI4L,JCI4N,JCI4I,NMAX,NSIZE6,MAXBAS,0,K,L,N,I)
      CALL GETJP4(IP6,ISIZE6,NMODE,1,2,4,5,K,L,M,J,JCI4K,
     1JCI4L,JCI4M,JCI4J,NMAX,NSIZE6,MAXBAS,0,K,L,M,J)
      CALL GETJP4(IP6,ISIZE6,NMODE,1,2,4,6,K,L,M,I,JCI4K,
     1JCI4L,JCI4M,JCI4I,NMAX,NSIZE6,MAXBAS,0,K,L,M,I)
      CALL GETJP4(IP6,ISIZE6,NMODE,1,2,5,6,K,L,J,I,JCI4K,
     1JCI4L,JCI4J,JCI4I,NMAX,NSIZE6,MAXBAS,0,K,L,J,I)
      CALL GETJP4(IP6,ISIZE6,NMODE,1,3,4,5,K,N,M,J,JCI4K,
     1JCI4N,JCI4M,JCI4J,NMAX,NSIZE6,MAXBAS,0,K,N,M,J)
      CALL GETJP4(IP6,ISIZE6,NMODE,1,3,4,6,K,N,M,I,JCI4K,
     1JCI4N,JCI4M,JCI4I,NMAX,NSIZE6,MAXBAS,0,K,N,M,I)
      CALL GETJP4(IP6,ISIZE6,NMODE,1,3,5,6,K,N,J,I,JCI4K,
     1JCI4N,JCI4J,JCI4I,NMAX,NSIZE6,MAXBAS,0,K,N,J,I)
      CALL GETJP4(IP6,ISIZE6,NMODE,1,4,5,6,K,M,J,I,JCI4K,
     1JCI4M,JCI4J,JCI4I,NMAX,NSIZE6,MAXBAS,0,K,M,J,I)
      CALL GETJP4(IP6,ISIZE6,NMODE,2,3,4,5,L,N,M,J,JCI4L,
     1JCI4N,JCI4M,JCI4J,NMAX,NSIZE6,MAXBAS,0,L,N,M,J)
      CALL GETJP4(IP6,ISIZE6,NMODE,2,3,4,6,L,N,M,I,JCI4L,
     1JCI4N,JCI4M,JCI4I,NMAX,NSIZE6,MAXBAS,0,L,N,M,I)
      CALL GETJP4(IP6,ISIZE6,NMODE,2,3,5,6,L,N,J,I,JCI4L,
     1JCI4N,JCI4J,JCI4I,NMAX,NSIZE6,MAXBAS,0,L,N,J,I)
      CALL GETJP4(IP6,ISIZE6,NMODE,2,4,5,6,L,M,J,I,JCI4L,
     1JCI4M,JCI4J,JCI4I,NMAX,NSIZE6,MAXBAS,0,L,M,J,I)
      CALL GETJP4(IP6,ISIZE6,NMODE,3,4,5,6,N,M,J,I,JCI4N,
     1JCI4M,JCI4J,JCI4I,NMAX,NSIZE6,MAXBAS,0,N,M,J,I)
C     NMAX1=MAXSUM(5,1)+5
C     NMAX2=MAXSUM(5,2)+5
      NMAX1=0
      NMAX2=0
      DO II=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(II,1)+5)
        NMAX2=MAX0(NMAX2,MAXSUM(II,2)+5)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI5K=MAXBFN(MAXBAS,NMODE,K,5)
      JCI5L=MAXBFN(MAXBAS,NMODE,L,5)
      JCI5N=MAXBFN(MAXBAS,NMODE,N,5)
      JCI5M=MAXBFN(MAXBAS,NMODE,M,5)
      JCI5J=MAXBFN(MAXBAS,NMODE,J,5)
      JCI5I=MAXBFN(MAXBAS,NMODE,I,5)
      CALL GETJP5(IP6,ISIZE6,NMODE,1,2,3,4,5,K,L,N,M,J,JCI5K,
     1JCI5L,JCI5N,JCI5M,JCI5J,NMAX,NSIZE6,MAXBAS,0,K,L,N,M,J)
      CALL GETJP5(IP6,ISIZE6,NMODE,1,2,3,4,6,K,L,N,M,I,JCI5K,
     1JCI5L,JCI5N,JCI5M,JCI5I,NMAX,NSIZE6,MAXBAS,0,K,L,N,M,I)
      CALL GETJP5(IP6,ISIZE6,NMODE,1,2,3,5,6,K,L,N,J,I,JCI5K,
     1JCI5L,JCI5N,JCI5J,JCI5I,NMAX,NSIZE6,MAXBAS,0,K,L,N,J,I)
      CALL GETJP5(IP6,ISIZE6,NMODE,1,2,4,5,6,K,L,M,J,I,JCI5K,
     1JCI5L,JCI5M,JCI5J,JCI5I,NMAX,NSIZE6,MAXBAS,0,K,L,M,J,I)
      CALL GETJP5(IP6,ISIZE6,NMODE,1,3,4,5,6,K,N,M,J,I,JCI5K,
     1JCI5N,JCI5M,JCI5J,JCI5I,NMAX,NSIZE6,MAXBAS,0,K,N,M,J,I)
      CALL GETJP5(IP6,ISIZE6,NMODE,2,3,4,5,6,L,N,M,J,I,JCI5L,
     1JCI5N,JCI5M,JCI5J,JCI5I,NMAX,NSIZE6,MAXBAS,0,L,N,M,J,I)
C     NMAX1=MAXSUM(6,1)+6
C     NMAX2=MAXSUM(6,2)+6
      NMAX1=0
      NMAX2=0
      DO II=1,MAXJ
        NMAX1=MAX0(NMAX1,MAXSUM(II,1)+6)
        NMAX2=MAX0(NMAX2,MAXSUM(II,2)+6)
      END DO
      NMAX=MAX0(NMAX1,NMAX2)
      JCI6K=MAXBFN(MAXBAS,NMODE,K,6)
      JCI6L=MAXBFN(MAXBAS,NMODE,L,6)
      JCI6N=MAXBFN(MAXBAS,NMODE,N,6)
      JCI6M=MAXBFN(MAXBAS,NMODE,M,6)
      JCI6J=MAXBFN(MAXBAS,NMODE,J,6)
      JCI6I=MAXBFN(MAXBAS,NMODE,I,6)
      CALL GETJP6(IP6,ISIZE6,NMODE,1,2,3,4,5,6,K,L,N,M,J,I,JCI6K,
     1JCI6L,JCI6N,JCI6M,JCI6J,JCI6I,NMAX,NSIZE6,MAXBAS,0,K,L,N,M,J,I)
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE GETJP0(IP,ISIZE,NMODE)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION IP(ISIZE,NMODE)
      DO I=1,ISIZE
        DO K=1,NMODE
          IP(I,K)=1
        END DO
      END DO
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE GETJP1(JP1,JSIZE1,NMODE,NVMOD1,K,JCI,NMAX,ITOT1,
     1MAXBAS,NVMODE,KK)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION JP1(JSIZE1,NVMODE),MAXBAS(NMODE,1)
      COMMON/FILASS/IOUT,INP
      IF((K.EQ.1.AND.NVMODE.NE.0).OR.NVMOD1.EQ.1)THEN
C**ZERO POINT BASIS
        DO J=1,NVMODE
          DO I=1,JSIZE1
            JP1(I,J)=1
          END DO
        END DO
      END IF
      DO I1=2,JCI
        IF(I1.GT.MAXBAS(KK,1))GO TO 100
        IF(I1.GT.NMAX)GO TO 100
        ITOT1=ITOT1+1
        IF(NVMOD1.EQ.1)THEN
          JP1(ITOT1,NVMOD1)=I1
        ELSE
          IF(NVMODE.NE.0)THEN
            JP1(ITOT1,K)=I1
          ELSE
            JP1(ITOT1,NVMOD1)=I1
          END IF
        END IF
100     CONTINUE
      END DO
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE GETJP2(JP2,JSIZE2,NMODE,NVMOD1,NVMOD2,K,L,JCI1,JCI2,
     1NMAX,ITOT2,MAXBAS,NVMODE,KK,LL)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION JP2(JSIZE2,NVMOD2),MAXBAS(NMODE,2)
      COMMON/FILASS/IOUT,INP
      IF((K.EQ.2.AND.L.EQ.1).AND.NVMODE.NE.0)THEN
        DO J=1,NVMODE
          DO I=1,JSIZE2
            JP2(I,J)=1
          END DO
        END DO
      END IF
      DO I1=2,JCI1
        IF(I1.GT.MAXBAS(KK,2))GO TO 101
        DO I2=2,JCI2
          IF(I2.GT.MAXBAS(LL,2))GO TO 100
          IF(I1+I2.GT.NMAX)GO TO 100
          ITOT2=ITOT2+1
          IF(NVMODE.EQ.0)THEN
            JP2(ITOT2,NVMOD1)=I1
            JP2(ITOT2,NVMOD2)=I2
          ELSE
            JP2(ITOT2,K)=I1
            JP2(ITOT2,L)=I2
          END IF
100       CONTINUE
        END DO
101     CONTINUE
      END DO
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE GETJP3(JP3,JSIZE3,NMODE,NVMOD1,NVMOD2,NVMOD3,K,L,N,
     1JCI1,JCI2,JCI3,NMAX,ITOT3,MAXBAS,NVMODE,KK,LL,NN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION JP3(JSIZE3,NVMOD3),MAXBAS(NMODE,3)
      COMMON/FILASS/IOUT,INP
      IF((K.EQ.3.AND.L.EQ.2.AND.N.EQ.1).AND.NVMODE.NE.0)THEN
        DO J=1,NVMODE
          DO I=1,JSIZE3
            JP3(I,J)=1
          END DO
        END DO
      END IF
      DO I1=2,JCI1
        IF(I1.GT.MAXBAS(KK,3))GO TO 102
        DO I2=2,JCI2
          IF(I2.GT.MAXBAS(LL,3))GO TO 101
          DO I3=2,JCI3
            IF(I3.GT.MAXBAS(NN,3))GO TO 100
            IF(I1+I2+I3.GT.NMAX)GO TO 100
            ITOT3=ITOT3+1
            IF(NVMODE.EQ.0)THEN
              JP3(ITOT3,NVMOD1)=I1
              JP3(ITOT3,NVMOD2)=I2
              JP3(ITOT3,NVMOD3)=I3
            ELSE
              JP3(ITOT3,K)=I1
              JP3(ITOT3,L)=I2
              JP3(ITOT3,N)=I3
            END IF
100         CONTINUE
          END DO
101       CONTINUE
        END DO
102     CONTINUE
      END DO
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE GETJP4(JP4,JSIZE4,NMODE,NVMOD1,NVMOD2,NVMOD3,NVMOD4,K,
     1L,N,M,JCI1,JCI2,JCI3,JCI4,NMAX,ITOT4,MAXBAS,NVMODE,KK,LL,NN,MM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION JP4(JSIZE4,NVMOD4),MAXBAS(NMODE,4)
      COMMON/FILASS/IOUT
      IF((K.EQ.4.AND.L.EQ.3.AND.N.EQ.2.AND.M.EQ.1).AND.NVMODE.NE.0)THEN
        DO J=1,NVMODE
          DO I=1,JSIZE4
            JP4(I,J)=1
          END DO
        END DO
      END IF
      DO I1=2,JCI1
        IF(I1.GT.MAXBAS(KK,4))GO TO 103
        DO I2=2,JCI2
          IF(I2.GT.MAXBAS(LL,4))GO TO 102
          DO I3=2,JCI3
            IF(I3.GT.MAXBAS(NN,4))GO TO 101
            DO I4=2,JCI4
              IF(I4.GT.MAXBAS(MM,4))GO TO 100
              IF(I1+I2+I3+I4.GT.NMAX)GO TO 100
              ITOT4=ITOT4+1
              IF(NVMODE.EQ.0)THEN
                JP4(ITOT4,NVMOD1)=I1
                JP4(ITOT4,NVMOD2)=I2
                JP4(ITOT4,NVMOD3)=I3
                JP4(ITOT4,NVMOD4)=I4
              ELSE
                JP4(ITOT4,K)=I1
                JP4(ITOT4,L)=I2
                JP4(ITOT4,N)=I3
                JP4(ITOT4,M)=I4
              END IF
100           CONTINUE
            END DO
101         CONTINUE
          END DO
102       CONTINUE
        END DO
103     CONTINUE
      END DO
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE GETJP5(JP5,JSIZE5,NMODE,NVMOD1,NVMOD2,NVMOD3,NVMOD4,
     1NVMOD5,K,L,N,M,MTAU,JCI1,JCI2,JCI3,JCI4,JCI5,NMAX,ITOT5,MAXBAS,
     2NVMODE,KK,LL,NN,MM,MMTAU)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION JP5(JSIZE5,NVMOD5),MAXBAS(NMODE,5)
      COMMON/FILASS/IOUT
      IF((K.EQ.5.AND.L.EQ.4.AND.N.EQ.3.AND.M.EQ.2.AND.MTAU.EQ.1).AND.
     1NVMODE.NE.0)THEN
        DO J=1,NVMODE
          DO I=1,JSIZE5
            JP5(I,J)=1
          END DO
        END DO
      END IF
      DO I1=2,JCI1
        IF(I1.GT.MAXBAS(KK,5))GO TO 104
        DO I2=2,JCI2
          IF(I2.GT.MAXBAS(LL,5))GO TO 103
          DO I3=2,JCI3
            IF(I3.GT.MAXBAS(NN,5))GO TO 102
            DO I4=2,JCI4
              IF(I4.GT.MAXBAS(MM,5))GO TO 101
              DO I5=2,JCI5
                IF(I5.GT.MAXBAS(MMTAU,5))GO TO 100
                IF(I1+I2+I3+I4+I5.GT.NMAX)GO TO 100
                ITOT5=ITOT5+1
                IF(NVMODE.EQ.0)THEN
                  JP5(ITOT5,NVMOD1)=I1
                  JP5(ITOT5,NVMOD2)=I2
                  JP5(ITOT5,NVMOD3)=I3
                  JP5(ITOT5,NVMOD4)=I4
                  JP5(ITOT5,NVMOD5)=I5
                ELSE
                  JP5(ITOT5,K)=I1
                  JP5(ITOT5,L)=I2
                  JP5(ITOT5,N)=I3
                  JP5(ITOT5,M)=I4
                  JP5(ITOT5,MTAU)=I5
                END IF
100             CONTINUE
              END DO
101           CONTINUE
            END DO
102         CONTINUE
          END DO
103       CONTINUE
        END DO
104     CONTINUE
      END DO
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE GETJP6(JP6,JSIZE6,NMODE,NVMOD1,NVMOD2,NVMOD3,NVMOD4,
     1NVMOD5,NVMOD6,K,L,N,M,I,MTAU,JCI1,JCI2,JCI3,JCI4,JCI5,JCI6,NMAX,
     2ITOT6,MAXBAS,NVMODE,KK,LL,NN,MM,II,MMTAU)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION JP6(JSIZE6,NVMOD6),MAXBAS(NMODE,6)
      IF((K.EQ.6.AND.L.EQ.5.AND.N.EQ.4.AND.M.EQ.3.AND.I.EQ.2.AND.
     1MTAU.EQ.1).AND.NVMODE.NE.0)THEN
        DO J1=1,NVMODE
          DO J2=1,JSIZE6
            JP6(J2,J1)=1
          END DO
        END DO
      END IF
      DO I1=2,JCI1
        IF(I1.GT.MAXBAS(KK,6))GO TO 105
        DO I2=2,JCI2
          IF(I2.GT.MAXBAS(LL,6))GO TO 104
          DO I3=2,JCI3
            IF(I3.GT.MAXBAS(NN,6))GO TO 103
            DO I4=2,JCI4
              IF(I4.GT.MAXBAS(MM,6))GO TO 102
              DO I5=2,JCI5
                IF(I5.GT.MAXBAS(II,6))GO TO 101
                DO I6=2,JCI6
                  IF(I6.GT.MAXBAS(MMTAU,6))GO TO 100
                  IF(I1+I2+I3+I4+I5+I6.GT.NMAX)GO TO 100
                  ITOT6=ITOT6+1
                  IF(NVMODE.EQ.0)THEN
                    JP6(ITOT6,NVMOD1)=I1
                    JP6(ITOT6,NVMOD2)=I2
                    JP6(ITOT6,NVMOD3)=I3
                    JP6(ITOT6,NVMOD4)=I4
                    JP6(ITOT6,NVMOD5)=I5
                    JP6(ITOT6,NVMOD6)=I6
                  ELSE
                    JP6(ITOT6,K)=I1
                    JP6(ITOT6,L)=I2
                    JP6(ITOT6,N)=I3
                    JP6(ITOT6,M)=I4
                    JP6(ITOT6,I)=I5
                    JP6(ITOT6,MTAU)=I6
                  END IF
100               CONTINUE
                END DO
101             CONTINUE
              END DO
102           CONTINUE
            END DO
103         CONTINUE
          END DO
104       CONTINUE
        END DO
105     CONTINUE
      END DO
      RETURN
      END
C**************************************************************
C**TEMPORARY
      SUBROUTINE PRJP1(JP,JSIZE,NMODE,JTOT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION JP(JSIZE,NMODE)
      COMMON/FILASS/IOUT
      DO J=1,JTOT
        WRITE(IOUT,*)(JP(J,K),K=1,NMODE)
      END DO
      RETURN
      END
C**TEMPORARY
C**************************************************************
      SUBROUTINE GETJP(IP,ISIZE,JP,JSIZE,NMODE,ITOT,JTOT,LCONT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION IP(ISIZE,NMODE),JP(JSIZE,NMODE)
C**TEMPORARY (DIMENSIONS)
      COMMON/CONTS/NCONT,ICONT(2),JCONT(2,100),NCOUPL(2),NCOUPC(2)
C************************
      COMMON/FILASS/IOUT
      DO J=1,JTOT
        ITOT=ITOT+1
        DO K=1,NMODE
          IF(LCONT.NE.0)THEN
            KK=JCONT(LCONT,K)
          ELSE
            KK=K
          END IF
          IP(ITOT,KK)=JP(J,K)
        END DO
      END DO
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE PUTJP(JP,JSIZE,IP,ISIZE,NMODE,NS)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION IP(ISIZE,NMODE),JP(JSIZE,NMODE)
      COMMON/FILASS/IOUT,INP
      COMMON/CIDIAG/ICID,ICI,JCI
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      JTOT=0
      DO N=1,NS-1
        JTOT=JTOT+NTOT(N)
      END DO
      DO I=1,NTOT(NS)
        JTOT=JTOT+1
        DO K=1,NMODE
          IP(I,K)=JP(JTOT,K)
        END DO
      END DO
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE GETSZ(ISIZE,NMODE,JCI,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR,TRIAT
      COMMON/TYPE/LINEAR
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/TRIATO/TRIAT
      COMMON/VCIMAX/NMAX
      COMMON/FILASS/IOUT,INP
      NSIZE=0
      DO I=1,ISIZE
        NSUM=0
        DO K=1,NMODE
          INCR=JCI**(K-1)
          ITOT=JCI*INCR
          NPOS=1+MOD(I-1,ITOT)
          M=1+(NPOS-1)/INCR
          NSUM=NSUM+M
        END DO
        IF(NSUM.LE.NMAX)NSIZE=NSIZE+1
      END DO
      ISIZE=NSIZE
      IF(IND.EQ.0)RETURN
C**MODIFY ISIZE FOR 'LINEAR' (1-MODE)
      IF(NMODE.EQ.1)THEN
        DO I=1,JCI-1
          ISIZE=ISIZE+I
        END DO
      END IF
C**MODIFY ISIZE FOR 'LINEAR' (2-MODES)
      IF(NMODE.EQ.2)THEN
        DO I=1,JCI
          DO J=1,JCI
            NSUM=I+J
            IF(NSUM.LE.NMAX)THEN
              ISIZE=ISIZE+J-1
            END IF
          END DO
        END DO
      END IF
C**MODIFY ISIZE FOR 'LINEAR' (3-MODES)
      IF(NMODE.EQ.3)THEN
        DO I=1,JCI
          DO J=1,JCI
            DO K=1,JCI
              NSUM=I+J+K
              IF(NSUM.LE.NMAX)THEN
                ISIZE=ISIZE+K-1
              END IF
            END DO
          END DO
        END DO
      END IF
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE GETIP(IP,JP,ISIZE,JSIZE,KSIZE,NMODE,JCI,ICI,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR,TRIAT
      DIMENSION IP(ISIZE,NMODE),JP(JSIZE,NMODE)
      DIMENSION MSYM(8),JSYM(8,50),MTOT(4)
      COMMON/FILASS/IOUT,INP
      COMMON/TYPE/LINEAR
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/DUMP/JDUMP(10),IDUMP,KDUMP,MDUMP,LDUMP
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MATSIZ/MATSIZ
      COMMON/TRIATO/TRIAT
      COMMON/VCIMAX/NMAX
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/CONTS/NCONT,ICONT(2),JCONT(2,100),NCOUPL(2),NCOUPC(2)
      COMMON/TOTALS/ITOT1(2),ITOT2(2),ITOT3(2),ITOT4(2),ITOT5(2),
     1ITOT6(2),ITOT
C**TEMPORARY (DIMENSIONS)
      COMMON/MAXLAN/LANMAX,LLAN20,INP20,LANCUT,LAN12D,NTOTL1(10),
     1NTOTL2(10),NTOTL3(10),LANDUM,TOLCUT
C************************
      IF(ICI.LT.0)THEN
        IF(NMAX.LE.0)THEN
          DO K=1,NMODE
            IDO=JCI**(NMODE-K)
            JDO=JCI**(K-1)
            NSIZE=0
            DO L=1,IDO
              DO J=1,JCI
                DO N=1,JDO
                  NSIZE=NSIZE+1
                  JP(NSIZE,K)=J
                END DO
              END DO
            END DO
          END DO
        ELSE
          NSIZE=0
          DO I=1,KSIZE
            NSUM=0
            DO K=1,NMODE
              INCR=JCI**(K-1)
              ITOT=JCI*INCR
              NPOS=1+MOD(I-1,ITOT)
              M=1+(NPOS-1)/INCR
              IP(1,K)=M
              NSUM=NSUM+M
            END DO
            IF(NSUM.LE.NMAX)THEN
              NSIZE=NSIZE+1
              DO K=1,NMODE
                JP(NSIZE,K)=IP(1,K)
              END DO
            END IF
          END DO
        END IF
        DO K=1,NMODE
          DO I=1,NSIZE
            IP(I,K)=JP(I,K)
          END DO
        END DO
C***************************************************************
C*****************************************MODIFY BASIS IF LINEAR
C***************************************************************
        IF(IND.NE.0)THEN
C**LSIZE CONTAINS RUNNING TOTAL
          LSIZE=NSIZE
C**KEEP CURRENT POSITION IN 'I'
          I=1
C**TOTAL OF NSIZE TO LOOK AT
          DO IDUM=1,NSIZE
C**ONLY GETTING TOTALS IF IND<0
            IF(IND.LT.0)I=IDUM
            JTOT=0
C**NONLIN + LINBND STOPS AT NVMODE
            DO J=NONLIN+1,NONLIN+LINBND
              JTOT=JTOT+IP(I,J)
            END DO
C**SUM OF LINEAR QUANTA MUST BE EVEN IF J=0
            IF(MOD(JTOT,2).NE.0)THEN
C**CURRENT NOT WANTED
              IF(IND.GT.0)THEN
C**MOVE DOWN ONE PLACE - 'I' IS CURRENT, LSIZE IS TOTAL
                DO JDUM=I+1,LSIZE
                  DO J=1,NVMODE
                    IP(JDUM-1,J)=IP(JDUM,J)
                  END DO
                END DO
              END IF
C**REDUCE TOTAL SIZE
              LSIZE=LSIZE-1
            ELSE
C**IF SUM IS EVEN, THERE MAY BE MORE THAN ONE 'TAU' POSSIBILITY
              ITOT=100000
              DO J=NONLIN+1,NONLIN+LINBND
C**BASED ON MINIMUM QUANTUM ITOT
                IF(IP(I,J)-1.LT.ITOT)ITOT=IP(I,J)-1
              END DO
C**IF MINIMUM QUANTUM IS EVEN, COS(0.TAU) EXISTS ON ITS OWN
              IF(MOD(ITOT,2).EQ.0.AND.IND.GT.0)THEN
                DO J=NONLIN+1,NONLIN+LINBND
C**MODIFY LINEAR-BEND QUANTA (DON'T UPDATE LSIZE)
                  IP(I,J)=((IP(I,J)-1)/2)+1
                END DO
C**SET POINTER TO COS(0.TAU)
                IP(I,NNMODE)=1
                I=I+1
              END IF
C**BUT COULD BE MORE
              IEXTRA=(ITOT+1)/2
              IF(IEXTRA.NE.0)THEN
C**SIN(L.TAU) AND COS(L.TAU) FOR EACH EXTRA 'L'
                DO L=1,IEXTRA
                  IF(MOD(ITOT,2).EQ.0)THEN
C**EVEN QUANTA - ALREADY DONE COS(0.TAU)
                    IF(IND.GT.0)THEN
C**NEED SIN (KDUM=1) AND COS (KDUM=2)
                      DO KDUM=1,2
C**MOVE UP ONE PLACE - 'I-1' IS CURRENT, LSIZE IS TOTAL
                        DO JDUM=I,LSIZE
                          MM=LSIZE-JDUM+I
                          DO J=1,NVMODE
C**MOVE LSIZE INTO LSIZE+1
                            IP(MM+1,J)=IP(MM,J)
                          END DO
                        END DO
C**COPY NON-LINEAR QUANTA
                        DO J=1,NONLIN
                          IP(I,J)=IP(I-1,J)
                        END DO
C**GENERATE NON-LINEAR QUANTA FOR NEXT HIGHER TAU
                        DO J=NONLIN+1,NONLIN+LINBND
C**SIN IS NEW
                          IF(KDUM.EQ.1)IP(I,J)=IP(I-1,J)-1
C**COS IS LIKE SIN
                          IF(KDUM.EQ.2)IP(I,J)=IP(I-1,J)
                        END DO
C**GENERATE NEW TAU QUANTUM
                        IP(I,NNMODE)=8*L+KDUM-1
C**UPDATE POINTERS AND TOTALS FOR NEW BASIS FUNCTION
                        I=I+1
                        LSIZE=LSIZE+1
                      END DO
                    END IF
                  ELSE
C**ODD QUANTA - NOT CHANGED ANYTHING YET
                    IF(IND.GT.0)THEN
                      DO J=NONLIN+1,NONLIN+LINBND
C**MODIFY LINEAR-BEND QUANTA (DON'T UPDATE LSIZE)
                        IP(I,J)=((IP(I,J)-1)/2)+1
                      END DO
C**SET POINTER TO SIN(2.TAU)
                      IP(I,NNMODE)=4
                      I=I+1
C**NEED SIN (KDUM=1) AND COS (KDUM=2)
                      DO KDUM=1,2
C**SIN(2.TAU) ALREADY DONE
                        IF(KDUM.EQ.2.OR.L.GT.1)THEN
C**MOVE UP ONE PLACE - 'I-1' IS CURRENT, LSIZE IS TOTAL
                          DO JDUM=I,LSIZE
                            MM=LSIZE-JDUM+I
                            DO J=1,NVMODE
C**MOVE LSIZE INTO LSIZE+1
                              IP(MM+1,J)=IP(MM,J)
                            END DO
                          END DO
C**COPY NON-LINEAR QUANTA
                          DO J=1,NONLIN
                            IP(I,J)=IP(I-1,J)
                          END DO
C**GENERATE NON-LINEAR QUANTA FOR NEXT HIGHER TAU
                          DO J=NONLIN+1,NONLIN+LINBND
C**SIN IS NEW
                            IF(KDUM.EQ.1)IP(I,J)=IP(I-1,J)-1
C**COS IS LIKE SIN
                            IF(KDUM.EQ.2)IP(I,J)=IP(I-1,J)
                          END DO
C**GENERATE NEW TAU QUANTUM
                          IP(I,NNMODE)=4*L+KDUM-1
C**UPDATE POINTERS AND TOTALS FOR NEW BASIS FUNCTION
                          I=I+1
                          LSIZE=LSIZE+1
                        END IF
                      END DO
                    END IF
                  END IF
                END DO
                IF(IND.LT.0)LSIZE=LSIZE+2*IEXTRA
              END IF
C**OVER-COUNTED FOR SIN(1.TAU) IF ODD
              IF(MOD(ITOT,2).NE.0)THEN
                IF(IND.LT.0)LSIZE=LSIZE-1
C**UPDATE POINTER TO BASIS
              END IF
            END IF
          END DO
          IF(IND.GT.0)THEN
            DO K=1,NNMODE
              DO I=1,LSIZE
                JP(I,K)=IP(I,K)
              END DO
            END DO
          END IF
        END IF
C***************************************************************
C***************************************************************
      ELSE
        DO K=1,NNMODE
          DO I=1,ISIZE
            JP(I,K)=IP(I,K)
          END DO
        END DO
      END IF
C**TEMPORARY
      IF(MATSIZ.NE.0)THEN
        WRITE(IOUT,*)'ORIGINAL VCI, BASIS SIZE',ISIZE
        DO I=1,ISIZE
          WRITE(IOUT,4343)I,(IP(I,K),K=1,NNMODE)
4343  FORMAT(I10,':',20I3)
        END DO
      END IF
C**TEMPORARY
      IF(ICI.LT.0.AND.LINEAR.AND..NOT.TRIAT)THEN
C**LSIZE CONTAINS MODIFIED TOTAL FOR LINEAR MOLECULES
        ISIZE=LSIZE
        IF(IND.LT.0)RETURN
C**CONVERT LINEAR BEND BASIS IN ORDER TO GET SYMMETRIES RIGHT
        DO I=1,ISIZE
          LTAU=IP(I,NNMODE)/4
          DO J=NONLIN+1,NONLIN+LINBND
            NBEND=IP(I,J)-1
            NVEND=2*NBEND+LTAU
            JP(I,J)=NVEND+1
            IP(I,J)=JP(I,J)
          END DO
        END DO
      END IF
C**TEMPORARY
      IF(LDUMP.EQ.1)GO TO 9999
C**TEMPORARY
C*******************************
C**SORT INTO SYMMETRY BLOCKS
C*******************************
      NTOT(1)=ISIZE
      MVSYM=NVSYM
      MWSYM=NWSYM
      IF(ICI.EQ.0.AND.IND.GT.0)THEN
C**FIND SYMMETRIES IN CURRENT CONTRACTION SCHEME
        NUM=ICONT(IND)
        DO I=1,NWSYM
          MSYM(I)=0
          DO J=1,NSYM(I)
            DO N=1,NUM
              IF(JCONT(IND,N).EQ.ISYM(I,J))THEN
                MSYM(I)=MSYM(I)+1
                JSYM(I,MSYM(I))=N
              END IF
            END DO
          END DO
        END DO
      ELSE
        DO I=1,NWSYM
          MSYM(I)=NSYM(I)
          DO J=1,NSYM(I)
            JSYM(I,J)=ISYM(I,J)
          END DO
        END DO
      END IF
C****************************
      IF(MVSYM.GT.1)THEN
        ITOT=0
        DO M=1,MVSYM
          DO I=1,ISIZE
            ISYMX=1
            DO J=1,NNMODE
              K=JP(I,J)-1
              IF(MOD(K,2).NE.0)THEN
                DO N=1,MWSYM
                  DO L=1,MSYM(N)
                    MODE=JSYM(N,L)
                    IF(MODE.EQ.J)KSYM=N
                  END DO
                END DO
                ISYMX=ISYMP(ISYMX,KSYM)
              END IF
            END DO
            IF(ISYMX.EQ.M)THEN
              ITOT=ITOT+1
              DO K=1,NNMODE
                IP(ITOT,K)=JP(I,K)
              END DO
            END IF
          END DO
          NTOT(M)=ITOT
          DO N=1,M-1
            NTOT(M)=NTOT(M)-NTOT(N)
          END DO
        END DO
      END IF
9999  CONTINUE
C**TEMPORARY
      IF(MATSIZ.NE.0)THEN
        WRITE(IOUT,*)'VCI BASIS'
C       DO I=1,ISIZE
C         WRITE(IOUT,4343)I,(IP(I,K),K=1,NNMODE)
C       END DO
        I0=0
        DO M=1,MVSYM
          WRITE(IOUT,*)'SYMMETRY',M
          DO N=1,NTOT(M)
            WRITE(IOUT,4343)N,(IP(I0+N,K),K=1,NNMODE)
          END DO
          I0=I0+NTOT(M)
        END DO
      END IF
C**TEMPORARY
C**CONVERT LINEAR BENDS BACK
      IF(IND.NE.0.AND.ICI.NE.0)THEN
        DO I=1,ISIZE
          LTAU=IP(I,NNMODE)/4
          DO J=NONLIN+1,NONLIN+LINBND
            NVEND=IP(I,J)-1
            NBEND=(NVEND-LTAU)/2
            IP(I,J)=NBEND+1
          END DO
        END DO
      END IF
      DO K=1,NNMODE
        DO I=1,ISIZE
          JP(I,K)=IP(I,K)
        END DO
      END DO
C**NCH
      IF(ICI.EQ.0.AND.LANCUT.NE.0)THEN
        K=0
        DO I=1,NVSYM
          JTOT1=0
          JTOT2=0
          JTOT3=0
          DO J=1,NTOT(I)
            K=K+1
            LTOT=0
            DO N=1,NNMODE
              IF(IP(K,N).GT.1)LTOT=LTOT+1
            END DO
            IF(LTOT.EQ.1)JTOT1=JTOT1+1
            IF(LTOT.EQ.2)JTOT2=JTOT2+1
            IF(LTOT.EQ.3)JTOT3=JTOT3+1
          END DO
          NTOTL1(I)=JTOT1
          NTOTL2(I)=JTOT2
          NTOTL3(I)=JTOT3
        END DO
C**TAKE ACCOUNT OF ZERO POINT BASIS
        NTOTL1(1)=NTOTL1(1)+1
C**NCH
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE BONDS(NATOM,RR,XX)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION RR(NATOM,NATOM),XX(NATOM,3)
C**INSTANTANEOUS BOND LENGTHS
      DO I=1,NATOM
        DO J=1,I
          RR(J,I)=0
        END DO
      END DO
      DO K=1,3
        DO I=1,NATOM
          DO J=1,I
            RR(J,I)=RR(J,I)+(XX(I,K)-XX(J,K))*(XX(I,K)-XX(J,K))
          END DO
        END DO
      END DO
      DO I=1,NATOM
        DO J=1,I
          RR(J,I)=SQRT(RR(J,I))
          RR(I,J)=RR(J,I)
        END DO
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE EQUBA(R0,NATOM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION R0(NATOM,NATOM),R(3)
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/FILASS/IOUT,INP
C**EQUILIBRIUM BONDS AND ANGLES (ANGSTROMS, DEGREES)
235   FORMAT(/,1X,'EQUILIBRIUM BONDS',/)
240   FORMAT(3F20.12)
      WRITE(IOUT,235)
      IBOND=0
      DO I=1,NATOM
        DO J=1,I
          IF(I.NE.J)THEN
            IBOND=IBOND+1
            R(IBOND)=R0(J,I)
            IF((I.EQ.NATOM.AND.J.EQ.I-1).OR.IBOND.EQ.3)THEN
              WRITE(IOUT,240)(R(K)*BOHR,K=1,IBOND)
            END IF
            IF(IBOND.EQ.3)IBOND=0
          END IF
        END DO
      END DO
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE PRSCF(ISTAT,NSTAT,NMODE,ISTATE,E0,E,J,KA,KC,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR,TRIAT
      DIMENSION ISTAT(NSTAT,NMODE)
C**TEMPORARY (DIMENSIONS)
      DIMENSION NV(10),LV(10)
      COMMON/TYPE/LINEAR
      COMMON/TRIATO/TRIAT
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
200   FORMAT(/,1X,'STATE ',I4,'  J = ',I3,'  Ka = ',I3,' Kc = ',I3,/,
     1(20I4))
205   FORMAT(  1X,'OLD ENERGY = ',F12.4,' NEW ENERGY = ',F12.4,/)
210   FORMAT(  1X,'OLD ENERGY = ',F12.4,' NEW ENERGY = ',F12.4,
     1' (ZERO POINT)',/)
      IF(IND.EQ.0)THEN
        IF(IPRINT.GT.1)THEN
          IF(.NOT.LINEAR)THEN
            WRITE(IOUT,200)ISTATE,J,KA,KC,(ISTAT(ISTATE,MODE)-1,MODE=1,
     1      NSMODE)
          ELSE
            IF(TRIAT)THEN
              LV(1)=KA
            ELSE
              DO I=1,LINBND
                LV(I)=ISTAT(ISTATE,NSMODE)/4
              END DO
            END IF
            DO I=1,LINBND
              NV(I)=2*(ISTAT(ISTATE,NONLIN+I)-1)+LV(I)
            END DO
            WRITE(IOUT,200)ISTATE,J,KA,KC,(ISTAT(ISTATE,MODE)-1,MODE=1,
     1      NONLIN),(NV(MODE),MODE=1,LINBND),(LV(MODE),MODE=1,LINBND)
          END IF
          IF(ISTATE.NE.1)THEN
            WRITE(IOUT,205)E0,E
          ELSE
            WRITE(IOUT,210)E0,E
          END IF
        END IF
      ELSE
        IF(.NOT.LINEAR)THEN
          WRITE(IND)ISTATE,J,KA,KC,(ISTAT(ISTATE,MODE)-1,MODE=1,
     1    NSMODE),E
        ELSE
          IF(TRIAT)THEN
            LV(1)=KA
          ELSE
            DO I=1,LINBND
              LV(I)=ISTAT(ISTATE,NSMODE)/4
            END DO
          END IF
          DO I=1,LINBND
            NV(I)=2*(ISTAT(ISTATE,NONLIN+I)-1)+LV(I)
          END DO
          WRITE(IND)ISTATE,J,KA,KC,(ISTAT(ISTATE,MODE)-1,MODE=1,
     1    NONLIN),(NV(MODE),MODE=1,LINBND),(LV(MODE),MODE=1,LINBND),E
        END IF
      END IF
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE PRCI(MT,ISTAT,NSTAT,NMODE,ISTATE,JSTATE,KSTATE,
     1COEFFI,COEFFJ,COEFFK,JX,E,EVL,J,KA,KC,IND,ISTAT1,ISTAT2,
     2ICSIZ1,ICSIZ2,IOFF1,IOFF2,IASSIG,ISIZMX,J21,NVSYM,NS1,NS2)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL PRT,LINEAR,TRIAT
      DIMENSION ISTAT(NSTAT,NMODE),ISTAT1(ICSIZ1,1),ISTAT2(ICSIZ2,1)
      DIMENSION IASSIG(ISIZMX,J21,NVSYM,2)
      DIMENSION NS1(3),NS2(3),IOFF1(3),IOFF2(3)
C**TEMPORARY (DIMENSIONS)
      DIMENSION NV(10),LV(10),NC(1000)
      COMMON/CONTX/LCOUNT,ISIZC(2,10)
      COMMON/CONTS/NCONT,ICONT(2),JCONT(2,100),NCOUPL(2),NCOUPC(2)
      COMMON/CONTT/ICCONT(2)
      COMMON/DUMP/JDUMP(10),IDUMP,KDUMP,MDUMP,LDUMP
C************************
      COMMON/ROTS/JMAX,KMAX,IDUM,KEL21,KROT
      COMMON/MATRIX/NVALV,NVALR,KSTEP,KSIGN,NVALCF
      COMMON/SYMMS/MVSYM,MWSYM(10)
      COMMON/TYPE/LINEAR
      COMMON/TRIATO/TRIAT
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/CIDIAG/ICID,ICI,JCI
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/PATH/ISCFCI
      COMMON/FILASS/IOUT,INP,MOUTIN,INP4,INP5,INP6,INP7
200   FORMAT(/,1X,'STATE ',I4,'  J = ',I3,'  Ka = ',I3,' Kc = ',I3,/,
     11X,'First  (coeff: ',F7.4,'): ',(20I4))
201   FORMAT(1X,'Second (coeff: ',F7.4,'): ',(20I4))
202   FORMAT(1X,'Second:        ',7X,'   ',(20I4))
203   FORMAT(1X,'Third  (coeff: ',F7.4,'): ',(20I4))
204   FORMAT(1X,'Third :        ',7X,'   ',(20I4))
205   FORMAT(  1X,'CI ENERGY = ',F12.4)
210   FORMAT(  1X,'CI ENERGY = ',F12.4,' (ZERO POINT)')
220   FORMAT()
      PRT=(ICID.NE.0.OR.(ICID.EQ.0.AND.IPRINT.GT.1))
      NS=NS1(1)
      IF(LCOUNT.LT.0)GO TO 9999
      IF(PRT)THEN
        IF(.NOT.LINEAR)THEN
          WRITE(IOUT,200)JX,J,KA,KC,COEFFI,(ISTAT(ISTATE,MODE)-1,
     1    MODE=1,NMODE)
        ELSE
          IF(TRIAT)THEN
            LV(1)=KA
          ELSE
            DO I=1,LINBND
              LV(I)=ISTAT(ISTATE,NNMODE)/4
            END DO
          END IF
          DO I=1,LINBND
            NV(I)=2*(ISTAT(ISTATE,NONLIN+I)-1)+LV(I)
          END DO
          WRITE(IOUT,200)JX,J,KA,KC,COEFFI,(ISTAT(ISTATE,MODE)-1,MODE=
     1    1,NONLIN),(NV(MODE),MODE=1,LINBND),(LV(MODE),MODE=1,LINBND)
        END IF
      END IF
C
      IF(PRT.AND.JPRINT.LT.-1)THEN
        IF(TRIAT)THEN
          LV(1)=KA
        ELSE
          DO I=1,LINBND
            LV(I)=ISTAT(JSTATE,NNMODE)/4
          END DO
        END IF
        DO I=1,LINBND
          NV(I)=2*(ISTAT(JSTATE,NONLIN+I)-1)+LV(I)
        END DO
        IF(.NOT.LINEAR)THEN
          IF(ICID.EQ.0)
     1    WRITE(IOUT,201)COEFFJ,(ISTAT(JSTATE,MODE)-1,MODE=1,NMODE)
          IF(ICID.NE.0)
     1    WRITE(IOUT,202)(ISTAT(JSTATE,MODE)-1,MODE=1,NMODE)
        ELSE
          IF(ICID.EQ.0)
     1    WRITE(IOUT,201)COEFFJ,(ISTAT(JSTATE,MODE)-1,MODE=
     2    1,NONLIN),(NV(MODE),MODE=1,LINBND),(LV(MODE),MODE=1,LINBND)
          IF(ICID.NE.0)
     1    WRITE(IOUT,202)(ISTAT(JSTATE,MODE)-1,MODE=
     2    1,NONLIN),(NV(MODE),MODE=1,LINBND),(LV(MODE),MODE=1,LINBND)
        END IF
      END IF
C
      IF(PRT.AND.JPRINT.LT.-2)THEN
        IF(TRIAT)THEN
          LV(1)=KA
        ELSE
          DO I=1,LINBND
            LV(I)=ISTAT(KSTATE,NNMODE)/4
          END DO
        END IF
        DO I=1,LINBND
          NV(I)=2*(ISTAT(KSTATE,NONLIN+I)-1)+LV(I)
        END DO
        IF(.NOT.LINEAR)THEN
          IF(ICID.EQ.0)
     1    WRITE(IOUT,203)COEFFK,(ISTAT(KSTATE,MODE)-1,MODE=1,NMODE)
          IF(ICID.NE.0)
     1    WRITE(IOUT,204)(ISTAT(KSTATE,MODE)-1,MODE=1,NMODE)
        ELSE
          IF(ICID.EQ.0)
     1    WRITE(IOUT,203)COEFFK,(ISTAT(KSTATE,MODE)-1,MODE=
     2    1,NONLIN),(NV(MODE),MODE=1,LINBND),(LV(MODE),MODE=1,LINBND)
          IF(ICID.NE.0)
     1    WRITE(IOUT,204)(ISTAT(KSTATE,MODE)-1,MODE=
     2    1,NONLIN),(NV(MODE),MODE=1,LINBND),(LV(MODE),MODE=1,LINBND)
        END IF
      END IF
      IF(JX.NE.0)THEN
        EX=E
        IF(PRT)WRITE(IOUT,205)E
      ELSE
        EX=EVL
        IF(PRT)WRITE(IOUT,210)EVL
      END IF
      IF(PRT)WRITE(IOUT,220)
      IF(.NOT.LINEAR)THEN
        WRITE(IND)JX,J,KA,KC,(ISTAT(ISTATE,MODE)-1,MODE=1,NMODE),EX
        IF(ISCFCI.GT.0.AND.IDUMP.NE.0)THEN
          WRITE(60)JX-1+MT,KA,KC,(ISTAT(ISTATE,MODE)-1,MODE=1,NMODE)
        END IF
      ELSE
        IF(TRIAT)THEN
          LV(1)=KA
        ELSE
          DO I=1,LINBND
            LV(I)=ISTAT(ISTATE,NNMODE)/4
          END DO
        END IF
        DO I=1,LINBND
          NV(I)=2*(ISTAT(ISTATE,NONLIN+I)-1)+LV(I)
        END DO
        WRITE(IND)JX,J,KA,KC,(ISTAT(ISTATE,MODE)-1,MODE=
     1  1,NONLIN),(NV(MODE),MODE=1,LINBND),(LV(MODE),MODE=1,LINBND),EX
      END IF
      RETURN
9999  CONTINUE
      IF(PRT)THEN
C**FUNCTION FROM SCHEME 1
        IC1=ISTAT(ISTATE,1)
C**WHICH FUNCTION FROM SCHEME 1 ?
        IF(ICCONT(1).GT.0)K1=IASSIG(IC1,KROT,NS1(1),1)
        IF(ICCONT(1).LT.0)K2=IC1
C**FUNCTION FROM SCHEME 2
        IC2=ISTAT(ISTATE,2)
C**WHICH FUNCTION FROM SCHEME 2 ?
        IF(ICCONT(1).GT.0.AND.ICCONT(2).GT.0)THEN
          K2=IASSIG(IC2,KROT,NS2(1),2)
        ELSE
          IF(ICCONT(1).LT.0)K1=IC2
          IF(ICCONT(2).LT.0)K2=IC2
        END IF
C**LOOP OVER SCHEME 1 MODES
        DO I=1,ICONT(1)
C**WHICH ABSOLUTE MODE ?
          M=JCONT(1,I)
C**WHICH SCHEME 1 FUNCTION ?
          N=ISTAT1(K1+IOFF1(1),I)
C**PUT IT IN ITS CORRECT PLACE
          NC(M)=N
        END DO
C**LOOP OVER SCHEME 2 MODES
        DO I=1,ICONT(2)
C**WHICH ABSOLUTE MODE?
          M=JCONT(2,I)
C**WHICH SCHEME 2 FUNCTION ?
          N=ISTAT2(K2+IOFF2(1),I)
C**PUT IT IN ITS CORRECT PLACE
          NC(M)=N
        END DO
        IF(.NOT.LINEAR)THEN
          WRITE(IOUT,200)JX,J,KA,KC,COEFFI,(NC(MODE)-1,
     1    MODE=1,NMODE)
        ELSE
          IF(TRIAT)THEN
            LV(1)=KA
          ELSE
            DO I=1,LINBND
              LV(I)=NC(NNMODE)/4
            END DO
          END IF
          DO I=1,LINBND
            NV(I)=2*(NC(NONLIN+I)-1)+LV(I)
          END DO
          WRITE(IOUT,200)JX,J,KA,KC,COEFFI,(NC(MODE)-1,MODE=
     1    1,NONLIN),(NV(MODE),MODE=1,LINBND),(LV(MODE),MODE=1,LINBND)
        END IF
      END IF
C
      IF(PRT.AND.JPRINT.LT.-1)THEN
        IC1=ISTAT(JSTATE,1)
        IF(ICCONT(1).GT.0)K1=IASSIG(IC1,KROT,NS1(2),1)
        IF(ICCONT(1).LT.0)K2=IC1
        IC2=ISTAT(JSTATE,2)
        IF(ICCONT(1).GT.0.AND.ICCONT(2).GT.0)THEN
          K2=IASSIG(IC2,KROT,NS2(2),2)
        ELSE
          IF(ICCONT(1).LT.0)K1=IC2
          IF(ICCONT(2).LT.0)K2=IC2
        END IF
        DO I=1,ICONT(1)
          M=JCONT(1,I)
          N=ISTAT1(K1+IOFF1(2),I)
          NC(M)=N
        END DO
        DO I=1,ICONT(2)
          M=JCONT(2,I)
          N=ISTAT2(K2+IOFF2(2),I)
          NC(M)=N
        END DO
        IF(TRIAT)THEN
          LV(1)=KA
        ELSE
          DO I=1,LINBND
            LV(I)=NC(NNMODE)/4
          END DO
        END IF
        DO I=1,LINBND
          NV(I)=2*(NC(NONLIN+I)-1)+LV(I)
        END DO
        IF(.NOT.LINEAR)THEN
          IF(ICID.EQ.0)
     1    WRITE(IOUT,201)COEFFJ,(NC(MODE)-1,MODE=1,NMODE)
          IF(ICID.NE.0)
     1    WRITE(IOUT,202)(NC(MODE)-1,MODE=1,NMODE)
        ELSE
          IF(ICID.EQ.0)
     1    WRITE(IOUT,201)COEFFJ,(NC(MODE)-1,MODE=
     2    1,NONLIN),(NV(MODE),MODE=1,LINBND),(LV(MODE),MODE=1,LINBND)
          IF(ICID.NE.0)
     1    WRITE(IOUT,202)(NC(MODE)-1,MODE=
     2    1,NONLIN),(NV(MODE),MODE=1,LINBND),(LV(MODE),MODE=1,LINBND)
        END IF
      END IF
C
      IF(PRT.AND.JPRINT.LT.-2)THEN
        IC1=ISTAT(KSTATE,1)
        IF(ICCONT(1).GT.0)K1=IASSIG(IC1,KROT,NS1(3),1)
        IF(ICCONT(1).LT.0)K2=IC1
        IC2=ISTAT(KSTATE,2)
        IF(ICCONT(1).GT.0.AND.ICCONT(2).GT.0)THEN
          K2=IASSIG(IC2,KROT,NS2(3),2)
        ELSE
          IF(ICCONT(1).LT.0)K1=IC2
          IF(ICCONT(2).LT.0)K2=IC2
        END IF
        DO I=1,ICONT(1)
          M=JCONT(1,I)
          N=ISTAT1(K1+IOFF1(3),I)
          NC(M)=N
        END DO
        DO I=1,ICONT(2)
          M=JCONT(2,I)
          N=ISTAT2(K2+IOFF2(3),I)
          NC(M)=N
        END DO
        IF(TRIAT)THEN
          LV(1)=KA
        ELSE
          DO I=1,LINBND
            LV(I)=NC(NNMODE)/4
          END DO
        END IF
        DO I=1,LINBND
          NV(I)=2*(NC(NONLIN+I)-1)+LV(I)
        END DO
        IF(.NOT.LINEAR)THEN
          IF(ICID.EQ.0)
     1    WRITE(IOUT,203)COEFFK,(NC(MODE)-1,MODE=1,NMODE)
          IF(ICID.NE.0)
     1    WRITE(IOUT,204)(NC(MODE)-1,MODE=1,NMODE)
        ELSE
          IF(ICID.EQ.0)
     1    WRITE(IOUT,203)COEFFK,(NC(MODE)-1,MODE=
     2    1,NONLIN),(NV(MODE),MODE=1,LINBND),(LV(MODE),MODE=1,LINBND)
          IF(ICID.NE.0)
     1    WRITE(IOUT,204)(NC(MODE)-1,MODE=
     2    1,NONLIN),(NV(MODE),MODE=1,LINBND),(LV(MODE),MODE=1,LINBND)
        END IF
      END IF
      IF(JX.NE.0)THEN
        EX=E
        IF(PRT)WRITE(IOUT,205)E
      ELSE
        EX=EVL
        IF(PRT)WRITE(IOUT,210)EVL
      END IF
      IF(PRT)WRITE(IOUT,220)
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE ENERGY(ISTAT,NSTAT,NMODE,ISTATE,MODE,EVAL,E,ESCF,WRK)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION ISTAT(NSTAT,NMODE),EVAL(1),WRK(1)
      COMMON/FILASS/IOUT,INP
      I=ISTAT(ISTATE,MODE)
      E=EVAL(I)
      ESCF=WRK(I)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE ENERCF(CFS,ISIZMX,EVCI,ISIZE,NVALCF,J21,KROT,NS,XK,X,
     1WRK)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LANCZ,LANZA,LANZB
      DIMENSION CFS(ISIZMX,NVALCF,J21,1),EVCI(NVALCF,J21,1),XK(ISIZE,1)
      DIMENSION X(ISIZE),WRK(ISIZE)
C**TEMPORARY (DIMENSIONS)
      COMMON/MATRIX/NVAL,NVALR,KSTEP,KSIGN
      COMMON/CONTX/LCOUNT,ISIZC(2,10)
      COMMON/LANCZO/LANCZ,LANZA,LANZB
      COMMON/FILASS/IOUT,INP
      IF(LANZA)REWIND 54
      DO I=1,NVAL
        EVCI(I,KROT,NS)=WRK(I)
        IF(LANZA)THEN
          READ(54)X
          DO J=1,ISIZE
            CFS(J,I,KROT,NS)=X(J)
          END DO
        ELSE
          DO J=1,ISIZE
            CFS(J,I,KROT,NS)=XK(J,I)
          END DO
        END IF
        IF(LCOUNT.GT.1)THEN
          WRITE(30)(CFS(J,I,KROT,NS),J=1,ISIZE)
          WRITE(30)EVCI(I,KROT,NS)
        END IF
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE CFENER(CFS,EVCI,ISIZMX,J21,NVSYM,NVALX,K)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION CFS(ISIZMX,NVALX,J21,NVSYM,1),EVCI(NVALX,J21,NVSYM,1)
C**TEMPORARY (DIMENSIONS)
      COMMON/CONTX/LCOUNT,ISIZC(2,10)
      COMMON/CVAL/NCVAL(2,10),NCSIZE(10)
      COMMON/FILASS/IOUT,INP
      DO NS=1,NVSYM
        NVAL=NCVAL(K,NS)
        ISIZE=ISIZC(K,NS)
        DO KROT=1,J21
          IF(ISIZE.NE.0)THEN
            DO I=1,NVAL
              READ(30)(CFS(J,I,KROT,NS,K),J=1,ISIZE)
              READ(30)EVCI(I,KROT,NS,K)
            END DO
          END IF
        END DO
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE OUT29(H,NN,MM,ISTAT,NSTAT,NMODE,ISTATE,MODE)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION H(NN,MM,3),ISTAT(NSTAT,NMODE)
      I=ISTAT(ISTATE,MODE)
      WRITE(29)((H(I,M,K),M=1,MM),K=1,3)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE IN29(H,MM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION H(MM,3)
      READ(29)((H(M,K),M=1,MM),K=1,3)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE IDIAGL(ISIZE,NA)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION NA(1)
      DO I=1,ISIZE
        NA(I)=0
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DIAGL(ISIZE,XA)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION XA(1)
      DO I=1,ISIZE
        XA(I)=0
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DIAGZ(ISIZEL,ISIZER,XK,ISIZE,XA,ICI)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION XK(ISIZEL,1),XA(1)
      IF(ICI.LT.0)THEN
        DO I=1,ISIZE*(ISIZE+1)/2
          XA(I)=0.D0
        END DO
        RETURN
      ELSE
        DO IX=1,ISIZER
          DO IY=1,ISIZEL
            XK(IY,IX)=0.D0
          END DO
        END DO
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE SCFOV(S,NMODE,OV,ISIZE,ILHS,IRHS)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION S(NMODE),OV(ISIZE,ISIZE)
      COMMON/FILASS/IOUT,INP
200   FORMAT(6(1X,D12.4))
      IF(IRHS.GT.0)THEN
        OV(ILHS,IRHS)=1
        DO I=1,NMODE
          OV(ILHS,IRHS)=OV(ILHS,IRHS)*S(I)
        END DO
      ELSE
        NUM=-IRHS
        DO J=1,NUM
          WRITE(IOUT,200)(OV(I,J),I=1,NUM)
        END DO
      END IF
      RETURN
      END
C**************************************************************
C**************************************************************
      SUBROUTINE OVERLP(HL,HR,MM,S)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION HL(MM,3),HR(MM,3)
      COMMON/FILASS/IOUT,INP
      S=0
      DO M=1,MM
        S=S+HL(M,1)*HR(M,1)
      END DO
      RETURN
      END
C**************************************************************
C**************************************************************
C**ANALYTIC
      SUBROUTINE GETANI(XK,MAXQU,NPOWER,MODE,H,XQ,NN,MM,XTANPM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION H(NN,MM,3),XQ(MM)
      DIMENSION XTANPM(1),XK(MAXQU,MAXQU,NPOWER,1)
      DO K=1,NPOWER
        DO I=1,NN
          DO J=1,NN
            XK(J,I,K,MODE)=0
          END DO
        END DO
      END DO
      DO M=1,MM
        Q=XQ(M)
        DO K=1,NPOWER
          V=XTANH(XTANPM(MODE)*Q)**(K-1)
          DO I=1,NN
            DO J=1,NN
              XK(J,I,K,MODE)=XK(J,I,K,MODE)+V*H(J,M,1)*H(I,M,1)
            END DO
          END DO
        END DO
      END DO
      RETURN
      END
C**ANALYTIC
C**************************************************************
C**************************************************************
      SUBROUTINE OVERVP(HL,HR,MMTAU,S)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION HL(MMTAU,3),HR(MMTAU,3)
      COMMON/FILASS/IOUT,INP
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      S=0
C**LOOP ROUND TAU
      ITAU=INIT-INCTAU
      DO MTAU=1,MMTAU
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720
        S=S+HL(MTAU,1)*HR(MTAU,1)*DSTAU(ITAU)
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE V0CIKE(NMODE,MODE,MOD1,H,XQ,XA,NSIZE,NN,MM,OMEGA,
     1MODINT,IP,ISIZE)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION H(NN,MM,3,1),XQ(MM),IP(ISIZE,NMODE)
      DIMENSION XA(1),MODINT(NMODE)
      COMMON/WHICH/IWHICH
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/FILASS/IOUT,INP
      COMMON/PRINT/IPRINT,JPRINT
      MD=MODINT(MOD1)
      CALL VDCIKE(NMODE,MODE,MOD1,H,XQ,XA,NSIZE,NN,MM,MM/MD,OMEGA,
     1IP,ISIZE,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VDCIKE(NMODE,MODE,MOD1,H,XQ,XA,NSIZE,NN,MH,MM,OMEGA,
     1IP,ISIZE,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CCCC  DIMENSION H(NN,MM,3,1),XQ(MM),IP(ISIZE,NMODE)
      DIMENSION H(NN,MH,3,1),XQ(MM),IP(ISIZE,NMODE)
      DIMENSION XA(1),MODINT(NMODE)
      COMMON/WHICH/IWHICH
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/FILASS/IOUT,INP
      COMMON/PRINT/IPRINT,JPRINT
      IF(ITIM1A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating V0CIKE'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF
C**POINT TO L(0) OR L(1) IF LINEAR
      MK2=1
      IF(MOD1.GT.NONLIN)THEN
C**PERHAPS NOTHING TO DO HERE....BUT WE'LL WAIT AND SEE
      END IF
C**ZERO ORDER KINETIC ENERGY TERM (INTEGRALS)
      MD=MODINT(MOD1)
      DO M=1,MM
        Q=XQ(M)
        IF(IWHICH.EQ.0)THEN
          VHARM=OMEGA*OMEGA*Q*Q/2
        ELSE
          VHARM=0
        END IF

C**NSIZE IS NO. UNIQUE INTEGRALS (1-DIM)
        DO IRHS=1,NSIZE
          NR=IP(IRHS,MODE)
          X=-H(NR,M,3,MK2)/2+VHARM*H(NR,M,1,MK2)
          J0=IRHS*(IRHS-1)/2
          DO ILHS=1,IRHS
            NL=IP(ILHS,MODE)
            Y=H(NL,M,1,MK2)
            XA(ILHS+J0)=XA(ILHS+J0)+Y*X*MD
          END DO
        END DO
      END DO
      IF(ITIM1A.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VCIKE(NMODE,MODE,H,XQ,XA,XK,NSIZE,NN,MM,OMEGA,IP,
     1ISIZMX,ISIZE,IP1,ISIZE1,ISTART,IEND,ILR,IRL,
     2LANIND,XL,LAN12D,XD,ZL,ICOUNT,ISIZEX)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LANCZ,LANZA,LANZB
      DIMENSION H(NN,MM,3),XQ(MM),IP(ISIZMX,NMODE)
C**
      DIMENSION ILR(ISIZEX),IRL(ISIZEX)
      DIMENSION XA(1),XK(1),XL(LAN12D,ISIZE),XD(ISIZEX),
     1ZL(LAN12D,ICOUNT)
C**
      DIMENSION IP1(ISIZE1,1)
      COMMON/LANCZO/LANCZ,LANZA,LANZB
      COMMON/WHICH/IWHICH
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
C**ZERO ORDER KINETIC ENERGY TERM
      IF(ITIM1A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating VCIKE'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

C**ORIGINAL ALGORITHM AND 1 AND 2-DIM MATRIX
      IF(LANIND.EQ.0.OR.LANIND.EQ.1)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=1,IEND
          NR=IP(IRHS,MODE)
C**FIND RHS INDEX (TRIVIAL CASE)
          DO IR=1,NSIZE
            IF(NR.EQ.IP1(IR,1))GO TO 1000
          END DO
C**TEMPORARY
      WRITE(IOUT,*)'NO MATCH IN VCIKE FOR BASIS'
      WRITE(IOUT,*)'ELEMENT:',NR
      STOP 'VCIKE BASIS BUG'
C**TEMPORARY
1000      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
          DO ILHS=1,IRHS
C**OVERLAP OF REMAINING STATES
            IS=1
            DO K=1,NMODE
              IF(IS.EQ.0)GO TO 3000
              IF(K.NE.MODE.AND.(IP(IRHS,K).NE.IP(ILHS,K)))IS=0
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XA(ILHS+J0)=XA(ILHS+J0)+X*IS
3000        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
        GO TO 7000
      END IF

C**SET UP MATRIX XL(LAN12D,ISIZE-LAN12D) IN CORE (XL AND XA ARE SAME
C**ARRAY - CF LANMAX)  ALSO SET UP DIAGONAL ELEMENTS IN XD(ISIZE)
      IF(LANIND.EQ.2)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (RHS)
        DO IRHS=ISTART,IEND
          NR1=IP(IRHS,MODE)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.EQ.IP1(IR,1))GO TO 1001
          END DO
1001      CONTINUE
          IRL(IRHS)=IR
        END DO
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (LHS)
        DO ILHS=1,LAN12D
          NL1=IP(ILHS,MODE)
C**FIND LHS INDEX
          DO IL=1,NSIZE
            IF(NL1.EQ.IP1(IL,1))GO TO 1002
          END DO
1002      CONTINUE
          ILR(ILHS)=IL
        END DO

        DO IRHS=ISTART,IEND
          IR=IRL(IRHS)
          DO ILHS=1,LAN12D
C**OVERLAP OF REMAINING STATES
            IS=1
            DO K=1,NMODE
              IF(IS.EQ.0)GO TO 3002
              IF(K.NE.MODE.AND.(IP(IRHS,K).NE.IP(ILHS,K)))IS=0
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XL(ILHS,IRHS-ISTART+1)=XL(ILHS,IRHS-ISTART+1)+X*IS
3002        CONTINUE
          END DO
C**DIAGONAL ELEMENT
          IL=IR
          I=IR*(IR-1)/2+IL
          X=XK(I)
          XD(IRHS)=XD(IRHS)+X
        END DO
      END IF

C**SET UP ARRAY XA((ISIZE-LAN12D)*(ISIZE-LAN12D+1)/2)
C**TRUNCATE IF ROW/COLUMN IN IFLAG(ISIZE)=0
      IF(LANIND.EQ.3)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=LAN12D+1,IEND
          NR1=IP(IRHS,MODE)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.EQ.IP1(IR,1))GO TO 1004
          END DO
1004      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
          DO ILHS=LAN12D+1,IRHS
C**OVERLAP OF REMAINING STATES
            IS=1
            DO K=1,NMODE
              IF(IS.EQ.0)GO TO 3004
              IF(K.NE.MODE.AND.(IP(IRHS,K).NE.IP(ILHS,K)))IS=0
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XA(ILHS+J0)=XA(ILHS+J0)+X*IS
3004        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
      END IF

7000  CONTINUE
      IF(ITIM1A.EQ.0)THEN
        CALL TIMIT(3)
        ITIM1A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE V0CV0(NMODE,MODE,HTAU,XQTAU,XA,NSIZE,NNTAU,MMTAU,IP,
     1ISIZE,VC,VCR,VR,VRR,J21,KROT,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP,VC(3),VR(J21)
      REAL*4 VPR,VCR(3),VRR(J21)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION X(3)
      DIMENSION IP(ISIZE,NMODE)
      DIMENSION XA(1)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU),MODINT(NMODE)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM.EQ.0)THEN
        WRITE(IOUT,*)'Calculating V0CV0'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

      IF(IFITRP.EQ.0)THEN
        IFACTL=INTFAC(NMODE,ICOUPL,0)
      ELSE
        IFACTL=JNTFAC(NMODE,IABS(IFITRP)-1,0)
      END IF
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=INTFAC(NMODE,ICOUPC,0)
      IF(MOLINC.GT.0)IFACTC=1

      KA=KROT/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      MDT=MODINT(NSMODE)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(NT.EQ.1)THEN
        MD=1
      ELSE
        MD=2
      END IF

C**LOOP ROUND TAU
      ITAU=INIT-INCTAU
      DO MTAU=1,MMTAU/MDT
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.0)READ(61)VR
          IF(ICOUPC.GE.0)READ(81)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.0)READ(61)VRR
          IF(ICOUPC.GE.0)READ(81)VCR
        END IF
        IF(JCOUPL.GE.0)THEN
          READ(71)VP
        ELSE
          READ(71)VPR
        END IF

C***********************************************************

        IF(JCOUPL.GE.0)THEN
          VV=VP*IFACTL*DSTAU(ITAU)
        ELSE
          VV=VPR*IFACTL*DSTAU(ITAU)
        END IF
        DO I=1,3
          X(I)=0
        END DO
        IF(JCOUPC.GE.0)THEN
          IF(ICOUPC.GE.0)THEN
            VV=VV+VR(KROT)*FACTRC*DSTAU(ITAU)
            DO I=1,3
              X(I)=VC(I)*IFACTC*DSTAU(ITAU)
            END DO
          END IF
        ELSE
          IF(ICOUPC.GE.0)THEN
            VV=VV+VRR(KROT)*FACTRC*DSTAU(ITAU)
            DO I=1,3
              X(I)=VCR(I)*IFACTC*DSTAU(ITAU)
            END DO
          END IF
        END IF
        X(3)=X(3)+VV

C**NSIZE IS NO. UNIQUE INTEGRALS (1-DIM)
C**EVEN TERMS
        DO IRHS=1,NSIZE
          IR=IP(IRHS,MODE)+1-MOD(KA,2)+INCT
          X1E=HTAU(IR,MTAU,1,LMAX)*X(3)*MDT
          X2E=HTAU(IR,MTAU,2,LMAX)*X(2)*MDT
          J0=IRHS*(IRHS-1)/2
          DO ILHS=1,IRHS
            IL=IP(ILHS,MODE)+1-MOD(KA,2)+INCT
            MULTM=1-MOD(IABS(IR-IL),MD)
            Y1=HTAU(IL,MTAU,1,LMAX)
            Y2=HTAU(IL,MTAU,2,LMAX)
            XA(ILHS+J0)=XA(ILHS+J0)+(Y1*X1E+Y2*X2E)*MULTM
          END DO
        END DO
C**ODD TERMS
        DO IRHS=1,NSIZE
          IR=IP(IRHS,MODE)+1-MOD(KA,2)+INCT
          X1O=HTAU(IR,MTAU,2,LMAX)*X(1)*MDT
          X2O=HTAU(IR,MTAU,1,LMAX)*X(1)*MDT
          J0=IRHS*(IRHS-1)/2
          DO ILHS=1,IRHS
            IL=IP(ILHS,MODE)+1-MOD(KA,2)+INCT
            MULTM=1-MOD(IABS(IR-IL),MD)
            Y1=HTAU(IL,MTAU,1,LMAX)
            Y2=HTAU(IL,MTAU,2,LMAX)
            XA(ILHS+J0)=XA(ILHS+J0)+(Y1*X1O+Y2*X2O)*MULTM
          END DO
        END DO
      END DO
      IF(ITIM.EQ.0)THEN
        CALL TIMIT(3)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VCI0(NMODE,XA,ISIZE,ISTART,IEND,
     1LANIND,XL,LAN12D,XD,ZL,ICOUNT,ISIZEX,VK,VKR,J21,KROT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V,VM(6),VK(J21),VP
      REAL*4 VR,VMR(6),VKR(J21),VPR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      LOGICAL LANCZ,LANZA,LANZB
C**TEMPORARY - HERMITIAN
      DIMENSION XA(1),XL(LAN12D,ISIZE),XD(ISIZEX),
     1ZL(LAN12D,ICOUNT)
C     DIMENSION XA(ISIZE,1)
C**TEMPORARY - HERMITIAN
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MUREF/V,VM,VR,VMR
      COMMON/ILAST/ILAST
      COMMON/POTREF/VP,VPR
      COMMON/CONTX/LCOUNT,ISIZC(2,10)
      COMMON/CONTT/ICCONT(2)
      COMMON/LANCZO/LANCZ,LANZA,LANZB
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6),FACTS(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT 
      COMMON/FILASS/IOUT,INP
      IF(ITIM1A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating VCI0'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

C**POTENTIAL AT REFERENCE
C**ONE-MODE CONSTANTS
      IFACT=0
      IF(ICOUPL.EQ.1)IFACT=1
      IF(ICOUPL.EQ.2)IFACT=-(NMODE-2)
      IF(ICOUPL.EQ.3)THEN
        IFACT=(NMODE-3)*(NMODE-1)
        DO I=2,NMODE-2
          IFACT=IFACT-I
        END DO
      END IF
      IF(ICOUPL.EQ.4)THEN
        IFACT=-(NMODE-4)*(NMODE-3)*(NMODE-1)
        DO I=1,NMODE-4
          IFACT=IFACT-I*(NMODE-3-I)
        END DO
        DO I=1,NMODE-4
          IFACT=IFACT+(NMODE-2)*I
        END DO
        DO I=2,NMODE-2
          IFACT=IFACT+(NMODE-4)*I
        END DO
      END IF
      IF(ICOUPL.EQ.5)IFACT=INTFAC(NMODE,ICOUPL,1)
      IF(ICOUPL.EQ.6)IFACT=INTFAC(NMODE,ICOUPL,1)
      FACTS(1)=IFACT
C**TWO-MODE CONSTANTS
      IFACT=0
      IF(ICOUPL.EQ.2)IFACT=1
      IF(ICOUPL.EQ.3)IFACT=-(NMODE-3)
      IF(ICOUPL.EQ.4)THEN
        IFACT=(NMODE-4)*(NMODE-3)
        DO I=1,NMODE-4
          IFACT=IFACT-I
        END DO
      END IF
      IF(ICOUPL.EQ.5)IFACT=INTFAC(NMODE,ICOUPL,2)
      IF(ICOUPL.EQ.6)IFACT=INTFAC(NMODE,ICOUPL,2)
      FACTS(2)=IFACT
C**THREE-MODE CONSTANTS
      IFACT=0
      IF(ICOUPL.EQ.3)IFACT=1
      IF(ICOUPL.EQ.4)IFACT=-(NMODE-4)
      IF(ICOUPL.EQ.5)IFACT=INTFAC(NMODE,ICOUPL,3)
      IF(ICOUPL.EQ.6)IFACT=INTFAC(NMODE,ICOUPL,3)
      FACTS(3)=IFACT
C**FOUR-MODE CONSTANTS
      IFACT=0
      IF(ICOUPL.EQ.4)IFACT=1
      IF(ICOUPL.EQ.5)IFACT=INTFAC(NMODE,ICOUPL,4)
      IF(ICOUPL.EQ.6)IFACT=INTFAC(NMODE,ICOUPL,4)
      FACTS(4)=IFACT
C**FIVE-MODE CONSTANTS
      IFACT=0
      IF(ICOUPL.EQ.5)IFACT=1
      IF(ICOUPL.EQ.6)IFACT=INTFAC(NMODE,ICOUPL,5)
      FACTS(5)=IFACT
C**SIX-MODE CONSTANTS
      IFACT=0
      IF(ICOUPL.EQ.6)IFACT=1
      FACTS(6)=IFACT
      FACT=1
      DO I=1,ICOUPL
        FACT=FACT-FACTOR(I)*FACTS(I)
      END DO

C**INTRINSIC
      IF(MOLINC.GT.0)THEN
        FACT=1
        IF(LCOUNT.LT.0.AND.ICCONT(1).GE.0.AND.ICCONT(2).GE.0)FACT=-1
      END IF
C**INTRINSIC

      FACTV=FACT

C**CORIOLIS AT REFERENCE
C**ONE-MODE CONSTANTS
      IFACT=0
      IF(ICOUPC.EQ.1)IFACT=1
      IF(ICOUPC.EQ.2)IFACT=-(NMODE-2)
      IF(ICOUPC.EQ.3)THEN
        IFACT=(NMODE-3)*(NMODE-1)
        DO I=2,NMODE-2
          IFACT=IFACT-I
        END DO
      END IF
      IF(ICOUPC.EQ.4)THEN
        IFACT=-(NMODE-4)*(NMODE-3)*(NMODE-1)
        DO I=1,NMODE-4
          IFACT=IFACT-I*(NMODE-3-I)
        END DO
        DO I=1,NMODE-4
          IFACT=IFACT+(NMODE-2)*I
        END DO
        DO I=2,NMODE-2
          IFACT=IFACT+(NMODE-4)*I
        END DO
      END IF
      IF(ICOUPC.EQ.5)IFACT=INTFAC(NMODE,ICOUPC,1)
      IF(ICOUPC.EQ.6)IFACT=INTFAC(NMODE,ICOUPC,1)
      FACTS(1)=IFACT
C**TWO-MODE CONSTANTS
      IFACT=0
      IF(ICOUPC.EQ.2)IFACT=1
      IF(ICOUPC.EQ.3)IFACT=-(NMODE-3)
      IF(ICOUPC.EQ.4)THEN
        IFACT=(NMODE-4)*(NMODE-3)
        DO I=1,NMODE-4
          IFACT=IFACT-I
        END DO
      END IF
      IF(ICOUPC.EQ.5)IFACT=INTFAC(NMODE,ICOUPC,2)
      IF(ICOUPC.EQ.6)IFACT=INTFAC(NMODE,ICOUPC,2)
      FACTS(2)=IFACT
C**THREE-MODE CONSTANTS
      IFACT=0
      IF(ICOUPC.EQ.3)IFACT=1
      IF(ICOUPC.EQ.4)IFACT=-(NMODE-4)
      IF(ICOUPC.EQ.5)IFACT=INTFAC(NMODE,ICOUPC,3)
      IF(ICOUPC.EQ.6)IFACT=INTFAC(NMODE,ICOUPC,3)
      FACTS(3)=IFACT
C**FOUR-MODE CONSTANTS
      IFACT=0
      IF(ICOUPC.EQ.4)IFACT=1
      IF(ICOUPC.EQ.5)IFACT=INTFAC(NMODE,ICOUPC,4)
      IF(ICOUPC.EQ.6)IFACT=INTFAC(NMODE,ICOUPC,4)
      FACTS(4)=IFACT
C**FIVE-MODE CONSTANTS
      IFACT=0
      IF(ICOUPC.EQ.5)IFACT=1
      IF(ICOUPC.EQ.6)IFACT=INTFAC(NMODE,ICOUPC,5)
      FACTS(5)=IFACT
C**SIX-MODE CONSTANTS
      IFACT=0
      IF(ICOUPC.EQ.6)IFACT=1
      FACTS(6)=IFACT
      FACT=1
      DO I=1,ICOUPC
        FACT=FACT-FACTOR(I)*FACTS(I)
      END DO

C**INTRINSIC
      IF(MOLINC.GT.0)THEN
        FACT=1
        IF(LCOUNT.LT.0.AND.ICCONT(1).GE.0.AND.ICCONT(2).GE.0)FACT=-1
      END IF
C**INTRINSIC

      FACTC=FACT

C**ORIGINAL ALGORITHM AND 1 AND 2-DIM MATRIX
      IF(LANIND.EQ.0.OR.LANIND.EQ.1)THEN
7001    J0=0
        DO IRHS=ISTART,IEND
          ILHS=IRHS
C**POTENTIAL
C**TEMPORARY - HERMITIAN
C         IF(JCOUPL.GT.0)XA(ILHS,IRHS)=XA(ILHS,IRHS)+VP*FACT
C         IF(JCOUPL.LT.0)XA(ILHS,IRHS)=XA(ILHS,IRHS)+VRP*FACT
C**TEMPORARY - HERMITIAN
          IF(JCOUPL.GE.0)XA(ILHS+J0)=XA(ILHS+J0)+VP*FACTV
          IF(JCOUPL.LT.0)XA(ILHS+J0)=XA(ILHS+J0)+VPR*FACTV
          J0=J0+IRHS
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          ILHS=IRHS
C**WATSON
C**TEMPORARY - HERMITIAN
C         IF(JCOUPC.GT.0)XA(ILHS,IRHS)=XA(ILHS,IRHS)+V*FACT
C         IF(JCOUPC.LT.0)XA(ILHS,IRHS)=XA(ILHS,IRHS)+VR*FACT
C**TEMPORARY - HERMITIAN
          IF(JCOUPC.GE.0)XA(ILHS+J0)=XA(ILHS+J0)+V*FACTC
          IF(JCOUPC.LT.0)XA(ILHS+J0)=XA(ILHS+J0)+VR*FACTC
C**ROTATION
          IF(J21.GT.1)THEN
C**TEMPORARY - HERMITIAN
C           IF(JCOUPC.GT.0)XA(ILHS,IRHS)=XA(ILHS,IRHS)+VK(KROT)*FACT
C           IF(JCOUPC.LT.0)XA(ILHS,IRHS)=XA(ILHS,IRHS)+VKR(KROT)*FACT
C**TEMPORARY - HERMITIAN
            IF(JCOUPC.GE.0)XA(ILHS+J0)=XA(ILHS+J0)+VK(KROT)*FACTC
            IF(JCOUPC.LT.0)XA(ILHS+J0)=XA(ILHS+J0)+VKR(KROT)*FACTC
          END IF
          J0=J0+IRHS
        END DO
        GO TO 7000
      END IF

C**SET UP MATRIX XL(LAN12D,ISIZE-LAN12D) IN CORE (XL AND XA ARE SAME
C**ARRAY - CF LANMAX)  ALSO SET UP DIAGONAL ELEMENTS IN XD(ISIZE)
      IF(LANIND.EQ.2)THEN
        DO IRHS=ISTART,IEND
          IF(JCOUPL.GE.0)XD(IRHS)=VP*FACTV
          IF(JCOUPL.LT.0)XD(IRHS)=VPR*FACTV
          IF(JCOUPC.GE.0)XD(IRHS)=XD(IRHS)+V*FACTC
          IF(JCOUPC.LT.0)XD(IRHS)=XD(IRHS)+VR*FACTC
C**ROTATION
          IF(J21.GT.1)THEN
            IF(JCOUPC.GE.0)XD(IRHS)=XD(IRHS)+VK(KROT)*FACTC
            IF(JCOUPC.LT.0)XD(IRHS)=XD(IRHS)+VKR(KROT)*FACTC
          END IF
        END DO
      END IF

C**SET UP ARRAY XA((ISIZE-LAN12D)*(ISIZE-LAN12D+1)/2)
C**TRUNCATE IF ROW/COLUMN IN IFLAG(ISIZE)=0
      IF(LANIND.EQ.3)THEN
C**MOVE ZL (REDUCED) INTO XA
        J0=0
        DO I=ISTART,IEND
          DO J=1,LAN12D
            XA(J+J0)=ZL(J,I-LAN12D)
          END DO
          J0=J0+I
        END DO
        GO TO 7001
      END IF

7000  CONTINUE
      IF(ITIM1A.EQ.0)THEN
        CALL TIMIT(3)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VCV0(NMODE,XA,XK,NSIZE,IP,ISIZMX,ISIZE,IP1,ISIZE1,
     1ISTART,IEND,ILR,IRL,LANIND,XL,LAN12D,
     2XD,ZL,ICOUNT,ISIZEX)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LANCZ,LANZA,LANZB
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
C**
      DIMENSION ILR(ISIZEX),IRL(ISIZEX)
      DIMENSION IP(ISIZMX,NMODE)
      DIMENSION XA(1),XK(1),XL(LAN12D,ISIZE),XD(ISIZEX),
     1ZL(LAN12D,ICOUNT)
C**
      DIMENSION IP1(ISIZE1,1)
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/LANCZO/LANCZ,LANZA,LANZB
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM.EQ.0)THEN
        WRITE(IOUT,*)'Calculating VCV0'
        CALL TIMIT(1)
        CALL FLUSH(IOUT)
      END IF

C**ORIGINAL ALGORITHM AND 1 AND 2-DIM MATRIX
      IF(LANIND.EQ.0.OR.LANIND.EQ.1)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=1,IEND
          NRTAU=IP(IRHS,NMODE)
C**FIND RHS INDEX (TRIVIAL)
          DO IR=1,NSIZE
            IF(NRTAU.EQ.IP1(IR,1))GO TO 1000
          END DO
1000      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
          DO ILHS=1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE-1
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3000
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XA(ILHS+J0)=XA(ILHS+J0)+X
3000        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
        GO TO 7000
      END IF

C**SET UP MATRIX XL(LAN12D,ISIZE-LAN12D) IN CORE (XL AND XA ARE SAME
C**ARRAY - CF LANMAX)  ALSO SET UP DIAGONAL ELEMENTS IN XD(ISIZE)
      IF(LANIND.EQ.2)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (RHS)
        DO IRHS=ISTART,IEND
          NRTAU=IP(IRHS,NMODE)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NRTAU.EQ.IP1(IR,1))GO TO 1001
          END DO
1001      CONTINUE
          IRL(IRHS)=IR
        END DO
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (LHS)
        DO ILHS=1,LAN12D
          NLTAU=IP(ILHS,NMODE)
C**FIND LHS INDEX
          DO IL=1,NSIZE
            IF(NLTAU.EQ.IP1(IL,1))GO TO 1002
          END DO
1002      CONTINUE
          ILR(ILHS)=IL
        END DO

        DO IRHS=ISTART,IEND
          IR=IRL(IRHS)
          DO ILHS=1,LAN12D
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE-1
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3002
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XL(ILHS,IRHS-ISTART+1)=XL(ILHS,IRHS-ISTART+1)+X
3002        CONTINUE
          END DO
C**DIAGONAL ELEMENT
          IL=IR
          I=IR*(IR-1)/2+IL
          XD(IRHS)=XK(I)
        END DO
      END IF

C**SET UP ARRAY XA((ISIZE-LAN12D)*(ISIZE-LAN12D+1)/2)
C**TRUNCATE IF ROW/COLUMN IN IFLAG(ISIZE)=0
      IF(LANIND.EQ.3)THEN
C**MOVE ZL (REDUCED) INTO XA
        J0=0
        DO I=ISTART,IEND
          DO J=1,LAN12D
            XA(J+J0)=ZL(J,I-LAN12D)
          END DO
          J0=J0+I
        END DO

C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=LAN12D+1,IEND
          NRTAU=IP(IRHS,NMODE)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NRTAU.EQ.IP1(IR,1))GO TO 1004
          END DO
1004      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
          DO ILHS=LAN12D+1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE-1
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3004
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XA(ILHS+J0)=XA(ILHS+J0)+X
3004        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
      END IF

7000  CONTINUE
      IF(ITIM.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE V0CI1(NMODE,MODE,MOD1,H,XQ,XA,NSIZE,NN,MM,IP,ISIZE,VP,
     1VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,OMEGA,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM),VC(MM),VR(J21,MM)
      REAL*4 VPR(MM),VCR(MM),VRR(J21,MM)
      DIMENSION MODINT(NMODE)
      DIMENSION H(NN,MM,3),IP(ISIZE,NMODE)
      DIMENSION XA(1),XQ(MM)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/TYPE/LINEAR
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/FILASS/IOUT,INP
      MD=MODINT(MOD1)
      CALL VDCI1(NMODE,MODE,MOD1,H,XQ,XA,NSIZE,NN,MM,MM/MD,IP,ISIZE,VP,
     1VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,OMEGA,IND)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VDCI1(NMODE,MODE,MOD1,H,XQ,XA,NSIZE,NN,MH,MM,IP,ISIZE,
     1VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,OMEGA,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM),VC(MM),VR(J21,MM)
      REAL*4 VPR(MM),VCR(MM),VRR(J21,MM)
      DIMENSION MODINT(NMODE)
CCCC  DIMENSION H(NN,MM,3),IP(ISIZE,NMODE)
      DIMENSION H(NN,MH,3),IP(ISIZE,NMODE)
      DIMENSION XA(1),XQ(MM)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/XSAVES/ICOUPX,ICOUCX,JCOUPS,JCOUCS
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/TYPE/LINEAR
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/FILASS/IOUT,INP

      IF(ITIM1A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating V0CI1'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,1)
      IFACTL=INTFAC(NMODE,ICOUPL,1)
      IF(MOLINC.GT.0)IFACTL=1
      IF(MOLINC.GT.0)IFACTC=1
      IF(IWHICH.EQ.0)IFACTL=1
      IF(IWHICH.LT.0.AND.MOLINC.LT.0)IFACTL=1

C***********************************************************

C     IF(IND.EQ.0)THEN
        IF(JCOUPL.GT.0)THEN
          IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(I71)VP
        ELSE
          IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(I71)VPR
        END IF
C     END IF
C     IF(IND.NE.0)THEN
        ICCCCC=ICOUPC
        IF(MOLINC.EQ.0)THEN
          ICCCCC=ICOUCX
        END IF
        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICCCCC.GT.0)READ(I61)VR
          IF(ICCCCC.GT.0)READ(I81)VC
        ELSE
          IF(J21.GT.1.AND.ICCCCC.GT.0)READ(I61)VRR
          IF(ICCCCC.GT.0)READ(I81)VCR
        END IF
        IF(MOLINC.EQ.0.AND.ICOUPL.LT.1)RETURN
C       RETURN
C     END IF

C***********************************************************

      MD=MODINT(MOD1)

C***********************************************************
CCCC  DO M=1,MM/MD
      DO M=1,MM
        TERM=0
        VV=0
        KK=1
C       IF(LINEAR)KK=MOD(KA,2)*MOD(KA,2)
        IF(LINEAR)KK=KA*KA
        IF(JCOUPL.GT.0)THEN
          IF(IWHICH.GE.0.OR.MOLINC.LE.0)VV=VP(M)*IFACTL
C**WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
          IF(ICOUPC.GT.0)THEN
            VV=VV+VC(M)*IFACTC*KK
            IF(J21.GT.1)TERM=VR(KROT,M)*IFACTC
          END IF
        ELSE
          IF(IWHICH.GE.0.OR.MOLINC.LE.0)VV=VPR(M)*IFACTL
C**WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
          IF(ICOUPC.GT.0)THEN
            VV=VV+VCR(M)*IFACTC*KK
            IF(J21.GT.1)TERM=VRR(KROT,M)*IFACTC
          END IF
        END IF


C**********************************************************
C**KINETIC ENERGY
        Q=XQ(M)
        IF(IWHICH.EQ.0)THEN
          VHARM=OMEGA*OMEGA*Q*Q/2
        ELSE
          VHARM=0
        END IF
C**NSIZE IS NO. UNIQUE INTEGRALS (1-DIM)
        DO IRHS=1,NSIZE
          NR=IP(IRHS,MODE)
          X=(-H(NR,M,3)/2+VHARM*H(NR,M,1))*MD
          J0=IRHS*(IRHS-1)/2
          DO ILHS=1,IRHS
            NL=IP(ILHS,MODE)
C           MULT=1-MOD(IABS(NR-NL),MD)
            Y=H(NL,M,1)
C           XA(ILHS+J0)=XA(ILHS+J0)+Y*X*MULT
            XA(ILHS+J0)=XA(ILHS+J0)+Y*X
          END DO
        END DO
C**********************************************************


C**NSIZE IS NO. UNIQUE INTEGRALS (1-DIM)
        DO IRHS=1,NSIZE
          NR=IP(IRHS,MODE)
          X=(VV+TERM)*H(NR,M,1)*MD
          J0=IRHS*(IRHS-1)/2
          DO ILHS=1,IRHS
            NL=IP(ILHS,MODE)
            Y=H(NL,M,1)
            XA(ILHS+J0)=XA(ILHS+J0)+Y*X
          END DO
        END DO
      END DO
      IF(ITIM1A.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM1A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE V0CV1(NMODE,MODE1,MODE2,MOD1,H,XQ,HTAU,XQTAU,XA,NSIZE,
     1NN,MM,NNTAU,MMTAU,IP,ISIZE,TEMP,JCI,JCIM,X0,T0,VP,VPR,VC,VCR,VR,
     2VRR,J21,KROT,MODINT,OMEGA,I9)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM),VC(MM,6),VR(J21,MM)
      REAL*4 VPR(MM),VCR(MM,6),VRR(J21,MM)
      DIMENSION X(9),Y(9),C(9)
      DIMENSION MODINT(NMODE)
      DIMENSION H(NN,MM,3,1),IP(ISIZE,NMODE)
      DIMENSION XA(1),XQ(MM)
      DIMENSION TEMP(I9,JCI,JCI)
      DIMENSION X0(I9,JCI,JCI,MM),T0(I9,JCIM,JCIM,MMTAU)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MOD1)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MOD1.EQ.ISYM(I,J))N1=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      CALL VDCV1(NMODE,MODE1,MODE2,MOD1,H,XQ,HTAU,XQTAU,XA,NSIZE,
     1NN,MM,MM/MD1,NNTAU,MMTAU,IP,ISIZE,TEMP,JCI,JCIM,X0,T0,
     2VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,OMEGA,I9)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VDCV1(NMODE,MODE1,MODE2,MOD1,H,XQ,HTAU,XQTAU,XA,NSIZE,
     1NN,MH,MM,NNTAU,MMTAU,IP,ISIZE,TEMP,JCI,JCIM,X0,T0,VP,VPR,VC,VCR,
     2VR,VRR,J21,KROT,MODINT,OMEGA,I9)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM),VC(MM,6),VR(J21,MM)
      REAL*4 VPR(MM),VCR(MM,6),VRR(J21,MM)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION X(9),Y(9),C(9)
      DIMENSION MODINT(NMODE)
CCCC  DIMENSION H(NN,MM,3,1),IP(ISIZE,NMODE)
      DIMENSION H(NN,MH,3,1),IP(ISIZE,NMODE)
      DIMENSION XA(1),XQ(MM)
      DIMENSION TEMP(I9,JCI,JCI)
      DIMENSION X0(I9,JCI,JCI,MM),T0(I9,JCIM,JCIM,MMTAU)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/NORMOD/NAMODE,LINBND,NONLIN,MODD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM1B.EQ.0)THEN
        WRITE(IOUT,*)'Calculating V0CV1'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

      IF(IFITRP.EQ.0)THEN
        IFACTL=INTFAC(NMODE,ICOUPL,1)
      ELSE
        IFACTL=JNTFAC(NMODE,IABS(IFITRP)-1,1)
      END IF
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=INTFAC(NMODE,ICOUPC,1)
      IF(MOLINC.GT.0)IFACTC=1

      KA=KROT/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      MDT=MODINT(NSMODE)
      MD1=MODINT(MOD1)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MOD1.EQ.ISYM(I,J))N1=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      MD=MD1*MDT

C**FORM INDIVIDUAL INTEGRATION TERMS (START)
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          DO NRR=1,JCIM
            NR=NRR+1-MOD(KA,2)+INCT
            X(1)=HTAU(NR,MTAU,1,LMAX)*MD
            X(2)=X(1)
            X(3)=HTAU(NR,MTAU,2,LMAX)*MD
            X(4)=X(1)
            X(5)=X(1)
            X(6)=X(3)
            X(7)=X(4)
            X(8)=HTAU(NR,MTAU,2,LMAX)*MD
            X(9)=X(1)
            DO NLL=1,JCIM
              NL=NLL+1-MOD(KA,2)+INCT
              Y(1)=HTAU(NL,MTAU,1,LMAX)
              Y(2)=Y(1)
              Y(3)=Y(1)
              Y(4)=HTAU(NL,MTAU,2,LMAX)
              Y(5)=Y(1)
              Y(6)=Y(1)
              Y(7)=Y(4)
              Y(8)=Y(4)
              Y(9)=Y(1)
              DO K=1,I9
                T0(K,NLL,NRR,MTAU)=Y(10-K)*X(10-K)
              END DO
            END DO
          END DO
        ELSE
          DO NRR=1,JCIM
            NR=2*NRR-MOD(NRR,2)+1-MOD(KA,2)+INCT
            X(1)=HTAU(NR,MTAU,1,LMAX)*MD
            X(2)=HTAU(NR,MTAU,2,LMAX)*MD
            X(3)=X(1)
            X(4)=X(2)
            X(5)=HTAU(NR,MTAU,3,LMAX)*MD
            X(6)=X(1)
            X(7)=HTAU(NR,MTAU,1,LMAX)*FACTRC*MD
            DO NLL=1,JCIM
              NL=2*NLL-MOD(NLL,2)+1-MOD(KA,2)+INCT
              Y(1)=HTAU(NL,MTAU,1,LMAX)
              DO K=1,7
                T0(K,NLL,NRR,MTAU)=Y(1)*X(K)
              END DO
            END DO
          END DO
        END IF
      END DO
CCCC  DO M=1,MM/MD1
      DO M=1,MM
        IF(.NOT.LINEAR)THEN
          DO NR1=1,JCI
            X(1)=H(NR1,M,2,1)
            X(2)=H(NR1,M,1,1)
            X(3)=X(2)
            X(4)=X(2)
            X(5)=X(1)
            X(6)=X(2)
            X(7)=X(1)
            X(8)=X(2)
            X(9)=X(2)
            DO NL1=1,JCI
              Y(1)=H(NL1,M,1,1)
              Y(2)=H(NL1,M,2,1)
              Y(3)=Y(1)
              Y(4)=Y(1)
              Y(5)=Y(2)
              Y(6)=Y(2)
              Y(7)=Y(1)
              Y(8)=Y(1)
              Y(9)=Y(1)
              DO K=1,I9
                X0(K,NL1,NR1,M)=Y(10-K)*X(10-K)
              END DO
            END DO
          END DO
        ELSE
          DO NR1=1,JCI
            X(1)=H(NR1,M,2,1)
            X(2)=H(NR1,M,1,1)
            X(3)=H(NR1,M,3,1)
            X(4)=X(1)
            X(5)=X(2)
            X(6)=X(2)
            X(7)=X(2)
            DO NL1=1,JCI
              Y(1)=H(NL1,M,1,1)
              DO K=1,7
                X0(K,NL1,NR1,M)=Y(1)*X(K)
              END DO
            END DO
          END DO
        END IF
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**LOOP ROUND TAU (START 2-MODE INTEGRATION)
      ITAU=INIT-INCTAU
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
CCCC      QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
CCCC      DELTA(4)=+QTAU
CCCC      DELTA(5)=-QTAU
        END IF

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.1)READ(61)VR
          IF(ICOUPC.GE.1)READ(81)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.1)READ(61)VRR
          IF(ICOUPC.GE.1)READ(81)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(71)VP
        ELSE
          READ(71)VPR
        END IF

C**********************************************************

        IF(.NOT.LINEAR)THEN
          DO IRHS1=1,JCI
            DO ILHS1=1,JCI
              DO K=1,I9
                TEMP(K,ILHS1,IRHS1)=0
              END DO
            END DO
          END DO
C**START 1-MODE INTEGRATION
CCCC      DO M=1,MM/MD1
          DO M=1,MM
            DO I=1,9
              C(I)=0
            END DO
            IF(JCOUPL.GT.0)THEN
              IF(ICOUPC.GE.1)THEN
C**NO WATSON TERM IF RPH
                C(1)=VC(M,1)*IFACTC
                C(2)=VC(M,1)*IFACTC
                C(3)=VC(M,2)*IFACTC
                C(4)=VC(M,2)*IFACTC
                C(5)=VC(M,3)*IFACTC
                C(6)=VC(M,4)*IFACTC
                C(7)=VC(M,4)*IFACTC
                C(8)=VC(M,5)*IFACTC
                C(9)=VC(M,6)*IFACTC
                IF(J21.GT.1)C(9)=C(9)+VR(KROT,M)*IFACTC
              END IF
              C(9)=C(9)+VP(M)*IFACTL
            ELSE
              IF(ICOUPC.GE.1)THEN
C**NO WATSON TERM IF RPH
                C(1)=VCR(M,1)*IFACTC
                C(2)=VCR(M,1)*IFACTC
                C(3)=VCR(M,2)*IFACTC
                C(4)=VCR(M,2)*IFACTC
                C(5)=VCR(M,3)*IFACTC
                C(6)=VCR(M,4)*IFACTC
                C(7)=VCR(M,4)*IFACTC
                C(8)=VCR(M,5)*IFACTC
                C(9)=VCR(M,6)*IFACTC
                IF(J21.GT.1)C(9)=C(9)+VRR(KROT,M)*IFACTC
              END IF
              C(9)=C(9)+VPR(M)*IFACTL
            END IF
            DO IRHS1=1,JCI
              DO ILHS1=1,JCI
                DO K=1,I9
                  TEMP(K,ILHS1,IRHS1)=TEMP(K,ILHS1,IRHS1)+
     1            X0(K,ILHS1,IRHS1,M)*C(10-K)
                END DO
              END DO
            END DO
          END DO
C**END 1-MODE INTEGRATION

C**NSIZE IS NO. UNIQUE INTEGRALS (2-DIM)
          DO IRHS=1,NSIZE
            NR=IP(IRHS,MODE1)
            IRTAU=IP(IRHS,MODE2)
            J0=IRHS*(IRHS-1)/2
            DO ILHS=1,IRHS
              NL=IP(ILHS,MODE1)
              ILTAU=IP(ILHS,MODE2)
              DO K=1,I9
                XA(ILHS+J0)=XA(ILHS+J0)+TEMP(K,NL,NR)*
     1          T0(K,ILTAU,IRTAU,MTAU)*DSTAU(ITAU)
              END DO
            END DO
          END DO
        ELSE
          DO IRHS1=1,JCI
            DO ILHS1=1,JCI
              DO K=1,7
                TEMP(K,ILHS1,IRHS1)=0
              END DO
            END DO
          END DO
C**START 1-MODE INTEGRATION
CCCC      DO M=1,MM/MD1
          DO M=1,MM
            Q=XQ(M)
            IF(JCOUPL.GT.0)THEN
              DO IRHS1=1,JCI
                DO ILHS1=1,JCI
                  IF(ICOUPC.GE.1)THEN
C**(6) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                    DO K=1,5
                      TEMP(K,ILHS1,IRHS1)=TEMP(K,ILHS1,IRHS1)-
     1                X0(K,ILHS1,IRHS1,M)*VC(M,K)*IFACTC
                    END DO
                    TEMP(4,ILHS1,IRHS1)=TEMP(4,ILHS1,IRHS1)-
     1              X0(4,ILHS1,IRHS1,M)*VC(M,4)*IFACTC
                    TEMP(7,ILHS1,IRHS1)=TEMP(7,ILHS1,IRHS1)+
     1              X0(7,ILHS1,IRHS1,M)*VR(KROT,M)
                  END IF
C**INCLUDE K.E. ONCE FOR TAU
                  TEMP(5,ILHS1,IRHS1)=TEMP(5,ILHS1,IRHS1)-
     1            X0(5,ILHS1,IRHS1,M)/(8*Q*Q)
C***************************
                  TEMP(6,ILHS1,IRHS1)=TEMP(6,ILHS1,IRHS1)+
     1            X0(6,ILHS1,IRHS1,M)*VP(M)*IFACTL
                END DO
              END DO
            ELSE
              DO IRHS1=1,JCI
                DO ILHS1=1,JCI
                  IF(ICOUPC.GE.1)THEN
C**(6) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                    DO K=1,5
                      TEMP(K,ILHS1,IRHS1)=TEMP(K,ILHS1,IRHS1)-
     1                X0(K,ILHS1,IRHS1,M)*VCR(M,K)*IFACTC
                    END DO
                    TEMP(4,ILHS1,IRHS1)=TEMP(4,ILHS1,IRHS1)-
     1              X0(4,ILHS1,IRHS1,M)*VCR(M,4)*IFACTC
                    TEMP(7,ILHS1,IRHS1)=TEMP(7,ILHS1,IRHS1)+
     2              X0(7,ILHS1,IRHS1,M)*VRR(KROT,M)
                  END IF
C**INCLUDE K.E. ONCE FOR TAU
                  TEMP(5,ILHS1,IRHS1)=TEMP(5,ILHS1,IRHS1)-
     1            X0(5,ILHS1,IRHS1,M)/(8*Q*Q)
C***************************
                  TEMP(6,ILHS1,IRHS1)=TEMP(6,ILHS1,IRHS1)+
     1            X0(6,ILHS1,IRHS1,M)*VPR(M)*IFACTL
                END DO
              END DO
            END IF

C**********************************************************
C**INCLUDE K.E. ONCE FOR Q
            IF(IWHICH.EQ.0)THEN
              VHARM=OMEGA*OMEGA*Q*Q/2
            ELSE
              VHARM=0
            END IF
            DO IRHS1=1,JCI
              DO ILHS1=1,JCI
                TEMP(3,ILHS1,IRHS1)=TEMP(3,ILHS1,IRHS1)-
     1          X0(3,ILHS1,IRHS1,M)/2
                TEMP(6,ILHS1,IRHS1)=TEMP(6,ILHS1,IRHS1)+
     1          X0(6,ILHS1,IRHS1,M)*VHARM
              END DO
            END DO
C**********************************************************

          END DO
C**END 1-MODE INTEGRATION

C**NSIZE IS NO. UNIQUE INTEGRALS (2-DIM)
          DO IRHS=1,NSIZE
            NR=IP(IRHS,MODE1)
            IRRTAU=IP(IRHS,MODE2)
            IRTAU=IRRTAU/2+MOD(IRRTAU,2)
            J0=IRHS*(IRHS-1)/2
            DO ILHS=1,IRHS
              NL=IP(ILHS,MODE1)
              ILLTAU=IP(ILHS,MODE2)
              ILTAU=ILLTAU/2+MOD(ILLTAU,2)
              DO K=1,7
                XA(ILHS+J0)=XA(ILHS+J0)+TEMP(K,NL,NR)*
     1          T0(K,ILTAU,IRTAU,MTAU)
              END DO
            END DO
          END DO
        END IF
      END DO
C**END TAU LOOP (2-MODE INTEGRATION)
      IF(ITIM1B.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM1B=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VCI1(NMODE,MODE,XA,XK,NSIZE,IP,ISIZMX,ISIZE,IP1,
     1ISIZE1,ISTART,IEND,ILR,IRL,LANIND,XL,LAN12D,
     2XD,ZL,ICOUNT,ISIZEX,XKAN,MAXQU,MAXPOW,J21,MOD1,NP1,CP1,JP1,
     3NTOT1,MMX1)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      LOGICAL LANCZ,LANZA,LANZB
      DIMENSION IP(ISIZMX,NMODE)
C**
      DIMENSION ILR(ISIZEX),IRL(ISIZEX)
C**TEMPORARY - HERMITIAN
C     DIMENSION XA(ISIZE,1),XK(1),IP1(ISIZE1,1)
C**TEMPORARY - HERMITIAN
      DIMENSION XA(1),XK(1),XL(LAN12D,ISIZE),XD(ISIZEX),
     1ZL(LAN12D,ICOUNT)
C**
      DIMENSION IP1(ISIZE1,1)
C**ANALYTIC
      DIMENSION NP1(NTOT1),CP1(MMX1,NTOT1),JP1(MMX1,NTOT1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/LANCZO/LANCZ,LANZA,LANZB
      COMMON/WHICH/IWHICH
      COMMON/ILAST/ILAST
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM1A.EQ.1)THEN
        WRITE(IOUT,*)'Calculating VCI1'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

C**ORIGINAL ALGORITHM AND 1 AND 2-DIM MATRIX
      IF(LANIND.EQ.0.OR.LANIND.EQ.1)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=1,IEND
          NR=IP(IRHS,MODE)
C**FIND RHS INDEX (TRIVIAL CASE)
          DO IR=1,NSIZE
            IF(NR.EQ.IP1(IR,1))GO TO 1000
          END DO
C**TEMPORARY
      WRITE(IOUT,*)'NO MATCH IN VCI1 FOR BASIS'
      WRITE(IOUT,*)'ELEMENT:',NR
      STOP 'VCI1 BASIS BUG'
C**TEMPORARY
1000      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
C**TEMPORARY - HERMITIAN
C         DO ILHS=ISTART,IEND
C**TEMPORARY - HERMITIAN
          DO ILHS=1,IRHS
C**OVERLAP OF REMAINING STATES
            IS=1
            DO K=1,NMODE
              IF(IS.EQ.0)GO TO 3000
              IF(K.NE.MODE.AND.(IP(IRHS,K).NE.IP(ILHS,K)))IS=0
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            Y=0
            IF(IWHICH.LT.0.AND.MOLINC.GT.0)THEN
C**ANALYTIC
              JR=IP1(MR,1)
              JL=IP1(ML,1)
              DO I=1,NP1(MOD1)
                K=JP1(I,MOD1)+1
                Y=Y+CP1(I,MOD1)*XKAN(JL,JR,K,MOD1)
              END DO
C**ANALYTIC
            END IF
C**TEMPORARY - HERMITIAN
C           XA(ILHS,IRHS)=XA(ILHS,IRHS)+(X+Y)*IS
C**TEMPORARY - HERMITIAN
            XA(ILHS+J0)=XA(ILHS+J0)+(X+Y)*IS
3000        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
        GO TO 7000
      END IF

C**SET UP MATRIX XL(LAN12D,ISIZE-LAN12D) IN CORE (XL AND XA ARE SAME
C**ARRAY - CF LANMAX)  ALSO SET UP DIAGONAL ELEMENTS IN XD(ISIZE)
      IF(LANIND.EQ.2)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (RHS)
        DO IRHS=ISTART,IEND
          NR1=IP(IRHS,MODE)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.EQ.IP1(IR,1))GO TO 1001
          END DO
1001      CONTINUE
          IRL(IRHS)=IR
        END DO
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (LHS)
        DO ILHS=1,LAN12D
          NL1=IP(ILHS,MODE)
C**FIND LHS INDEX
          DO IL=1,NSIZE
            IF(NL1.EQ.IP1(IL,1))GO TO 1002
          END DO
1002      CONTINUE
          ILR(ILHS)=IL
        END DO

        DO IRHS=ISTART,IEND
          IR=IRL(IRHS)
          DO ILHS=1,LAN12D
C**OVERLAP OF REMAINING STATES
            IS=1
            DO K=1,NMODE
              IF(IS.EQ.0)GO TO 3002
              IF(K.NE.MODE.AND.(IP(IRHS,K).NE.IP(ILHS,K)))IS=0
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XL(ILHS,IRHS-ISTART+1)=XL(ILHS,IRHS-ISTART+1)+X*IS
3002        CONTINUE
          END DO
C**DIAGONAL ELEMENT
          IL=IR
          I=IR*(IR-1)/2+IL
          X=XK(I)
          XD(IRHS)=XD(IRHS)+X
        END DO
      END IF

C**SET UP ARRAY XA((ISIZE-LAN12D)*(ISIZE-LAN12D+1)/2)
C**TRUNCATE IF ROW/COLUMN IN IFLAG(ISIZE)=0
      IF(LANIND.EQ.3)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=LAN12D+1,IEND
          NR1=IP(IRHS,MODE)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.EQ.IP1(IR,1))GO TO 1004
          END DO
1004      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
          DO ILHS=LAN12D+1,IRHS
C**OVERLAP OF REMAINING STATES
            IS=1
            DO K=1,NMODE
              IF(IS.EQ.0)GO TO 3004
              IF(K.NE.MODE.AND.(IP(IRHS,K).NE.IP(ILHS,K)))IS=0
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XA(ILHS+J0)=XA(ILHS+J0)+X*IS
3004        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
      END IF

7000  CONTINUE
      IF(ITIM1A.EQ.1)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM1A=2
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VCV1(NMODE,MODE,XA,XK,NSIZE,IP,ISIZMX,ISIZE,IP2,
     1ISIZE2,ISTART,IEND,ILR,IRL,LANIND,XL,LAN12D,
     2XD,ZL,ICOUNT,ISIZEX)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LANCZ,LANZA,LANZB
      DIMENSION IP(ISIZMX,NMODE)
C**
      COMMON/VCIVN/IARRAY(50)
C**
      DIMENSION ILR(ISIZEX),IRL(ISIZEX)
      DIMENSION XA(1),XK(1),XL(LAN12D,ISIZE),XD(ISIZEX),
     1ZL(LAN12D,ICOUNT)
C**
      DIMENSION IP2(ISIZE2,2)
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/LANCZO/LANCZ,LANZA,LANZB
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM1A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating VCV1'
        CALL TIMIT(1)
        CALL FLUSH(IOUT)
      END IF

      DO K=1,NMODE-1
        IARRAY(K)=0
        IF(K.NE.MODE)GO TO 5000
6000    CONTINUE
        IARRAY(K)=1
5000    CONTINUE
      END DO

C**ORIGINAL ALGORITHM AND 1 AND 2-DIM MATRIX
      IF(LANIND.EQ.0.OR.LANIND.EQ.1)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=1,IEND
          NR=IP(IRHS,MODE)
          NRTAU=IP(IRHS,NMODE)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR.NE.IP2(IR,1))GO TO 2000
            IF(NRTAU.EQ.IP2(IR,2))GO TO 1000
2000        CONTINUE
          END DO
1000      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
          DO ILHS=1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE-1
              IF(IARRAY(K).NE.0)GO TO 4000
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3000
4000          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XA(ILHS+J0)=XA(ILHS+J0)+X
3000        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
        GO TO 7000
      END IF

C**SET UP MATRIX XL(LAN12D,ISIZE-LAN12D) IN CORE (XL AND XA ARE SAME
C**ARRAY - CF LANMAX)  ALSO SET UP DIAGONAL ELEMENTS IN XD(ISIZE)
      IF(LANIND.EQ.2)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (RHS)
        DO IRHS=ISTART,IEND
          NR1=IP(IRHS,MODE)
          NRTAU=IP(IRHS,NMODE)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP2(IR,1))GO TO 2001
            IF(NRTAU.EQ.IP2(IR,2))GO TO 1001
2001        CONTINUE
          END DO
1001      CONTINUE
          IRL(IRHS)=IR
        END DO
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (LHS)
        DO ILHS=1,LAN12D
          NL1=IP(ILHS,MODE)
          NLTAU=IP(ILHS,NMODE)
C**FIND LHS INDEX
          DO IL=1,NSIZE
            IF(NL1.NE.IP2(IL,1))GO TO 2002
            IF(NLTAU.EQ.IP2(IL,2))GO TO 1002
2002        CONTINUE
          END DO
1002      CONTINUE
          ILR(ILHS)=IL
        END DO

        DO IRHS=ISTART,IEND
          IR=IRL(IRHS)
          DO ILHS=1,LAN12D
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE-1
              IF(IARRAY(K).NE.0)GO TO 4002
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3002
4002          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XL(ILHS,IRHS-ISTART+1)=XL(ILHS,IRHS-ISTART+1)+X
3002        CONTINUE
          END DO
C**DIAGONAL ELEMENT
          IL=IR
          I=IR*(IR-1)/2+IL
          X=XK(I)
          XD(IRHS)=XD(IRHS)+X
        END DO
      END IF

C**SET UP ARRAY XA((ISIZE-LAN12D)*(ISIZE-LAN12D+1)/2)
C**TRUNCATE IF ROW/COLUMN IN IFLAG(ISIZE)=0
      IF(LANIND.EQ.3)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=LAN12D+1,IEND
          NR1=IP(IRHS,MODE)
          NRTAU=IP(IRHS,NMODE)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP2(IR,1))GO TO 2004
            IF(NRTAU.EQ.IP2(IR,2))GO TO 1004
2004        CONTINUE
          END DO
1004      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
          DO ILHS=LAN12D+1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE-1
              IF(IARRAY(K).NE.0)GO TO 4004
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3004
4004          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XA(ILHS+J0)=XA(ILHS+J0)+X
3004        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
      END IF

7000  CONTINUE
      IF(ITIM1A.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM1A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE V0CI2(NMODE,MODE1,MODE2,MOD1,MOD2,H1,XQ1,H2,XQ2,NN1,
     1MM1,NN2,MM2,XA,NSIZE,IP,ISIZE,TEMP,JCI1,JCI2,X0,Y0,VP,VPR,
     2VC,VCR,VR,VRR,J21,KROT,MODINT,I5,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,6),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,6),VRR(J21,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION H1(NN1,MM1,3),H2(NN2,MM2,3)
      DIMENSION IP(ISIZE,NMODE)
      DIMENSION TEMP(I5,JCI2,JCI2)
      DIMENSION X0(I5,JCI1,JCI1,MM1),Y0(I5,JCI2,JCI2,MM2)
      DIMENSION X(5),Y(5),C(5)
      DIMENSION XA(1)
      DIMENSION XQ1(MM1),XQ2(MM2)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/TYPE/LINEAR
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MOD1)
      MD2=MODINT(MOD2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MOD1.EQ.ISYM(I,J))N1=I
          IF(MOD2.EQ.ISYM(I,J))N2=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      CALL VDCI2(NMODE,MODE1,MODE2,MOD1,MOD2,H1,XQ1,H2,XQ2,NN1,MM1,
     1MM1/MD1,NN2,MM2,MM2/MD2,XA,NSIZE,IP,ISIZE,TEMP,JCI1,JCI2,
     2X0,Y0,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,I5,IND)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VDCI2(NMODE,MODE1,MODE2,MOD1,MOD2,H1,XQ1,H2,XQ2,NN1,
     1MH1,MM1,NN2,MH2,MM2,XA,NSIZE,IP,ISIZE,TEMP,JCI1,JCI2,X0,Y0,
     2VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,I5,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,6),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,6),VRR(J21,MM2,MM1)
      DIMENSION MODINT(NMODE)
CCCC  DIMENSION H1(NN1,MM1,3),H2(NN2,MM2,3)
      DIMENSION H1(NN1,MH1,3),H2(NN2,MH2,3)
      DIMENSION IP(ISIZE,NMODE)
      DIMENSION TEMP(I5,JCI2,JCI2)
      DIMENSION X0(I5,JCI1,JCI1,MM1),Y0(I5,JCI2,JCI2,MM2)
      DIMENSION X(5),Y(5),C(5)
      DIMENSION XA(1)
      DIMENSION XQ1(MM1),XQ2(MM2)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/XSAVES/ICOUPX,ICOUCX,JCOUPS,JCOUCS
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/TYPE/LINEAR
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/FILASS/IOUT,INP

      IF(ITIM2A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating V0CI2'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,2)
      IFACTL=INTFAC(NMODE,ICOUPL,2)
      IF(MOLINC.GT.0)IFACTL=1
      IF(MOLINC.GT.0)IFACTC=1
      IF(IWHICH.EQ.0)IFACTL=1
      IF(IWHICH.LT.0.AND.MOLINC.LT.0)IFACTL=1

C***********************************************************

C     IF(IND.EQ.0)THEN
        IF(JCOUPL.GT.0)THEN
          IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(I72)VP
        ELSE
          IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(I72)VPR
        END IF
C     END IF
C     IF(IND.NE.0)THEN
        ICCCCC=ICOUPC
        IF(MOLINC.EQ.0)THEN
          ICCCCC=ICOUCX
        END IF
        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICCCCC.GT.1)READ(I62)VR
          IF(ICCCCC.GT.1)READ(I82)VC
        ELSE
          IF(J21.GT.1.AND.ICCCCC.GT.1)READ(I62)VRR
          IF(ICCCCC.GT.1)READ(I82)VCR
        END IF
        IF(MOLINC.EQ.0.AND.ICOUPL.LT.2)RETURN
C       RETURN
C     END IF

C***********************************************************

      MD1=MODINT(MOD1)
      MD2=MODINT(MOD2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MOD1.EQ.ISYM(I,J))N1=I
          IF(MOD2.EQ.ISYM(I,J))N2=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      MD=MD1*MD2

      IF(LINEAR)GO TO 1000
C***********************************************************
C**LEFT-RIGHT DIFFERENTIATION
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        DO NR1=1,JCI1
          X(1)=H1(NR1,M1,2)*MD
          X(2)=H1(NR1,M1,1)*MD
          X(3)=X(1)
          X(4)=X(2)
          X(5)=X(2)
          DO NL1=1,JCI1
            Y(1)=H1(NL1,M1,2)
            Y(2)=Y(1)
            Y(3)=H1(NL1,M1,1)
            Y(4)=Y(3)
            Y(5)=Y(3)
            DO K=1,I5
              X0(K,NL1,NR1,M1)=Y(6-K)*X(6-K)
            END DO
          END DO
        END DO
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        DO NR2=1,JCI2
          X(1)=H2(NR2,M2,1)
          X(2)=H2(NR2,M2,2)
          X(3)=X(1)
          X(4)=X(2)
          X(5)=X(1)
          DO NL2=1,JCI2
            Y(1)=H2(NL2,M2,1)
            Y(2)=Y(1)
            Y(3)=H2(NL2,M2,2)
            Y(4)=Y(3)
            Y(5)=Y(1)
            DO K=1,I5
              Y0(K,NL2,NR2,M2)=Y(6-K)*X(6-K)
            END DO
          END DO
        END DO
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
      KK=1
C**START 2-MODE INTEGRATION
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        DO IRHS2=1,JCI2
          DO ILHS2=1,JCI2
            DO K=1,I5
              TEMP(K,ILHS2,IRHS2)=0
            END DO
          END DO
        END DO
C**START 1-MODE INTEGRATION
CCCC    DO M2=1,MM2/MD2
        DO M2=1,MM2
          DO I=1,5
            C(I)=0
          END DO
          IF(JCOUPC.GE.0)THEN
            IF(ICOUPC.GT.1)THEN
              C(1)=VC(M2,M1,3)*IFACTC
              C(2)=VC(M2,M1,4)*IFACTC
              C(3)=VC(M2,M1,4)*IFACTC
              C(4)=VC(M2,M1,5)*IFACTC
              C(5)=VC(M2,M1,6)*IFACTC*KK
              IF(J21.GT.1)C(5)=C(5)+VR(KROT,M2,M1)*IFACTC
            END IF
            IF(IWHICH.GE.0.OR.MOLINC.LE.0)C(5)=C(5)+VP(M2,M1)*IFACTL
          ELSE
            IF(ICOUPC.GT.1)THEN
              C(1)=VCR(M2,M1,3)*IFACTC
              C(2)=VCR(M2,M1,4)*IFACTC
              C(3)=VCR(M2,M1,4)*IFACTC
              C(4)=VCR(M2,M1,5)*IFACTC
              C(5)=VCR(M2,M1,6)*IFACTC*KK
              IF(J21.GT.1)C(5)=C(5)+VRR(KROT,M2,M1)*IFACTC
            END IF
            IF(IWHICH.GE.0.OR.MOLINC.LE.0)C(5)=C(5)+VPR(M2,M1)*IFACTL
          END IF
          DO IRHS2=1,JCI2
            DO ILHS2=1,JCI2
              DO K=1,I5
                TEMP(K,ILHS2,IRHS2)=TEMP(K,ILHS2,IRHS2)+
     1          Y0(K,ILHS2,IRHS2,M2)*C(6-K)
              END DO
            END DO
          END DO
        END DO
C**END 1-MODE INTEGRATION

C**NSIZE IS NO. UNIQUE INTEGRALS (2-DIM)
        DO IRHS=1,NSIZE
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          J0=IRHS*(IRHS-1)/2
          DO ILHS=1,IRHS
            NL1=IP(ILHS,MODE1)
            NL2=IP(ILHS,MODE2)
            DO K=1,I5
              XA(ILHS+J0)=XA(ILHS+J0)+
     1        TEMP(K,NL2,NR2)*X0(K,NL1,NR1,M1)
            END DO
          END DO
        END DO
      END DO
C**END 2-MODE INTEGRATION
      GO TO 2000

1000  CONTINUE
C     IF(LINEAR)KK=MOD(KA,2)*MOD(KA,2)
      KK=KA*KA
C***********************************************************
C**RIGHT-ONLY DIFFERENTIATION
      DO M1=1,MM1
        DO ILHS2=1,JCI2
          DO IRHS2=1,JCI2
            DO K=1,I5
              TEMP(K,ILHS2,IRHS2)=0
            END DO
          END DO
        END DO
        IF(JCOUPL.GT.0)THEN
          DO M2=1,MM2
            DO IRHS2=1,JCI2
              X1=0
              X2=0
              X3=0
              Y1=H2(IRHS2,M2,1)
              IF(ICOUPC.GT.1)THEN
                Y2=H2(IRHS2,M2,2)
                Y3=H2(IRHS2,M2,3)
                X1=X1-(VC(M2,M1,2)*Y2+VC(M2,M1,5)*Y3)*IFACTC
                X1=X1+VC(M2,M1,6)*Y1*IFACTC*KK
                IF(J21.GT.1)
     1          X1=X1+VR(KROT,M2,M1)*Y1*IFACTC
                X2=X2-(VC(M2,M1,1)*Y1+2*VC(M2,M1,4)*Y2)*IFACTC
                X3=X3-VC(M2,M1,3)*Y1*IFACTC
                DO ILHS2=1,JCI2
                  YY=H2(ILHS2,M2,1)
                  TEMP(2,ILHS2,IRHS2)=TEMP(2,ILHS2,IRHS2)+YY*X2*MD
                  TEMP(3,ILHS2,IRHS2)=TEMP(3,ILHS2,IRHS2)+YY*X3*MD
                END DO
              END IF
              IF(IWHICH.GE.0.OR.MOLINC.LE.0)X1=X1+VP(M2,M1)*Y1*IFACTL
              DO ILHS2=1,JCI2
                YY=H2(ILHS2,M2,1)
                TEMP(1,ILHS2,IRHS2)=TEMP(1,ILHS2,IRHS2)+YY*X1*MD
              END DO
            END DO
          END DO
        ELSE
          DO M2=1,MM2
            DO IRHS2=1,JCI2
              X1=0
              X2=0
              X3=0
              Y1=H2(IRHS2,M2,1)
              IF(ICOUPC.GT.1)THEN
                Y2=H2(IRHS2,M2,2)
                Y3=H2(IRHS2,M2,3)
                X1=X1-(VCR(M2,M1,2)*Y2+VCR(M2,M1,5)*Y3)*IFACTC
                X1=X1+VCR(M2,M1,6)*Y1*IFACTC*KK
                IF(J21.GT.1)
     1          X1=X1+VRR(KROT,M2,M1)*Y1*IFACTC
                X2=-(VCR(M2,M1,1)*Y1+2*VCR(M2,M1,4)*Y2)*IFACTC
                X3=-VCR(M2,M1,3)*Y1*IFACTC
                DO ILHS2=1,JCI2
                  YY=H2(ILHS2,M2,1)
                  TEMP(2,ILHS2,IRHS2)=TEMP(2,ILHS2,IRHS2)+YY*X2*MD
                  TEMP(3,ILHS2,IRHS2)=TEMP(3,ILHS2,IRHS2)+YY*X3*MD
                END DO
              END IF
              IF(IWHICH.GE.0.OR.MOLINC.LE.0)X1=X1+VPR(M2,M1)*Y1*IFACTL
              DO ILHS2=1,JCI2
                YY=H2(ILHS2,M2,1)
                TEMP(1,ILHS2,IRHS2)=TEMP(1,ILHS2,IRHS2)+YY*X1*MD
              END DO
            END DO
          END DO
        END IF
C**ISIZE IS NO. UNIQUE INTEGRALS (2-DIM)
        I3=1
        IF(ICOUPC.GT.1)I3=3
        DO IRHS=1,NSIZE
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          X(1)=H1(NR1,M1,1)
          X(2)=H1(NR1,M1,2)
          X(3)=H1(NR1,M1,3)
          J0=IRHS*(IRHS-1)/2
          DO ILHS=1,IRHS
            NL1=IP(ILHS,MODE1)
            NL2=IP(ILHS,MODE2)
            YY=H1(NL1,M1,1)
            DO K=1,I3
              XA(ILHS+J0)=XA(ILHS+J0)+YY*TEMP(K,NL2,NR2)*X(K)
            END DO
          END DO
        END DO
      END DO

2000  CONTINUE
      IF(ITIM2A.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM2A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE V0CV2(NMODE,MODE1,MODE2,MODE3,MOD1,MOD2,H1,XQ1,H2,XQ2,
     1HTAU,XQTAU,XA,NSIZE,NN1,MM1,NN2,MM2,NNTAU,MMTAU,IP,ISIZE,TEMP,
     2TEMP2,JCI1,JCI2,JCIM,X0,Y0,T0,VP,VPR,VC,VCR,VR,VRR,J21,KROT,
     3MODINT,I16)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,10),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,10),VRR(J21,MM2,MM1)
      DIMENSION X(16),Y(16),C(16)
      DIMENSION MODINT(NMODE)
      DIMENSION H1(NN1,MM1,3),H2(NN2,MM2,3),IP(ISIZE,NMODE)
      DIMENSION XA(1),XQ1(MM1),XQ2(MM2)
      DIMENSION TEMP(I16,JCI1,JCI2,JCI1,JCI2),TEMP2(I16,JCI2,JCI2)
      DIMENSION X0(I16,JCI1,JCI1,MM1),Y0(I16,JCI2,JCI2,MM2)
      DIMENSION T0(I16,JCIM,JCIM,MMTAU)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MOD1)
      MD2=MODINT(MOD2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MOD1.EQ.ISYM(I,J))N1=I
          IF(MOD2.EQ.ISYM(I,J))N2=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      CALL VDCV2(NMODE,MODE1,MODE2,MODE3,MOD1,MOD2,H1,XQ1,H2,XQ2,
     1HTAU,XQTAU,XA,NSIZE,NN1,MM1,MM1/MD1,NN2,MM2,MM2/MD2,NNTAU,MMTAU,
     2IP,ISIZE,TEMP,TEMP2,JCI1,JCI2,JCIM,X0,Y0,T0,VP,VPR,VC,VCR,VR,VRR,
     3J21,KROT,MODINT,I16)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VDCV2(NMODE,MODE1,MODE2,MODE3,MOD1,MOD2,H1,XQ1,H2,XQ2,
     1HTAU,XQTAU,XA,NSIZE,NN1,MH1,MM1,NN2,MH2,MM2,NNTAU,MMTAU,IP,ISIZE,
     2TEMP,TEMP2,JCI1,JCI2,JCIM,X0,Y0,T0,VP,VPR,VC,VCR,VR,VRR,J21,KROT,
     3MODINT,I16)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,10),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,10),VRR(J21,MM2,MM1)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION X(16),Y(16),C(16)
      DIMENSION MODINT(NMODE)
CCCC  DIMENSION H1(NN1,MM1,3),H2(NN2,MM2,3),IP(ISIZE,NMODE)
      DIMENSION H1(NN1,MH1,3),H2(NN2,MH2,3),IP(ISIZE,NMODE)
      DIMENSION XA(1),XQ1(MM1),XQ2(MM2)
      DIMENSION TEMP(I16,JCI1,JCI2,JCI1,JCI2),TEMP2(I16,JCI2,JCI2)
      DIMENSION X0(I16,JCI1,JCI1,MM1),Y0(I16,JCI2,JCI2,MM2)
      DIMENSION T0(I16,JCIM,JCIM,MMTAU)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM2A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating V0CV2'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

      IF(IFITRP.EQ.0)THEN
        IFACTL=INTFAC(NMODE,ICOUPL,2)
      ELSE
        IFACTL=JNTFAC(NMODE,IABS(IFITRP)-1,2)
      END IF
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=INTFAC(NMODE,ICOUPC,2)
      IF(MOLINC.GT.0)IFACTC=1

      KA=KROT/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      MDT=MODINT(NSMODE)
      MD1=MODINT(MOD1)
      MD2=MODINT(MOD2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MOD1.EQ.ISYM(I,J))N1=I
          IF(MOD2.EQ.ISYM(I,J))N2=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      MD=MD1*MD2*MDT

C**FORM INDIVIDUAL INTEGRATION TERMS (START)
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          DO NRR=1,JCIM
            NR=NRR+1-MOD(KA,2)+INCT
            X(1)=HTAU(NR,MTAU,1,LMAX)*MD
            DO I=2,16
              X(I)=X(1)
            END DO
            X(5)=HTAU(NR,MTAU,2,LMAX)*MD
            X(10)=X(5)
            X(13)=X(5)
            X(15)=X(5)
            DO NLL=1,JCIM
              NL=NLL+1-MOD(KA,2)+INCT
              Y(1)=HTAU(NL,MTAU,1,LMAX)
              DO I=2,16
                Y(I)=Y(1)
              END DO
              Y(6)=HTAU(NL,MTAU,2,LMAX)
              Y(11)=Y(6)
              Y(14)=Y(6)
              Y(15)=Y(6)
              DO K=1,I16
                T0(K,NLL,NRR,MTAU)=Y(17-K)*X(17-K)
              END DO
            END DO
          END DO
        ELSE
          DO NRR=1,JCIM
            NR=2*NRR-MOD(NRR,2)+1-MOD(KA,2)+INCT
            X(1)=HTAU(NR,MTAU,1,LMAX)*MD
            DO I=2,10
              X(I)=X(1)
            END DO
            X(3)=HTAU(NR,MTAU,2,LMAX)*MD
            X(6)=X(3)
            X(8)=X(3)
            X(9)=HTAU(NR,MTAU,3,LMAX)*MD
            X(11)=HTAU(NR,MTAU,1,LMAX)*FACTRC*MD
            DO NLL=1,JCIM
              NL=2*NLL-MOD(NLL,2)+1-MOD(KA,2)+INCT
              Y(1)=HTAU(NL,MTAU,1,LMAX)
              DO K=1,11
                T0(K,NLL,NRR,MTAU)=Y(1)*X(K)
              END DO
            END DO
          END DO
        END IF
      END DO
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        IF(.NOT.LINEAR)THEN
          DO NR1=1,JCI1
            X(1)=H1(NR1,M1,2)
            X(2)=H1(NR1,M1,1)
            DO I=3,16
              X(I)=X(2)
            END DO
            X(7)=X(1)
            X(9)=X(1)
            X(11)=X(1)
            DO NL1=1,JCI1
              Y(1)=H1(NL1,M1,1)
              Y(2)=H1(NL1,M1,2)
              DO I=3,16
                Y(I)=Y(1)
              END DO
              Y(7)=Y(2)
              Y(8)=Y(2)
              Y(10)=Y(2)
              DO K=1,I16
                X0(K,NL1,NR1,M1)=Y(17-K)*X(17-K)
              END DO
            END DO
          END DO
        ELSE
          DO NR1=1,JCI1
            X(1)=H1(NR1,M1,2)
            X(2)=H1(NR1,M1,1)
            DO I=3,11
              X(I)=X(2)
            END DO
            X(4)=H1(NR1,M1,3)
            X(5)=X(1)
            X(6)=X(1)
            DO NL1=1,JCI1
              Y(1)=H1(NL1,M1,1)
              DO K=1,11
                X0(K,NL1,NR1,M1)=Y(1)*X(K)
              END DO
            END DO
          END DO
        END IF
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        IF(.NOT.LINEAR)THEN
          DO NR2=1,JCI2
            X(1)=H2(NR2,M2,1)
            DO I=2,16
              X(I)=X(1)
            END DO
            X(3)=H2(NR2,M2,2)
            X(8)=X(3)
            X(12)=X(3)
            X(14)=X(3)
            DO NL2=1,JCI2
              Y(1)=H2(NL2,M2,1)
              DO I=2,16
                Y(I)=Y(1)
              END DO
              Y(4)=H2(NL2,M2,2)
              Y(9)=Y(4)
              Y(12)=Y(4)
              Y(13)=Y(4)
              DO K=1,I16
                Y0(K,NL2,NR2,M2)=Y(17-K)*X(17-K)
              END DO
            END DO
          END DO
        ELSE
          DO NR2=1,JCI2
            X(1)=H2(NR2,M2,1)
            X(2)=H2(NR2,M2,2)
            DO I=3,11
              X(I)=X(1)
            END DO
            X(5)=X(2)
            X(7)=H2(NR2,M2,3)
            X(8)=X(2)
            DO NL2=1,JCI2
              Y(1)=H2(NL2,M2,1)
              DO K=1,11
                Y0(K,NL2,NR2,M2)=Y(1)*X(K)
              END DO
            END DO
          END DO
        END IF
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**LOOP ROUND TAU (START 3-MODE INTEGRATION)
      ITAU=INIT-INCTAU
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
CCCC      QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
CCCC      DELTA(4)=+QTAU
CCCC      DELTA(5)=-QTAU
        END IF

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.2)READ(62)VR
          IF(ICOUPC.GE.2)READ(82)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.2)READ(62)VRR
          IF(ICOUPC.GE.2)READ(82)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(72)VP
        ELSE
          READ(72)VPR
        END IF

C***********************************************************

        IF(.NOT.LINEAR)THEN
          DO IRHS2=1,JCI2
            DO IRHS1=1,JCI1
              DO ILHS2=1,JCI2
                DO ILHS1=1,JCI1
                  DO K=1,I16
                    TEMP(K,ILHS1,ILHS2,IRHS1,IRHS2)=0
                  END DO
                END DO
              END DO
            END DO
          END DO
C**START 2-MODE INTEGRATION
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
            DO IRHS2=1,JCI2
              DO ILHS2=1,JCI2
                DO K=1,I16
                  TEMP2(K,ILHS2,IRHS2)=0
                END DO
              END DO
            END DO
C**START 1-MODE INTEGRATION
CCCC        DO M2=1,MM2/MD2
            DO M2=1,MM2
              DO I=1,16
                C(I)=0
              END DO
              IF(JCOUPL.GT.0)THEN
                IF(ICOUPC.GE.2)THEN
C**NO WATSON TERM IF RPH
                  C(1)=VC(M2,M1,1)*IFACTC
                  C(2)=VC(M2,M1,1)*IFACTC
                  C(3)=VC(M2,M1,2)*IFACTC
                  C(4)=VC(M2,M1,2)*IFACTC
                  C(5)=VC(M2,M1,3)*IFACTC
                  C(6)=VC(M2,M1,3)*IFACTC
                  C(7)=VC(M2,M1,4)*IFACTC
                  C(8)=VC(M2,M1,5)*IFACTC
                  C(9)=VC(M2,M1,5)*IFACTC
                  C(10)=VC(M2,M1,6)*IFACTC
                  C(11)=VC(M2,M1,6)*IFACTC
                  C(12)=VC(M2,M1,7)*IFACTC
                  C(13)=VC(M2,M1,8)*IFACTC
                  C(14)=VC(M2,M1,8)*IFACTC
                  C(15)=VC(M2,M1,9)*IFACTC
                  C(16)=VC(M2,M1,10)*IFACTC
                  IF(J21.GT.1)C(16)=C(16)+VR(KROT,M2,M1)*IFACTC
                END IF
                C(16)=C(16)+VP(M2,M1)*IFACTL
              ELSE
                IF(ICOUPC.GE.2)THEN
C**NO WATSON TERM IF RPH
                  C(1)=VCR(M2,M1,1)*IFACTC
                  C(2)=VCR(M2,M1,1)*IFACTC
                  C(3)=VCR(M2,M1,2)*IFACTC
                  C(4)=VCR(M2,M1,2)*IFACTC
                  C(5)=VCR(M2,M1,3)*IFACTC
                  C(6)=VCR(M2,M1,3)*IFACTC
                  C(7)=VCR(M2,M1,4)*IFACTC
                  C(8)=VCR(M2,M1,5)*IFACTC
                  C(9)=VCR(M2,M1,5)*IFACTC
                  C(10)=VCR(M2,M1,6)*IFACTC
                  C(11)=VCR(M2,M1,6)*IFACTC
                  C(12)=VCR(M2,M1,7)*IFACTC
                  C(13)=VCR(M2,M1,8)*IFACTC
                  C(14)=VCR(M2,M1,8)*IFACTC
                  C(15)=VCR(M2,M1,9)*IFACTC
                  C(16)=VCR(M2,M1,10)*IFACTC
                  IF(J21.GT.1)C(16)=C(16)+VRR(KROT,M2,M1)*IFACTC
                END IF
                C(16)=C(16)+VPR(M2,M1)*IFACTL
              END IF
              DO IRHS2=1,JCI2
                DO ILHS2=1,JCI2
                  DO K=1,I16
                    TEMP2(K,ILHS2,IRHS2)=TEMP2(K,ILHS2,IRHS2)+
     1              Y0(K,ILHS2,IRHS2,M2)*C(17-K)
                  END DO
                END DO
              END DO
            END DO
C**END 1-MODE INTEGRATION
            DO IRHS2=1,JCI2
              DO IRHS1=1,JCI1
                DO ILHS2=1,JCI2
                  DO ILHS1=1,JCI1
                    DO K=1,I16
                      TEMP(K,ILHS1,ILHS2,IRHS1,IRHS2)=
     1                TEMP(K,ILHS1,ILHS2,IRHS1,IRHS2)+
     2                X0(K,ILHS1,IRHS1,M1)*TEMP2(K,ILHS2,IRHS2)
                    END DO
                  END DO
                END DO
              END DO
            END DO
          END DO
C**END 2-MODE INTEGRATION

C**NSIZE IS NO. UNIQUE INTEGRALS (3-DIM)
          DO IRHS=1,NSIZE
            NR1=IP(IRHS,MODE1)
            NR2=IP(IRHS,MODE2)
            IRTAU=IP(IRHS,MODE3)
            J0=IRHS*(IRHS-1)/2
            DO ILHS=1,IRHS
              NL1=IP(ILHS,MODE1)
              NL2=IP(ILHS,MODE2)
              ILTAU=IP(ILHS,MODE3)
              DO K=1,I16
                XA(ILHS+J0)=XA(ILHS+J0)+TEMP(K,NL1,NL2,NR1,NR2)*
     1          T0(K,ILTAU,IRTAU,MTAU)*DSTAU(ITAU)
              END DO
            END DO
          END DO
        ELSE
          DO IRHS2=1,JCI2
            DO IRHS1=1,JCI1
              DO ILHS2=1,JCI2
                DO ILHS1=1,JCI1
                  DO K=1,11
                    TEMP(K,ILHS1,ILHS2,IRHS1,IRHS2)=0
                  END DO
                END DO
              END DO
            END DO
          END DO
C**START 2-MODE INTEGRATION
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
            DO IRHS2=1,JCI2
              DO ILHS2=1,JCI2
                DO K=1,11
                  TEMP2(K,ILHS2,IRHS2)=0
                END DO
              END DO
            END DO
C**START 1-MODE INTEGRATION
CCCC        DO M2=1,MM2/MD2
            DO M2=1,MM2
              DO I=1,9
                C(I)=0
              END DO
              IF(JCOUPL.GT.0)THEN
                IF(ICOUPC.GE.2)THEN
C**(10) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                  C(1)=VC(M2,M1,1)
                  C(2)=VC(M2,M1,2)
                  C(3)=VC(M2,M1,3)
                  C(4)=VC(M2,M1,4)
                  C(5)=2*VC(M2,M1,5)
                  C(6)=2*VC(M2,M1,6)
                  C(7)=VC(M2,M1,7)
                  C(8)=2*VC(M2,M1,8)
                  C(9)=VC(M2,M1,9)
                END IF
                DO IRHS2=1,JCI2
                  DO ILHS2=1,JCI2
                    DO K=1,9
                      TEMP2(K,ILHS2,IRHS2)=TEMP2(K,ILHS2,IRHS2)-
     1                Y0(K,ILHS2,IRHS2,M2)*C(K)*IFACTC
                    END DO
                    TEMP2(10,ILHS2,IRHS2)=TEMP2(10,ILHS2,IRHS2)+
     1              Y0(10,ILHS2,IRHS2,M2)*VP(M2,M1)*IFACTL
                    TEMP2(11,ILHS2,IRHS2)=TEMP2(11,ILHS2,IRHS2)+
     1              Y0(11,ILHS2,IRHS2,M2)*VR(KROT,M2,M1)
                  END DO
                END DO
              ELSE
                IF(ICOUPC.GE.2)THEN
C**(10) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
                  C(1)=VCR(M2,M1,1)
                  C(2)=VCR(M2,M1,2)
                  C(3)=VCR(M2,M1,3)
                  C(4)=VCR(M2,M1,4)
                  C(5)=2*VCR(M2,M1,5)
                  C(6)=2*VCR(M2,M1,6)
                  C(7)=VCR(M2,M1,7)
                  C(8)=2*VCR(M2,M1,8)
                  C(9)=VCR(M2,M1,9)
                END IF
                DO IRHS2=1,JCI2
                  DO ILHS2=1,JCI2
                    DO K=1,9
                      TEMP2(K,ILHS2,IRHS2)=TEMP2(K,ILHS2,IRHS2)-
     1                Y0(K,ILHS2,IRHS2,M2)*C(K)*IFACTC
                    END DO
                    TEMP2(10,ILHS2,IRHS2)=TEMP2(10,ILHS2,IRHS2)+
     1              Y0(10,ILHS2,IRHS2,M2)*VPR(M2,M1)*IFACTL
                    TEMP2(11,ILHS2,IRHS2)=TEMP2(11,ILHS2,IRHS2)+
     1              Y0(11,ILHS2,IRHS2,M2)*VRR(KROT,M2,M1)
                  END DO
                END DO
              END IF
            END DO
C**END 1-MODE INTEGRATION
            DO IRHS2=1,JCI2
              DO IRHS1=1,JCI1
                DO ILHS2=1,JCI2
                  DO ILHS1=1,JCI1
                    DO K=1,11
                      TEMP(K,ILHS1,ILHS2,IRHS1,IRHS2)=
     1                TEMP(K,ILHS1,ILHS2,IRHS1,IRHS2)+
     2                X0(K,ILHS1,IRHS1,M1)*TEMP2(K,ILHS2,IRHS2)
                    END DO
                  END DO
                END DO
              END DO
            END DO
          END DO
C**END 2-MODE INTEGRATION
C**NSIZE IS NO. UNIQUE INTEGRALS (3-DIM)
C*************************************************************
C**
C**                     NOTE*NOTE*NOTE
C**
C**FOR STRETCH-BEND K WILL DENOTE BEND, L WILL DENOTE STRETCH
C**            K IS INDEX 1        L IS INDEX 2
C*************************************************************
          DO IRHS=1,NSIZE
            NR1=IP(IRHS,MODE1)
            NR2=IP(IRHS,MODE2)
            IRRTAU=IP(IRHS,MODE3)
            IRTAU=IRRTAU/2+MOD(IRRTAU,2)
            J0=IRHS*(IRHS-1)/2
            DO ILHS=1,IRHS
              NL1=IP(ILHS,MODE1)
              NL2=IP(ILHS,MODE2)
              ILLTAU=IP(ILHS,MODE3)
              ILTAU=ILLTAU/2+MOD(ILLTAU,2)
              DO K=1,11
                XA(ILHS+J0)=XA(ILHS+J0)+TEMP(K,NL1,NL2,NR1,NR2)*
     1          T0(K,ILTAU,IRTAU,MTAU)
              END DO
            END DO
          END DO
        END IF
      END DO
C**END TAU LOOP (3-MODE INTEGRATION)
      IF(ITIM2A.EQ.0)THEN
        CALL TIMIT(3)
        ITIM2A=1
        CALL FLUSH(IOUT)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VCI2(NMODE,MODE1,MODE2,XA,XK,NSIZE,IP,ISIZMX,ISIZE,
     1IP2,ISIZE2,ISTART,IEND,ILR,IRL,LANIND,XL,LAN12D,
     2XD,ZL,ICOUNT,ISIZEX,XKAN,MAXQU,MAXPOW,J21,MOD1,MOD2,NP2,
     3CP2,JP2,NTOT2,MAX2,INDK)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      LOGICAL LANCZ,LANZA,LANZB
      DIMENSION IP(ISIZMX,NMODE)
C**
      COMMON/VCIVN/IARRAY(50)
C**
      DIMENSION ILR(ISIZEX),IRL(ISIZEX)
      DIMENSION XA(1),XK(1),XL(LAN12D,ISIZE),XD(ISIZEX),
     1ZL(LAN12D,ICOUNT)
C**
C**TEMPORARY - HERMITIAN
C     DIMENSION XA(ISIZE,1),XK(1),IP2(ISIZE2,2)
C**TEMPORARY - HERMITIAN
      DIMENSION IP2(ISIZE2,2)
C**ANALYTIC
      DIMENSION NP2(NTOT2),CP2(MAX2,NTOT2),JP2(MAX2,NTOT2,2)
      DIMENSION INDK(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/LANCZO/LANCZ,LANZA,LANZB
      COMMON/WHICH/IWHICH
      COMMON/ILAST/ILAST
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM2A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating VCI2'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

C**ANALYTIC
      IND=INDK(MOD1)+MOD2
C**ANALYTIC

      DO K=1,NMODE
        IARRAY(K)=0
        IF(K.EQ.MODE1)GO TO 6000
        IF(K.NE.MODE2)GO TO 5000
6000    CONTINUE
        IARRAY(K)=1
5000    CONTINUE
      END DO

C**ORIGINAL ALGORITHM AND 1 AND 2-DIM MATRIX
      IF(LANIND.EQ.0.OR.LANIND.EQ.1)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=1,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP2(IR,1))GO TO 2000
            IF(NR2.EQ.IP2(IR,2))GO TO 1000
2000        CONTINUE
          END DO
C**TEMPORARY
      WRITE(IOUT,*)'NO MATCH IN VCI2 FOR BASIS'
      WRITE(IOUT,*)'ELEMENT:',NR1,NR2
      STOP 'VCI2 BASIS BUG'
C**TEMPORARY
1000      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
C**TEMPORARY - HERMITIAN
C         DO ILHS=ISTART,IEND
C**TEMPORARY - HERMITIAN
          DO ILHS=1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE
              IF(IARRAY(K).NE.0)GO TO 4000
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3000
4000          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            Y=0
            IF(IWHICH.LT.0.AND.MOLINC.GT.0)THEN
C**ANALYTIC
              JR1=IP2(MR,1)
              JL1=IP2(ML,1)
              JR2=IP2(MR,2)
              JL2=IP2(ML,2)
              DO I=1,NP2(IND)
                K=JP2(I,IND,1)+1
                L=JP2(I,IND,2)+1
                Y=Y+CP2(I,IND)*XKAN(JL1,JR1,K,MOD1)*
     1          XKAN(JL2,JR2,L,MOD2)
              END DO
C**ANALYTIC
            END IF
C**TEMPORARY - HERMITIAN
C           XA(ILHS,IRHS)=XA(ILHS,IRHS)+(X+Y)
C**TEMPORARY - HERMITIAN
            XA(ILHS+J0)=XA(ILHS+J0)+(X+Y)
3000        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
        GO TO 7000
      END IF

C**SET UP MATRIX XL(LAN12D,ISIZE-LAN12D) IN CORE (XL AND XA ARE SAME
C**ARRAY - CF LANMAX)  ALSO SET UP DIAGONAL ELEMENTS IN XD(ISIZE)
      IF(LANIND.EQ.2)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (RHS)
        DO IRHS=ISTART,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP2(IR,1))GO TO 2001
            IF(NR2.EQ.IP2(IR,2))GO TO 1001
2001        CONTINUE
          END DO
1001      CONTINUE
          IRL(IRHS)=IR
        END DO
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (LHS)
        DO ILHS=1,LAN12D
          NL1=IP(ILHS,MODE1)
          NL2=IP(ILHS,MODE2)
C**FIND LHS INDEX
          DO IL=1,NSIZE
            IF(NL1.NE.IP2(IL,1))GO TO 2002
            IF(NL2.EQ.IP2(IL,2))GO TO 1002
2002        CONTINUE
          END DO
1002      CONTINUE
          ILR(ILHS)=IL
        END DO

        DO IRHS=ISTART,IEND
          IR=IRL(IRHS)
          DO ILHS=1,LAN12D
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE
              IF(IARRAY(K).NE.0)GO TO 4002
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3002
4002          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XL(ILHS,IRHS-ISTART+1)=XL(ILHS,IRHS-ISTART+1)+X
3002        CONTINUE
          END DO
C**DIAGONAL ELEMENT
          IL=IR
          I=IR*(IR-1)/2+IL
          X=XK(I)
          XD(IRHS)=XD(IRHS)+X
        END DO
      END IF

C**SET UP ARRAY XA((ISIZE-LAN12D)*(ISIZE-LAN12D+1)/2)
C**TRUNCATE IF ROW/COLUMN IN IFLAG(ISIZE)=0
      IF(LANIND.EQ.3)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=LAN12D+1,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP2(IR,1))GO TO 2004
            IF(NR2.EQ.IP2(IR,2))GO TO 1004
2004        CONTINUE
          END DO
1004      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
          DO ILHS=LAN12D+1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE
              IF(IARRAY(K).NE.0)GO TO 4004
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3004
4004          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XA(ILHS+J0)=XA(ILHS+J0)+X
3004        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
      END IF

7000  CONTINUE
      IF(ITIM2A.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM2A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VCV2(NMODE,MODE1,MODE2,XA,XK,NSIZE,IP,ISIZMX,ISIZE,
     1IP3,ISIZE3,ISTART,IEND,ILR,IRL,LANIND,XL,LAN12D,
     2XD,ZL,ICOUNT,ISIZEX)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LANCZ,LANZA,LANZB
      DIMENSION IP(ISIZMX,NMODE)
C**
      COMMON/VCIVN/IARRAY(50)
C**
      DIMENSION ILR(ISIZEX),IRL(ISIZEX)
      DIMENSION XA(1),XK(1),XL(LAN12D,ISIZE),XD(ISIZEX),
     1ZL(LAN12D,ICOUNT)
C**
      DIMENSION IP3(ISIZE3,3)
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/LANCZO/LANCZ,LANZA,LANZB
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM2A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating VCV2'
        CALL TIMIT(1)
        CALL FLUSH(IOUT)
      END IF

      DO K=1,NMODE-1
        IARRAY(K)=0
        IF(K.EQ.MODE1)GO TO 6000
        IF(K.NE.MODE2)GO TO 5000
6000    CONTINUE
        IARRAY(K)=1
5000    CONTINUE
      END DO

C**ORIGINAL ALGORITHM AND 1 AND 2-DIM MATRIX
      IF(LANIND.EQ.0.OR.LANIND.EQ.1)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=1,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NRTAU=IP(IRHS,NMODE)
C**FIND RHS INDEX
C*************************************************************
C**
C**                     NOTE*NOTE*NOTE
C**
C**FOR STRETCH-BEND K WILL DENOTE BEND, L WILL DENOTE STRETCH
C**            K IS INDEX 1        L IS INDEX 2
C*************************************************************
          DO IR=1,NSIZE
            IF(NR1.NE.IP3(IR,1))GO TO 2000
            IF(NR2.NE.IP3(IR,2))GO TO 2000
            IF(NRTAU.EQ.IP3(IR,3))GO TO 1000
2000        CONTINUE
          END DO
1000      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
          DO ILHS=1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE-1
              IF(IARRAY(K).NE.0)GO TO 4000
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3000
4000          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XA(ILHS+J0)=XA(ILHS+J0)+X
3000        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
        GO TO 7000
      END IF

C**SET UP MATRIX XL(LAN12D,ISIZE-LAN12D) IN CORE (XL AND XA ARE SAME
C**ARRAY - CF LANMAX)  ALSO SET UP DIAGONAL ELEMENTS IN XD(ISIZE)
      IF(LANIND.EQ.2)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (RHS)
        DO IRHS=ISTART,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NRTAU=IP(IRHS,NMODE)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP3(IR,1))GO TO 2001
            IF(NR2.NE.IP3(IR,2))GO TO 2001
            IF(NRTAU.EQ.IP3(IR,3))GO TO 1001
2001        CONTINUE
          END DO
1001      CONTINUE
          IRL(IRHS)=IR
        END DO
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (LHS)
        DO ILHS=1,LAN12D
          NL1=IP(ILHS,MODE1)
          NL2=IP(ILHS,MODE2)
          NLTAU=IP(ILHS,NMODE)
C**FIND LHS INDEX
          DO IL=1,NSIZE
            IF(NL1.NE.IP3(IL,1))GO TO 2002
            IF(NL2.NE.IP3(IL,2))GO TO 2002
            IF(NLTAU.EQ.IP3(IL,3))GO TO 1002
2002        CONTINUE
          END DO
1002      CONTINUE
          ILR(ILHS)=IL
        END DO

        DO IRHS=ISTART,IEND
          IR=IRL(IRHS)
          DO ILHS=1,LAN12D
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE-1
              IF(IARRAY(K).NE.0)GO TO 4002
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3002
4002          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XL(ILHS,IRHS-ISTART+1)=XL(ILHS,IRHS-ISTART+1)+X
3002        CONTINUE
          END DO
C**DIAGONAL ELEMENT
          IL=IR
          I=IR*(IR-1)/2+IL
          X=XK(I)
          XD(IRHS)=XD(IRHS)+X
        END DO
      END IF

C**SET UP ARRAY XA((ISIZE-LAN12D)*(ISIZE-LAN12D+1)/2)
C**TRUNCATE IF ROW/COLUMN IN IFLAG(ISIZE)=0
      IF(LANIND.EQ.3)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=LAN12D+1,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NRTAU=IP(IRHS,NMODE)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP3(IR,1))GO TO 2004
            IF(NR2.NE.IP3(IR,2))GO TO 2004
            IF(NRTAU.EQ.IP3(IR,3))GO TO 1004
2004        CONTINUE
          END DO
1004      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
          DO ILHS=LAN12D+1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE-1
              IF(IARRAY(K).NE.0)GO TO 4004
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3004
4004          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XA(ILHS+J0)=XA(ILHS+J0)+X
3004        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
      END IF

7000  CONTINUE
      IF(ITIM2A.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM2A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE V0CI3(NMODE,MODE1,MODE2,MODE3,MOD1,MOD2,MOD3,H1,XQ1,
     1H2,XQ2,H3,XQ3,NN1,MM1,NN2,MM2,NN3,MM3,XA,NSIZE,IP,ISIZE,TEMP,
     2TEMP1,JCI1,JCI2,JCI3,X0,Y0,Z0,VP,VPR,VC,VCR,VR,VRR,J21,
     3KROT,MODINT,I10,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,10),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,10),VRR(J21,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION H1(NN1,MM1,3),H2(NN2,MM2,3),H3(NN3,MM3,3)
      DIMENSION IP(ISIZE,NMODE)
      DIMENSION TEMP(I10,JCI2,JCI3,JCI2,JCI3)
      DIMENSION TEMP1(I10,JCI3,JCI3)
      DIMENSION X0(I10,JCI1,JCI1,MM1),Y0(I10,JCI2,JCI2,MM2)
      DIMENSION Z0(I10,JCI3,JCI3,MM3)
      DIMENSION X(10),Y(10),C(10)
      DIMENSION XA(1)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/TYPE/LINEAR
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MOD1)
      MD2=MODINT(MOD2)
      MD3=MODINT(MOD3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MOD1.EQ.ISYM(I,J))N1=I
          IF(MOD2.EQ.ISYM(I,J))N2=I
          IF(MOD3.EQ.ISYM(I,J))N3=I
        END DO
      END DO
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N2)MD2=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      CALL VDCI3(NMODE,MODE1,MODE2,MODE3,MOD1,MOD2,MOD3,H1,XQ1,
     1H2,XQ2,H3,XQ3,NN1,MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,XA,
     2NSIZE,IP,ISIZE,TEMP,TEMP1,JCI1,JCI2,JCI3,X0,Y0,Z0,VP,VPR,
     3VC,VCR,VR,VRR,J21,KROT,MODINT,I10,IND)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VDCI3(NMODE,MODE1,MODE2,MODE3,MOD1,MOD2,MOD3,H1,XQ1,
     1H2,XQ2,H3,XQ3,NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,XA,NSIZE,IP,
     2ISIZE,TEMP,TEMP1,JCI1,JCI2,JCI3,X0,Y0,Z0,VP,VPR,VC,VCR,VR,
     3VRR,J21,KROT,MODINT,I10,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,10),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,10),VRR(J21,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
CCCC  DIMENSION H1(NN1,MM1,3),H2(NN2,MM2,3),H3(NN3,MM3,3)
      DIMENSION H1(NN1,MH1,3),H2(NN2,MH2,3),H3(NN3,MH3,3)
      DIMENSION IP(ISIZE,NMODE)
      DIMENSION TEMP(I10,JCI2,JCI3,JCI2,JCI3)
      DIMENSION TEMP1(I10,JCI3,JCI3)
      DIMENSION X0(I10,JCI1,JCI1,MM1),Y0(I10,JCI2,JCI2,MM2)
      DIMENSION Z0(I10,JCI3,JCI3,MM3)
      DIMENSION X(10),Y(10),C(10)
      DIMENSION XA(1)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/XSAVES/ICOUPX,ICOUCX,JCOUPS,JCOUCS
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/TYPE/LINEAR
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/FILASS/IOUT,INP

      IF(ITIM3A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating V0CI3'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,3)
      IFACTL=INTFAC(NMODE,ICOUPL,3)
      IF(MOLINC.GT.0)IFACTL=1
      IF(MOLINC.GT.0)IFACTC=1
      IF(IWHICH.EQ.0)IFACTL=1
      IF(IWHICH.LT.0.AND.MOLINC.LT.0)IFACTL=1

C***********************************************************

C     IF(IND.EQ.0)THEN
        IF(JCOUPL.GT.0)THEN
          IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(I73)VP
        ELSE
          IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(I73)VPR
        END IF
C     END IF
C     IF(IND.NE.0)THEN
        ICCCCC=ICOUPC
        IF(MOLINC.EQ.0)THEN
          ICCCCC=ICOUCX
        END IF
        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICCCCC.GT.2)READ(I63)VR
          IF(ICCCCC.GT.2)READ(I83)VC
        ELSE
          IF(J21.GT.1.AND.ICCCCC.GT.2)READ(I63)VRR
          IF(ICCCCC.GT.2)READ(I83)VCR
        END IF
        IF(MOLINC.EQ.0.AND.ICOUPL.LT.3)RETURN
C       RETURN
C     END IF

C***********************************************************

      MD1=MODINT(MOD1)
      MD2=MODINT(MOD2)
      MD3=MODINT(MOD3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MOD1.EQ.ISYM(I,J))N1=I
          IF(MOD2.EQ.ISYM(I,J))N2=I
          IF(MOD3.EQ.ISYM(I,J))N3=I
        END DO
      END DO
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N2)MD2=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      MD=MD1*MD2*MD3

      IF(LINEAR)GO TO 1000
C***********************************************************
C**LEFT-RIGHT DIFFERENTIATION
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        DO NR1=1,JCI1
          X(1)=H1(NR1,M1,2)*MD
          X(2)=H1(NR1,M1,1)*MD
          X(3)=X(1)
          X(4)=X(2)
          X(5)=X(1)
          X(6)=X(2)
          X(7)=X(2)
          X(8)=X(2)
          X(9)=X(2)
          X(10)=X(2)
          DO NL1=1,JCI1
            Y(1)=H1(NL1,M1,2)
            Y(2)=Y(1)
            Y(3)=H1(NL1,M1,1)
            Y(4)=Y(1)
            Y(5)=Y(3)
            Y(6)=Y(3)
            Y(7)=Y(3)
            Y(8)=Y(3)
            Y(9)=Y(3)
            Y(10)=Y(3)
            DO K=1,I10
              X0(K,NL1,NR1,M1)=Y(11-K)*X(11-K)
            END DO
          END DO
        END DO
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        DO NR2=1,JCI2
          X(1)=H2(NR2,M2,1)
          X(2)=H2(NR2,M2,2)
          X(3)=X(1)
          X(4)=X(1)
          X(5)=X(1)
          X(6)=X(2)
          X(7)=X(1)
          X(8)=X(2)
          X(9)=X(1)
          X(10)=X(1)
          DO NL2=1,JCI2
            Y(1)=H2(NL2,M2,1)
            Y(2)=Y(1)
            Y(3)=H2(NL2,M2,2)
            Y(4)=Y(1)
            Y(5)=Y(1)
            Y(6)=Y(3)
            Y(7)=Y(3)
            Y(8)=Y(1)
            Y(9)=Y(1)
            Y(10)=Y(1)
            DO K=1,I10
              Y0(K,NL2,NR2,M2)=Y(11-K)*X(11-K)
            END DO
          END DO
        END DO
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        DO NR3=1,JCI3
          X(1)=H3(NR3,M3,1)
          X(2)=X(1)
          X(3)=X(1)
          X(4)=H3(NR3,M3,2)
          X(5)=X(1)
          X(6)=X(1)
          X(7)=X(4)
          X(8)=X(1)
          X(9)=X(4)
          X(10)=X(1)
          DO NL3=1,JCI3
            Y(1)=H3(NL3,M3,1)
            Y(2)=Y(1)
            Y(3)=Y(1)
            Y(4)=Y(1)
            Y(5)=H3(NL3,M3,2)
            Y(6)=Y(1)
            Y(7)=Y(1)
            Y(8)=Y(5)
            Y(9)=Y(5)
            Y(10)=Y(1)
            DO K=1,I10
              Z0(K,NL3,NR3,M3)=Y(11-K)*X(11-K)
            END DO
          END DO
        END DO
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
      KK=1
C**START 3-MODE INTEGRATION
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        DO IRHS3=1,JCI3
          DO IRHS2=1,JCI2
            DO ILHS3=1,JCI3
              DO ILHS2=1,JCI2
                DO K=1,I10
                  TEMP(K,ILHS2,ILHS3,IRHS2,IRHS3)=0
                END DO
              END DO
            END DO
          END DO
        END DO
C**START 2-MODE INTEGRATION
CCCC    DO M2=1,MM2/MD2
        DO M2=1,MM2
          DO IRHS3=1,JCI3
            DO ILHS3=1,JCI3
              DO K=1,I10
                TEMP1(K,ILHS3,IRHS3)=0
              END DO
            END DO
          END DO
C**START 1-MODE INTEGRATION
CCCC      DO M3=1,MM3/MD3
          DO M3=1,MM3
            DO I=1,10
              C(I)=0
            END DO
            IF(JCOUPC.GE.0)THEN
              IF(ICOUPC.GT.2)THEN
                C(1)=VC(M3,M2,M1,4)*IFACTC
                C(2)=VC(M3,M2,M1,5)*IFACTC
                C(3)=VC(M3,M2,M1,5)*IFACTC
                C(4)=VC(M3,M2,M1,6)*IFACTC
                C(5)=VC(M3,M2,M1,6)*IFACTC
                C(6)=VC(M3,M2,M1,7)*IFACTC
                C(7)=VC(M3,M2,M1,8)*IFACTC
                C(8)=VC(M3,M2,M1,8)*IFACTC
                C(9)=VC(M3,M2,M1,9)*IFACTC
                C(10)=VC(M3,M2,M1,10)*IFACTC*KK
                IF(J21.GT.1)C(10)=C(10)+VR(KROT,M3,M2,M1)*IFACTC
              END IF
              IF(IWHICH.GE.0.OR.MOLINC.LE.0)C(10)=C(10)+
     1        VP(M3,M2,M1)*IFACTL
            ELSE
              IF(ICOUPC.GT.2)THEN
                C(1)=VCR(M3,M2,M1,4)*IFACTC
                C(2)=VCR(M3,M2,M1,5)*IFACTC
                C(3)=VCR(M3,M2,M1,5)*IFACTC
                C(4)=VCR(M3,M2,M1,6)*IFACTC
                C(5)=VCR(M3,M2,M1,6)*IFACTC
                C(6)=VCR(M3,M2,M1,7)*IFACTC
                C(7)=VCR(M3,M2,M1,8)*IFACTC
                C(8)=VCR(M3,M2,M1,8)*IFACTC
                C(9)=VCR(M3,M2,M1,9)*IFACTC
                C(10)=VCR(M3,M2,M1,10)*IFACTC*KK
                IF(J21.GT.1)C(10)=C(10)+VRR(KROT,M3,M2,M1)*IFACTC
              END IF
              IF(IWHICH.GE.0.OR.MOLINC.LE.0)C(10)=C(10)+
     1        VPR(M3,M2,M1)*IFACTL
            END IF
            DO IRHS3=1,JCI3
              DO ILHS3=1,JCI3
                DO K=1,I10
                  TEMP1(K,ILHS3,IRHS3)=TEMP1(K,ILHS3,IRHS3)+
     1            Z0(K,ILHS3,IRHS3,M3)*C(11-K)
                END DO
              END DO
            END DO
          END DO
C**END 1-MODE INTEGRATION
          DO IRHS3=1,JCI3
            DO IRHS2=1,JCI2
              DO ILHS3=1,JCI3
                DO ILHS2=1,JCI2
                  DO K=1,I10
                    TEMP(K,ILHS2,ILHS3,IRHS2,IRHS3)=
     1              TEMP(K,ILHS2,ILHS3,IRHS2,IRHS3)+
     2              Y0(K,ILHS2,IRHS2,M2)*TEMP1(K,ILHS3,IRHS3)
                  END DO
                END DO
              END DO
            END DO
          END DO
        END DO
C**END 2-MODE INTEGRATION

C**NSIZE IS NO. UNIQUE INTEGRALS (3-DIM)
        DO IRHS=1,NSIZE
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
          J0=IRHS*(IRHS-1)/2
          DO ILHS=1,IRHS
            NL1=IP(ILHS,MODE1)
            NL2=IP(ILHS,MODE2)
            NL3=IP(ILHS,MODE3)
            DO K=1,I10
              XA(ILHS+J0)=XA(ILHS+J0)+
     1        TEMP(K,NL2,NL3,NR2,NR3)*X0(K,NL1,NR1,M1)
            END DO
          END DO
        END DO
      END DO
C**END 3-MODE INTEGRATION

      GO TO 2000

1000  CONTINUE
C     IF(LINEAR)KK=MOD(KA,2)*MOD(KA,2)
      KK=KA*KA
C***********************************************************
C**RIGHT-ONLY DIFFERENTIATION
      DO M1=1,MM1
        DO ILHS2=1,JCI2
          DO ILHS3=1,JCI3
            DO IRHS2=1,JCI2
              DO IRHS3=1,JCI3
                DO K=1,I10
                  TEMP(K,ILHS2,ILHS3,IRHS2,IRHS3)=0
                END DO
              END DO
            END DO
          END DO
        END DO
        IF(JCOUPL.GT.0)THEN
          DO M2=1,MM2
            DO IRHS2=1,JCI2
              Y1=H2(IRHS2,M2,1)
              Y2=H2(IRHS2,M2,2)
              Y3=H2(IRHS2,M2,3)
              DO M3=1,MM3
                DO IRHS3=1,JCI3
                  X1=0
                  X2=0
                  X3=0
                  Z1=H3(IRHS3,M3,1)
                  IF(ICOUPC.GT.2)THEN
                    Z2=H3(IRHS3,M3,2)
                    Z3=H3(IRHS3,M3,3)
                    X1=X1+(Z1*(-VC(M3,M2,M1,2)*Y2-VC(M3,M2,M1,7)*Y3)-
     1              Y1*(VC(M3,M2,M1,3)*Z2+VC(M3,M2,M1,9)*Z3)
     2              -2*VC(M3,M2,M1,8)*Y2*Z2)*IFACTC
                    X1=X1+VC(M3,M2,M1,10)*Y1*Z1*IFACTC*KK
                    IF(J21.GT.1)X1=X1+VR(KROT,M3,M2,M1)*Y1*Z1*IFACTC
                    X2=X2+(-Z1*(VC(M3,M2,M1,1)*Y1+2*VC(M3,M2,M1,5)*Y2)-
     1              2*VC(M3,M2,M1,6)*Y1*Z2)*IFACTC
                    X3=X3-VC(M3,M2,M1,4)*Y1*Z1*IFACTC
                    DO ILHS2=1,JCI2
                      DO ILHS3=1,JCI3
                        YY=H2(ILHS2,M2,1)
                        ZZ=H3(ILHS3,M3,1)
                        TEMP(2,ILHS2,ILHS3,IRHS2,IRHS3)=
     1                  TEMP(2,ILHS2,ILHS3,IRHS2,IRHS3)+YY*ZZ*X2
                        TEMP(3,ILHS2,ILHS3,IRHS2,IRHS3)=
     1                  TEMP(3,ILHS2,ILHS3,IRHS2,IRHS3)+YY*ZZ*X3
                      END DO
                    END DO
                  END IF
                  IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1            X1=X1+Z1*VP(M3,M2,M1)*Y1*IFACTL
                  DO ILHS2=1,JCI2
                    YY=H2(ILHS2,M2,1)
                    DO ILHS3=1,JCI3
                      ZZ=H3(ILHS3,M3,1)
                      TEMP(1,ILHS2,ILHS3,IRHS2,IRHS3)=
     1                TEMP(1,ILHS2,ILHS3,IRHS2,IRHS3)+YY*ZZ*X1
                    END DO
                  END DO
                END DO
              END DO
            END DO
          END DO
        ELSE
          DO M2=1,MM2
            DO IRHS2=1,JCI2
              Y1=H2(IRHS2,M2,1)
              Y2=H2(IRHS2,M2,2)
              Y3=H2(IRHS2,M2,3)
              DO M3=1,MM3
                DO IRHS3=1,JCI3
                  X1=0
                  X2=0
                  X3=0
                  Z1=H3(IRHS3,M3,1)
                  IF(ICOUPC.GT.2)THEN
                    Z2=H3(IRHS3,M3,2)
                    Z3=H3(IRHS3,M3,3)
                    X1=X1+(Z1*(-VCR(M3,M2,M1,2)*Y2-VCR(M3,M2,M1,7)*Y3)-
     1              Y1*(VCR(M3,M2,M1,3)*Z2+VCR(M3,M2,M1,9)*Z3)
     2              -2*VCR(M3,M2,M1,8)*Y2*Z2)*IFACTC
                    X1=X1+VCR(M3,M2,M1,10)*Y1*Z1*IFACTC*KK
                    IF(J21.GT.1)X1=X1+VRR(KROT,M3,M2,M1)*Y1*Z1*IFACTC
                    X2=X2+(-Z1*(VCR(M3,M2,M1,1)*Y1+2*VCR(M3,M2,M1,5)*
     1              Y2)-2*VCR(M3,M2,M1,6)*Y1*Z2)*IFACTC
                    X3=X3-VCR(M3,M2,M1,4)*Y1*Z1*IFACTC
                    DO ILHS2=1,JCI2
                      DO ILHS3=1,JCI3
                        YY=H2(ILHS2,M2,1)
                        ZZ=H3(ILHS3,M3,1)
                        TEMP(2,ILHS2,ILHS3,IRHS2,IRHS3)=
     1                  TEMP(2,ILHS2,ILHS3,IRHS2,IRHS3)+YY*ZZ*X2
                        TEMP(3,ILHS2,ILHS3,IRHS2,IRHS3)=
     1                  TEMP(3,ILHS2,ILHS3,IRHS2,IRHS3)+YY*ZZ*X3
                      END DO
                    END DO
                  END IF
                  IF(IWHICH.GE.0.OR.MOLINC.LE.0)
     1            X1=X1+Z1*VPR(M3,M2,M1)*Y1*IFACTL
                  DO ILHS2=1,JCI2
                    YY=H2(ILHS2,M2,1)
                    DO ILHS3=1,JCI3
                      ZZ=H3(ILHS3,M3,1)
                      TEMP(1,ILHS2,ILHS3,IRHS2,IRHS3)=
     1                TEMP(1,ILHS2,ILHS3,IRHS2,IRHS3)+YY*ZZ*X1
                    END DO
                  END DO
                END DO
              END DO
            END DO
          END DO
        END IF
C**ISIZE IS NO. UNIQUE INTEGRALS (3-DIM)
        I3=1
        IF(ICOUPC.GT.2)I3=3
        DO IRHS=1,NSIZE
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
          X(1)=H1(NR1,M1,1)
          X(2)=H1(NR1,M1,2)
          X(3)=H1(NR1,M1,3)
          J0=IRHS*(IRHS-1)/2
          DO ILHS=1,IRHS
            NL1=IP(ILHS,MODE1)
            NL2=IP(ILHS,MODE2)
            NL3=IP(ILHS,MODE3)
            YY=H1(NL1,M1,1)
            DO K=1,I3
              XA(ILHS+J0)=XA(ILHS+J0)+YY*TEMP(K,NL2,NL3,NR2,NR3)*X(K)
            END DO
          END DO
        END DO
      END DO

2000  CONTINUE
      IF(ITIM3A.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM3A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE V0CV3(NMODE,MODE1,MODE2,MODE3,MODE4,MOD1,MOD2,MOD3,H1,
     1XQ1,H2,XQ2,H3,XQ3,HTAU,XQTAU,XA,NSIZE,NN1,MM1,NN2,MM2,NN3,MM3,
     2NNTAU,MMTAU,IP,ISIZE,TEMP1,TEMP2,TEMP3,JCI1,JCI2,JCI3,JCIM,X0,Y0,
     3Z0,T0,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,ICOUNT2,IRL2,ICOUNT3,
     4IRL3,IP3,IND,I25)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,15),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,15),VRR(J21,MM3,MM2,MM1)
      DIMENSION X(25),Y(25),C(25)
      DIMENSION MODINT(NMODE)
      DIMENSION H1(NN1,MM1,3),H2(NN2,MM2,3),H3(NN3,MM3,3)
      DIMENSION IP(ISIZE,NMODE)
      DIMENSION XA(1),XQ1(MM1),XQ2(MM2),XQ3(MM3)
      DIMENSION TEMP1(I25,JCI3,JCI3),TEMP2(I25,ICOUNT2,ICOUNT2),
     1TEMP3(I25,ICOUNT3,ICOUNT3)
      DIMENSION IRL2(ICOUNT2,2),IRL3(ICOUNT3,2),IP3(NSIZE)
      DIMENSION X0(I25,JCI1,JCI1,MM1),Y0(I25,JCI2,JCI2,MM2)
      DIMENSION Z0(I25,JCI3,JCI3,MM3),T0(I25,JCIM,JCIM,MMTAU)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      COMMON/BASIS/NBAS(6,2),MAXSUM(6,2)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MOD1)
      MD2=MODINT(MOD2)
      MD3=MODINT(MOD3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MOD1.EQ.ISYM(I,J))N1=I
          IF(MOD2.EQ.ISYM(I,J))N2=I
          IF(MOD3.EQ.ISYM(I,J))N3=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      CALL VDCV3(NMODE,MODE1,MODE2,MODE3,MODE4,MOD1,MOD2,MOD3,H1,
     1XQ1,H2,XQ2,H3,XQ3,HTAU,XQTAU,XA,NSIZE,NN1,MM1,MM1/MD1,NN2,MM2,
     2MM2/MD2,NN3,MM3,MM3/MD3,NNTAU,MMTAU,IP,ISIZE,TEMP1,TEMP2,TEMP3,
     3JCI1,JCI2,JCI3,JCIM,X0,Y0,Z0,T0,VP,VPR,VC,VCR,VR,VRR,J21,KROT,
     4MODINT,ICOUNT2,IRL2,ICOUNT3,IRL3,IP3,IND,I25)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VDCV3(NMODE,MODE1,MODE2,MODE3,MODE4,MOD1,MOD2,MOD3,H1,
     1XQ1,H2,XQ2,H3,XQ3,HTAU,XQTAU,XA,NSIZE,NN1,MH1,MM1,NN2,MH2,MM2,
     2NN3,MH3,MM3,NNTAU,MMTAU,IP,ISIZE,TEMP1,TEMP2,TEMP3,JCI1,JCI2,JCI3,
     3JCIM,X0,Y0,Z0,T0,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,ICOUNT2,
     4IRL2,ICOUNT3,IRL3,IP3,IND,I25)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,15),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,15),VRR(J21,MM3,MM2,MM1)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION X(25),Y(25),C(25)
      DIMENSION MODINT(NMODE)
CCCC  DIMENSION H1(NN1,MM1,3),H2(NN2,MM2,3),H3(NN3,MM3,3)
      DIMENSION H1(NN1,MH1,3),H2(NN2,MH2,3),H3(NN3,MH3,3)
      DIMENSION IP(ISIZE,NMODE)
      DIMENSION XA(1),XQ1(MM1),XQ2(MM2),XQ3(MM3)
      DIMENSION TEMP1(I25,JCI3,JCI3),TEMP2(I25,ICOUNT2,ICOUNT2),
     1TEMP3(I25,ICOUNT3,ICOUNT3)
      DIMENSION IRL2(ICOUNT2,2),IRL3(ICOUNT3,2),IP3(NSIZE)
      DIMENSION X0(I25,JCI1,JCI1,MM1),Y0(I25,JCI2,JCI2,MM2)
      DIMENSION Z0(I25,JCI3,JCI3,MM3),T0(I25,JCIM,JCIM,MMTAU)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      COMMON/BASIS/NBAS(6,2),MAXSUM(6,2)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM3A.EQ.0.AND.IND.LT.0)THEN
        WRITE(IOUT,*)'Calculating V0CV3'
        CALL TIMIT(1)
        CALL FLUSH(IOUT)
      END IF

      IF(IND.EQ.0)GO TO 500
      NMAX1=MAX0(MAXSUM(1,1)+1,MAXSUM(2,1)+2)
      NMAX2=MAX0(MAXSUM(1,2)+1,MAXSUM(2,2)+2)
      NMAX=MAX0(NMAX1,NMAX2)
      ICOUNT2=0
      DO I3=0,JCI3-1
        DO I2=0,JCI2-1
          IF(I2+I3.LE.NMAX)THEN
            ICOUNT2=ICOUNT2+1
            IF(IND.GT.0)THEN
              IRL2(ICOUNT2,1)=I2+1
              IRL2(ICOUNT2,2)=I3+1
            END IF
          END IF
        END DO
      END DO
C**RETURN WITH ICOUNT2
      IF(IND.LT.0)RETURN
500   CONTINUE
      NMAX1=MAX0(MAXSUM(1,1)+1,MAXSUM(2,1)+2,MAXSUM(3,1)+3)
      NMAX2=MAX0(MAXSUM(1,2)+1,MAXSUM(2,2)+2,MAXSUM(3,2)+3)
      NMAX=MAX0(NMAX1,NMAX2)
      ICOUNT3=0
      DO I=1,ICOUNT2
        I2=IRL2(I,1)-1
        I3=IRL2(I,2)-1
        DO I1=0,JCI1-1
          IF(I1+I2+I3.LE.NMAX)THEN
            ICOUNT3=ICOUNT3+1
            IF(IND.EQ.0)THEN
              IRL3(ICOUNT3,1)=I1+1
              IRL3(ICOUNT3,2)=I
            END IF
          END IF
        END DO
      END DO
C**RETURN WITH ICOUNT3
      IF(IND.GT.0)RETURN
      DO I=1,NSIZE
        IP3(I)=0
        NR1=IP(I,MODE1)
        NR2=IP(I,MODE2)
        NR3=IP(I,MODE3)
        DO J=1,ICOUNT3
          IF(IRL3(J,1).NE.NR1)GO TO 1000
          K=IRL3(J,2)
          IF(IRL2(K,1).NE.NR2)GO TO 1000
          IF(IRL2(K,2).NE.NR3)GO TO 1000
          IP3(I)=J
1000      CONTINUE
        END DO
        IF(IP3(I).EQ.0)THEN
          WRITE(IOUT,*)'IP3 SET-UP ERROR FOR ELEMENT ',I

       WRITE(IOUT,*)'V0CV3'
       WRITE(IOUT,*)'NMODE,MODE1,MODE2,MODE3,MODE4'
       WRITE(IOUT,*)NMODE,MODE1,MODE2,MODE3,MODE4
       WRITE(IOUT,*)'MOD1,MOD2,MOD3,I25'
       WRITE(IOUT,*)MOD1,MOD2,MOD3,I25
       WRITE(IOUT,*)'JCI1,JCI2,JCI3,JCIM'
       WRITE(IOUT,*)JCI1,JCI2,JCI3,JCIM
       WRITE(IOUT,*)'ICOUNT2,ICOUNT3,ISIZE,NSIZE'
       WRITE(IOUT,*)ICOUNT2,ICOUNT3,ISIZE,NSIZE
       WRITE(IOUT,*)'IRL2 - ICOUNT2 = ',ICOUNT2
       DO J=1,ICOUNT2
         WRITE(IOUT,*)J,':',IRL2(J,1),IRL2(J,2)
       END DO
       WRITE(IOUT,*)'IRL3 - ICOUNT3 = ',ICOUNT3
       DO J=1,ICOUNT3
         WRITE(IOUT,*)J,':',IRL3(J,1),IRL3(J,2)
       END DO
       WRITE(IOUT,*)'IP3 - NSIZE = ',NSIZE
       DO J=1,NSIZE
         WRITE(IOUT,*)J,':',IP3(J)
       END DO
       WRITE(IOUT,*)'IP - ISIZE,NSIZE = ',ISIZE,NSIZE
       DO J=1,NSIZE
         WRITE(IOUT,*)J,':',(IP(J,K),K=1,4)
       END DO

          STOP 'IP3 ERROR'
        END IF
      END DO
C**IRL2 & IRL3 CONTAIN POINTERS FOR FIRST 3 INDICES OF IP(NSIZE,4)

      IF(IFITRP.EQ.0)THEN
        IFACTL=INTFAC(NMODE,ICOUPL,3)
      ELSE
        IFACTL=JNTFAC(NMODE,IABS(IFITRP)-1,3)
      END IF
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=INTFAC(NMODE,ICOUPC,3)

      KA=KROT/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      MDT=MODINT(NSMODE)
      MD1=MODINT(MOD1)
      MD2=MODINT(MOD2)
      MD3=MODINT(MOD3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MOD1.EQ.ISYM(I,J))N1=I
          IF(MOD2.EQ.ISYM(I,J))N2=I
          IF(MOD3.EQ.ISYM(I,J))N3=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      MD=MD1*MD2*MD3*MDT
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          DO NRR=1,JCIM
            NR=NRR+1-MOD(KA,2)+INCT
            X(1)=HTAU(NR,MTAU,1,LMAX)*MD
            DO I=2,25
              X(I)=X(1)
            END DO
            X(7)=HTAU(NR,MTAU,2,LMAX)*MD
            X(14)=X(7)
            X(19)=X(7)
            X(22)=X(7)
            X(24)=X(7)
            DO NLL=1,JCIM
              NL=NLL+1-MOD(KA,2)+INCT
              Y(1)=HTAU(NL,MTAU,1,LMAX)
              DO I=2,25
                Y(I)=Y(1)
              END DO
              Y(8)=HTAU(NL,MTAU,2,LMAX)
              Y(15)=Y(8)
              Y(20)=Y(8)
              Y(23)=Y(8)
              Y(24)=Y(8)
              DO K=1,I25
                T0(K,NLL,NRR,MTAU)=Y(26-K)*X(26-K)
              END DO
            END DO
          END DO
        ELSE
          DO NRR=1,JCIM
            NR=2*NRR-MOD(NRR,2)+1-MOD(KA,2)+INCT
            X(1)=HTAU(NR,MTAU,1,LMAX)*MD
            DO I=2,15
              X(I)=X(1)
            END DO
            X(4)=HTAU(NR,MTAU,2,LMAX)*MD
            X(8)=X(4)
            X(11)=X(4)
            X(13)=X(4)
            X(14)=HTAU(NR,MTAU,3,LMAX)*MD
            X(16)=HTAU(NR,MTAU,1,LMAX)*FACTRC*MD
            DO NLL=1,JCIM
              NL=2*NLL-MOD(NLL,2)+1-MOD(KA,2)+INCT
              Y(1)=HTAU(NL,MTAU,1,LMAX)
              DO K=1,16
                T0(K,NLL,NRR,MTAU)=Y(1)*X(K)
              END DO
            END DO
          END DO
        END IF
      END DO
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        IF(.NOT.LINEAR)THEN
          DO NR1=1,JCI1
            X(1)=H1(NR1,M1,2)
            X(2)=H1(NR1,M1,1)
            DO I=3,25
              X(I)=X(2)
            END DO
            X(9)=X(1)
            X(11)=X(1)
            X(13)=X(1)
            X(15)=X(1)
            DO NL1=1,JCI1
              Y(1)=H1(NL1,M1,1)
              Y(2)=H1(NL1,M1,2)
              DO I=3,25
                Y(I)=Y(1)
              END DO
              Y(9)=Y(2)
              Y(10)=Y(2)
              Y(12)=Y(2)
              Y(14)=Y(2)
              DO K=1,I25
                X0(K,NL1,NR1,M1)=Y(26-K)*X(26-K)
              END DO
            END DO
          END DO
        ELSE
          DO NR1=1,JCI1
            X(1)=H1(NR1,M1,2)
            X(2)=H1(NR1,M1,1)
            DO I=3,16
              X(I)=X(2)
            END DO
            X(5)=H1(NR1,M1,3)
            X(6)=X(1)
            X(7)=X(1)
            X(8)=X(1)
            DO NL1=1,JCI1
              Y(1)=H1(NL1,M1,1)
              DO K=1,16
                X0(K,NL1,NR1,M1)=Y(1)*X(K)
              END DO
            END DO
          END DO
        END IF
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        IF(.NOT.LINEAR)THEN
          DO NR2=1,JCI2
            X(1)=H2(NR2,M2,1)
            DO I=2,25
              X(I)=X(1)
            END DO
            X(3)=H2(NR2,M2,2)
            X(10)=X(3)
            X(16)=X(3)
            X(18)=X(3)
            X(20)=X(3)
            DO NL2=1,JCI2
              Y(1)=H2(NL2,M2,1)
              DO I=2,25
                Y(I)=Y(1)
              END DO
              Y(4)=H2(NL2,M2,2)
              Y(11)=Y(4)
              Y(16)=Y(4)
              Y(17)=Y(4)
              Y(19)=Y(4)
              DO K=1,I25
                Y0(K,NL2,NR2,M2)=Y(26-K)*X(26-K)
              END DO
            END DO
          END DO
        ELSE
          DO NR2=1,JCI2
            X(1)=H2(NR2,M2,1)
            X(2)=H2(NR2,M2,2)
            DO I=3,16
              X(I)=X(1)
            END DO
            X(6)=X(2)
            X(9)=H2(NR2,M2,3)
            X(10)=X(2)
            X(11)=X(2)
            DO NL2=1,JCI2
              Y(1)=H2(NL2,M2,1)
              DO K=1,16
                Y0(K,NL2,NR2,M2)=Y(1)*X(K)
              END DO
            END DO
          END DO
        END IF
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        IF(.NOT.LINEAR)THEN
          DO NR3=1,JCI3
            X(1)=H3(NR3,M3,1)
            DO I=2,25
              X(I)=X(1)
            END DO
            X(5)=H3(NR3,M3,2)
            X(12)=X(5)
            X(17)=X(5)
            X(21)=X(5)
            X(23)=X(5)
            DO NL3=1,JCI3
              Y(1)=H3(NL3,M3,1)
              DO I=2,25
                Y(I)=Y(1)
              END DO
              Y(6)=H3(NL3,M3,2)
              Y(13)=Y(6)
              Y(18)=Y(6)
              Y(21)=Y(6)
              Y(22)=Y(6)
              DO K=1,I25
                Z0(K,NL3,NR3,M3)=Y(26-K)*X(26-K)
              END DO
            END DO
          END DO
        ELSE
          DO NR3=1,JCI3
            X(1)=H3(NR3,M3,1)
            DO I=2,16
              X(I)=X(1)
            END DO
            X(3)=H3(NR3,M3,2)
            X(7)=X(3)
            X(10)=X(3)
            X(12)=H3(NR3,M3,3)
            X(13)=X(3)
            DO NL3=1,JCI3
              Y(1)=H3(NL3,M3,1)
              DO K=1,16
                Z0(K,NL3,NR3,M3)=Y(1)*X(K)
              END DO
            END DO
          END DO
        END IF
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**LOOP ROUND TAU (START 4-MODE INTEGRATION)
      ITAU=INIT-INCTAU
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          ITAU=ITAU+INCTAU
CCCC      IF(ITAU.GT.362)ITAU=ITAU-360
          IF(ITAU.GT.722)ITAU=ITAU-720
        ELSE
CCCC      QTAU=XQTAU(MTAU)
C**DELTA4 AND DELTA5 FROM TORSION (ARBITRARY SET EULER 'GAMMA' TO ZERO)
CCCC      DELTA(4)=+QTAU
CCCC      DELTA(5)=-QTAU
        END IF

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.3)READ(63)VR
          IF(ICOUPC.GE.3)READ(83)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.3)READ(63)VRR
          IF(ICOUPC.GE.3)READ(83)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(73)VP
        ELSE
          READ(73)VPR
        END IF

C***********************************************************

        IF(.NOT.LINEAR)THEN
          DO IRH=1,ICOUNT3
            DO ILH=1,ICOUNT3
              DO K=1,I25
                TEMP3(K,ILH,IRH)=0
              END DO
            END DO
          END DO
C**START 3-MODE INTEGRATION
CCCC      DO M1=1,MM1/MD1
          DO M1=1,MM1
            DO IRH=1,ICOUNT2
              DO ILH=1,ICOUNT2
                DO K=1,I25
                  TEMP2(K,ILH,IRH)=0
                END DO
              END DO
            END DO
C**START 2-MODE INTEGRATION
CCCC        DO M2=1,MM2/MD2
            DO M2=1,MM2
              DO IRHS3=1,JCI3
                DO ILHS3=1,JCI3
                  DO K=1,I25
                    TEMP1(K,ILHS3,IRHS3)=0
                  END DO
                END DO
              END DO
C**START 1-MODE INTEGRATION
CCCC          DO M3=1,MM3/MD3
              DO M3=1,MM3
                DO I=1,25
                  C(I)=0
                END DO
                IF(JCOUPL.GT.0)THEN
                  IF(ICOUPC.GE.3)THEN
C**NO WATSON TERM IF RPH
                    C(1)=VC(M3,M2,M1,1)*IFACTC
                    C(2)=VC(M3,M2,M1,1)*IFACTC
                    C(3)=VC(M3,M2,M1,2)*IFACTC
                    C(4)=VC(M3,M2,M1,2)*IFACTC
                    C(5)=VC(M3,M2,M1,3)*IFACTC
                    C(6)=VC(M3,M2,M1,3)*IFACTC
                    C(7)=VC(M3,M2,M1,4)*IFACTC
                    C(8)=VC(M3,M2,M1,4)*IFACTC
                    C(9)=VC(M3,M2,M1,5)*IFACTC
                    C(10)=VC(M3,M2,M1,6)*IFACTC
                    C(11)=VC(M3,M2,M1,6)*IFACTC
                    C(12)=VC(M3,M2,M1,7)*IFACTC
                    C(13)=VC(M3,M2,M1,7)*IFACTC
                    C(14)=VC(M3,M2,M1,8)*IFACTC
                    C(15)=VC(M3,M2,M1,8)*IFACTC
                    C(16)=VC(M3,M2,M1,9)*IFACTC
                    C(17)=VC(M3,M2,M1,10)*IFACTC
                    C(18)=VC(M3,M2,M1,10)*IFACTC
                    C(19)=VC(M3,M2,M1,11)*IFACTC
                    C(20)=VC(M3,M2,M1,11)*IFACTC
                    C(21)=VC(M3,M2,M1,12)*IFACTC
                    C(22)=VC(M3,M2,M1,13)*IFACTC
                    C(23)=VC(M3,M2,M1,13)*IFACTC
                    C(24)=VC(M3,M2,M1,14)*IFACTC
                    C(25)=VC(M3,M2,M1,15)*IFACTC
                    IF(J21.GT.1)C(25)=C(25)+VR(KROT,M3,M2,M1)*IFACTC
                  END IF
                  C(25)=C(25)+VP(M3,M2,M1)*IFACTL
                ELSE
                  IF(ICOUPC.GE.3)THEN
C**NO WATSON TERM IF RPH
                    C(1)=VCR(M3,M2,M1,1)*IFACTC
                    C(2)=VCR(M3,M2,M1,1)*IFACTC
                    C(3)=VCR(M3,M2,M1,2)*IFACTC
                    C(4)=VCR(M3,M2,M1,2)*IFACTC
                    C(5)=VCR(M3,M2,M1,3)*IFACTC
                    C(6)=VCR(M3,M2,M1,3)*IFACTC
                    C(7)=VCR(M3,M2,M1,4)*IFACTC
                    C(8)=VCR(M3,M2,M1,4)*IFACTC
                    C(9)=VCR(M3,M2,M1,5)*IFACTC
                    C(10)=VCR(M3,M2,M1,6)*IFACTC
                    C(11)=VCR(M3,M2,M1,6)*IFACTC
                    C(12)=VCR(M3,M2,M1,7)*IFACTC
                    C(13)=VCR(M3,M2,M1,7)*IFACTC
                    C(14)=VCR(M3,M2,M1,8)*IFACTC
                    C(15)=VCR(M3,M2,M1,8)*IFACTC
                    C(16)=VCR(M3,M2,M1,9)*IFACTC
                    C(17)=VCR(M3,M2,M1,10)*IFACTC
                    C(18)=VCR(M3,M2,M1,10)*IFACTC
                    C(19)=VCR(M3,M2,M1,11)*IFACTC
                    C(20)=VCR(M3,M2,M1,11)*IFACTC
                    C(21)=VCR(M3,M2,M1,12)*IFACTC
                    C(22)=VCR(M3,M2,M1,13)*IFACTC
                    C(23)=VCR(M3,M2,M1,13)*IFACTC
                    C(24)=VCR(M3,M2,M1,14)*IFACTC
                    C(25)=VCR(M3,M2,M1,15)*IFACTC
                    IF(J21.GT.1)C(25)=C(25)+VRR(KROT,M3,M2,M1)*IFACTC
                  END IF
                  C(25)=C(25)+VPR(M3,M2,M1)*IFACTL
                END IF
                DO IRHS3=1,JCI3
                  DO ILHS3=1,JCI3
                    DO K=1,I25
                      TEMP1(K,ILHS3,IRHS3)=TEMP1(K,ILHS3,IRHS3)+
     1                Z0(K,ILHS3,IRHS3,M3)*C(26-K)
                    END DO
                  END DO
                END DO
              END DO
C**END 1-MODE INTEGRATION
              DO IRH=1,ICOUNT2
                IRHS2=IRL2(IRH,1)
                IRHS3=IRL2(IRH,2)
                DO ILH=1,ICOUNT2
                  ILHS2=IRL2(ILH,1)
                  ILHS3=IRL2(ILH,2)
                  DO K=1,I25
                    TEMP2(K,ILH,IRH)=
     1              TEMP2(K,ILH,IRH)+
     2              Y0(K,ILHS2,IRHS2,M2)*TEMP1(K,ILHS3,IRHS3)
                  END DO
                END DO
              END DO
            END DO
C**END 2-MODE INTEGRATION
            DO IRH=1,ICOUNT3
              IRHS1=IRL3(IRH,1)
              IR=IRL3(IRH,2)
C             IRHS2=IRL2(IR,1)
C             IRHS3=IRL2(IR,2)
              DO ILH=1,ICOUNT3
                ILHS1=IRL3(ILH,1)
                IL=IRL3(ILH,2)
C               ILHS2=IRL2(IL,1)
C               ILHS3=IRL2(IL,2)
                DO K=1,I25
                  TEMP3(K,ILH,IRH)=
     1            TEMP3(K,ILH,IRH)+
     2            X0(K,ILHS1,IRHS1,M1)*TEMP2(K,IL,IR)
                END DO
              END DO
            END DO
          END DO
C**END 3-MODE INTEGRATION

C**NSIZE IS NO. UNIQUE INTEGRALS (4-DIM)
          DO IRHS=1,NSIZE
            IR=IP3(IRHS)
            IRTAU=IP(IRHS,MODE4)
            J0=IRHS*(IRHS-1)/2
            DO ILHS=1,IRHS
              IL=IP3(ILHS)
              ILTAU=IP(ILHS,MODE4)
              DO K=1,I25
                XA(ILHS+J0)=XA(ILHS+J0)+
     1          TEMP3(K,IL,IR)*
     2          T0(K,ILTAU,IRTAU,MTAU)*DSTAU(ITAU)
              END DO
            END DO
          END DO
        ELSE
C         DO IRHS3=1,JCI3
C           DO IRHS2=1,JCI2
C             DO IRHS1=1,JCI1
C               DO ILHS3=1,JCI3
C                 DO ILHS2=1,JCI2
C                   DO ILHS1=1,JCI1
C                     DO K=1,16
C                       TEMP(K,ILHS1,ILHS2,ILHS3,IRHS1,IRHS2,IRHS3)=0
C                     END DO
C                   END DO
C                 END DO
C               END DO
C             END DO
C           END DO
C         END DO
C**START 3-MODE INTEGRATION
CCCC      DO M1=1,MM1/MD1
C         DO M1=1,MM1
C           DO IRHS3=1,JCI3
C             DO IRHS2=1,JCI2
C               DO ILHS3=1,JCI3
C                 DO ILHS2=1,JCI2
C                   DO K=1,16
C                     TEMP2(K,ILHS2,ILHS3,IRHS2,IRHS3)=0
C                   END DO
C                 END DO
C               END DO
C             END DO
C           END DO
C**START 2-MODE INTEGRATION
CCCC        DO M2=1,MM2/MD2
C           DO M2=1,MM2
C             DO IRHS3=1,JCI3
C               DO ILHS3=1,JCI3
C                 DO K=1,16
C                   TEMP3(K,ILHS3,IRHS3)=0
C                 END DO
C               END DO
C             END DO
C**START 1-MODE INTEGRATION
CCCC          DO M3=1,MM3/MD3
C             DO M3=1,MM3
C               DO I=1,14
C                 C(I)=0
C               END DO
C               IF(JCOUPL.GT.0)THEN
C                 IF(ICOUPC.GE.3)THEN
C**(15) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
C                   DO K=1,14
C                     C(K)=VC(M3,M2,M1,K)
C                   END DO
C                   C(6)=2*C(6)
C                   C(7)=2*C(7)
C                   C(8)=2*C(8)
C                   C(10)=2*C(10)
C                   C(11)=2*C(11)
C                   C(13)=2*C(13)
C                 END IF
C                 DO IRHS3=1,JCI3
C                   DO ILHS3=1,JCI3
C                     DO K=1,14
C                       TEMP3(K,ILHS3,IRHS3)=TEMP3(K,ILHS3,IRHS3)-
C    1                  Z0(K,ILHS3,IRHS3,M3)*C(K)*IFACTC
C                     END DO
C                     TEMP3(15,ILHS3,IRHS3)=TEMP3(15,ILHS3,IRHS3)+
C    1                Z0(15,ILHS3,IRHS3,M3)*VP(M3,M2,M1)*IFACTL
C                     TEMP3(16,ILHS3,IRHS3)=TEMP3(16,ILHS3,IRHS3)+
C    1                Z0(16,ILHS3,IRHS3,M3)*VR(KROT,M3,M2,M1)
C                   END DO
C                 END DO
C               ELSE
C                 IF(ICOUPC.GE.3)THEN
C**(15) IS WATSON CORRECTION TERM ONLY - ZERO IF LINEAR (SEE CORIOL)
C                   DO K=1,14
C                     C(K)=VCR(M3,M2,M1,K)
C                   END DO
C                   C(6)=2*C(6)
C                   C(7)=2*C(7)
C                   C(8)=2*C(8)
C                   C(10)=2*C(10)
C                   C(11)=2*C(11)
C                   C(13)=2*C(13)
C                 END IF
C                 DO IRHS3=1,JCI3
C                   DO ILHS3=1,JCI3
C                     DO K=1,14
C                       TEMP3(K,ILHS3,IRHS3)=TEMP3(K,ILHS3,IRHS3)-
C    1                  Z0(K,ILHS3,IRHS3,M3)*C(K)*IFACTC
C                     END DO
C                     TEMP3(15,ILHS3,IRHS3)=TEMP3(15,ILHS3,IRHS3)+
C    1                Z0(15,ILHS3,IRHS3,M3)*VPR(M3,M2,M1)*IFACTL
C                     TEMP3(16,ILHS3,IRHS3)=TEMP3(16,ILHS3,IRHS3)+
C    1                Z0(16,ILHS3,IRHS3,M3)*VRR(KROT,M3,M2,M1)
C                   END DO
C                 END DO
C               END IF
C             END DO
C**END 1-MODE INTEGRATION
C             DO IRHS3=1,JCI3
C               DO IRHS2=1,JCI2
C                 DO ILHS3=1,JCI3
C                   DO ILHS2=1,JCI2
C                     DO K=1,16
C                       TEMP2(K,ILHS2,ILHS3,IRHS2,IRHS3)=
C    1                  TEMP2(K,ILHS2,ILHS3,IRHS2,IRHS3)+
C    2                  Y0(K,ILHS2,IRHS2,M2)*TEMP3(K,ILHS3,IRHS3)
C                     END DO
C                   END DO
C                 END DO
C               END DO
C             END DO
C           END DO
C**END 2-MODE INTEGRATION
C           DO IRHS3=1,JCI3
C             DO IRHS2=1,JCI2
C               DO IRHS1=1,JCI1
C                 DO ILHS3=1,JCI3
C                   DO ILHS2=1,JCI2
C                     DO ILHS1=1,JCI1
C                       DO K=1,16
C                         TEMP(K,ILHS1,ILHS2,ILHS3,IRHS1,IRHS2,IRHS3)=
C    1                    TEMP(K,ILHS1,ILHS2,ILHS3,IRHS1,IRHS2,IRHS3)+
C    2                    X0(K,ILHS1,IRHS1,M1)*
C    3                    TEMP2(K,ILHS2,ILHS3,IRHS2,IRHS3)
C                       END DO
C                     END DO
C                   END DO
C                 END DO
C               END DO
C             END DO
C           END DO
C         END DO
C**END 3-MODE INTEGRATION

C**NSIZE IS NO. UNIQUE INTEGRALS (4-DIM)
C         DO IRHS=1,NSIZE
C           NR1=IP(IRHS,MODE1)
C           NR2=IP(IRHS,MODE2)
C           NR3=IP(IRHS,MODE3)
C           IRRTAU=IP(IRHS,MODE4)
C           IRTAU=IRRTAU/2+MOD(IRRTAU,2)
C           J0=IRHS*(IRHS-1)/2
C           DO ILHS=1,IRHS
C             NL1=IP(ILHS,MODE1)
C             NL2=IP(ILHS,MODE2)
C             NL3=IP(ILHS,MODE3)
C             ILLTAU=IP(ILHS,MODE4)
C             ILTAU=ILLTAU/2+MOD(ILLTAU,2)
C             DO K=1,16
C               XA(ILHS+J0)=XA(ILHS+J0)+
C    1          TEMP(K,NL1,NL2,NL3,NR1,NR2,NR3)*
C    2          T0(K,ILTAU,IRTAU,MTAU)
C             END DO
C           END DO
C         END DO
        END IF
      END DO
C**END TAU LOOP (4-MODE INTEGRATION)
      IF(ITIM3A.EQ.0)THEN
        CALL TIMIT(3)
        ITIM3A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VCI3(NMODE,MODE1,MODE2,MODE3,XA,XK,NSIZE,IP,ISIZMX,
     1ISIZE,IP3,ISIZE3,ISTART,IEND,ILR,IRL,LANIND,XL,LAN12D,
     2XD,ZL,ICOUNT,ISIZEX,XKAN,MAXQU,MAXPOW,J21,MOD1,MOD2,
     3MOD3,NP3,CP3,JP3,NTOT3,MAX3,INDK,INDL)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      LOGICAL LANCZ,LANZA,LANZB
      DIMENSION IP(ISIZMX,NMODE)
C**
      COMMON/VCIVN/IARRAY(50)
C**
      DIMENSION ILR(ISIZEX),IRL(ISIZEX)
C**TEMPORARY - HERMITIAN
C     DIMENSION XA(ISIZE,1),XK(1),IP3(ISIZE3,3)
C**TEMPORARY - HERMITIAN
      DIMENSION XA(1),XK(1),XL(LAN12D,ISIZE),XD(ISIZEX),
     1ZL(LAN12D,ICOUNT)
C**
      DIMENSION IP3(ISIZE3,3)
C**ANALYTIC
      DIMENSION NP3(NTOT3),CP3(MAX3,NTOT3),JP3(MAX3,NTOT3,3)
      DIMENSION INDK(1),INDL(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/LANCZO/LANCZ,LANZA,LANZB
      COMMON/WHICH/IWHICH
      COMMON/ILAST/ILAST
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM3A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating VCI3'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

C**ANALYTIC
      IND=INDL(MOD1)+INDK(MOD2)+MOD3
C**ANALYTIC

      DO K=1,NMODE
        IARRAY(K)=0
        IF(K.EQ.MODE1)GO TO 6000
        IF(K.EQ.MODE2)GO TO 6000
        IF(K.NE.MODE3)GO TO 5000
6000    CONTINUE
        IARRAY(K)=1
5000    CONTINUE
      END DO

C**ORIGINAL ALGORITHM AND 1 AND 2-DIM MATRIX
      IF(LANIND.EQ.0.OR.LANIND.EQ.1)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=1,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP3(IR,1))GO TO 2000
            IF(NR2.NE.IP3(IR,2))GO TO 2000
            IF(NR3.EQ.IP3(IR,3))GO TO 1000
2000        CONTINUE
          END DO
C**TEMPORARY
      WRITE(IOUT,*)'NO MATCH IN VCI3 FOR BASIS'
      WRITE(IOUT,*)'ELEMENT:',NR1,NR2,NR3
      STOP 'VCI3 BASIS BUG'
C**TEMPORARY
1000      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
C**TEMPORARY - HERMITIAN
C         DO ILHS=ISTART,IEND
C**TEMPORARY - HERMITIAN
          DO ILHS=1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE
              IF(IARRAY(K).NE.0)GO TO 4000
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3000
4000          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            Y=0
            IF(IWHICH.LT.0.AND.MOLINC.GT.0)THEN
C**ANALYTIC
              JR1=IP3(MR,1)
              JL1=IP3(ML,1)
              JR2=IP3(MR,2)
              JL2=IP3(ML,2)
              JR3=IP3(MR,3)
              JL3=IP3(ML,3)
              DO I=1,NP3(IND)
                K=JP3(I,IND,1)+1
                L=JP3(I,IND,2)+1
                N=JP3(I,IND,3)+1
                Y=Y+CP3(I,IND)*XKAN(JL1,JR1,K,MOD1)*
     1          XKAN(JL2,JR2,L,MOD2)*XKAN(JL3,JR3,N,MOD3)
              END DO
C**ANALYTIC
            END IF
C**TEMPORARY - HERMITIAN
C           XA(ILHS,IRHS)=XA(ILHS,IRHS)+(X+Y)
C**TEMPORARY - HERMITIAN
            XA(ILHS+J0)=XA(ILHS+J0)+(X+Y)
3000        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
        GO TO 7000
      END IF

C**SET UP MATRIX XL(LAN12D,ISIZE-LAN12D) IN CORE (XL AND XA ARE SAME
C**ARRAY - CF LANMAX)  ALSO SET UP DIAGONAL ELEMENTS IN XD(ISIZE)
      IF(LANIND.EQ.2)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (RHS)
        DO IRHS=ISTART,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP3(IR,1))GO TO 2001
            IF(NR2.NE.IP3(IR,2))GO TO 2001
            IF(NR3.EQ.IP3(IR,3))GO TO 1001
2001        CONTINUE
          END DO
1001      CONTINUE
          IRL(IRHS)=IR
        END DO
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (LHS)
        DO ILHS=1,LAN12D
          NL1=IP(ILHS,MODE1)
          NL2=IP(ILHS,MODE2)
          NL3=IP(ILHS,MODE3)
C**FIND LHS INDEX
          DO IL=1,NSIZE
            IF(NL1.NE.IP3(IL,1))GO TO 2002
            IF(NL2.NE.IP3(IL,2))GO TO 2002
            IF(NL3.EQ.IP3(IL,3))GO TO 1002
2002        CONTINUE
          END DO
1002      CONTINUE
          ILR(ILHS)=IL
        END DO

        DO IRHS=ISTART,IEND
          IR=IRL(IRHS)
          DO ILHS=1,LAN12D
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE
              IF(IARRAY(K).NE.0)GO TO 4002
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3002
4002          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XL(ILHS,IRHS-ISTART+1)=XL(ILHS,IRHS-ISTART+1)+X
3002        CONTINUE
          END DO
C**DIAGONAL ELEMENT
          IL=IR
          I=IR*(IR-1)/2+IL
          X=XK(I)
          XD(IRHS)=XD(IRHS)+X
        END DO
      END IF

C**SET UP ARRAY XA((ISIZE-LAN12D)*(ISIZE-LAN12D+1)/2)
C**TRUNCATE IF ROW/COLUMN IN IFLAG(ISIZE)=0
      IF(LANIND.EQ.3)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=LAN12D+1,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP3(IR,1))GO TO 2004
            IF(NR2.NE.IP3(IR,2))GO TO 2004
            IF(NR3.EQ.IP3(IR,3))GO TO 1004
2004        CONTINUE
          END DO
1004      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
          DO ILHS=LAN12D+1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE
              IF(IARRAY(K).NE.0)GO TO 4004
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3004
4004          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XA(ILHS+J0)=XA(ILHS+J0)+X
3004        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
      END IF

7000  CONTINUE
      IF(ITIM3A.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM3A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VCV3(NMODE,MODE1,MODE2,MODE3,XA,XK,NSIZE,IP,ISIZMX,
     1ISIZE,IP4,ISIZE4,ISTART,IEND,ILR,IRL,LANIND,XL,LAN12D,
     2XD,ZL,ICOUNT,ISIZEX)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LANCZ,LANZA,LANZB
      DIMENSION IP(ISIZMX,NMODE)
C**
      COMMON/VCIVN/IARRAY(50)
C**
      DIMENSION ILR(ISIZEX),IRL(ISIZEX)
      DIMENSION XA(1),XK(1),XL(LAN12D,ISIZE),XD(ISIZEX),
     1ZL(LAN12D,ICOUNT)
C**
      DIMENSION IP4(ISIZE4,4)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/LANCZO/LANCZ,LANZA,LANZB
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM3A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating VCV3'
        CALL TIMIT(1)
        CALL FLUSH(IOUT)
      END IF

      DO K=1,NMODE-1
        IARRAY(K)=0
        IF(K.EQ.MODE1)GO TO 6000
        IF(K.EQ.MODE2)GO TO 6000
        IF(K.NE.MODE3)GO TO 5000
6000    CONTINUE
        IARRAY(K)=1
5000    CONTINUE
      END DO

C**ORIGINAL ALGORITHM AND 1 AND 2-DIM MATRIX
      IF(LANIND.EQ.0.OR.LANIND.EQ.1)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=1,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
          NRTAU=IP(IRHS,NMODE)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP4(IR,1))GO TO 2000
            IF(NR2.NE.IP4(IR,2))GO TO 2000
            IF(NR3.NE.IP4(IR,3))GO TO 2000
            IF(NRTAU.EQ.IP4(IR,4))GO TO 1000
2000        CONTINUE
          END DO
1000      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
          DO ILHS=1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE-1
              IF(IARRAY(K).NE.0)GO TO 4000
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3000
4000          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XA(ILHS+J0)=XA(ILHS+J0)+X
3000        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
        GO TO 7000
      END IF

C**SET UP MATRIX XL(LAN12D,ISIZE-LAN12D) IN CORE (XL AND XA ARE SAME
C**ARRAY - CF LANMAX)  ALSO SET UP DIAGONAL ELEMENTS IN XD(ISIZE)
      IF(LANIND.EQ.2)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (RHS)
        DO IRHS=ISTART,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
          NRTAU=IP(IRHS,NMODE)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP4(IR,1))GO TO 2001
            IF(NR2.NE.IP4(IR,2))GO TO 2001
            IF(NR3.NE.IP4(IR,3))GO TO 2001
            IF(NRTAU.EQ.IP4(IR,4))GO TO 1001
2001        CONTINUE
          END DO
1001      CONTINUE
          IRL(IRHS)=IR
        END DO
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (LHS)
        DO ILHS=1,LAN12D
          NL1=IP(ILHS,MODE1)
          NL2=IP(ILHS,MODE2)
          NL3=IP(ILHS,MODE3)
          NLTAU=IP(ILHS,NMODE)
C**FIND LHS INDEX
          DO IL=1,NSIZE
            IF(NL1.NE.IP4(IL,1))GO TO 2002
            IF(NL2.NE.IP4(IL,2))GO TO 2002
            IF(NL3.NE.IP4(IL,3))GO TO 2002
            IF(NLTAU.EQ.IP4(IL,4))GO TO 1002
2002        CONTINUE
          END DO
1002      CONTINUE
          ILR(ILHS)=IL
        END DO

        DO IRHS=ISTART,IEND
          IR=IRL(IRHS)
          DO ILHS=1,LAN12D
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE-1
              IF(IARRAY(K).NE.0)GO TO 4002
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3002
4002          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XL(ILHS,IRHS-ISTART+1)=XL(ILHS,IRHS-ISTART+1)+X
3002        CONTINUE
          END DO
C**DIAGONAL ELEMENT
          IL=IR
          I=IR*(IR-1)/2+IL
          X=XK(I)
          XD(IRHS)=XD(IRHS)+X
        END DO
      END IF

C**SET UP ARRAY XA((ISIZE-LAN12D)*(ISIZE-LAN12D+1)/2)
C**TRUNCATE IF ROW/COLUMN IN IFLAG(ISIZE)=0
      IF(LANIND.EQ.3)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=LAN12D+1,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
          NRTAU=IP(IRHS,NMODE)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP4(IR,1))GO TO 2004
            IF(NR2.NE.IP4(IR,2))GO TO 2004
            IF(NR3.NE.IP4(IR,3))GO TO 2004
            IF(NRTAU.EQ.IP4(IR,4))GO TO 1004
2004        CONTINUE
          END DO
1004      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
          DO ILHS=LAN12D+1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE-1
              IF(IARRAY(K).NE.0)GO TO 4004
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3004
4004          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XA(ILHS+J0)=XA(ILHS+J0)+X
3004        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
      END IF

7000  CONTINUE
      IF(ITIM3A.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM3A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE V0CI4(NMODE,MODE1,MODE2,MODE3,MODE4,MOD1,MOD2,MOD3,
     1MOD4,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,NN1,MM1,NN2,MM2,NN3,MM3,NN4,MM4,
     2XA,NSIZE,IP,ISIZE,TEMP1,TEMP2,TEMP3,JCI1,JCI2,JCI3,JCI4,X0,Y0,Z0,
     3W0,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,ICOUNT2,IRL2,ICOUNT3,
     4IRL3,IP3,IND,I17)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,15),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,15),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION H1(NN1,MM1,3),H2(NN2,MM2,3),H3(NN3,MM3,3),H4(NN4,MM4,3)
      DIMENSION IP(ISIZE,NMODE)
      DIMENSION TEMP1(I17,JCI4,JCI4),TEMP2(I17,ICOUNT2,ICOUNT2)
      DIMENSION TEMP3(I17,ICOUNT3,ICOUNT3)
      DIMENSION IRL2(ICOUNT2,2),IRL3(ICOUNT3,2),IP3(NSIZE)
      DIMENSION X0(I17,JCI1,JCI1,MM1),Y0(I17,JCI2,JCI2,MM2)
      DIMENSION Z0(I17,JCI3,JCI3,MM3),W0(I17,JCI4,JCI4,MM4)
      DIMENSION X(17),Y(17),C(17)
      DIMENSION XA(1)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),XQ4(MM4)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/TYPE/LINEAR
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MOD1)
      MD2=MODINT(MOD2)
      MD3=MODINT(MOD3)
      MD4=MODINT(MOD4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MOD1.EQ.ISYM(I,J))N1=I
          IF(MOD2.EQ.ISYM(I,J))N2=I
          IF(MOD3.EQ.ISYM(I,J))N3=I
          IF(MOD4.EQ.ISYM(I,J))N4=I
        END DO
      END DO
      IF(N3.EQ.N4)MD4=1
      IF(N2.EQ.N4)MD4=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N2)MD2=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      CALL VDCI4(NMODE,MODE1,MODE2,MODE3,MODE4,MOD1,MOD2,MOD3,
     1MOD4,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,NN1,MM1,MM1/MD1,NN2,MM2,MM2/MD2,
     2NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,XA,NSIZE,IP,ISIZE,TEMP1,TEMP2,
     3TEMP3,JCI1,JCI2,JCI3,JCI4,X0,Y0,Z0,W0,VP,VPR,VC,VCR,VR,VRR,
     4J21,KROT,MODINT,ICOUNT2,IRL2,ICOUNT3,IRL3,IP3,IND,I17)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VDCI4(NMODE,MODE1,MODE2,MODE3,MODE4,MOD1,MOD2,MOD3,
     1MOD4,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,
     2MM3,NN4,MH4,MM4,XA,NSIZE,IP,ISIZE,TEMP1,TEMP2,TEMP3,JCI1,JCI2,
     3JCI3,JCI4,X0,Y0,Z0,W0,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,
     4ICOUNT2,IRL2,ICOUNT3,IRL3,IP3,IND,I17)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,15),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,15),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
CCCC  DIMENSION H1(NN1,MM1,3),H2(NN2,MM2,3),H3(NN3,MM3,3),H4(NN4,MM4,3)
      DIMENSION H1(NN1,MH1,3),H2(NN2,MH2,3),H3(NN3,MH3,3),H4(NN4,MH4,3)
      DIMENSION IP(ISIZE,NMODE)
      DIMENSION TEMP1(I17,JCI4,JCI4),TEMP2(I17,ICOUNT2,ICOUNT2)
      DIMENSION TEMP3(I17,ICOUNT3,ICOUNT3)
      DIMENSION IRL2(ICOUNT2,2),IRL3(ICOUNT3,2),IP3(NSIZE)
      DIMENSION X0(I17,JCI1,JCI1,MM1),Y0(I17,JCI2,JCI2,MM2)
      DIMENSION Z0(I17,JCI3,JCI3,MM3),W0(I17,JCI4,JCI4,MM4)
      DIMENSION X(17),Y(17),C(17)
      DIMENSION XA(1)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),XQ4(MM4)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/XSAVES/ICOUPX,ICOUCX,JCOUPS,JCOUCS
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
      COMMON/BASIS/NBAS(6,2),MAXSUM(6,2)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/JKAKC/JTHIS,KA,KC
      COMMON/TYPE/LINEAR
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/FILASS/IOUT,INP

      IF(ITIM4A.EQ.0.AND.IND.LT.0)THEN
        WRITE(IOUT,*)'Calculating V0CI4'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

      IF(IND.EQ.0)GO TO 500
      NMAX1=MAX0(MAXSUM(1,1)+1,MAXSUM(2,1)+2)
      NMAX2=MAX0(MAXSUM(1,2)+1,MAXSUM(2,2)+2)
      NMAX=MAX0(NMAX1,NMAX2)
      ICOUNT2=0
      DO I4=0,JCI4-1
        DO I3=0,JCI3-1
          IF(I3+I4.LE.NMAX)THEN
            ICOUNT2=ICOUNT2+1
            IF(IND.GT.0)THEN
              IRL2(ICOUNT2,1)=I3+1
              IRL2(ICOUNT2,2)=I4+1
            END IF
          END IF
        END DO
      END DO
C**RETURN WITH ICOUNT2
      IF(IND.LT.0)RETURN
500   CONTINUE
      NMAX1=MAX0(MAXSUM(1,1)+1,MAXSUM(2,1)+2,MAXSUM(3,1)+3)
      NMAX2=MAX0(MAXSUM(1,2)+1,MAXSUM(2,2)+2,MAXSUM(3,2)+3)
      NMAX=MAX0(NMAX1,NMAX2)
      ICOUNT3=0
      DO I=1,ICOUNT2
        I3=IRL2(I,1)-1
        I4=IRL2(I,2)-1
        DO I2=0,JCI2-1
          IF(I2+I3+I4.LE.NMAX)THEN
            ICOUNT3=ICOUNT3+1
            IF(IND.EQ.0)THEN
              IRL3(ICOUNT3,1)=I2+1
              IRL3(ICOUNT3,2)=I
            END IF
          END IF
        END DO
      END DO
C**RETURN WITH ICOUNT3
      IF(IND.GT.0)RETURN
C**TEMPORARY
C     WRITE(IOUT,*)'ICOUNT2,ICOUNT3 = ',ICOUNT2,ICOUNT3
C     WRITE(IOUT,*)'IRL2'
C     DO I=1,ICOUNT2
C       WRITE(IOUT,*)(IRL2(I,K),K=1,2)
C     END DO
C     WRITE(IOUT,*)'IRL3'
C     DO I=1,ICOUNT3
C       WRITE(IOUT,*)(IRL3(I,K),K=1,2)
C     END DO
C     WRITE(IOUT,*)'MODE2,MODE3,MODE4 ',MODE2,MODE3,MODE4
C     WRITE(IOUT,*)'NSIZE = ',NSIZE
C     WRITE(IOUT,*)'IP'
C     DO I=1,NSIZE
C       WRITE(IOUT,*)IP(I,MODE2),IP(I,MODE3),IP(I,MODE4)
C     END DO
C**TEMPORARY
      DO I=1,NSIZE
        IP3(I)=0
        NR2=IP(I,MODE2)
        NR3=IP(I,MODE3)
        NR4=IP(I,MODE4)
        DO J=1,ICOUNT3
          IF(IRL3(J,1).NE.NR2)GO TO 1000
          K=IRL3(J,2)
          IF(IRL2(K,1).NE.NR3)GO TO 1000
          IF(IRL2(K,2).NE.NR4)GO TO 1000
          IP3(I)=J
1000      CONTINUE
        END DO
        IF(IP3(I).EQ.0)THEN
          WRITE(IOUT,*)'IP3 SET-UP ERROR FOR ELEMENT ',I
          STOP 'IP3 ERROR'
        END IF
      END DO
C**IRL2 & IRL3 CONTAIN POINTERS FOR FIRST 3 INDICES OF IP(NSIZE,4)

      IFACTC=INTFAC(NMODE,ICOUPC,4)
      IFACTL=INTFAC(NMODE,ICOUPL,4)
      IF(MOLINC.GT.0)IFACTL=1
      IF(MOLINC.GT.0)IFACTC=1
      IF(IWHICH.EQ.0)IFACTL=1
      IF(IWHICH.LT.0.AND.MOLINC.LT.0)IFACTL=1

C***********************************************************

C     IF(IND.EQ.0)THEN
        IF(JCOUPL.GT.0)THEN
          IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(I74)VP
        ELSE
          IF(IWHICH.GE.0.OR.MOLINC.LE.0)READ(I74)VPR
        END IF
C     END IF
C     IF(IND.NE.0)THEN
        ICCCCC=ICOUPC
        IF(MOLINC.EQ.0)THEN
          ICCCCC=ICOUCX
        END IF
        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICCCCC.GT.3)READ(I64)VR
          IF(ICCCCC.GT.3)READ(I84)VC
        ELSE
          IF(J21.GT.1.AND.ICCCCC.GT.3)READ(I64)VRR
          IF(ICCCCC.GT.3)READ(I84)VCR
        END IF
        IF(MOLINC.EQ.0.AND.ICOUPL.LT.4)RETURN
C       RETURN
C     END IF

C***********************************************************

      MD1=MODINT(MOD1)
      MD2=MODINT(MOD2)
      MD3=MODINT(MOD3)
      MD4=MODINT(MOD4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MOD1.EQ.ISYM(I,J))N1=I
          IF(MOD2.EQ.ISYM(I,J))N2=I
          IF(MOD3.EQ.ISYM(I,J))N3=I
          IF(MOD4.EQ.ISYM(I,J))N4=I
        END DO
      END DO
      IF(N3.EQ.N4)MD4=1
      IF(N2.EQ.N4)MD4=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N2)MD2=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      MD=MD1*MD2*MD3*MD4

C***********************************************************

C**FORM INDIVIDUAL INTEGRATION TERMS (START)
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        DO NR1=1,JCI1
          X(1)=H1(NR1,M1,2)*MD
          X(2)=H1(NR1,M1,1)*MD
          X(3)=X(1)
          X(4)=X(2)
          X(5)=X(1)
          X(6)=X(2)
          X(7)=X(1)
          X(8)=X(2)
          X(9)=X(2)
          X(10)=X(2)
          X(11)=X(2)
          X(12)=X(2)
          X(13)=X(2)
          X(14)=X(2)
          X(15)=X(2)
          X(16)=X(2)
          X(17)=X(2)
          DO NL1=1,JCI1
            Y(1)=H1(NL1,M1,2)
            Y(2)=Y(1)
            Y(3)=H1(NL1,M1,1)
            Y(4)=Y(1)
            Y(5)=Y(3)
            Y(6)=Y(1)
            Y(7)=Y(3)
            Y(8)=Y(3)
            Y(9)=Y(3)
            Y(10)=Y(3)
            Y(11)=Y(3)
            Y(12)=Y(3)
            Y(13)=Y(3)
            Y(14)=Y(3)
            Y(15)=Y(3)
            Y(16)=Y(3)
            Y(17)=Y(3)
            DO K=1,I17
              X0(K,NL1,NR1,M1)=Y(18-K)*X(18-K)
            END DO
          END DO
        END DO
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        DO NR2=1,JCI2
          X(1)=H2(NR2,M2,1)
          X(2)=H2(NR2,M2,2)
          X(3)=X(1)
          X(4)=X(1)
          X(5)=X(1)
          X(6)=X(1)
          X(7)=X(1)
          X(8)=X(2)
          X(9)=X(1)
          X(10)=X(2)
          X(11)=X(1)
          X(12)=X(2)
          X(13)=X(1)
          X(14)=X(1)
          X(15)=X(1)
          X(16)=X(1)
          X(17)=X(1)
          DO NL2=1,JCI2
            Y(1)=H2(NL2,M2,1)
            Y(2)=Y(1)
            Y(3)=H2(NL2,M2,2)
            Y(4)=Y(1)
            Y(5)=Y(1)
            Y(6)=Y(1)
            Y(7)=Y(1)
            Y(8)=Y(3)
            Y(9)=Y(3)
            Y(10)=Y(1)
            Y(11)=Y(3)
            Y(12)=Y(1)
            Y(13)=Y(1)
            Y(14)=Y(1)
            Y(15)=Y(1)
            Y(16)=Y(1)
            Y(17)=Y(1)
            DO K=1,I17
              Y0(K,NL2,NR2,M2)=Y(18-K)*X(18-K)
            END DO
          END DO
        END DO
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        DO NR3=1,JCI3
          X(1)=H3(NR3,M3,1)
          X(2)=X(1)
          X(3)=X(1)
          X(4)=H3(NR3,M3,2)
          X(5)=X(1)
          X(6)=X(1)
          X(7)=X(1)
          X(8)=X(1)
          X(9)=X(4)
          X(10)=X(1)
          X(11)=X(1)
          X(12)=X(1)
          X(13)=X(4)
          X(14)=X(1)
          X(15)=X(4)
          X(16)=X(1)
          X(17)=X(1)
          DO NL3=1,JCI3
            Y(1)=H3(NL3,M3,1)
            Y(2)=Y(1)
            Y(3)=Y(1)
            Y(4)=Y(1)
            Y(5)=H3(NL3,M3,2)
            Y(6)=Y(1)
            Y(7)=Y(1)
            Y(8)=Y(1)
            Y(9)=Y(1)
            Y(10)=Y(5)
            Y(11)=Y(1)
            Y(12)=Y(1)
            Y(13)=Y(5)
            Y(14)=Y(5)
            Y(15)=Y(1)
            Y(16)=Y(1)
            Y(17)=Y(1)
            DO K=1,I17
              Z0(K,NL3,NR3,M3)=Y(18-K)*X(18-K)
            END DO
          END DO
        END DO
      END DO
CCCC  DO M4=1,MM4/MD4
      DO M4=1,MM4
        DO NR4=1,JCI4
          X(1)=H4(NR4,M4,1)
          X(2)=X(1)
          X(3)=X(1)
          X(4)=X(1)
          X(5)=X(1)
          X(6)=H4(NR4,M4,2)
          X(7)=X(1)
          X(8)=X(1)
          X(9)=X(1)
          X(10)=X(1)
          X(11)=X(6)
          X(12)=X(1)
          X(13)=X(1)
          X(14)=X(6)
          X(15)=X(1)
          X(16)=X(6)
          X(17)=X(1)
          DO NL4=1,JCI4
            Y(1)=H4(NL4,M4,1)
            Y(2)=Y(1)
            Y(3)=Y(1)
            Y(4)=Y(1)
            Y(5)=Y(1)
            Y(6)=Y(1)
            Y(7)=H4(NL4,M4,2)
            Y(8)=Y(1)
            Y(9)=Y(1)
            Y(10)=Y(1)
            Y(11)=Y(1)
            Y(12)=Y(7)
            Y(13)=Y(1)
            Y(14)=Y(1)
            Y(15)=Y(7)
            Y(16)=Y(7)
            Y(17)=Y(1)
            DO K=1,I17
              W0(K,NL4,NR4,M4)=Y(18-K)*X(18-K)
            END DO
          END DO
        END DO
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
      KK=1
C     IF(LINEAR)KK=MOD(KA,2)*MOD(KA,2)
      IF(LINEAR)KK=KA*KA
C**START 4-MODE INTEGRATION
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        DO IRH=1,ICOUNT3
          DO ILH=1,ICOUNT3
            DO K=1,I17
              TEMP3(K,ILH,IRH)=0
            END DO
          END DO
        END DO
C**START 3-MODE INTEGRATION
CCCC    DO M2=1,MM2/MD2
        DO M2=1,MM2
          DO IRH=1,ICOUNT2
            DO ILH=1,ICOUNT2
              DO K=1,I17
                TEMP2(K,ILH,IRH)=0
              END DO
            END DO
          END DO
C**START 2-MODE INTEGRATION
CCCC      DO M3=1,MM3/MD3
          DO M3=1,MM3
            DO IRHS4=1,JCI4
              DO ILHS4=1,JCI4
                DO K=1,I17
                  TEMP1(K,ILHS4,IRHS4)=0
                END DO
              END DO
            END DO
C**START 1-MODE INTEGRATION
CCCC        DO M4=1,MM4/MD4
            DO M4=1,MM4
              DO I=1,17
                C(I)=0
              END DO
              IF(JCOUPC.GE.0)THEN
                IF(ICOUPC.GT.3)THEN
                  C(1)=VC(M4,M3,M2,M1,5)*IFACTC
                  C(2)=VC(M4,M3,M2,M1,6)*IFACTC
                  C(3)=VC(M4,M3,M2,M1,6)*IFACTC
                  C(4)=VC(M4,M3,M2,M1,7)*IFACTC
                  C(5)=VC(M4,M3,M2,M1,7)*IFACTC
                  C(6)=VC(M4,M3,M2,M1,8)*IFACTC
                  C(7)=VC(M4,M3,M2,M1,8)*IFACTC
                  C(8)=VC(M4,M3,M2,M1,9)*IFACTC
                  C(9)=VC(M4,M3,M2,M1,10)*IFACTC
                  C(10)=VC(M4,M3,M2,M1,10)*IFACTC
                  C(11)=VC(M4,M3,M2,M1,11)*IFACTC
                  C(12)=VC(M4,M3,M2,M1,11)*IFACTC
                  C(13)=VC(M4,M3,M2,M1,12)*IFACTC
                  C(14)=VC(M4,M3,M2,M1,13)*IFACTC
                  C(15)=VC(M4,M3,M2,M1,13)*IFACTC
                  C(16)=VC(M4,M3,M2,M1,14)*IFACTC
                  C(17)=VC(M4,M3,M2,M1,15)*IFACTC
                  IF(J21.GT.1)
     1            C(17)=C(17)+VR(KROT,M4,M3,M2,M1)*IFACTC
                END IF
                IF(IWHICH.GE.0.OR.MOLINC.LE.0)C(17)=C(17)+
     1          VP(M4,M3,M2,M1)*IFACTL
              ELSE
                IF(ICOUPC.GT.3)THEN
                  C(1)=VCR(M4,M3,M2,M1,5)*IFACTC
                  C(2)=VCR(M4,M3,M2,M1,6)*IFACTC
                  C(3)=VCR(M4,M3,M2,M1,6)*IFACTC
                  C(4)=VCR(M4,M3,M2,M1,7)*IFACTC
                  C(5)=VCR(M4,M3,M2,M1,7)*IFACTC
                  C(6)=VCR(M4,M3,M2,M1,8)*IFACTC
                  C(7)=VCR(M4,M3,M2,M1,8)*IFACTC
                  C(8)=VCR(M4,M3,M2,M1,9)*IFACTC
                  C(9)=VCR(M4,M3,M2,M1,10)*IFACTC
                  C(10)=VCR(M4,M3,M2,M1,10)*IFACTC
                  C(11)=VCR(M4,M3,M2,M1,11)*IFACTC
                  C(12)=VCR(M4,M3,M2,M1,11)*IFACTC
                  C(13)=VCR(M4,M3,M2,M1,12)*IFACTC
                  C(14)=VCR(M4,M3,M2,M1,13)*IFACTC
                  C(15)=VCR(M4,M3,M2,M1,13)*IFACTC
                  C(16)=VCR(M4,M3,M2,M1,14)*IFACTC
                  C(17)=VCR(M4,M3,M2,M1,15)*IFACTC
                  IF(J21.GT.1)
     1            C(17)=C(17)+VRR(KROT,M4,M3,M2,M1)*IFACTC
                END IF
                IF(IWHICH.GE.0.OR.MOLINC.LE.0)C(17)=C(17)+
     1          VPR(M4,M3,M2,M1)*IFACTL
              END IF
              DO IRHS4=1,JCI4
                DO ILHS4=1,JCI4
                  DO K=1,I17
                    TEMP1(K,ILHS4,IRHS4)=TEMP1(K,ILHS4,IRHS4)+
     1              W0(K,ILHS4,IRHS4,M4)*C(18-K)
                  END DO
                END DO
              END DO
            END DO
C**END 1-MODE INTEGRATION
            DO IRH=1,ICOUNT2
              IRHS3=IRL2(IRH,1)
              IRHS4=IRL2(IRH,2)
              DO ILH=1,ICOUNT2
                ILHS3=IRL2(ILH,1)
                ILHS4=IRL2(ILH,2)
                DO K=1,I17
                  TEMP2(K,ILH,IRH)=TEMP2(K,ILH,IRH)+
     1            Z0(K,ILHS3,IRHS3,M3)*TEMP1(K,ILHS4,IRHS4)
                END DO
              END DO
            END DO
          END DO
C**END 2-MODE INTEGRATION
          DO IRH=1,ICOUNT3
            IRHS2=IRL3(IRH,1)
            IR=IRL3(IRH,2)
            DO ILH=1,ICOUNT3
              ILHS2=IRL3(ILH,1)
              IL=IRL3(ILH,2)
              DO K=1,I17
                TEMP3(K,ILH,IRH)=TEMP3(K,ILH,IRH)+
     1          Y0(K,ILHS2,IRHS2,M2)*TEMP2(K,IL,IR)
              END DO
            END DO
          END DO
        END DO
C**END 3-MODE INTEGRATION

C**NSIZE IS NO. UNIQUE INTEGRALS (4-DIM)
        j0 = 0  ! Chen
        DO IRHS=1,NSIZE
          IR=IP3(IRHS)
          IRHS1=IP(IRHS,MODE1)
!          J0=IRHS*(IRHS-1)/2  ! Chen
          DO ILHS=1,IRHS
            IL=IP3(ILHS)
            ILHS1=IP(ILHS,MODE1)
            DO K=1,I17
              XA(ILHS+J0)=XA(ILHS+J0)+
     1        TEMP3(K,IL,IR)*X0(K,ILHS1,IRHS1,M1)
            END DO
          END DO
          j0 = j0 + irhs ! Chen
        END DO
      END DO
C**END 4-MODE INTEGRATION
      IF(ITIM4A.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM4A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE V0CV4(NMODE,MODE1,MODE2,MODE3,MODE4,MODE5,MOD1,MOD2,
     1MOD3,MOD4,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,XQTAU,XA,NSIZE,NN1,
     2MM1,NN2,MM2,NN3,MM3,NN4,MM4,NNTAU,MMTAU,IP,ISIZE,TEMP1,TEMP2,
     3TEMP3,TEMP4,JCI1,JCI2,JCI3,JCI4,JCIM,X0,Y0,Z0,W0,T0,VP,VPR,VC,
     4VCR,VR,VRR,J21,KROT,MODINT,ICOUNT2,IRL2,ICOUNT3,IRL3,ICOUNT4,IRL4,
     5IP4,IND,I36)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,21),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,21),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION X(36),Y(36),C(36)
      DIMENSION MODINT(NMODE)
      DIMENSION H1(NN1,MM1,3),H2(NN2,MM2,3),H3(NN3,MM3,3),H4(NN4,MM4,3)
      DIMENSION IP(ISIZE,NMODE)
      DIMENSION XA(1),XQ1(MM1),XQ2(MM2),XQ3(MM3),XQ4(MM4)
      DIMENSION TEMP1(I36,JCI4,JCI4),TEMP2(I36,ICOUNT2,ICOUNT2),
     1TEMP3(I36,ICOUNT3,ICOUNT3),TEMP4(I36,ICOUNT4,ICOUNT4)
      DIMENSION IRL2(ICOUNT2,2),IRL3(ICOUNT3,2),IRL4(ICOUNT4,2)
      DIMENSION IP4(NSIZE)
      DIMENSION X0(I36,JCI1,JCI1,MM1),Y0(I36,JCI2,JCI2,MM2)
      DIMENSION Z0(I36,JCI3,JCI3,MM3),W0(I36,JCI4,JCI4,MM4)
      DIMENSION T0(I36,JCIM,JCIM,MMTAU)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      COMMON/BASIS/NBAS(6,2),MAXSUM(6,2)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MOD1)
      MD2=MODINT(MOD2)
      MD3=MODINT(MOD3)
      MD4=MODINT(MOD4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MOD1.EQ.ISYM(I,J))N1=I
          IF(MOD2.EQ.ISYM(I,J))N2=I
          IF(MOD3.EQ.ISYM(I,J))N3=I
          IF(MOD4.EQ.ISYM(I,J))N4=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.NE.1)MD4=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.NE.1)MD4=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.NE.1)MD4=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.NE.1)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.NE.1)MD4=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.NE.1)MD4=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.NE.1)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.NE.1)MD4=1
      CALL VDCV4(NMODE,MODE1,MODE2,MODE3,MODE4,MODE5,MOD1,MOD2,
     1MOD3,MOD4,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,XQTAU,XA,NSIZE,NN1,
     2MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,
     3NNTAU,MMTAU,IP,ISIZE,TEMP1,TEMP2,TEMP3,TEMP4,JCI1,JCI2,JCI3,JCI4,
     4JCIM,X0,Y0,Z0,W0,T0,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,
     5ICOUNT2,IRL2,ICOUNT3,IRL3,ICOUNT4,IRL4,IP4,IND,I36)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VDCV4(NMODE,MODE1,MODE2,MODE3,MODE4,MODE5,MOD1,MOD2,
     1MOD3,MOD4,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,HTAU,XQTAU,XA,NSIZE,NN1,
     2MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NNTAU,MMTAU,IP,ISIZE,
     3TEMP1,TEMP2,TEMP3,TEMP4,JCI1,JCI2,JCI3,JCI4,JCIM,X0,Y0,Z0,W0,T0,
     4VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,ICOUNT2,IRL2,ICOUNT3,IRL3,
     5ICOUNT4,IRL4,IP4,IND,I36)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,21),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,21),
     1VRR(J21,MM4,MM3,MM2,MM1)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION X(36),Y(36),C(36)
      DIMENSION MODINT(NMODE)
CCCC  DIMENSION H1(NN1,MM1,3),H2(NN2,MM2,3),H3(NN3,MM3,3),H4(NN4,MM4,3)
      DIMENSION H1(NN1,MH1,3),H2(NN2,MH2,3),H3(NN3,MH3,3),H4(NN4,MH4,3)
      DIMENSION IP(ISIZE,NMODE)
      DIMENSION XA(1),XQ1(MM1),XQ2(MM2),XQ3(MM3),XQ4(MM4)
      DIMENSION TEMP1(I36,JCI4,JCI4),TEMP2(I36,ICOUNT2,ICOUNT2),
     1TEMP3(I36,ICOUNT3,ICOUNT3),TEMP4(I36,ICOUNT4,ICOUNT4)
      DIMENSION IRL2(ICOUNT2,2),IRL3(ICOUNT3,2),IRL4(ICOUNT4,2)
      DIMENSION IP4(NSIZE)
      DIMENSION X0(I36,JCI1,JCI1,MM1),Y0(I36,JCI2,JCI2,MM2)
      DIMENSION Z0(I36,JCI3,JCI3,MM3),W0(I36,JCI4,JCI4,MM4)
      DIMENSION T0(I36,JCIM,JCIM,MMTAU)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      COMMON/BASIS/NBAS(6,2),MAXSUM(6,2)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM4A.EQ.0.AND.IND.EQ.-2)THEN
        WRITE(IOUT,*)'Calculating V0CV4'
        CALL TIMIT(1)
        CALL FLUSH(IOUT)
      END IF

      IF(IND.GE.0)GO TO 500
      NMAX1=MAX0(MAXSUM(1,1)+1,MAXSUM(2,1)+2)
      NMAX2=MAX0(MAXSUM(1,2)+1,MAXSUM(2,2)+2)
      NMAX=MAX0(NMAX1,NMAX2)
      ICOUNT2=0
      DO I4=0,JCI4-1
        DO I3=0,JCI3-1
          IF(I3+I4.LE.NMAX)THEN
            ICOUNT2=ICOUNT2+1
            IF(IABS(IND).EQ.1)THEN
              IRL2(ICOUNT2,1)=I3+1
              IRL2(ICOUNT2,2)=I4+1
            END IF
          END IF
        END DO
      END DO
C**RETURN WITH ICOUNT2
      IF(IABS(IND).GT.1)RETURN
500   CONTINUE
      IF(IND.EQ.0)GO TO 600
      NMAX1=MAX0(MAXSUM(1,1)+1,MAXSUM(2,1)+2,MAXSUM(3,1)+3)
      NMAX2=MAX0(MAXSUM(1,2)+1,MAXSUM(2,2)+2,MAXSUM(3,2)+3)
      NMAX=MAX0(NMAX1,NMAX2)
      ICOUNT3=0
      DO I=1,ICOUNT2
        I3=IRL2(I,1)-1
        I4=IRL2(I,2)-1
        DO I2=0,JCI2-1
          IF(I2+I3+I4.LE.NMAX)THEN
            ICOUNT3=ICOUNT3+1
            IF(IND.GT.0)THEN
              IRL3(ICOUNT3,1)=I2+1
              IRL3(ICOUNT3,2)=I
            END IF
          END IF
        END DO
      END DO
C**RETURN WITH ICOUNT3
      IF(IND.LT.0)RETURN
600   CONTINUE
      NMAX1=MAX0(MAXSUM(1,1)+1,MAXSUM(2,1)+2,MAXSUM(3,1)+3,
     1MAXSUM(4,1)+4)
      NMAX2=MAX0(MAXSUM(1,2)+1,MAXSUM(2,2)+2,MAXSUM(3,2)+3,
     1MAXSUM(4,2)+4)
      NMAX=MAX0(NMAX1,NMAX2)
      ICOUNT4=0
      DO I=1,ICOUNT3
        I2=IRL3(I,1)-1
        K=IRL3(I,2)
        I3=IRL2(K,1)-1
        I4=IRL2(K,2)-1
        DO I1=0,JCI1-1
          IF(I1+I2+I3+I4.LE.NMAX)THEN
            ICOUNT4=ICOUNT4+1
            IF(IND.EQ.0)THEN
              IRL4(ICOUNT4,1)=I1+1
              IRL4(ICOUNT4,2)=I
            END IF
          END IF
        END DO
      END DO
C**RETURN WITH ICOUNT4
      IF(IND.GT.0)RETURN
      DO I=1,NSIZE
        IP4(I)=0
        NR1=IP(I,MODE1)
        NR2=IP(I,MODE2)
        NR3=IP(I,MODE3)
        NR4=IP(I,MODE4)
        DO J=1,ICOUNT4
          IF(IRL4(J,1).NE.NR1)GO TO 1000
          K=IRL4(J,2)
          IF(IRL3(K,1).NE.NR2)GO TO 1000
          L=IRL3(K,2)
          IF(IRL2(L,1).NE.NR3)GO TO 1000
          IF(IRL2(L,2).NE.NR4)GO TO 1000
          IP4(I)=J
1000      CONTINUE
        END DO
        IF(IP4(I).EQ.0)THEN
          WRITE(IOUT,*)'IP4 SET-UP ERROR FOR ELEMENT ',I
          STOP 'IP4 ERROR'
        END IF
      END DO
C**IRL2, IRL3 & IRL4 CONTAIN POINTERS FOR FIRST 4 INDICES OF IP(NSIZE,5)

      IFACTL=INTFAC(NMODE,ICOUPL,4)
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
      IFACTC=INTFAC(NMODE,ICOUPC,4)

      KA=KROT/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      MDT=MODINT(NSMODE)
      MD1=MODINT(MOD1)
      MD2=MODINT(MOD2)
      MD3=MODINT(MOD3)
      MD4=MODINT(MOD4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MOD1.EQ.ISYM(I,J))N1=I
          IF(MOD2.EQ.ISYM(I,J))N2=I
          IF(MOD3.EQ.ISYM(I,J))N3=I
          IF(MOD4.EQ.ISYM(I,J))N4=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.NE.1)MD4=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.NE.1)MD4=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.NE.1)MD4=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.NE.1)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.NE.1)MD4=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.NE.1)MD4=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.NE.1)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.NE.1)MD4=1
      MD=MD1*MD2*MD3*MD4*MDT

C**FORM INDIVIDUAL INTEGRATION TERMS (START)
      DO MTAU=1,MMTAU/MDT
        IF(.NOT.LINEAR)THEN
          DO NRR=1,JCIM
            NR=NRR+1-MOD(KA,2)+INCT
            X(1)=HTAU(NR,MTAU,1,LMAX)*MD
            DO I=2,36
              X(I)=X(1)
            END DO
            X(9)=HTAU(NR,MTAU,2,LMAX)*MD
            X(18)=X(9)
            X(25)=X(9)
            X(30)=X(9)
            X(33)=X(9)
            X(35)=X(9)
            DO NLL=1,JCIM
              NL=NLL+1-MOD(KA,2)+INCT
              Y(1)=HTAU(NL,MTAU,1,LMAX)
              DO I=2,36
                Y(I)=Y(1)
              END DO
              Y(10)=HTAU(NL,MTAU,2,LMAX)
              Y(19)=Y(10)
              Y(26)=Y(10)
              Y(31)=Y(10)
              Y(34)=Y(10)
              Y(35)=Y(10)
              DO K=1,I36
                T0(K,NLL,NRR,MTAU)=Y(37-K)*X(37-K)
              END DO
            END DO
          END DO
        ELSE
          DO NRR=1,JCIM
            NR=2*NRR-MOD(NRR,2)+1-MOD(KA,2)+INCT
            X(1)=HTAU(NR,MTAU,1,LMAX)*MD
            DO I=2,21
              X(I)=X(1)
            END DO
            X(5)=HTAU(NR,MTAU,2,LMAX)*MD
            X(10)=X(5)
            X(14)=X(5)
            X(17)=X(5)
            X(19)=X(5)
            X(20)=HTAU(NR,MTAU,3,LMAX)*MD
            X(22)=HTAU(NR,MTAU,1,LMAX)*FACTRC*MD
            DO NLL=1,JCIM
              NL=2*NLL-MOD(NLL,2)+1-MOD(KA,2)+INCT
              Y(1)=HTAU(NL,MTAU,1,LMAX)
              DO K=1,22
                T0(K,NLL,NRR,MTAU)=Y(1)*X(K)
              END DO
            END DO
          END DO
        END IF
      END DO
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        IF(.NOT.LINEAR)THEN
          DO NR1=1,JCI1
            X(1)=H1(NR1,M1,2)
            X(2)=H1(NR1,M1,1)
            DO I=3,36
              X(I)=X(2)
            END DO
            X(11)=X(1)
            X(13)=X(1)
            X(15)=X(1)
            X(17)=X(1)
            X(19)=X(1)
            DO NL1=1,JCI1
              Y(1)=H1(NL1,M1,1)
              Y(2)=H1(NL1,M1,2)
              DO I=3,36
                Y(I)=Y(1)
              END DO
              Y(11)=Y(2)
              Y(12)=Y(2)
              Y(14)=Y(2)
              Y(16)=Y(2)
              Y(18)=Y(2)
              DO K=1,I36
                X0(K,NL1,NR1,M1)=Y(37-K)*X(37-K)
              END DO
            END DO
          END DO
        ELSE
          DO NR1=1,JCI1
            X(1)=H1(NR1,M1,2)
            X(2)=H1(NR1,M1,1)
            DO I=3,22
              X(I)=X(2)
            END DO
            X(6)=H1(NR1,M1,3)
            X(7)=X(1)
            X(8)=X(1)
            X(9)=X(1)
            X(10)=X(1)
            DO NL1=1,JCI1
              Y(1)=H1(NL1,M1,1)
              DO K=1,22
                X0(K,NL1,NR1,M1)=Y(1)*X(K)
              END DO
            END DO
          END DO
        END IF
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        IF(.NOT.LINEAR)THEN
          DO NR2=1,JCI2
            X(1)=H2(NR2,M2,1)
            DO I=2,36
              X(I)=X(1)
            END DO
            X(3)=H2(NR2,M2,2)
            X(12)=X(3)
            X(20)=X(3)
            X(22)=X(3)
            X(24)=X(3)
            X(26)=X(3)
            DO NL2=1,JCI2
              Y(1)=H2(NL2,M2,1)
              DO I=2,36
                Y(I)=Y(1)
              END DO
              Y(4)=H2(NL2,M2,2)
              Y(13)=Y(4)
              Y(20)=Y(4)
              Y(21)=Y(4)
              Y(23)=Y(4)
              Y(25)=Y(4)
              DO K=1,I36
                Y0(K,NL2,NR2,M2)=Y(37-K)*X(37-K)
              END DO
            END DO
          END DO
        ELSE
          DO NR2=1,JCI2
            X(1)=H2(NR2,M2,1)
            X(2)=H2(NR2,M2,2)
            DO I=3,22
              X(I)=X(1)
            END DO
            X(7)=X(2)
            X(11)=H2(NR2,M2,3)
            X(12)=X(2)
            X(13)=X(2)
            X(14)=X(2)
            DO NL2=1,JCI2
              Y(1)=H2(NL2,M2,1)
              DO K=1,22
                Y0(K,NL2,NR2,M2)=Y(1)*X(K)
              END DO
            END DO
          END DO
        END IF
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        IF(.NOT.LINEAR)THEN
          DO NR3=1,JCI3
            X(1)=H3(NR3,M3,1)
            DO I=2,36
              X(I)=X(1)
            END DO
            X(5)=H3(NR3,M3,2)
            X(14)=X(5)
            X(21)=X(5)
            X(27)=X(5)
            X(29)=X(5)
            X(31)=X(5)
            DO NL3=1,JCI3
              Y(1)=H3(NL3,M3,1)
              DO I=2,36
                Y(I)=Y(1)
              END DO
              Y(6)=H3(NL3,M3,2)
              Y(15)=Y(6)
              Y(22)=Y(6)
              Y(27)=Y(6)
              Y(28)=Y(6)
              Y(30)=Y(6)
              DO K=1,I36
                  Z0(K,NL3,NR3,M3)=Y(37-K)*X(37-K)
              END DO
            END DO
          END DO
        ELSE
          DO NR3=1,JCI3
            X(1)=H3(NR3,M3,1)
            DO I=2,22
              X(I)=X(1)
            END DO
            X(3)=H3(NR3,M3,2)
            X(8)=X(3)
            X(12)=X(3)
            X(15)=H3(NR3,M3,3)
            X(16)=X(3)
            X(17)=X(3)
            DO NL3=1,JCI3
              Y(1)=H3(NL3,M3,1)
              DO K=1,22
                  Z0(K,NL3,NR3,M3)=Y(1)*X(K)
              END DO
            END DO
          END DO
        END IF
      END DO
CCCC  DO M4=1,MM4/MD4
      DO M4=1,MM4
        IF(.NOT.LINEAR)THEN
          DO NR4=1,JCI4
            X(1)=H4(NR4,M4,1)
            DO I=2,36
              X(I)=X(1)
            END DO
            X(7)=H4(NR4,M4,2)
            X(16)=X(7)
            X(23)=X(7)
            X(28)=X(7)
            X(32)=X(7)
            X(34)=X(7)
            DO NL4=1,JCI4
              Y(1)=H4(NL4,M4,1)
              DO I=2,36
                Y(I)=Y(1)
              END DO
              Y(8)=H4(NL4,M4,2)
              Y(17)=Y(8)
              Y(24)=Y(8)
              Y(29)=Y(8)
              Y(32)=Y(8)
              Y(33)=Y(8)
              DO K=1,I36
                W0(K,NL4,NR4,M4)=Y(37-K)*X(37-K)
              END DO
            END DO
          END DO
        ELSE
          DO NR4=1,JCI4
            X(1)=H4(NR4,M4,1)
            DO I=2,22
              X(I)=X(1)
            END DO
            X(4)=H4(NR4,M4,2)
            X(9)=X(4)
            X(13)=X(4)
            X(16)=X(4)
            X(18)=H4(NR4,M4,3)
            X(19)=X(4)
            DO NL4=1,JCI4
              Y(1)=H4(NL4,M4,1)
              DO K=1,22
                W0(K,NL4,NR4,M4)=Y(1)*X(K)
              END DO
            END DO
          END DO
        END IF
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**LOOP ROUND TAU (START 5-MODE INTEGRATION)
      ITAU=INIT-INCTAU
      DO MTAU=1,MMTAU/MDT
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.4)READ(64)VR
          IF(ICOUPC.GE.4)READ(84)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.4)READ(64)VRR
          IF(ICOUPC.GE.4)READ(84)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(74)VP
        ELSE
          READ(74)VPR
        END IF

C***********************************************************

        DO IRH=1,ICOUNT4
          DO ILH=1,ICOUNT4
            DO K=1,I36
              TEMP4(K,ILH,IRH)=0
            END DO
          END DO
        END DO
C**START 4-MODE INTEGRATION
CCCC    DO M1=1,MM1/MD1
        DO M1=1,MM1
          DO IRH=1,ICOUNT3
            DO ILH=1,ICOUNT3
              DO K=1,I36
                TEMP3(K,ILH,IRH)=0
              END DO
            END DO
          END DO
C**START 3-MODE INTEGRATION
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
            DO IRH=1,ICOUNT2
              DO ILH=1,ICOUNT2
                DO K=1,I36
                  TEMP2(K,ILH,IRH)=0
                END DO
              END DO
            END DO
C**START 2-MODE INTEGRATION
CCCC        DO M3=1,MM3/MD3
            DO M3=1,MM3
              DO IRHS4=1,JCI4
                DO ILHS4=1,JCI4
                  DO K=1,I36
                    TEMP1(K,ILHS4,IRHS4)=0
                  END DO
                END DO
              END DO
C**START 1-MODE INTEGRATION
CCCC          DO M4=1,MM4/MD4
              DO M4=1,MM4
                DO I=1,36
                  C(I)=0
                END DO
                IF(JCOUPL.GT.0)THEN
                  IF(ICOUPC.GE.4)THEN
                    C(1)=VC(M4,M3,M2,M1,1)*IFACTC
                    C(2)=VC(M4,M3,M2,M1,1)*IFACTC
                    C(3)=VC(M4,M3,M2,M1,2)*IFACTC
                    C(4)=VC(M4,M3,M2,M1,2)*IFACTC
                    C(5)=VC(M4,M3,M2,M1,3)*IFACTC
                    C(6)=VC(M4,M3,M2,M1,3)*IFACTC
                    C(7)=VC(M4,M3,M2,M1,4)*IFACTC
                    C(8)=VC(M4,M3,M2,M1,4)*IFACTC
                    C(9)=VC(M4,M3,M2,M1,5)*IFACTC
                    C(10)=VC(M4,M3,M2,M1,5)*IFACTC
                    C(11)=VC(M4,M3,M2,M1,6)*IFACTC
                    C(12)=VC(M4,M3,M2,M1,7)*IFACTC
                    C(13)=VC(M4,M3,M2,M1,7)*IFACTC
                    C(14)=VC(M4,M3,M2,M1,8)*IFACTC
                    C(15)=VC(M4,M3,M2,M1,8)*IFACTC
                    C(16)=VC(M4,M3,M2,M1,9)*IFACTC
                    C(17)=VC(M4,M3,M2,M1,9)*IFACTC
                    C(18)=VC(M4,M3,M2,M1,10)*IFACTC
                    C(19)=VC(M4,M3,M2,M1,10)*IFACTC
                    C(20)=VC(M4,M3,M2,M1,11)*IFACTC
                    C(21)=VC(M4,M3,M2,M1,12)*IFACTC
                    C(22)=VC(M4,M3,M2,M1,12)*IFACTC
                    C(23)=VC(M4,M3,M2,M1,13)*IFACTC
                    C(24)=VC(M4,M3,M2,M1,13)*IFACTC
                    C(25)=VC(M4,M3,M2,M1,14)*IFACTC
                    C(26)=VC(M4,M3,M2,M1,14)*IFACTC
                    C(27)=VC(M4,M3,M2,M1,15)*IFACTC
                    C(28)=VC(M4,M3,M2,M1,16)*IFACTC
                    C(29)=VC(M4,M3,M2,M1,16)*IFACTC
                    C(30)=VC(M4,M3,M2,M1,17)*IFACTC
                    C(31)=VC(M4,M3,M2,M1,17)*IFACTC
                    C(32)=VC(M4,M3,M2,M1,18)*IFACTC
                    C(33)=VC(M4,M3,M2,M1,19)*IFACTC
                    C(34)=VC(M4,M3,M2,M1,19)*IFACTC
                    C(35)=VC(M4,M3,M2,M1,20)*IFACTC
                    C(36)=VC(M4,M3,M2,M1,21)*IFACTC
                    IF(J21.GT.1)C(36)=C(36)+VR(KROT,M4,M3,M2,M1)*IFACTC
                  END IF
                  C(36)=C(36)+VP(M4,M3,M2,M1)*IFACTL
                ELSE
                  IF(ICOUPC.GE.4)THEN
                    C(1)=VCR(M4,M3,M2,M1,1)*IFACTC
                    C(2)=VCR(M4,M3,M2,M1,1)*IFACTC
                    C(3)=VCR(M4,M3,M2,M1,2)*IFACTC
                    C(4)=VCR(M4,M3,M2,M1,2)*IFACTC
                    C(5)=VCR(M4,M3,M2,M1,3)*IFACTC
                    C(6)=VCR(M4,M3,M2,M1,3)*IFACTC
                    C(7)=VCR(M4,M3,M2,M1,4)*IFACTC
                    C(8)=VCR(M4,M3,M2,M1,4)*IFACTC
                    C(9)=VCR(M4,M3,M2,M1,5)*IFACTC
                    C(10)=VCR(M4,M3,M2,M1,5)*IFACTC
                    C(11)=VCR(M4,M3,M2,M1,6)*IFACTC
                    C(12)=VCR(M4,M3,M2,M1,7)*IFACTC
                    C(13)=VCR(M4,M3,M2,M1,7)*IFACTC
                    C(14)=VCR(M4,M3,M2,M1,8)*IFACTC
                    C(15)=VCR(M4,M3,M2,M1,8)*IFACTC
                    C(16)=VCR(M4,M3,M2,M1,9)*IFACTC
                    C(17)=VCR(M4,M3,M2,M1,9)*IFACTC
                    C(18)=VCR(M4,M3,M2,M1,10)*IFACTC
                    C(19)=VCR(M4,M3,M2,M1,10)*IFACTC
                    C(20)=VCR(M4,M3,M2,M1,11)*IFACTC
                    C(21)=VCR(M4,M3,M2,M1,12)*IFACTC
                    C(22)=VCR(M4,M3,M2,M1,12)*IFACTC
                    C(23)=VCR(M4,M3,M2,M1,13)*IFACTC
                    C(24)=VCR(M4,M3,M2,M1,13)*IFACTC
                    C(25)=VCR(M4,M3,M2,M1,14)*IFACTC
                    C(26)=VCR(M4,M3,M2,M1,14)*IFACTC
                    C(27)=VCR(M4,M3,M2,M1,15)*IFACTC
                    C(28)=VCR(M4,M3,M2,M1,16)*IFACTC
                    C(29)=VCR(M4,M3,M2,M1,16)*IFACTC
                    C(30)=VCR(M4,M3,M2,M1,17)*IFACTC
                    C(31)=VCR(M4,M3,M2,M1,17)*IFACTC
                    C(32)=VCR(M4,M3,M2,M1,18)*IFACTC
                    C(33)=VCR(M4,M3,M2,M1,19)*IFACTC
                    C(34)=VCR(M4,M3,M2,M1,19)*IFACTC
                    C(35)=VCR(M4,M3,M2,M1,20)*IFACTC
                    C(36)=VCR(M4,M3,M2,M1,21)*IFACTC
                    IF(J21.GT.1)C(36)=C(36)+VRR(KROT,M4,M3,M2,M1)*
     1              IFACTC
                  END IF
                  C(36)=C(36)+VPR(M4,M3,M2,M1)*IFACTL
                END IF
                DO IRHS4=1,JCI4
                  DO ILHS4=1,JCI4
                    DO K=1,I36
                      TEMP1(K,ILHS4,IRHS4)=TEMP1(K,ILHS4,IRHS4)+
     1                W0(K,ILHS4,IRHS4,M4)*C(37-K)
                    END DO
                  END DO
                END DO
              END DO
C**TEMPORARY
C     IF(MTAU.EQ.1.AND.M1.EQ.1.AND.M2.EQ.1.AND.M3.EQ.1)THEN
C       WRITE(IOUT,*)'END 1-MODE INTEGRATION'
C       CALL FLUSH(IOUT)
C     END IF
C**TEMPORARY
C**END 1-MODE INTEGRATION
              DO IRH=1,ICOUNT2
                IRHS3=IRL2(IRH,1)
                IRHS4=IRL2(IRH,2)
                DO ILH=1,ICOUNT2
                  ILHS3=IRL2(ILH,1)
                  ILHS4=IRL2(ILH,2)
                  DO K=1,I36
                    TEMP2(K,ILH,IRH)=
     1              TEMP2(K,ILH,IRH)+
     2              Z0(K,ILHS3,IRHS3,M3)*TEMP1(K,ILHS4,IRHS4)
                  END DO
                END DO
              END DO
            END DO
C**TEMPORARY
C     IF(MTAU.EQ.1.AND.M1.EQ.1.AND.M2.EQ.1)THEN
C       WRITE(IOUT,*)'END 2-MODE INTEGRATION'
C       CALL FLUSH(IOUT)
C     END IF
C**TEMPORARY
C**END 2-MODE INTEGRATION
            DO IRH=1,ICOUNT3
              IRHS2=IRL3(IRH,1)
              IR=IRL3(IRH,2)
C             IRHS3=IRL2(IR,1)
C             IRHS4=IRL2(IR,2)
              DO ILH=1,ICOUNT3
                ILHS2=IRL3(ILH,1)
                IL=IRL3(ILH,2)
C               ILHS3=IRL2(IL,1)
C               ILHS4=IRL2(IL,2)
                DO K=1,I36
                  TEMP3(K,ILH,IRH)=
     1            TEMP3(K,ILH,IRH)+
     2            Y0(K,ILHS2,IRHS2,M2)*TEMP2(K,IL,IR)
                END DO
              END DO
            END DO
          END DO
C**END 3-MODE INTEGRATION
C**TEMPORARY
C     IF(MTAU.EQ.1.AND.M1.EQ.1)THEN
C       WRITE(IOUT,*)'END 3-MODE INTEGRATION'
C       CALL FLUSH(IOUT)
C     END IF
C**TEMPORARY
C**********************************
          DO IRH=1,ICOUNT4
            IRHS1=IRL4(IRH,1)
            IR=IRL4(IRH,2)
C**TEMPORARY
C     WRITE(IOUT,*)
C     WRITE(IOUT,*)'RHS ',IRH,IRHS1,IR
C     WRITE(IOUT,*)
C     CALL FLUSH(IOUT)
C**TEMPORARY
C           IRHS2=IRL3(IR,1)
C           IRR=IRL3(IR,2)
C           IRHS3=IRL2(IRR,1)
C           IRHS4=IRL2(IRR,2)
            DO ILH=1,ICOUNT4
              ILHS1=IRL4(ILH,1)
              IL=IRL4(ILH,2)
C**TEMPORARY
C     WRITE(IOUT,*)'LHS ',ILH,ILHS1,IL
C     CALL FLUSH(IOUT)
C**TEMPORARY
C             ILHS2=IRL3(IL,1)
C             ILL=IRL3(IL,2)
C             ILHS3=IRL2(ILL,1)
C             ILHS4=IRL2(ILL,2)
              DO K=1,I36
                TEMP4(K,ILH,IRH)=
     1          TEMP4(K,ILH,IRH)+
     2          X0(K,ILHS1,IRHS1,M1)*TEMP3(K,IL,IR)
              END DO
            END DO
          END DO
        END DO
C**END 4-MODE INTEGRATION
C**TEMPORARY
C     IF(MTAU.EQ.1)THEN
C       WRITE(IOUT,*)'END 4-MODE INTEGRATION'
C       CALL FLUSH(IOUT)
C     END IF
C**TEMPORARY

C**NSIZE IS NO. UNIQUE INTEGRALS (5-DIM)
        DO IRHS=1,NSIZE
          IR=IP4(IRHS)
          IRTAU=IP(IRHS,MODE5)
          J0=IRHS*(IRHS-1)/2
          DO ILHS=1,IRHS
            IL=IP4(ILHS)
            ILTAU=IP(ILHS,MODE5)
            DO K=1,I36
              XA(ILHS+J0)=XA(ILHS+J0)+
     1        TEMP4(K,IL,IR)*
     2        T0(K,ILTAU,IRTAU,MTAU)*DSTAU(ITAU)
            END DO
          END DO
        END DO
      END DO
C**END TAU LOOP (5-MODE INTEGRATION)
      IF(ITIM4A.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM4A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VCI4(NMODE,MODE1,MODE2,MODE3,MODE4,XA,XK,NSIZE,IP,
     1ISIZMX,ISIZE,IP4,ISIZE4,ISTART,IEND,ILR,IRL,LANIND,XL,LAN12D,
     2XD,ZL,ICOUNT,ISIZEX,XKAN,MAXQU,MAXPOW,J21,MOD1,MOD2,MOD3,MOD4,
     3NP4,CP4,JP4,NTOT4,MAX4,INDK,INDL,INDN)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      LOGICAL LANCZ,LANZA,LANZB
      DIMENSION IP(ISIZMX,NMODE)
C**
      COMMON/VCIVN/IARRAY(50)
C**
      DIMENSION ILR(ISIZEX),IRL(ISIZEX)
C**TEMPORARY - HERMITIAN
C     DIMENSION XA(ISIZE,1),XK(1),IP4(ISIZE4,4)
C**TEMPORARY - HERMITIAN
      DIMENSION XA(1),XK(1),XL(LAN12D,ISIZE),XD(ISIZEX),
     1ZL(LAN12D,ICOUNT)
C**
      DIMENSION IP4(ISIZE4,4)
C**ANALYTIC
      DIMENSION NP4(NTOT4),CP4(MAX4,NTOT4),JP4(MAX4,NTOT4,4)
      DIMENSION INDK(1),INDL(1),INDN(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/LANCZO/LANCZ,LANZA,LANZB
      COMMON/WHICH/IWHICH
      COMMON/ILAST/ILAST
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM4A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating VCI4'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

C**ANALYTIC
      IND=INDN(MOD1)+INDL(MOD2)+INDK(MOD3)+MOD4
C**ANALYTIC

      DO K=1,NMODE
        IARRAY(K)=0
        IF(K.EQ.MODE1)GO TO 6000
        IF(K.EQ.MODE2)GO TO 6000
        IF(K.EQ.MODE3)GO TO 6000
        IF(K.NE.MODE4)GO TO 5000
6000    CONTINUE
        IARRAY(K)=1
5000    CONTINUE
      END DO

C**ORIGINAL ALGORITHM AND 1 AND 2-DIM MATRIX
      IF(LANIND.EQ.0.OR.LANIND.EQ.1)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=1,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
          NR4=IP(IRHS,MODE4)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP4(IR,1))GO TO 2000
            IF(NR2.NE.IP4(IR,2))GO TO 2000
            IF(NR3.NE.IP4(IR,3))GO TO 2000
            IF(NR4.EQ.IP4(IR,4))GO TO 1000
2000        CONTINUE
          END DO
C**TEMPORARY
      WRITE(IOUT,*)'NO MATCH IN VCI4 FOR BASIS'
      WRITE(IOUT,*)'ELEMENT:',NR1,NR2,NR3,NR4
      STOP 'VCI4 BASIS BUG'
C**TEMPORARY
1000      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
C**TEMPORARY - HERMITIAN
C         DO ILHS=ISTART,IEND
C**TEMPORARY - HERMITIAN
          DO ILHS=1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE
              IF(IARRAY(K).NE.0)GO TO 4000
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3000
4000          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
!            write(iout,*) "MR =",mr ! debug
!            I=MR*(MR-1)/2+ML
            if (mod(mr,2) .eq. 0) then
               i = mr / 2 * (mr - 1) + ml
            else
               i = (mr - 1) / 2 * mr + ml
            end if
            X=XK(I)
            Y=0
            IF(IWHICH.LT.0.AND.MOLINC.GT.0)THEN
C**ANALYTIC
              JR1=IP4(MR,1)
              JL1=IP4(ML,1)
              JR2=IP4(MR,2)
              JL2=IP4(ML,2)
              JR3=IP4(MR,3)
              JL3=IP4(ML,3)
              JR4=IP4(MR,4)
              JL4=IP4(ML,4)
              DO I=1,NP4(IND)
                K=JP4(I,IND,1)+1
                L=JP4(I,IND,2)+1
                N=JP4(I,IND,3)+1
                M=JP4(I,IND,4)+1
                Y=Y+CP4(I,IND)*XKAN(JL1,JR1,K,MOD1)*
     1          XKAN(JL2,JR2,L,MOD2)*XKAN(JL3,JR3,N,MOD3)*
     2          XKAN(JL4,JR4,M,MOD4)
              END DO
C**ANALYTIC
            END IF
C**TEMPORARY - HERMITIAN
C           XA(ILHS,IRHS)=XA(ILHS,IRHS)+(X+Y)
C**TEMPORARY - HERMITIAN
            XA(ILHS+J0)=XA(ILHS+J0)+(X+Y)
3000        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
        GO TO 7000
      END IF

C**SET UP MATRIX XL(LAN12D,ISIZE-LAN12D) IN CORE (XL AND XA ARE SAME
C**ARRAY - CF LANMAX)  ALSO SET UP DIAGONAL ELEMENTS IN XD(ISIZE)
      IF(LANIND.EQ.2)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (RHS)
        DO IRHS=ISTART,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
          NR4=IP(IRHS,MODE4)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP4(IR,1))GO TO 2001
            IF(NR2.NE.IP4(IR,2))GO TO 2001
            IF(NR3.NE.IP4(IR,3))GO TO 2001
            IF(NR4.EQ.IP4(IR,4))GO TO 1001
2001        CONTINUE
          END DO
1001      CONTINUE
          IRL(IRHS)=IR
        END DO
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (LHS)
        DO ILHS=1,LAN12D
          NL1=IP(ILHS,MODE1)
          NL2=IP(ILHS,MODE2)
          NL3=IP(ILHS,MODE3)
          NL4=IP(ILHS,MODE4)
C**FIND LHS INDEX
          DO IL=1,NSIZE
            IF(NL1.NE.IP4(IL,1))GO TO 2002
            IF(NL2.NE.IP4(IL,2))GO TO 2002
            IF(NL3.NE.IP4(IL,3))GO TO 2002
            IF(NL4.EQ.IP4(IL,4))GO TO 1002
2002        CONTINUE
          END DO
1002      CONTINUE
          ILR(ILHS)=IL
        END DO

        DO IRHS=ISTART,IEND
          IR=IRL(IRHS)
          DO ILHS=1,LAN12D
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE
              IF(IARRAY(K).NE.0)GO TO 4002
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3002
4002          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
!            write(iout,*) "MR-2 =",mr !  debug
!            I=MR*(MR-1)/2+ML
            if (mod(mr,2) .eq. 0) then
               i = mr / 2 * (mr - 1) + ml
            else
               i = (mr - 1) / 2 * mr + ml
            end if
            X=XK(I)
            XL(ILHS,IRHS-ISTART+1)=XL(ILHS,IRHS-ISTART+1)+X
3002        CONTINUE
          END DO
C**DIAGONAL ELEMENT
          IL=IR
!          write(iout,*) "IR =",ir ! debug
!          I=IR*(IR-1)/2+IL
          if (mod(ir,2) .eq. 0) then
             i = ir / 2 * (ir - 1) + il
          else
             i = (ir - 1) / 2 * ir + il
          end if
          X=XK(I)
          XD(IRHS)=XD(IRHS)+X
        END DO
      END IF

C**SET UP ARRAY XA((ISIZE-LAN12D)*(ISIZE-LAN12D+1)/2)
C**TRUNCATE IF ROW/COLUMN IN IFLAG(ISIZE)=0
      IF(LANIND.EQ.3)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=LAN12D+1,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
          NR4=IP(IRHS,MODE4)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP4(IR,1))GO TO 2004
            IF(NR2.NE.IP4(IR,2))GO TO 2004
            IF(NR3.NE.IP4(IR,3))GO TO 2004
            IF(NR4.EQ.IP4(IR,4))GO TO 1004
2004        CONTINUE
          END DO
1004      CONTINUE
          ILR(IRHS)=IR
        END DO
        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
          DO ILHS=LAN12D+1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE
              IF(IARRAY(K).NE.0)GO TO 4004
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3004
4004          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
!            write(iout,*) "MR-3 =",mr ! debug
!            I=MR*(MR-1)/2+ML
            if (mod(mr,2) .eq. 0) then
               i = mr / 2 * (mr - 1) + ml
            else
               i = (mr - 1) / 2 * mr + ml
            end if
            X=XK(I)
            XA(ILHS+J0)=XA(ILHS+J0)+X
3004        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
      END IF

7000  CONTINUE
      IF(ITIM4A.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM4A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VCV4(NMODE,MODE1,MODE2,MODE3,MODE4,XA,XK,NSIZE,IP,
     1ISIZMX,ISIZE,IP5,ISIZE5,ISTART,IEND,ILR,IRL,LANIND,XL,LAN12D,
     2XD,ZL,ICOUNT,ISIZEX)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LANCZ,LANZA,LANZB
      DIMENSION IP(ISIZMX,NMODE)
C**
      COMMON/VCIVN/IARRAY(50)
C**
      DIMENSION ILR(ISIZEX),IRL(ISIZEX)
      DIMENSION XA(1),XK(1),XL(LAN12D,ISIZE),XD(ISIZEX),
     1ZL(LAN12D,ICOUNT)
C**
      DIMENSION IP5(ISIZE5,5)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/LANCZO/LANCZ,LANZA,LANZB
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM4A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating VCV4'
        CALL TIMIT(1)
        CALL FLUSH(IOUT)
      END IF

      DO K=1,NMODE-1
        IARRAY(K)=0
        IF(K.EQ.MODE1)GO TO 6000
        IF(K.EQ.MODE2)GO TO 6000
        IF(K.EQ.MODE3)GO TO 6000
        IF(K.NE.MODE4)GO TO 5000
6000    CONTINUE
        IARRAY(K)=1
5000    CONTINUE
      END DO

C**ORIGINAL ALGORITHM AND 1 AND 2-DIM MATRIX
      IF(LANIND.EQ.0.OR.LANIND.EQ.1)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=1,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
          NR4=IP(IRHS,MODE4)
          NRTAU=IP(IRHS,NMODE)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP5(IR,1))GO TO 2000
            IF(NR2.NE.IP5(IR,2))GO TO 2000
            IF(NR3.NE.IP5(IR,3))GO TO 2000
            IF(NR4.NE.IP5(IR,4))GO TO 2000
            IF(NRTAU.EQ.IP5(IR,5))GO TO 1000
2000        CONTINUE
          END DO
1000      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
          DO ILHS=1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE-1
              IF(IARRAY(K).NE.0)GO TO 4000
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3000
4000          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XA(ILHS+J0)=XA(ILHS+J0)+X
3000        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
        GO TO 7000
      END IF

C**SET UP MATRIX XL(LAN12D,ISIZE-LAN12D) IN CORE (XL AND XA ARE SAME
C**ARRAY - CF LANMAX)  ALSO SET UP DIAGONAL ELEMENTS IN XD(ISIZE)
      IF(LANIND.EQ.2)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (RHS)
        DO IRHS=ISTART,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
          NR4=IP(IRHS,MODE4)
          NRTAU=IP(IRHS,NMODE)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP5(IR,1))GO TO 2001
            IF(NR2.NE.IP5(IR,2))GO TO 2001
            IF(NR3.NE.IP5(IR,3))GO TO 2001
            IF(NR4.NE.IP5(IR,4))GO TO 2001
            IF(NRTAU.EQ.IP5(IR,5))GO TO 1001
2001        CONTINUE
          END DO
1001      CONTINUE
          IRL(IRHS)=IR
        END DO
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (LHS)
        DO ILHS=1,LAN12D
          NL1=IP(ILHS,MODE1)
          NL2=IP(ILHS,MODE2)
          NL3=IP(ILHS,MODE3)
          NL4=IP(ILHS,MODE4)
          NLTAU=IP(ILHS,NMODE)
C**FIND LHS INDEX
          DO IL=1,NSIZE
            IF(NL1.NE.IP5(IL,1))GO TO 2002
            IF(NL2.NE.IP5(IL,2))GO TO 2002
            IF(NL3.NE.IP5(IL,3))GO TO 2002
            IF(NL4.NE.IP5(IL,4))GO TO 2002
            IF(NLTAU.EQ.IP5(IL,5))GO TO 1002
2002        CONTINUE
          END DO
1002      CONTINUE
          ILR(ILHS)=IL
        END DO

        DO IRHS=ISTART,IEND
          IR=IRL(IRHS)
          DO ILHS=1,LAN12D
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE-1
              IF(IARRAY(K).NE.0)GO TO 4002
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3002
4002          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XL(ILHS,IRHS-ISTART+1)=XL(ILHS,IRHS-ISTART+1)+X
3002        CONTINUE
          END DO
C**DIAGONAL ELEMENT
          IL=IR
          I=IR*(IR-1)/2+IL
          X=XK(I)
          XD(IRHS)=XD(IRHS)+X
        END DO
      END IF

C**SET UP ARRAY XA((ISIZE-LAN12D)*(ISIZE-LAN12D+1)/2)
C**TRUNCATE IF ROW/COLUMN IN IFLAG(ISIZE)=0
      IF(LANIND.EQ.3)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=LAN12D+1,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
          NR4=IP(IRHS,MODE4)
          NRTAU=IP(IRHS,NMODE)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP5(IR,1))GO TO 2004
            IF(NR2.NE.IP5(IR,2))GO TO 2004
            IF(NR3.NE.IP5(IR,3))GO TO 2004
            IF(NR4.NE.IP5(IR,4))GO TO 2004
            IF(NRTAU.EQ.IP5(IR,5))GO TO 1004
2004        CONTINUE
          END DO
1004      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
          DO ILHS=LAN12D+1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE-1
              IF(IARRAY(K).NE.0)GO TO 4004
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3004
4004          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XA(ILHS+J0)=XA(ILHS+J0)+X
3004        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
      END IF

7000  CONTINUE
      IF(ITIM4A.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM4A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VVV4(NMODE,MODE1,MODE2,MODE3,MODE4,XA,IP,ISIZMX,ISIZE,
     1ISTART,IEND,ILR,ICOUNT,NL1MAX,NL2MAX,NL3MAX,NL4MAX,NR1MAX,NR2MAX,
     2NR3MAX,NR4MAX,HTAU,XQTAU,NNTAU,MMTAU,MDTAU,JCIM,T0,MODINT,KROT,
     3I36,IND,XKAN,MAXQU,MAXPOW,NAMODE,CP4,JP4,VP4,MAX4)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LANCZ,LANZA,LANZB
      DIMENSION MODINT(NMODE)
      DIMENSION IP(ISIZMX,NMODE)
      DIMENSION XA(1),ILR(3,ICOUNT)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      DIMENSION T0(I36,JCIM,JCIM,MMTAU)
      DIMENSION CP4(MAX4,MDTAU),JP4(MAX4,4),VP4(JCIM,JCIM,MAX4)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,NAMODE)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/LANCZO/LANCZ,LANZA,LANZB
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/TMPMAX/MAXTMP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)

      IF(ITIM4A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating V0CV4/VVV4 WITH IND = ',IND
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

      MDT=MODINT(NSMODE)
      IF(IND.EQ.0)GO TO 1

C**FORM RPH INTEGRANDS
      KA=KROT/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)
      DO MTAU=1,MMTAU/MDT
        DO NRR=1,JCIM
          NR=NRR+1-MOD(KA,2)+INCT
          X=HTAU(NR,MTAU,1,LMAX)*MDT
          DO NLL=1,JCIM
            NL=NLL+1-MOD(KA,2)+INCT
            Y=HTAU(NL,MTAU,1,LMAX)
C**FOR POTENTIAL-ONLY, I36 = 1 ON ENTRY
            DO K=1,I36
              T0(K,NLL,NRR,MTAU)=Y*X
            END DO
          END DO
        END DO
      END DO

C***************************************

      GO TO 2

1     CONTINUE
      MDTAU=MMTAU/MDT
C*********************************
C**FIRST COUNT ONLY NON-ZERO TERMS
C*********************************
      ICOUNT=0
      NR1MAX=0
      NR2MAX=0
      NR3MAX=0
      NR4MAX=0
      NL1MAX=0
      NL2MAX=0
      NL3MAX=0
      NL4MAX=0
      DO IRHS=ISTART,IEND
        IF(LANCZ)THEN
          IL1=IRHS
          IL2=ISIZE
        ELSE
          IL1=1
          IL2=IRHS
        END IF
        NR1=IP(IRHS,MODE1)
        NR2=IP(IRHS,MODE2)
        NR3=IP(IRHS,MODE3)
        NR4=IP(IRHS,MODE4)
        DO ILHS=IL1,IL2
C**OVERLAP OF REMAINING STATES
          IS=1
          DO K=1,NMODE
            IF(IS.EQ.0)GO TO 2000
            IF(K.NE.MODE1.AND.K.NE.MODE2.AND.K.NE.MODE3.AND.K.NE.
     1      MODE4.AND.K.NE.NMODE.AND.(IP(IRHS,K).NE.IP(ILHS,K)))IS=0
          END DO
          IF(IS.EQ.0)GO TO 2000
C**OVERLAP OF REMAINING STATES
          NL1=IP(ILHS,MODE1)
          NL2=IP(ILHS,MODE2)
          NL3=IP(ILHS,MODE3)
          NL4=IP(ILHS,MODE4)
          ICOUNT=ICOUNT+1
          IF(NR1.GT.NR1MAX)NR1MAX=NR1
          IF(NR2.GT.NR2MAX)NR2MAX=NR2
          IF(NR3.GT.NR3MAX)NR3MAX=NR3
          IF(NR4.GT.NR4MAX)NR4MAX=NR4
          IF(NL1.GT.NL1MAX)NL1MAX=NL1
          IF(NL2.GT.NL2MAX)NL2MAX=NL2
          IF(NL3.GT.NL3MAX)NL3MAX=NL3
          IF(NL4.GT.NL4MAX)NL4MAX=NL4
2000      CONTINUE
        END DO
      END DO
      RETURN

2     CONTINUE
C**SPECIFIC TERMS FOR THIS 4-MODE COMBINATION
      READ(24)NFIT
      DO I=1,NFIT
        READ(24)JP4(I,1),JP4(I,2),JP4(I,3),JP4(I,4)
      END DO
C**COEFFICIENTS FOR SPECIFIC VALUES OF TAU
      DO MTAU=1,MDTAU
        READ(24)(CP4(I,MTAU),I=1,NFIT)
      END DO
C*********************************
C**SECOND SAVE ONLY NON-ZERO TERMS
C*********************************
      ICOUNT=0
      L0=-ISTART+1
      DO IRHS=ISTART,IEND
        IF(LANCZ)THEN
          J0=L0
          IL1=IRHS
          IL2=ISIZE
        ELSE
          J0=IRHS*(IRHS-1)/2
          IL1=1
          IL2=IRHS
        END IF
        DO ILHS=IL1,IL2
C**OVERLAP OF REMAINING STATES
          IS=1
          DO K=1,NMODE
            IF(IS.EQ.0)GO TO 3000
            IF(K.NE.MODE1.AND.K.NE.MODE2.AND.K.NE.MODE3.AND.K.NE.
     1      MODE4.AND.K.NE.NMODE.AND.(IP(IRHS,K).NE.IP(ILHS,K)))IS=0
          END DO
          IF(IS.EQ.0)GO TO 3000
C**OVERLAP OF REMAINING STATES
          ICOUNT=ICOUNT+1
          ILR(1,ICOUNT)=ILHS
          ILR(2,ICOUNT)=IRHS
          ILR(3,ICOUNT)=ILHS+J0
3000      CONTINUE
        END DO
        L0=L0+ISIZE-IRHS
      END DO

      IF(ITIM4A.EQ.0)THEN
        CALL TIMIT(3)
        CALL TIMIT(1)
        CALL FLUSH(IOUT)
      END IF

C********************************
C**   GET PARTIAL INTEGRAL
C********************************
      DO I=1,NFIT
        DO NRR=1,JCIM
          DO NLL=1,JCIM
            VP4(NLL,NRR,I)=0
          END DO
        END DO
      END DO
      ITAU=INIT-INCTAU
C**START TAU LOOP
      DO MTAU=1,MMTAU/MDT
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720
        DO I=1,NFIT
          X=CP4(I,MTAU)*DSTAU(ITAU)
          DO NRR=1,JCIM
            DO NLL=1,JCIM
              VP4(NLL,NRR,I)=VP4(NLL,NRR,I)+X*T0(I36,NLL,NRR,MTAU)
            END DO
          END DO
        END DO
      END DO

      IF(ITIM4A.EQ.0)THEN
        CALL TIMIT(3)
        CALL TIMIT(1)
        CALL FLUSH(IOUT)
      END IF

C**********************************************************************
C**START LOOP OVER COMMON INTEGRAL
C**********************************************************************

      DO ILRH=1,ICOUNT
        ILHS=ILR(1,ILRH)
        IRHS=ILR(2,ILRH)
        L0=ILR(3,ILRH)
        NL1=IP(ILHS,MODE1)
        NL2=IP(ILHS,MODE2)
        NL3=IP(ILHS,MODE3)
        NL4=IP(ILHS,MODE4)
        NLTAU=IP(ILHS,NMODE)
        NR1=IP(IRHS,MODE1)
        NR2=IP(IRHS,MODE2)
        NR3=IP(IRHS,MODE3)
        NR4=IP(IRHS,MODE4)
        NRTAU=IP(IRHS,NMODE)

C********************************
C**   PUT REQUIRED INTEGRAL IN XT
C********************************
        XT=0
C**SET "X" AS PRODUCT OF INTEGRALS IN FITTED V(TAU)
C**(NL1|V1(TAU)|NR1)*(NL2|V2(TAU)|NR2)*(NL3|V3(TAU)|NR3)*
C**(NL4|V4(TAU)|NR4)

        DO I=1,NFIT
          K=JP4(I,1)+1
          L=JP4(I,2)+1
          N=JP4(I,3)+1
          M=JP4(I,4)+1
          X=XKAN(NL1,NR1,K,MODE1)*XKAN(NL2,NR2,L,MODE2)*
     1    XKAN(NL3,NR3,N,MODE3)*XKAN(NL4,NR4,M,MODE4)
          XT=XT+VP4(NLTAU,NRTAU,I)*X
        END DO

C**POTENTIAL ONLY
        XA(L0)=XA(L0)+XT

        IF(ITIM4A.EQ.0.AND.ILRH.EQ.1)THEN
          CALL TIMIT(3)
          CALL TIMIT(1)
          CALL FLUSH(IOUT)
        END IF

      END DO
C*******************************
C**END LOOP OVER COMMON INTEGRAL
C*******************************

      IF(ITIM4A.EQ.0)THEN
        CALL TIMIT(3)
        ITIM4A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE V0CI5(NMODE,MODE1,MODE2,MODE3,MODE4,MODE5,MOD1,MOD2,
     1MOD3,MOD4,MOD5,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,NN1,MM1,NN2,
     2MM2,NN3,MM3,NN4,MM4,NN5,MM5,XA,NSIZE,IP,ISIZE,TEMP1,TEMP2,TEMP3,
     3TEMP4,JCI1,JCI2,JCI3,JCI4,JCI5,X0,Y0,Z0,W0,U0,VP,VPR,VC,VCR,
     4VR,VRR,J21,KROT,MODINT,ICOUNT2,IRL2,ICOUNT3,IRL3,ICOUNT4,IRL4,
     5IP4,IND,I26)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM5,MM4,MM3,MM2,MM1),VC(MM5,MM4,MM3,MM2,16),
     1VR(J21,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM5,MM4,MM3,MM2,MM1),VCR(MM5,MM4,MM3,MM2,16),
     1VRR(J21,MM5,MM4,MM3,MM2,MM1)
      DIMENSION X(26),Y(26),C(26)
      DIMENSION MODINT(NMODE)
      DIMENSION H1(NN1,MM1,3),H2(NN2,MM2,3),H3(NN3,MM3,3)
      DIMENSION H4(NN4,MM4,3),H5(NN5,MM5,3)
      DIMENSION IP(ISIZE,NMODE)
      DIMENSION TEMP1(I26,JCI5,JCI5),TEMP2(I26,ICOUNT2,ICOUNT2),
     1TEMP3(I26,ICOUNT3,ICOUNT3),TEMP4(I26,ICOUNT4,ICOUNT4)
      DIMENSION IRL2(ICOUNT2,2),IRL3(ICOUNT3,2),IRL4(ICOUNT4,2)
      DIMENSION IP4(NSIZE)
      DIMENSION X0(I26,JCI1,JCI1,MM1),Y0(I26,JCI2,JCI2,MM2)
      DIMENSION Z0(I26,JCI3,JCI3,MM3),W0(I26,JCI4,JCI4,MM4)
      DIMENSION U0(I26,JCI5,JCI5,MM5)
      DIMENSION XA(1)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),XQ4(MM4),XQ5(MM5)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/BASIS/NBAS(6,2),MAXSUM(6,2)
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/UNITEX/I75,I76,I85,I86
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MOD1)
      MD2=MODINT(MOD2)
      MD3=MODINT(MOD3)
      MD4=MODINT(MOD4)
      MD5=MODINT(MOD5)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MOD1.EQ.ISYM(I,J))N1=I
          IF(MOD2.EQ.ISYM(I,J))N2=I
          IF(MOD3.EQ.ISYM(I,J))N3=I
          IF(MOD4.EQ.ISYM(I,J))N4=I
          IF(MOD5.EQ.ISYM(I,J))N5=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N4.EQ.N5)MD5=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      CALL VDCI5(NMODE,MODE1,MODE2,MODE3,MODE4,MODE5,MOD1,MOD2,MOD3,
     1MOD4,MOD5,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,NN1,MM1,MM1/MD1,
     2NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,NN5,MM5,MM5/MD5,
     3XA,NSIZE,IP,ISIZE,TEMP1,TEMP2,TEMP3,
     3TEMP4,JCI1,JCI2,JCI3,JCI4,JCI5,X0,Y0,Z0,W0,U0,VP,VPR,VC,VCR,
     4VR,VRR,J21,KROT,MODINT,ICOUNT2,IRL2,ICOUNT3,IRL3,ICOUNT4,IRL4,
     5IP4,IND,I26)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VDCI5(NMODE,MODE1,MODE2,MODE3,MODE4,MODE5,MOD1,MOD2,
     1MOD3,MOD4,MOD5,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,NN1,MH1,MM1,
     2NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NN5,MH5,MM5,
     3XA,NSIZE,IP,ISIZE,TEMP1,TEMP2,TEMP3,
     3TEMP4,JCI1,JCI2,JCI3,JCI4,JCI5,X0,Y0,Z0,W0,U0,VP,VPR,VC,VCR,
     4VR,VRR,J21,KROT,MODINT,ICOUNT2,IRL2,ICOUNT3,IRL3,ICOUNT4,IRL4,
     5IP4,IND,I26)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM5,MM4,MM3,MM2,MM1),VC(MM5,MM4,MM3,MM2,16),
     1VR(J21,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM5,MM4,MM3,MM2,MM1),VCR(MM5,MM4,MM3,MM2,16),
     1VRR(J21,MM5,MM4,MM3,MM2,MM1)
      DIMENSION X(26),Y(26),C(26)
      DIMENSION MODINT(NMODE)
      DIMENSION H1(NN1,MH1,3),H2(NN2,MH2,3),H3(NN3,MH3,3)
      DIMENSION H4(NN4,MH4,3),H5(NN5,MH5,3)
      DIMENSION IP(ISIZE,NMODE)
      DIMENSION TEMP1(I26,JCI5,JCI5),TEMP2(I26,ICOUNT2,ICOUNT2),
     1TEMP3(I26,ICOUNT3,ICOUNT3),TEMP4(I26,ICOUNT4,ICOUNT4)
      DIMENSION IRL2(ICOUNT2,2),IRL3(ICOUNT3,2),IRL4(ICOUNT4,2)
      DIMENSION IP4(NSIZE)
      DIMENSION X0(I26,JCI1,JCI1,MM1),Y0(I26,JCI2,JCI2,MM2)
      DIMENSION Z0(I26,JCI3,JCI3,MM3),W0(I26,JCI4,JCI4,MM4)
      DIMENSION U0(I26,JCI5,JCI5,MM5)
      DIMENSION XA(1)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),XQ4(MM4),XQ5(MM5)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/BASIS/NBAS(6,2),MAXSUM(6,2)
      COMMON/FACTOR/FACTOR(6)
      COMMON/MAXLAN/LANMAX
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/UNITEX/I75,I76,I85,I86
      COMMON/FILASS/IOUT,INP

      IF(ITIM5A.EQ.0.AND.IND.EQ.-2)THEN
        WRITE(IOUT,*)'Calculating V0CI5'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

      IF(IND.GE.0)GO TO 500
      NMAX1=MAX0(MAXSUM(1,1)+1,MAXSUM(2,1)+2)
      NMAX2=MAX0(MAXSUM(1,2)+1,MAXSUM(2,2)+2)
      NMAX=MAX0(NMAX1,NMAX2)
      ICOUNT2=0
      DO I5=0,JCI5-1
        DO I4=0,JCI4-1
          IF(I4+I5.LE.NMAX)THEN
            ICOUNT2=ICOUNT2+1
            IF(IABS(IND).EQ.1)THEN
              IRL2(ICOUNT2,1)=I4+1
              IRL2(ICOUNT2,2)=I5+1
            END IF
          END IF
        END DO
      END DO
C**RETURN WITH ICOUNT2
      IF(IABS(IND).GT.1)RETURN
500   CONTINUE
      IF(IND.EQ.0)GO TO 600
      NMAX1=MAX0(MAXSUM(1,1)+1,MAXSUM(2,1)+2,MAXSUM(3,1)+3)
      NMAX2=MAX0(MAXSUM(1,2)+1,MAXSUM(2,2)+2,MAXSUM(3,2)+3)
      NMAX=MAX0(NMAX1,NMAX2)
      ICOUNT3=0
      DO I=1,ICOUNT2
        I4=IRL2(I,1)-1
        I5=IRL2(I,2)-1
        DO I3=0,JCI3-1
          IF(I3+I4+I5.LE.NMAX)THEN
            ICOUNT3=ICOUNT3+1
            IF(IND.GT.0)THEN
              IRL3(ICOUNT3,1)=I3+1
              IRL3(ICOUNT3,2)=I
            END IF
          END IF
        END DO
      END DO
C**RETURN WITH ICOUNT3
      IF(IND.LT.0)RETURN
600   CONTINUE
      NMAX1=MAX0(MAXSUM(1,1)+1,MAXSUM(2,1)+2,MAXSUM(3,1)+3,
     1MAXSUM(4,1)+4)
      NMAX2=MAX0(MAXSUM(1,2)+1,MAXSUM(2,2)+2,MAXSUM(3,2)+3,
     1MAXSUM(4,2)+4)
      NMAX=MAX0(NMAX1,NMAX2)
      ICOUNT4=0
      DO I=1,ICOUNT3
        I3=IRL3(I,1)-1
        K=IRL3(I,2)
        I4=IRL2(K,1)-1
        I5=IRL2(K,2)-1
        DO I2=0,JCI2-1
          IF(I2+I3+I4+I5.LE.NMAX)THEN
            ICOUNT4=ICOUNT4+1
            IF(IND.EQ.0)THEN
              IRL4(ICOUNT4,1)=I2+1
              IRL4(ICOUNT4,2)=I
            END IF
          END IF
        END DO
      END DO
C**RETURN WITH ICOUNT4
      IF(IND.GT.0)RETURN
      DO I=1,NSIZE
        IP4(I)=0
        NR2=IP(I,MODE2)
        NR3=IP(I,MODE3)
        NR4=IP(I,MODE4)
        NR5=IP(I,MODE5)
        DO J=1,ICOUNT4
          IF(IRL4(J,1).NE.NR2)GO TO 1000
          K=IRL4(J,2)
          IF(IRL3(K,1).NE.NR3)GO TO 1000
          L=IRL3(K,2)
          IF(IRL2(L,1).NE.NR4)GO TO 1000
          IF(IRL2(L,2).NE.NR5)GO TO 1000
          IP4(I)=J
1000      CONTINUE
        END DO
        IF(IP4(I).EQ.0)THEN
          WRITE(IOUT,*)'IP4 SET-UP ERROR FOR ELEMENT ',I
          STOP 'IP4 ERROR'
        END IF
      END DO
C**IRL2, IRL3 & IRL4 CONTAIN POINTERS FOR LAST 4 INDICES OF IP(NSIZE,5)

      IFACTC=INTFAC(NMODE,ICOUPC,5)
      IFACTL=INTFAC(NMODE,ICOUPL,5)
      IF(MOLINC.GT.0)IFACTL=1
      IF(MOLINC.GT.0)IFACTC=1
      IF(IWHICH.EQ.0)IFACTL=1
      IF(IWHICH.LT.0.AND.MOLINC.LT.0)IFACTL=1

C***********************************************************

      MD1=MODINT(MOD1)
      MD2=MODINT(MOD2)
      MD3=MODINT(MOD3)
      MD4=MODINT(MOD4)
      MD5=MODINT(MOD5)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MOD1.EQ.ISYM(I,J))N1=I
          IF(MOD2.EQ.ISYM(I,J))N2=I
          IF(MOD3.EQ.ISYM(I,J))N3=I
          IF(MOD4.EQ.ISYM(I,J))N4=I
          IF(MOD5.EQ.ISYM(I,J))N5=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N4.EQ.N5)MD5=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      MD=MD1*MD2*MD3*MD4*MD5

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(I75)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(I75)VPR
      END IF

C***********************************************************
C**FORM INDIVIDUAL INTEGRATION TERMS (START)
      DO M1=1,MM1
        DO NR1=1,JCI1
C         X=H1(NR1,M1,1)*IFACTL*MD
          X(1)=H1(NR1,M1,2)*MD
          X(2)=H1(NR1,M1,1)*MD
          X(3)=X(1)
          X(4)=X(2)
          X(5)=X(1)
          X(6)=X(2)
          X(7)=X(1)
          X(8)=X(2)
          X(9)=X(1)
          X(10)=X(2)
          X(11)=X(2)
          X(12)=X(2)
          X(13)=X(2)
          X(14)=X(2)
          X(15)=X(2)
          X(16)=X(2)
          X(17)=X(2)
          X(18)=X(2)
          X(19)=X(2)
          X(20)=X(2)
          X(21)=X(2)
          X(22)=X(2)
          X(23)=X(2)
          X(24)=X(2)
          X(25)=X(2)
          X(26)=X(2)
          DO NL1=1,JCI1
C           Y=H1(NL1,M1,1)
C           X0(NL1,NR1,M1)=Y*X
            Y(1)=H1(NL1,M1,2)
            Y(2)=Y(1)
            Y(3)=H1(NL1,M1,1)
            Y(4)=Y(1)
            Y(5)=Y(3)
            Y(6)=Y(1)
            Y(7)=Y(3)
            Y(8)=Y(1)
            Y(9)=Y(3)
            Y(10)=Y(3)
            Y(11)=Y(3)
            Y(12)=Y(3)
            Y(13)=Y(3)
            Y(14)=Y(3)
            Y(15)=Y(3)
            Y(16)=Y(3)
            Y(17)=Y(3)
            Y(18)=Y(3)
            Y(19)=Y(3)
            Y(20)=Y(3)
            Y(21)=Y(3)
            Y(22)=Y(3)
            Y(23)=Y(3)
            Y(24)=Y(3)
            Y(25)=Y(3)
            Y(26)=Y(3)
            DO K=1,I26
              X0(K,NL1,NR1,M1)=Y(27-K)*X(27-K)
            END DO
          END DO
        END DO
      END DO
      DO M2=1,MM2
        DO NR2=1,JCI2
C         X=H2(NR2,M2,1)
          X(1)=H2(NR2,M2,1)
          X(2)=H2(NR2,M2,2)
          X(3)=X(1)
          X(4)=X(1)
          X(5)=X(1)
          X(6)=X(1)
          X(7)=X(1)
          X(8)=X(1)
          X(9)=X(1)
          X(10)=X(2)
          X(11)=X(1)
          X(12)=X(2)
          X(13)=X(1)
          X(14)=X(2)
          X(15)=X(1)
          X(16)=X(2)
          X(17)=X(1)
          X(18)=X(1)
          X(19)=X(1)
          X(20)=X(1)
          X(21)=X(1)
          X(22)=X(1)
          X(23)=X(1)
          X(24)=X(1)
          X(25)=X(1)
          X(26)=X(1)
          DO NL2=1,JCI2
C           Y=H2(NL2,M2,1)
C           Y0(NL2,NR2,M2)=Y*X
            Y(1)=H2(NL2,M2,1)
            Y(2)=Y(1)
            Y(3)=H2(NL2,M2,2)
            Y(4)=Y(1)
            Y(5)=Y(1)
            Y(6)=Y(1)
            Y(7)=Y(1)
            Y(8)=Y(1)
            Y(9)=Y(1)
            Y(10)=Y(3)
            Y(11)=Y(3)
            Y(12)=Y(1)
            Y(13)=Y(3)
            Y(14)=Y(1)
            Y(15)=Y(3)
            Y(16)=Y(1)
            Y(17)=Y(1)
            Y(18)=Y(1)
            Y(19)=Y(1)
            Y(20)=Y(1)
            Y(21)=Y(1)
            Y(22)=Y(1)
            Y(23)=Y(1)
            Y(24)=Y(1)
            Y(25)=Y(1)
            Y(26)=Y(1)
            DO K=1,I26
              Y0(K,NL2,NR2,M2)=Y(27-K)*X(27-K)
            END DO
          END DO
        END DO
      END DO
      DO M3=1,MM3
        DO NR3=1,JCI3
C         X=H3(NR3,M3,1)
          X(1)=H3(NR3,M3,1)
          X(2)=X(1)
          X(3)=X(1)
          X(4)=H3(NR3,M3,2)
          X(5)=X(1)
          X(6)=X(1)
          X(7)=X(1)
          X(8)=X(1)
          X(9)=X(1)
          X(10)=X(1)
          X(11)=X(4)
          X(12)=X(1)
          X(13)=X(1)
          X(14)=X(1)
          X(15)=X(1)
          X(16)=X(1)
          X(17)=X(4)
          X(18)=X(1)
          X(19)=X(4)
          X(20)=X(1)
          X(21)=X(4)
          X(22)=X(1)
          X(23)=X(1)
          X(24)=X(1)
          X(25)=X(1)
          X(26)=X(1)
          DO NL3=1,JCI3
C           Y=H3(NL3,M3,1)
C           Z0(NL3,NR3,M3)=Y*X
            Y(1)=H3(NL3,M3,1)
            Y(2)=Y(1)
            Y(3)=Y(1)
            Y(4)=Y(1)
            Y(5)=H3(NL3,M3,2)
            Y(6)=Y(1)
            Y(7)=Y(1)
            Y(8)=Y(1)
            Y(9)=Y(1)
            Y(10)=Y(1)
            Y(11)=Y(1)
            Y(12)=Y(5)
            Y(13)=Y(1)
            Y(14)=Y(1)
            Y(15)=Y(1)
            Y(16)=Y(1)
            Y(17)=Y(5)
            Y(18)=Y(5)
            Y(19)=Y(1)
            Y(20)=Y(5)
            Y(21)=Y(1)
            Y(22)=Y(1)
            Y(23)=Y(1)
            Y(24)=Y(1)
            Y(25)=Y(1)
            Y(26)=Y(1)
            DO K=1,I26
              Z0(K,NL3,NR3,M3)=Y(27-K)*X(27-K)
            END DO
          END DO
        END DO
      END DO
      DO M4=1,MM4
        DO NR4=1,JCI4
C         X=H4(NR4,M4,1)
          X(1)=H4(NR4,M4,1)
          X(2)=X(1)
          X(3)=X(1)
          X(4)=X(1)
          X(5)=X(1)
          X(6)=H4(NR4,M4,2)
          X(7)=X(1)
          X(8)=X(1)
          X(9)=X(1)
          X(10)=X(1)
          X(11)=X(1)
          X(12)=X(1)
          X(13)=X(6)
          X(14)=X(1)
          X(15)=X(1)
          X(16)=X(1)
          X(17)=X(1)
          X(18)=X(6)
          X(19)=X(1)
          X(20)=X(1)
          X(21)=X(1)
          X(22)=X(6)
          X(23)=X(1)
          X(24)=X(6)
          X(25)=X(1)
          X(26)=X(1)
          DO NL4=1,JCI4
C           Y=H4(NL4,M4,1)
C           W0(NL4,NR4,M4)=Y*X
            Y(1)=H4(NL4,M4,1)
            Y(2)=Y(1)
            Y(3)=Y(1)
            Y(4)=Y(1)
            Y(5)=Y(1)
            Y(6)=Y(1)
            Y(7)=H4(NL4,M4,2)
            Y(8)=Y(1)
            Y(9)=Y(1)
            Y(10)=Y(1)
            Y(11)=Y(1)
            Y(12)=Y(1)
            Y(13)=Y(1)
            Y(14)=Y(7)
            Y(15)=Y(1)
            Y(16)=Y(1)
            Y(17)=Y(1)
            Y(18)=Y(1)
            Y(19)=Y(7)
            Y(20)=Y(1)
            Y(21)=Y(1)
            Y(22)=Y(7)
            Y(23)=Y(7)
            Y(24)=Y(1)
            Y(25)=Y(1)
            Y(26)=Y(1)
            DO K=1,I26
              W0(K,NL4,NR4,M4)=Y(27-K)*X(27-K)
            END DO
          END DO
        END DO
      END DO
      DO M5=1,MM5
        DO NR5=1,JCI5
C         X=H5(NR5,M5,1)
          X(1)=H5(NR5,M5,1)
          X(2)=X(1)
          X(3)=X(1)
          X(4)=X(1)
          X(5)=X(1)
          X(6)=X(1)
          X(7)=X(1)
          X(8)=H5(NR5,M5,2)
          X(9)=X(1)
          X(10)=X(1)
          X(11)=X(1)
          X(12)=X(1)
          X(13)=X(1)
          X(14)=X(1)
          X(15)=X(8)
          X(16)=X(1)
          X(17)=X(1)
          X(18)=X(1)
          X(19)=X(1)
          X(20)=X(8)
          X(21)=X(1)
          X(22)=X(1)
          X(23)=X(8)
          X(24)=X(1)
          X(25)=X(8)
          X(26)=X(1)
          DO NL5=1,JCI5
C           Y=H5(NL5,M5,1)
C           U0(NL5,NR5,M5)=Y*X
            Y(1)=H5(NL5,M5,1)
            Y(2)=Y(1)
            Y(3)=Y(1)
            Y(4)=Y(1)
            Y(5)=Y(1)
            Y(6)=Y(1)
            Y(7)=Y(1)
            Y(8)=Y(1)
            Y(9)=H5(NL5,M5,2)
            Y(10)=Y(1)
            Y(11)=Y(1)
            Y(12)=Y(1)
            Y(13)=Y(1)
            Y(14)=Y(1)
            Y(15)=Y(1)
            Y(16)=Y(9)
            Y(17)=Y(1)
            Y(18)=Y(1)
            Y(19)=Y(1)
            Y(20)=Y(1)
            Y(21)=Y(9)
            Y(22)=Y(1)
            Y(23)=Y(1)
            Y(24)=Y(9)
            Y(25)=Y(9)
            Y(26)=Y(1)
            DO K=1,I26
              U0(K,NL5,NR5,M5)=Y(27-K)*X(27-K)
            END DO
          END DO
        END DO
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**START 5-MODE INTEGRATION
      IF(IWHICH.GE.0)THEN
        DO M1=1,MM1
C**
          IF(JCOUPC.GE.0)THEN
C           IF(J21.GT.1.AND.ICOUPC.GT.4)READ(I65)VR
            IF(ICOUPC.GT.4)READ(I85)VC
          ELSE
C           IF(J21.GT.1.AND.ICOUPC.GT.4)READ(I65)VRR
            IF(ICOUPC.GT.4)READ(I85)VCR
          END IF
C**
          DO IRH=1,ICOUNT4
            DO ILH=1,ICOUNT4
              DO K=1,I26
                TEMP4(K,ILH,IRH)=0
              END DO
            END DO
          END DO
C**START 4-MODE INTEGRATION
          DO M2=1,MM2
            DO IRH=1,ICOUNT3
              DO ILH=1,ICOUNT3
                DO K=1,I26
                  TEMP3(K,ILH,IRH)=0
                END DO
              END DO
            END DO
C**START 3-MODE INTEGRATION
            DO M3=1,MM3
              DO IRH=1,ICOUNT2
                DO ILH=1,ICOUNT2
                  DO K=1,I26
                    TEMP2(K,ILH,IRH)=0
                  END DO
                END DO
              END DO
C**START 2-MODE INTEGRATION
              DO M4=1,MM4
                DO IRHS5=1,JCI5
                  DO ILHS5=1,JCI5
                    DO K=1,I26
                      TEMP1(K,ILHS5,IRHS5)=0
                    END DO
                  END DO
                END DO
C**START 1-MODE INTEGRATION
                DO M5=1,MM5
                  DO I=1,26
                    C(I)=0
                  END DO
                  IF(JCOUPL.GT.0)THEN
                    IF(ICOUPC.GT.4)THEN
                      C(1)=VC(M5,M4,M3,M2,1)*IFACTC
                      C(2)=VC(M5,M4,M3,M2,2)*IFACTC
                      C(3)=VC(M5,M4,M3,M2,2)*IFACTC
                      C(4)=VC(M5,M4,M3,M2,3)*IFACTC
                      C(5)=VC(M5,M4,M3,M2,3)*IFACTC
                      C(6)=VC(M5,M4,M3,M2,4)*IFACTC
                      C(7)=VC(M5,M4,M3,M2,4)*IFACTC
                      C(8)=VC(M5,M4,M3,M2,5)*IFACTC
                      C(9)=VC(M5,M4,M3,M2,5)*IFACTC
                      C(10)=VC(M5,M4,M3,M2,6)*IFACTC
                      C(11)=VC(M5,M4,M3,M2,7)*IFACTC
                      C(12)=VC(M5,M4,M3,M2,7)*IFACTC
                      C(13)=VC(M5,M4,M3,M2,8)*IFACTC
                      C(14)=VC(M5,M4,M3,M2,8)*IFACTC
                      C(15)=VC(M5,M4,M3,M2,9)*IFACTC
                      C(16)=VC(M5,M4,M3,M2,9)*IFACTC
                      C(17)=VC(M5,M4,M3,M2,10)*IFACTC
                      C(18)=VC(M5,M4,M3,M2,11)*IFACTC
                      C(19)=VC(M5,M4,M3,M2,11)*IFACTC
                      C(20)=VC(M5,M4,M3,M2,12)*IFACTC
                      C(21)=VC(M5,M4,M3,M2,12)*IFACTC
                      C(22)=VC(M5,M4,M3,M2,13)*IFACTC
                      C(23)=VC(M5,M4,M3,M2,14)*IFACTC
                      C(24)=VC(M5,M4,M3,M2,14)*IFACTC
                      C(25)=VC(M5,M4,M3,M2,15)*IFACTC
                      C(26)=VC(M5,M4,M3,M2,16)*IFACTC
C                     IF(J21.GT.1)
C    1                C(26)=C(26)+VR(KROT,M5,M4,M3,M2,M1)*IFACTC
                    END IF
                    IF(IWHICH.GE.0.OR.MOLINC.LE.0)C(26)=C(26)+
     1              VP(M5,M4,M3,M2,M1)*IFACTL
                  ELSE
                    IF(ICOUPC.GT.4)THEN
                      C(1)=VCR(M5,M4,M3,M2,1)*IFACTC
                      C(2)=VCR(M5,M4,M3,M2,2)*IFACTC
                      C(3)=VCR(M5,M4,M3,M2,2)*IFACTC
                      C(4)=VCR(M5,M4,M3,M2,3)*IFACTC
                      C(5)=VCR(M5,M4,M3,M2,3)*IFACTC
                      C(6)=VCR(M5,M4,M3,M2,4)*IFACTC
                      C(7)=VCR(M5,M4,M3,M2,4)*IFACTC
                      C(8)=VCR(M5,M4,M3,M2,5)*IFACTC
                      C(9)=VCR(M5,M4,M3,M2,5)*IFACTC
                      C(10)=VCR(M5,M4,M3,M2,6)*IFACTC
                      C(11)=VCR(M5,M4,M3,M2,7)*IFACTC
                      C(12)=VCR(M5,M4,M3,M2,7)*IFACTC
                      C(13)=VCR(M5,M4,M3,M2,8)*IFACTC
                      C(14)=VCR(M5,M4,M3,M2,8)*IFACTC
                      C(15)=VCR(M5,M4,M3,M2,9)*IFACTC
                      C(16)=VCR(M5,M4,M3,M2,9)*IFACTC
                      C(17)=VCR(M5,M4,M3,M2,10)*IFACTC
                      C(18)=VCR(M5,M4,M3,M2,11)*IFACTC
                      C(19)=VCR(M5,M4,M3,M2,11)*IFACTC
                      C(20)=VCR(M5,M4,M3,M2,12)*IFACTC
                      C(21)=VCR(M5,M4,M3,M2,12)*IFACTC
                      C(22)=VCR(M5,M4,M3,M2,13)*IFACTC
                      C(23)=VCR(M5,M4,M3,M2,14)*IFACTC
                      C(24)=VCR(M5,M4,M3,M2,14)*IFACTC
                      C(25)=VCR(M5,M4,M3,M2,15)*IFACTC
                      C(26)=VCR(M5,M4,M3,M2,16)*IFACTC
C                     IF(J21.GT.1)
C    1                C(26)=C(26)+VR(KROT,M5,M4,M3,M2,M1)*IFACTC
                    END IF
                    IF(IWHICH.GE.0.OR.MOLINC.LE.0)C(26)=C(26)+
     1              VPR(M5,M4,M3,M2,M1)*IFACTL
                  END IF
                  DO IRHS5=1,JCI5
                    DO ILHS5=1,JCI5
                      DO K=1,I26
                        TEMP1(K,ILHS5,IRHS5)=TEMP1(K,ILHS5,IRHS5)+
     1                  U0(K,ILHS5,IRHS5,M5)*C(27-K)
                      END DO
                    END DO
                  END DO
                END DO
C**END 1-MODE INTEGRATION
                DO IRH=1,ICOUNT2
                  IRHS4=IRL2(IRH,1)
                  IRHS5=IRL2(IRH,2)
                  DO ILH=1,ICOUNT2
                    ILHS4=IRL2(ILH,1)
                    ILHS5=IRL2(ILH,2)
                    DO K=1,I26
                      TEMP2(K,ILH,IRH)=
     1                TEMP2(K,ILH,IRH)+
     2                W0(K,ILHS4,IRHS4,M4)*TEMP1(K,ILHS5,IRHS5)
                    END DO
                  END DO
                END DO
              END DO
C**END 2-MODE INTEGRATION
              DO IRH=1,ICOUNT3
                IRHS3=IRL3(IRH,1)
                IR=IRL3(IRH,2)
                DO ILH=1,ICOUNT3
                  ILHS3=IRL3(ILH,1)
                  IL=IRL3(ILH,2)
                  DO K=1,I26
                    TEMP3(K,ILH,IRH)=
     1              TEMP3(K,ILH,IRH)+
     2              Z0(K,ILHS3,IRHS3,M3)*TEMP2(K,IL,IR)
                  END DO
                END DO
              END DO
            END DO
C**END 3-MODE INTEGRATION
            DO IRH=1,ICOUNT4
              IRHS2=IRL4(IRH,1)
              IR=IRL4(IRH,2)
              DO ILH=1,ICOUNT4
                ILHS2=IRL4(ILH,1)
                IL=IRL4(ILH,2)
                DO K=1,I26
                  TEMP4(K,ILH,IRH)=
     1            TEMP4(K,ILH,IRH)+
     2            Y0(K,ILHS2,IRHS2,M2)*TEMP3(K,IL,IR)
                END DO
              END DO
            END DO
          END DO
C**END 4-MODE INTEGRATION
C**NSIZE IS NO. UNIQUE INTEGRALS (5-DIM)
          DO IRHS=1,NSIZE
            IR=IP4(IRHS)
            IRHS1=IP(IRHS,MODE1)
            J0=IRHS*(IRHS-1)/2
            DO ILHS=1,IRHS
              IL=IP4(ILHS)
              ILHS1=IP(ILHS,MODE1)
              DO K=1,I26
                XA(ILHS+J0)=XA(ILHS+J0)+
     1          TEMP4(K,IL,IR)*
     2          X0(K,ILHS1,IRHS1,M1)
              END DO
            END DO
          END DO
        END DO
      END IF
C**END 5-MODE INTEGRATION
      IF(ITIM5A.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM5A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE V0CV5(NMODE,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6,MOD1,
     1MOD2,MOD3,MOD4,MOD5,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,HTAU,
     2XQTAU,XA,NSIZE,NN1,MM1,NN2,MM2,NN3,MM3,NN4,MM4,NN5,MM5,NNTAU,
     3MMTAU,IP,ISIZE,TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,JCI1,JCI2,JCI3,JCI4,
     4JCI5,JCIM,X0,Y0,Z0,W0,U0,T0,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,
     5ICOUNT2,IRL2,ICOUNT3,IRL3,ICOUNT4,IRL4,ICOUNT5,IRL5,IP5,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM5,MM4,MM3,MM2,MM1),VC(MM5,MM4,MM3,MM2,MM1,1),
     1VR(J21,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM5,MM4,MM3,MM2,MM1),VCR(MM5,MM4,MM3,MM2,MM1,1),
     1VRR(J21,MM5,MM4,MM3,MM2,MM1)
      DIMENSION X(1),Y(1),C(1)
      DIMENSION MODINT(NMODE)
      DIMENSION H1(NN1,MM1,3),H2(NN2,MM2,3),H3(NN3,MM3,3),H4(NN4,MM4,3)
      DIMENSION H5(NN5,MM5,3)
      DIMENSION IP(ISIZE,NMODE)
      DIMENSION XA(1),XQ1(MM1),XQ2(MM2),XQ3(MM3),XQ4(MM4),XQ5(MM5)
      DIMENSION TEMP1(1,JCI5,JCI5),TEMP2(1,ICOUNT2,ICOUNT2),
     1TEMP3(1,ICOUNT3,ICOUNT3),TEMP4(1,ICOUNT4,ICOUNT4),
     2TEMP5(1,ICOUNT5,ICOUNT5)
      DIMENSION IRL2(ICOUNT2,2),IRL3(ICOUNT3,2),IRL4(ICOUNT4,2),
     1IRL5(ICOUNT5,2)
      DIMENSION IP5(NSIZE)
      DIMENSION X0(1,JCI1,JCI1,MM1),Y0(1,JCI2,JCI2,MM2)
      DIMENSION Z0(1,JCI3,JCI3,MM3),W0(1,JCI4,JCI4,MM4)
      DIMENSION U0(1,JCI5,JCI5,MM5),T0(1,JCIM,JCIM,MMTAU)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      COMMON/BASIS/NBAS(6,2),MAXSUM(6,2)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
      COMMON/REACTL/JREACT,IFITRP
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MOD1)
      MD2=MODINT(MOD2)
      MD3=MODINT(MOD3)
      MD4=MODINT(MOD4)
      MD5=MODINT(MOD5)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MOD1.EQ.ISYM(I,J))N1=I
          IF(MOD2.EQ.ISYM(I,J))N2=I
          IF(MOD3.EQ.ISYM(I,J))N3=I
          IF(MOD4.EQ.ISYM(I,J))N4=I
          IF(MOD5.EQ.ISYM(I,J))N5=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N4.EQ.N5)MD5=1
      IF(N1.EQ.NT.AND.MDT.GT.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.GT.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.GT.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.GT.1)MD4=1
      IF(N5.EQ.NT.AND.MDT.GT.1)MD5=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.GT.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.GT.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N1T.EQ.N5.AND.MDT.GT.1)MD5=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.GT.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N2T.EQ.N5.AND.MDT.GT.1)MD5=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N3T.EQ.N5.AND.MDT.GT.1)MD5=1
      N4T=ISYMP(N4,NT)
      IF(N4T.EQ.N5.AND.MDT.GT.1)MD5=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.GT.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N12T.EQ.N5.AND.MDT.GT.1)MD5=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N13T.EQ.N5.AND.MDT.GT.1)MD5=1
      N14T=ISYMP(N14,NT)
      IF(N14T.EQ.N5.AND.MDT.GT.1)MD5=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N23T.EQ.N5.AND.MDT.GT.1)MD5=1
      N24T=ISYMP(N24,NT)
      IF(N24T.EQ.N5.AND.MDT.GT.1)MD5=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N124.EQ.N5)MD5=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N123T.EQ.N5.AND.MDT.GT.1)MD5=1
      N124T=ISYMP(N124,NT)
      IF(N124T.EQ.N5.AND.MDT.GT.1)MD5=1
      N134T=ISYMP(N134,NT)
      IF(N134T.EQ.N5.AND.MDT.GT.1)MD5=1
      N234T=ISYMP(N234,NT)
      IF(N234T.EQ.N5.AND.MDT.GT.1)MD5=1
      N1234=ISYMP(N123,N4)
      IF(N1234.EQ.N5)MD5=1
      N1234T=ISYMP(N1234,NT)
      IF(N1234T.EQ.N5.AND.MDT.GT.1)MD5=1
      CALL VDCV5(NMODE,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6,MOD1,MOD2,
     1MOD3,MOD4,MOD5,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,HTAU,XQTAU,XA,
     2NSIZE,NN1,MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,
     3MM4/MD4,NN5,MM5,MM5/MD5,NNTAU,MMTAU,IP,ISIZE,TEMP1,TEMP2,TEMP3,
     4TEMP4,TEMP5,JCI1,JCI2,JCI3,JCI4,JCI5,JCIM,X0,Y0,Z0,W0,U0,T0,VP,
     5VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,ICOUNT2,IRL2,ICOUNT3,IRL3,
     6ICOUNT4,IRL4,ICOUNT5,IRL5,IP5,IND)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VDCV5(NMODE,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6,MOD1,
     1MOD2,MOD3,MOD4,MOD5,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,HTAU,
     2XQTAU,XA,NSIZE,NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,
     3NN5,MH5,MM5,NNTAU,MMTAU,IP,ISIZE,TEMP1,TEMP2,TEMP3,TEMP4,
     4TEMP5,JCI1,JCI2,JCI3,JCI4,JCI5,JCIM,X0,Y0,Z0,W0,U0,T0,VP,VPR,VC,
     5VCR,VR,VRR,J21,KROT,MODINT,ICOUNT2,IRL2,ICOUNT3,IRL3,ICOUNT4,
     6IRL4,ICOUNT5,IRL5,IP5,IND)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LINEAR
      REAL*8 VP(MM5,MM4,MM3,MM2,MM1),VC(MM5,MM4,MM3,MM2,MM1,1),
     1VR(J21,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM5,MM4,MM3,MM2,MM1),VCR(MM5,MM4,MM3,MM2,MM1,1),
     1VRR(J21,MM5,MM4,MM3,MM2,MM1)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      DIMENSION X(1),Y(1),C(1)
      DIMENSION MODINT(NMODE)
CCCC  DIMENSION H1(NN1,MM1,3),H2(NN2,MM2,3),H3(NN3,MM3,3),H4(NN4,MM4,3)
      DIMENSION H1(NN1,MH1,3),H2(NN2,MH2,3),H3(NN3,MH3,3),H4(NN4,MH4,3)
      DIMENSION H5(NN5,MH5,3)
      DIMENSION IP(ISIZE,NMODE)
      DIMENSION XA(1),XQ1(MM1),XQ2(MM2),XQ3(MM3),XQ4(MM4),XQ5(MM5)
      DIMENSION TEMP1(1,JCI5,JCI5),TEMP2(1,ICOUNT2,ICOUNT2),
     1TEMP3(1,ICOUNT3,ICOUNT3),TEMP4(1,ICOUNT4,ICOUNT4),
     2TEMP5(1,ICOUNT5,ICOUNT5)
      DIMENSION IRL2(ICOUNT2,2),IRL3(ICOUNT3,2),IRL4(ICOUNT4,2),
     1IRL5(ICOUNT5,2)
      DIMENSION IP5(NSIZE)
      DIMENSION X0(1,JCI1,JCI1,MM1),Y0(1,JCI2,JCI2,MM2)
      DIMENSION Z0(1,JCI3,JCI3,MM3),W0(1,JCI4,JCI4,MM4)
      DIMENSION U0(1,JCI5,JCI5,MM5),T0(1,JCIM,JCIM,MMTAU)
      DIMENSION HTAU(NNTAU,MMTAU,3,1),XQTAU(MMTAU)
      COMMON/BASIS/NBAS(6,2),MAXSUM(6,2)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU,IFLAUD
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/TYPE/LINEAR
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM5A.EQ.0.AND.IND.EQ.-3)THEN
        WRITE(IOUT,*)'Calculating V0CV5'
        CALL TIMIT(1)
        CALL FLUSH(IOUT)
      END IF

      IF(IND.GE.-1)GO TO 500
      NMAX1=MAX0(MAXSUM(1,1)+1,MAXSUM(2,1)+2)
      NMAX2=MAX0(MAXSUM(1,2)+1,MAXSUM(2,2)+2)
      NMAX=MAX0(NMAX1,NMAX2)
      ICOUNT2=0
      DO I5=0,JCI5-1
        DO I4=0,JCI4-1
          IF(I4+I5.LE.NMAX)THEN
            ICOUNT2=ICOUNT2+1
            IF(IABS(IND).EQ.2)THEN
              IRL2(ICOUNT2,1)=I4+1
              IRL2(ICOUNT2,2)=I5+1
            END IF
          END IF
        END DO
      END DO
C**RETURN WITH ICOUNT2
      IF(IABS(IND).GT.2)RETURN
500   CONTINUE
      IF(IND.GE.0)GO TO 600
      NMAX1=MAX0(MAXSUM(1,1)+1,MAXSUM(2,1)+2,MAXSUM(3,1)+3)
      NMAX2=MAX0(MAXSUM(1,2)+1,MAXSUM(2,2)+2,MAXSUM(3,2)+3)
      NMAX=MAX0(NMAX1,NMAX2)
      ICOUNT3=0
      DO I=1,ICOUNT2
        I4=IRL2(I,1)-1
        I5=IRL2(I,2)-1
        DO I3=0,JCI3-1
          IF(I3+I4+I5.LE.NMAX)THEN
            ICOUNT3=ICOUNT3+1
            IF(IABS(IND).EQ.1)THEN
              IRL3(ICOUNT3,1)=I3+1
              IRL3(ICOUNT3,2)=I
            END IF
          END IF
        END DO
      END DO
C**RETURN WITH ICOUNT3
      IF(IABS(IND).GT.1)RETURN
600   CONTINUE
      IF(IND.EQ.0)GO TO 700
      NMAX1=MAX0(MAXSUM(1,1)+1,MAXSUM(2,1)+2,MAXSUM(3,1)+3,
     1MAXSUM(4,1)+4)
      NMAX2=MAX0(MAXSUM(1,2)+1,MAXSUM(2,2)+2,MAXSUM(3,2)+3,
     1MAXSUM(4,2)+4)
      NMAX=MAX0(NMAX1,NMAX2)
      ICOUNT4=0
      DO I=1,ICOUNT3
        I3=IRL3(I,1)-1
        K=IRL3(I,2)
        I4=IRL2(K,1)-1
        I5=IRL2(K,2)-1
        DO I2=0,JCI2-1
          IF(I2+I3+I4+I5.LE.NMAX)THEN
            ICOUNT4=ICOUNT4+1
            IF(IND.GT.0)THEN
              IRL4(ICOUNT4,1)=I2+1
              IRL4(ICOUNT4,2)=I
            END IF
          END IF
        END DO
      END DO
C**RETURN WITH ICOUNT4
      IF(IND.LT.0)RETURN
700   CONTINUE
      NMAX1=MAX0(MAXSUM(1,1)+1,MAXSUM(2,1)+2,MAXSUM(3,1)+3,
     1MAXSUM(4,1)+4,MAXSUM(5,1)+5)
      NMAX2=MAX0(MAXSUM(1,2)+1,MAXSUM(2,2)+2,MAXSUM(3,2)+3,
     1MAXSUM(4,2)+4,MAXSUM(5,2)+5)
      NMAX=MAX0(NMAX1,NMAX2)
      ICOUNT5=0
      DO I=1,ICOUNT4
        I2=IRL4(I,1)-1
        K=IRL4(I,2)
        I3=IRL3(K,1)-1
        L=IRL3(K,2)
        I4=IRL2(L,1)-1
        I5=IRL2(L,2)-1
        DO I1=0,JCI1-1
          IF(I1+I2+I3+I4+I5.LE.NMAX)THEN
            ICOUNT5=ICOUNT5+1
            IF(IND.EQ.0)THEN
              IRL5(ICOUNT5,1)=I1+1
              IRL5(ICOUNT5,2)=I
            END IF
          END IF
        END DO
      END DO
C**RETURN WITH ICOUNT5
      IF(IND.GT.0)RETURN
      DO I=1,NSIZE
        IP5(I)=0
        NR1=IP(I,MODE1)
        NR2=IP(I,MODE2)
        NR3=IP(I,MODE3)
        NR4=IP(I,MODE4)
        NR5=IP(I,MODE5)
        DO J=1,ICOUNT5
          IF(IRL5(J,1).NE.NR1)GO TO 1000
          K=IRL5(J,2)
          IF(IRL4(K,1).NE.NR2)GO TO 1000
          L=IRL4(K,2)
          IF(IRL3(L,1).NE.NR3)GO TO 1000
          M=IRL3(L,2)
          IF(IRL2(M,1).NE.NR4)GO TO 1000
          IF(IRL2(M,2).NE.NR5)GO TO 1000
          IP5(I)=J
1000      CONTINUE
        END DO
        IF(IP5(I).EQ.0)THEN
          WRITE(IOUT,*)'IP5 SET-UP ERROR FOR ELEMENT ',I
          STOP 'IP5 ERROR'
        END IF
      END DO
C**IRL2, IRL3 & IRL4 CONTAIN POINTERS FOR FIRST 4 INDICES OF IP(NSIZE,5)

      IFACTL=INTFAC(NMODE,ICOUPL,5)
C**INTRINSIC
      IF(MOLINC.GT.0)IFACTL=1
C     IFACTC=JNTFAC(NMODE,ICOUPC,5)
C     FACTRC=0
C     IF(J21.GT.1)FACTRC=IFACTC

      KA=KROT/2
      INCT=MOD(IFLAUD,2)*MOD(KA,2)
      LMAX=IFLAUD-(IFLAUD-1)*MOD(KA+1,2)

C***********************************************************

      MDT=MODINT(NSMODE)
      MD1=MODINT(MOD1)
      MD2=MODINT(MOD2)
      MD3=MODINT(MOD3)
      MD4=MODINT(MOD4)
      MD5=MODINT(MOD5)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MOD1.EQ.ISYM(I,J))N1=I
          IF(MOD2.EQ.ISYM(I,J))N2=I
          IF(MOD3.EQ.ISYM(I,J))N3=I
          IF(MOD4.EQ.ISYM(I,J))N4=I
          IF(MOD5.EQ.ISYM(I,J))N5=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N4.EQ.N5)MD5=1
      IF(N1.EQ.NT.AND.MDT.GT.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.GT.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.GT.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.GT.1)MD4=1
      IF(N5.EQ.NT.AND.MDT.GT.1)MD5=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.GT.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.GT.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N1T.EQ.N5.AND.MDT.GT.1)MD5=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.GT.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N2T.EQ.N5.AND.MDT.GT.1)MD5=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N3T.EQ.N5.AND.MDT.GT.1)MD5=1
      N4T=ISYMP(N4,NT)
      IF(N4T.EQ.N5.AND.MDT.GT.1)MD5=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.GT.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N12T.EQ.N5.AND.MDT.GT.1)MD5=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N13T.EQ.N5.AND.MDT.GT.1)MD5=1
      N14T=ISYMP(N14,NT)
      IF(N14T.EQ.N5.AND.MDT.GT.1)MD5=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N23T.EQ.N5.AND.MDT.GT.1)MD5=1
      N24T=ISYMP(N24,NT)
      IF(N24T.EQ.N5.AND.MDT.GT.1)MD5=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N124.EQ.N5)MD5=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.GT.1)MD4=1
      IF(N123T.EQ.N5.AND.MDT.GT.1)MD5=1
      N124T=ISYMP(N124,NT)
      IF(N124T.EQ.N5.AND.MDT.GT.1)MD5=1
      N134T=ISYMP(N134,NT)
      IF(N134T.EQ.N5.AND.MDT.GT.1)MD5=1
      N234T=ISYMP(N234,NT)
      IF(N234T.EQ.N5.AND.MDT.GT.1)MD5=1
      N1234=ISYMP(N123,N4)
      IF(N1234.EQ.N5)MD5=1
      N1234T=ISYMP(N1234,NT)
      IF(N1234T.EQ.N5.AND.MDT.GT.1)MD5=1
      MD=MD1*MD2*MD3*MD4*MD5*MDT

C**FORM INDIVIDUAL INTEGRATION TERMS (START)
      ITAU=INIT-INCTAU
      DO MTAU=1,MMTAU/MDT
        ITAU=ITAU+INCTAU
        IF(.NOT.LINEAR)THEN
          DO NRR=1,JCIM
            NR=NRR+1-MOD(KA,2)+INCT
            X(1)=HTAU(NR,MTAU,1,LMAX)*MD
            DO NLL=1,JCIM
              NL=NLL+1-MOD(KA,2)+INCT
              Y(1)=HTAU(NL,MTAU,1,LMAX)
              T0(1,NLL,NRR,MTAU)=Y(1)*X(1)
            END DO
          END DO
        END IF
      END DO
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        IF(.NOT.LINEAR)THEN
          DO NR1=1,JCI1
            X(1)=H1(NR1,M1,1)
            DO NL1=1,JCI1
              Y(1)=H1(NL1,M1,1)
              X0(1,NL1,NR1,M1)=Y(1)*X(1)
            END DO
          END DO
        END IF
      END DO
CCCC  DO M2=1,MM2/MD2
      DO M2=1,MM2
        IF(.NOT.LINEAR)THEN
          DO NR2=1,JCI2
            X(1)=H2(NR2,M2,1)
            DO NL2=1,JCI2
              Y(1)=H2(NL2,M2,1)
              Y0(1,NL2,NR2,M2)=Y(1)*X(1)
            END DO
          END DO
        END IF
      END DO
CCCC  DO M3=1,MM3/MD3
      DO M3=1,MM3
        IF(.NOT.LINEAR)THEN
          DO NR3=1,JCI3
            X(1)=H3(NR3,M3,1)
            DO NL3=1,JCI3
              Y(1)=H3(NL3,M3,1)
              Z0(1,NL3,NR3,M3)=Y(1)*X(1)
            END DO
          END DO
        END IF
      END DO
CCCC  DO M4=1,MM4/MD4
      DO M4=1,MM4
        IF(.NOT.LINEAR)THEN
          DO NR4=1,JCI4
            X(1)=H4(NR4,M4,1)
            DO NL4=1,JCI4
              Y(1)=H4(NL4,M4,1)
              W0(1,NL4,NR4,M4)=Y(1)*X(1)
            END DO
          END DO
        END IF
      END DO
CCCC  DO M5=1,MM5/MD5
      DO M5=1,MM5
        IF(.NOT.LINEAR)THEN
          DO NR5=1,JCI5
            X(1)=H5(NR5,M5,1)
            DO NL5=1,JCI5
              Y(1)=H5(NL5,M5,1)
              U0(1,NL5,NR5,M5)=Y(1)*X(1)
            END DO
          END DO
        END IF
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**LOOP ROUND TAU (START 6-MODE INTEGRATION)
      ITAU=INIT-INCTAU
      DO MTAU=1,MMTAU/MDT
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720

C***********************************************************

C       IF(JCOUPC.GE.0)THEN
C         IF(J21.GT.1.AND.ICOUPC.GE.5)READ(65)VR
C         IF(ICOUPC.GE.5)READ(85)VC
C       ELSE
C         IF(J21.GT.1.AND.ICOUPC.GE.5)READ(65)VRR
C         IF(ICOUPC.GE.5)READ(85)VCR
C       END IF
        IF(JCOUPL.GT.0)THEN
          READ(75)VP
        ELSE
          READ(75)VPR
        END IF
C***********************************************************

        DO IRH=1,ICOUNT5
          DO ILH=1,ICOUNT5
            TEMP5(1,ILH,IRH)=0
          END DO
        END DO
C**START 5-MODE INTEGRATION
        DO M1=1,MM1
          DO IRH=1,ICOUNT4
            DO ILH=1,ICOUNT4
              TEMP4(1,ILH,IRH)=0
            END DO
          END DO
C**START 4-MODE INTEGRATION
          DO M2=1,MM2
            DO IRH=1,ICOUNT3
              DO ILH=1,ICOUNT3
                TEMP3(1,ILH,IRH)=0
              END DO
            END DO
C**START 3-MODE INTEGRATION
            DO M3=1,MM3
              DO IRH=1,ICOUNT2
                DO ILH=1,ICOUNT2
                  TEMP2(1,ILH,IRH)=0
                END DO
              END DO
C**START 2-MODE INTEGRATION
              DO M4=1,MM4
                DO IRHS5=1,JCI5
                  DO ILHS5=1,JCI5
                    TEMP1(1,ILHS5,IRHS5)=0
                  END DO
                END DO
C**START 1-MODE INTEGRATION
                DO M5=1,MM5
                  C(1)=0
                  IF(JCOUPL.GT.0)THEN
                    C(1)=C(1)+VP(M5,M4,M3,M2,M1)*IFACTL
                  ELSE
                    C(1)=C(1)+VPR(M5,M4,M3,M2,M1)*IFACTL
                  END IF
                  DO IRHS5=1,JCI5
                    DO ILHS5=1,JCI5
                      TEMP1(1,ILHS5,IRHS5)=TEMP1(1,ILHS5,IRHS5)+
     1                U0(1,ILHS5,IRHS5,M5)*C(1)
                    END DO
                  END DO
                END DO
C**END 1-MODE INTEGRATION
                DO IRH=1,ICOUNT2
                  IRHS4=IRL2(IRH,1)
                  IRHS5=IRL2(IRH,2)
                  DO ILH=1,ICOUNT2
                    ILHS4=IRL2(ILH,1)
                    ILHS5=IRL2(ILH,2)
                    TEMP2(1,ILH,IRH)=
     1              TEMP2(1,ILH,IRH)+
     2              W0(1,ILHS4,IRHS4,M4)*TEMP1(1,ILHS5,IRHS5)
                  END DO
                END DO
              END DO
C**END 2-MODE INTEGRATION
              DO IRH=1,ICOUNT3
                IRHS3=IRL3(IRH,1)
                IR=IRL3(IRH,2)
                DO ILH=1,ICOUNT3
                  ILHS3=IRL3(ILH,1)
                  IL=IRL3(ILH,2)
                  TEMP3(1,ILH,IRH)=
     1            TEMP3(1,ILH,IRH)+
     2            Z0(1,ILHS3,IRHS3,M3)*TEMP2(1,IL,IR)
                END DO
              END DO
            END DO
C**END 3-MODE INTEGRATION
            DO IRH=1,ICOUNT4
              IRHS2=IRL4(IRH,1)
              IR=IRL4(IRH,2)
              DO ILH=1,ICOUNT4
                ILHS2=IRL4(ILH,1)
                IL=IRL4(ILH,2)
                TEMP4(1,ILH,IRH)=
     1          TEMP4(1,ILH,IRH)+
     2          Y0(1,ILHS2,IRHS2,M2)*TEMP3(1,IL,IR)
              END DO
            END DO
          END DO
C**END 4-MODE INTEGRATION
          DO IRH=1,ICOUNT5
            IRHS1=IRL5(IRH,1)
            IR=IRL5(IRH,2)
            DO ILH=1,ICOUNT5
              ILHS1=IRL5(ILH,1)
              IL=IRL5(ILH,2)
              TEMP5(1,ILH,IRH)=
     1        TEMP5(1,ILH,IRH)+
     2        X0(1,ILHS1,IRHS1,M1)*TEMP4(1,IL,IR)
            END DO
          END DO
        END DO
C**END 5-MODE INTEGRATION

C**NSIZE IS NO. UNIQUE INTEGRALS (6-DIM)
        DO IRHS=1,NSIZE
          IR=IP5(IRHS)
          IRTAU=IP(IRHS,MODE6)
          J0=IRHS*(IRHS-1)/2
          DO ILHS=1,IRHS
            IL=IP5(ILHS)
            ILTAU=IP(ILHS,MODE6)
            XA(ILHS+J0)=XA(ILHS+J0)+
     1      TEMP5(1,IL,IR)*
     2      T0(1,ILTAU,IRTAU,MTAU)*DSTAU(ITAU)
          END DO
        END DO
      END DO
C**END TAU LOOP (5-MODE INTEGRATION)
      IF(ITIM5A.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM5A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VCI5(NMODE,MODE1,MODE2,MODE3,MODE4,MODE5,XA,XK,
     1NSIZE,IP,ISIZMX,ISIZE,IP5,ISIZE5,ISTART,IEND,ILR,IRL,LANIND,XL,
     2LAN12D,XD,ZL,ICOUNT,ISIZEX,XKAN,MAXQU,MAXPOW,J21,MOD1,MOD2,MOD3,
     3MOD4,MOD5,NP5,CP5,JP5,NTOT5,MAX5,INDK,INDL,INDN,INDM)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      LOGICAL LANCZ,LANZA,LANZB
      DIMENSION IP(ISIZMX,NMODE)
C**
      COMMON/VCIVN/IARRAY(50)
C**
      DIMENSION ILR(ISIZEX),IRL(ISIZEX)
C**TEMPORARY - HERMITIAN
C     DIMENSION XA(ISIZE,1),XK(1),IP5(ISIZE5,5)
C**TEMPORARY - HERMITIAN
      DIMENSION XA(1),XK(1),XL(LAN12D,ISIZE),XD(ISIZEX),
     1ZL(LAN12D,ICOUNT)
C**
      DIMENSION IP5(ISIZE5,5)
C**ANALYTIC
      DIMENSION NP5(NTOT5),CP5(MAX5,NTOT5),JP5(MAX5,NTOT5,5)
      DIMENSION INDK(1),INDL(1),INDN(1),INDM(1)
      DIMENSION XKAN(MAXQU,MAXQU,MAXPOW,1)
C**ANALYTIC
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/LANCZO/LANCZ,LANZA,LANZB
      COMMON/WHICH/IWHICH
      COMMON/ILAST/ILAST
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM5A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating VCI5'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

C**ANALYTIC
      IND=INDM(MOD1)+INDN(MOD2)+INDL(MOD3)+INDK(MOD4)+MOD5
C**ANALYTIC

      DO K=1,NMODE
        IARRAY(K)=0
        IF(K.EQ.MODE1)GO TO 6000
        IF(K.EQ.MODE2)GO TO 6000
        IF(K.EQ.MODE3)GO TO 6000
        IF(K.EQ.MODE4)GO TO 6000
        IF(K.NE.MODE5)GO TO 5000
6000    CONTINUE
        IARRAY(K)=1
5000    CONTINUE
      END DO

C**ORIGINAL ALGORITHM AND 1 AND 2-DIM MATRIX
      IF(LANIND.EQ.0.OR.LANIND.EQ.1)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=1,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
          NR4=IP(IRHS,MODE4)
          NR5=IP(IRHS,MODE5)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP5(IR,1))GO TO 2000
            IF(NR2.NE.IP5(IR,2))GO TO 2000
            IF(NR3.NE.IP5(IR,3))GO TO 2000
            IF(NR4.NE.IP5(IR,4))GO TO 2000
            IF(NR5.EQ.IP5(IR,5))GO TO 1000
2000        CONTINUE
          END DO
C**TEMPORARY
      WRITE(IOUT,*)'NO MATCH IN VCI5 FOR BASIS'
      WRITE(IOUT,*)'ELEMENT:',NR1,NR2,NR3,NR4,NR5
      STOP 'VCI5 BASIS BUG'
C**TEMPORARY
1000      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
C**TEMPORARY - HERMITIAN
C         DO ILHS=ISTART,IEND
C**TEMPORARY - HERMITIAN
          DO ILHS=1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE
              IF(IARRAY(K).NE.0)GO TO 4000
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3000
4000          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            Y=0
            IF(IWHICH.LT.0.AND.MOLINC.GT.0)THEN
C**ANALYTIC
              JR1=IP5(MR,1)
              JL1=IP5(ML,1)
              JR2=IP5(MR,2)
              JL2=IP5(ML,2)
              JR3=IP5(MR,3)
              JL3=IP5(ML,3)
              JR4=IP5(MR,4)
              JL4=IP5(ML,4)
              JR5=IP5(MR,5)
              JL5=IP5(ML,5)
              DO I=1,NP5(IND)
                K=JP5(I,IND,1)+1
                L=JP5(I,IND,2)+1
                N=JP5(I,IND,3)+1
                M=JP5(I,IND,4)+1
                J=JP5(I,IND,5)+1
                Y=Y+CP5(I,IND)*XKAN(JL1,JR1,K,MOD1)*
     1          XKAN(JL2,JR2,L,MOD2)*XKAN(JL3,JR3,N,MOD3)*
     2          XKAN(JL4,JR4,M,MOD4)*XKAN(JL5,JR5,J,MOD5)
              END DO
C**ANALYTIC
            END IF
C**TEMPORARY - HERMITIAN
C           XA(ILHS,IRHS)=XA(ILHS,IRHS)+(X+Y)
C**TEMPORARY - HERMITIAN
            XA(ILHS+J0)=XA(ILHS+J0)+(X+Y)
3000        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
        GO TO 7000
      END IF

C**SET UP MATRIX XL(LAN12D,ISIZE-LAN12D) IN CORE (XL AND XA ARE SAME
C**ARRAY - CF LANMAX)  ALSO SET UP DIAGONAL ELEMENTS IN XD(ISIZE)
      IF(LANIND.EQ.2)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (RHS)
        DO IRHS=ISTART,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
          NR4=IP(IRHS,MODE4)
          NR5=IP(IRHS,MODE5)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP5(IR,1))GO TO 2001
            IF(NR2.NE.IP5(IR,2))GO TO 2001
            IF(NR3.NE.IP5(IR,3))GO TO 2001
            IF(NR4.NE.IP5(IR,4))GO TO 2001
            IF(NR5.EQ.IP5(IR,5))GO TO 1001
2001        CONTINUE
          END DO
1001      CONTINUE
          IRL(IRHS)=IR
        END DO
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (LHS)
        DO ILHS=1,LAN12D
          NL1=IP(ILHS,MODE1)
          NL2=IP(ILHS,MODE2)
          NL3=IP(ILHS,MODE3)
          NL4=IP(ILHS,MODE4)
          NL5=IP(ILHS,MODE5)
C**FIND LHS INDEX
          DO IL=1,NSIZE
            IF(NL1.NE.IP5(IL,1))GO TO 2002
            IF(NL2.NE.IP5(IL,2))GO TO 2002
            IF(NL3.NE.IP5(IL,3))GO TO 2002
            IF(NL4.NE.IP5(IL,4))GO TO 2002
            IF(NL5.EQ.IP5(IL,5))GO TO 1002
2002        CONTINUE
          END DO
1002      CONTINUE
          ILR(ILHS)=IL
        END DO

        DO IRHS=ISTART,IEND
          IR=IRL(IRHS)
          DO ILHS=1,LAN12D
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE
              IF(IARRAY(K).NE.0)GO TO 4002
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3002
4002          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XL(ILHS,IRHS-ISTART+1)=XL(ILHS,IRHS-ISTART+1)+X
3002        CONTINUE
          END DO
C**DIAGONAL ELEMENT
          IL=IR
          I=IR*(IR-1)/2+IL
          X=XK(I)
          XD(IRHS)=XD(IRHS)+X
        END DO
      END IF

C**SET UP ARRAY XA((ISIZE-LAN12D)*(ISIZE-LAN12D+1)/2)
C**TRUNCATE IF ROW/COLUMN IN IFLAG(ISIZE)=0
      IF(LANIND.EQ.3)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=LAN12D+1,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
          NR4=IP(IRHS,MODE4)
          NR5=IP(IRHS,MODE5)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP5(IR,1))GO TO 2004
            IF(NR2.NE.IP5(IR,2))GO TO 2004
            IF(NR3.NE.IP5(IR,3))GO TO 2004
            IF(NR4.NE.IP5(IR,4))GO TO 2004
            IF(NR5.EQ.IP5(IR,5))GO TO 1004
2004        CONTINUE
          END DO
1004      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
          DO ILHS=LAN12D+1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE
              IF(IARRAY(K).NE.0)GO TO 4004
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3004
4004          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XA(ILHS+J0)=XA(ILHS+J0)+X
3004        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
      END IF

7000  CONTINUE
      IF(ITIM5A.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM5A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VCV5(NMODE,MODE1,MODE2,MODE3,MODE4,MODE5,XA,XK,NSIZE,
     1IP,ISIZMX,ISIZE,IP6,ISIZE6,ISTART,IEND,ILR,IRL,LANIND,XL,LAN12D,
     2XD,ZL,ICOUNT,ISIZEX)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LANCZ,LANZA,LANZB
      DIMENSION IP(ISIZMX,NMODE)
C**
      COMMON/VCIVN/IARRAY(50)
C**
      DIMENSION ILR(ISIZEX),IRL(ISIZEX)
      DIMENSION XA(1),XK(1),XL(LAN12D,ISIZE),XD(ISIZEX),
     1ZL(LAN12D,ICOUNT)
C**
      DIMENSION IP6(ISIZE6,6)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/LANCZO/LANCZ,LANZA,LANZB
      COMMON/FUNDAM/WAVENM,ATTOJ,BOHR,ELMASS,RAD
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM5A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating VCV5'
        CALL TIMIT(1)
        CALL FLUSH(IOUT)
      END IF

      DO K=1,NMODE-1
        IARRAY(K)=0
        IF(K.EQ.MODE1)GO TO 6000
        IF(K.EQ.MODE2)GO TO 6000
        IF(K.EQ.MODE3)GO TO 6000
        IF(K.EQ.MODE4)GO TO 6000
        IF(K.NE.MODE5)GO TO 5000
6000    CONTINUE
        IARRAY(K)=1
5000    CONTINUE
      END DO

C**ORIGINAL ALGORITHM AND 1 AND 2-DIM MATRIX
      IF(LANIND.EQ.0.OR.LANIND.EQ.1)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=1,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
          NR4=IP(IRHS,MODE4)
          NR5=IP(IRHS,MODE5)
          NRTAU=IP(IRHS,NMODE)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP6(IR,1))GO TO 2000
            IF(NR2.NE.IP6(IR,2))GO TO 2000
            IF(NR3.NE.IP6(IR,3))GO TO 2000
            IF(NR4.NE.IP6(IR,4))GO TO 2000
            IF(NR5.NE.IP6(IR,5))GO TO 2000
            IF(NRTAU.EQ.IP6(IR,6))GO TO 1000
2000        CONTINUE
          END DO
1000      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
          DO ILHS=1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE-1
              IF(IARRAY(K).NE.0)GO TO 4000
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3000
4000          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XA(ILHS+J0)=XA(ILHS+J0)+X
3000        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
        GO TO 7000
      END IF

C**SET UP MATRIX XL(LAN12D,ISIZE-LAN12D) IN CORE (XL AND XA ARE SAME
C**ARRAY - CF LANMAX)  ALSO SET UP DIAGONAL ELEMENTS IN XD(ISIZE)
      IF(LANIND.EQ.2)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (RHS)
        DO IRHS=ISTART,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
          NR4=IP(IRHS,MODE4)
          NR5=IP(IRHS,MODE5)
          NRTAU=IP(IRHS,NMODE)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP6(IR,1))GO TO 2001
            IF(NR2.NE.IP6(IR,2))GO TO 2001
            IF(NR3.NE.IP6(IR,3))GO TO 2001
            IF(NR4.NE.IP6(IR,4))GO TO 2001
            IF(NR5.NE.IP6(IR,5))GO TO 2001
            IF(NRTAU.EQ.IP6(IR,6))GO TO 1001
2001        CONTINUE
          END DO
1001      CONTINUE
          IRL(IRHS)=IR
        END DO
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (LHS)
        DO ILHS=1,LAN12D
          NL1=IP(ILHS,MODE1)
          NL2=IP(ILHS,MODE2)
          NL3=IP(ILHS,MODE3)
          NL4=IP(ILHS,MODE4)
          NL5=IP(ILHS,MODE5)
          NLTAU=IP(ILHS,NMODE)
C**FIND LHS INDEX
          DO IL=1,NSIZE
            IF(NL1.NE.IP6(IL,1))GO TO 2002
            IF(NL2.NE.IP6(IL,2))GO TO 2002
            IF(NL3.NE.IP6(IL,3))GO TO 2002
            IF(NL4.NE.IP6(IL,4))GO TO 2002
            IF(NL5.NE.IP6(IL,5))GO TO 2002
            IF(NLTAU.EQ.IP6(IL,6))GO TO 1002
2002        CONTINUE
          END DO
1002      CONTINUE
          ILR(ILHS)=IL
        END DO

        DO IRHS=ISTART,IEND
          IR=IRL(IRHS)
          DO ILHS=1,LAN12D
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE-1
              IF(IARRAY(K).NE.0)GO TO 4002
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3002
4002          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XL(ILHS,IRHS-ISTART+1)=XL(ILHS,IRHS-ISTART+1)+X
3002        CONTINUE
          END DO
C**DIAGONAL ELEMENT
          IL=IR
          I=IR*(IR-1)/2+IL
          X=XK(I)
          XD(IRHS)=XD(IRHS)+X
        END DO
      END IF

C**SET UP ARRAY XA((ISIZE-LAN12D)*(ISIZE-LAN12D+1)/2)
C**TRUNCATE IF ROW/COLUMN IN IFLAG(ISIZE)=0
      IF(LANIND.EQ.3)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=LAN12D+1,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
          NR4=IP(IRHS,MODE4)
          NR5=IP(IRHS,MODE5)
          NRTAU=IP(IRHS,NMODE)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP6(IR,1))GO TO 2004
            IF(NR2.NE.IP6(IR,2))GO TO 2004
            IF(NR3.NE.IP6(IR,3))GO TO 2004
            IF(NR4.NE.IP6(IR,4))GO TO 2004
            IF(NR5.NE.IP6(IR,5))GO TO 2004
            IF(NRTAU.EQ.IP6(IR,6))GO TO 1004
2004        CONTINUE
          END DO
1004      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
          DO ILHS=LAN12D+1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE-1
              IF(IARRAY(K).NE.0)GO TO 4004
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3004
4004          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XA(ILHS+J0)=XA(ILHS+J0)+X
3004        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
      END IF

7000  CONTINUE
      IF(ITIM5A.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM5A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE V0CI6(NMODE,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6,MOD1,
     1MOD2,MOD3,MOD4,MOD5,MOD6,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,H6,
     2XQ6,NN1,MM1,NN2,MM2,NN3,MM3,NN4,MM4,NN5,MM5,NN6,MM6,XA,NSIZE,IP,
     3ISIZE,TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,JCI1,JCI2,JCI3,JCI4,JCI5,
     4JCI6,X0,Y0,Z0,W0,U0,V0,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,
     5ICOUNT2,IRL2,ICOUNT3,IRL3,ICOUNT4,IRL4,ICOUNT5,IRL5,IP5,IND,I37)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM6,MM5,MM4,MM3,MM2,MM1),VC(MM6,MM5,MM4,MM3,22),
     1VR(J21,MM6,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM6,MM5,MM4,MM3,MM2,MM1),VCR(MM6,MM5,MM4,MM3,22),
     1VRR(J21,MM6,MM5,MM4,MM3,MM2,MM1)
      DIMENSION X(37),Y(37),C(37)
      DIMENSION MODINT(NMODE)
      DIMENSION H1(NN1,MM1,3),H2(NN2,MM2,3),H3(NN3,MM3,3)
      DIMENSION H4(NN4,MM4,3),H5(NN5,MM5,3),H6(NN6,MM6,3)
      DIMENSION IP(ISIZE,NMODE)
      DIMENSION TEMP1(I37,JCI6,JCI6),TEMP2(I37,ICOUNT2,ICOUNT2),
     1TEMP3(I37,ICOUNT3,ICOUNT3),TEMP4(I37,ICOUNT4,ICOUNT4),
     2TEMP5(I37,ICOUNT5,ICOUNT5)
      DIMENSION IRL2(ICOUNT2,2),IRL3(ICOUNT3,2),IRL4(ICOUNT4,2),
     1IRL5(ICOUNT5,2)
      DIMENSION IP5(NSIZE)
      DIMENSION X0(I37,JCI1,JCI1,MM1),Y0(I37,JCI2,JCI2,MM2)
      DIMENSION Z0(I37,JCI3,JCI3,MM3),W0(I37,JCI4,JCI4,MM4)
      DIMENSION U0(I37,JCI5,JCI5,MM5),V0(I37,JCI6,JCI6,MM6)
      DIMENSION XA(1)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),XQ4(MM4),XQ5(MM5),XQ6(MM6)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/UNITEX/I75,I76,I85,I86
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MOD1)
      MD2=MODINT(MOD2)
      MD3=MODINT(MOD3)
      MD4=MODINT(MOD4)
      MD5=MODINT(MOD5)
      MD6=MODINT(MOD6)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MOD1.EQ.ISYM(I,J))N1=I
          IF(MOD2.EQ.ISYM(I,J))N2=I
          IF(MOD3.EQ.ISYM(I,J))N3=I
          IF(MOD4.EQ.ISYM(I,J))N4=I
          IF(MOD5.EQ.ISYM(I,J))N5=I
          IF(MOD6.EQ.ISYM(I,J))N6=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N1.EQ.N6)MD6=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N2.EQ.N6)MD6=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N3.EQ.N6)MD6=1
      IF(N4.EQ.N5)MD5=1
      IF(N4.EQ.N6)MD6=1
      IF(N5.EQ.N6)MD6=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      IF(N12.EQ.N6)MD6=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      IF(N13.EQ.N6)MD6=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      IF(N14.EQ.N6)MD6=1
      N15=ISYMP(N1,N5)
      IF(N15.EQ.N6)MD6=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      IF(N23.EQ.N6)MD6=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      IF(N24.EQ.N6)MD6=1
      N25=ISYMP(N2,N5)
      IF(N25.EQ.N6)MD6=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      IF(N34.EQ.N6)MD6=1
      N35=ISYMP(N3,N5)
      IF(N35.EQ.N6)MD6=1
      N45=ISYMP(N4,N5)
      IF(N45.EQ.N6)MD6=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      IF(N123.EQ.N6)MD6=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      IF(N124.EQ.N6)MD6=1
      N125=ISYMP(N12,N5)
      IF(N125.EQ.N6)MD6=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      IF(N134.EQ.N6)MD6=1
      N135=ISYMP(N13,N5)
      IF(N135.EQ.N6)MD6=1
      N145=ISYMP(N14,N5)
      IF(N145.EQ.N6)MD6=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      IF(N234.EQ.N6)MD6=1
      N235=ISYMP(N23,N5)
      IF(N235.EQ.N6)MD6=1
      N245=ISYMP(N24,N5)
      IF(N245.EQ.N6)MD6=1
      N345=ISYMP(N34,N5)
      IF(N345.EQ.N6)MD6=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      IF(N1234.EQ.N6)MD6=1
      N1235=ISYMP(N12,N35)
      IF(N1235.EQ.N6)MD6=1
      N1245=ISYMP(N12,N45)
      IF(N1245.EQ.N6)MD6=1
      N1345=ISYMP(N13,N45)
      IF(N1345.EQ.N6)MD6=1
      N2345=ISYMP(N23,N45)
      IF(N2345.EQ.N6)MD6=1
      N12345=ISYMP(N123,N45)
      IF(N12345.EQ.N6)MD6=1
      CALL VDCI6(NMODE,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6,MOD1,MOD2,
     1MOD3,MOD4,MOD5,MOD6,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,H6,XQ6,
     2NN1,MM1,MM1/MD1,NN2,MM2,MM2/MD2,NN3,MM3,MM3/MD3,NN4,MM4,MM4/MD4,
     3NN5,MM5,MM5/MD5,NN6,MM6,MM6/MD6,XA,NSIZE,IP,ISIZE,TEMP1,TEMP2,
     4TEMP3,TEMP4,TEMP5,JCI1,JCI2,JCI3,JCI4,JCI5,JCI6,X0,Y0,Z0,W0,U0,
     5V0,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT,ICOUNT2,IRL2,ICOUNT3,
     6IRL3,ICOUNT4,IRL4,ICOUNT5,IRL5,IP5,IND,I37)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VDCI6(NMODE,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6,MOD1,
     1MOD2,MOD3,MOD4,MOD5,MOD6,H1,XQ1,H2,XQ2,H3,XQ3,H4,XQ4,H5,XQ5,H6,
     2XQ6,NN1,MH1,MM1,NN2,MH2,MM2,NN3,MH3,MM3,NN4,MH4,MM4,NN5,MH5,MM5,
     3NN6,MH6,MM6,XA,NSIZE,IP,ISIZE,TEMP1,TEMP2,TEMP3,TEMP4,TEMP5,JCI1,
     4JCI2,JCI3,JCI4,JCI5,JCI6,X0,Y0,Z0,W0,U0,V0,VP,VPR,VC,VCR,VR,VRR,
     5J21,KROT,MODINT,ICOUNT2,IRL2,ICOUNT3,IRL3,ICOUNT4,IRL4,ICOUNT5,
     6IRL5,IP5,IND,I37)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM6,MM5,MM4,MM3,MM2,MM1),VC(MM6,MM5,MM4,MM3,22),
     1VR(J21,MM6,MM5,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM6,MM5,MM4,MM3,MM2,MM1),VCR(MM6,MM5,MM4,MM3,22),
     1VRR(J21,MM6,MM5,MM4,MM3,MM2,MM1)
      DIMENSION X(37),Y(37),C(37)
      DIMENSION MODINT(NMODE)
      DIMENSION H1(NN1,MH1,3),H2(NN2,MH2,3),H3(NN3,MH3,3)
      DIMENSION H4(NN4,MH4,3),H5(NN5,MH5,3),H6(NN6,MH6,3)
      DIMENSION IP(ISIZE,NMODE)
      DIMENSION TEMP1(I37,JCI6,JCI6),TEMP2(I37,ICOUNT2,ICOUNT2),
     1TEMP3(I37,ICOUNT3,ICOUNT3),TEMP4(I37,ICOUNT4,ICOUNT4),
     2TEMP5(I37,ICOUNT5,ICOUNT5)
      DIMENSION IRL2(ICOUNT2,2),IRL3(ICOUNT3,2),IRL4(ICOUNT4,2),
     1IRL5(ICOUNT5,2)
      DIMENSION IP5(NSIZE)
      DIMENSION X0(I37,JCI1,JCI1,MM1),Y0(I37,JCI2,JCI2,MM2)
      DIMENSION Z0(I37,JCI3,JCI3,MM3),W0(I37,JCI4,JCI4,MM4)
      DIMENSION U0(I37,JCI5,JCI5,MM5),V0(I37,JCI6,JCI6,MM6)
      DIMENSION XA(1)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),XQ4(MM4),XQ5(MM5),XQ6(MM6)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/BASIS/NBAS(6,2),MAXSUM(6,2)
      COMMON/FACTOR/FACTOR(6)
      COMMON/MAXLAN/LANMAX
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/UNITNO/I61,I62,I63,I64,I71,I72,I73,I74,I81,I82,I83,I84,
     1I91,I92,I93,I94
      COMMON/UNITEX/I75,I76,I85,I86
      COMMON/FILASS/IOUT,INP

      IF(ITIM6A.EQ.0.AND.IND.EQ.-3)THEN
        WRITE(IOUT,*)'Calculating V0CI6'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

      IF(IND.GE.-1)GO TO 500
      NMAX1=MAX0(MAXSUM(1,1)+1,MAXSUM(2,1)+2)
      NMAX2=MAX0(MAXSUM(1,2)+1,MAXSUM(2,2)+2)
      NMAX=MAX0(NMAX1,NMAX2)
      ICOUNT2=0
      DO I6=0,JCI6-1
        DO I5=0,JCI5-1
          IF(I5+I6.LE.NMAX)THEN
            ICOUNT2=ICOUNT2+1
            IF(IABS(IND).EQ.2)THEN
              IRL2(ICOUNT2,1)=I5+1
              IRL2(ICOUNT2,2)=I6+1
            END IF
          END IF
        END DO
      END DO
C**RETURN WITH ICOUNT2
      IF(IABS(IND).GT.2)RETURN
500   CONTINUE
      IF(IND.GE.0)GO TO 600
      NMAX1=MAX0(MAXSUM(1,1)+1,MAXSUM(2,1)+2,MAXSUM(3,1)+3)
      NMAX2=MAX0(MAXSUM(1,2)+1,MAXSUM(2,2)+2,MAXSUM(3,2)+3)
      NMAX=MAX0(NMAX1,NMAX2)
      ICOUNT3=0
      DO I=1,ICOUNT2
        I5=IRL2(I,1)-1
        I6=IRL2(I,2)-1
        DO I4=0,JCI4-1
          IF(I4+I5+I6.LE.NMAX)THEN
            ICOUNT3=ICOUNT3+1
            IF(IABS(IND).EQ.1)THEN
              IRL3(ICOUNT3,1)=I4+1
              IRL3(ICOUNT3,2)=I
            END IF
          END IF
        END DO
      END DO
C**RETURN WITH ICOUNT3
      IF(IABS(IND).GT.1)RETURN
600   CONTINUE
      IF(IND.EQ.0)GO TO 700
      NMAX1=MAX0(MAXSUM(1,1)+1,MAXSUM(2,1)+2,MAXSUM(3,1)+3,
     1MAXSUM(4,1)+4)
      NMAX2=MAX0(MAXSUM(1,2)+1,MAXSUM(2,2)+2,MAXSUM(3,2)+3,
     1MAXSUM(4,2)+4)
      NMAX=MAX0(NMAX1,NMAX2)
      ICOUNT4=0
      DO I=1,ICOUNT3
        I4=IRL3(I,1)-1
        K=IRL3(I,2)
        I5=IRL2(K,1)-1
        I6=IRL2(K,2)-1
        DO I3=0,JCI3-1
          IF(I3+I4+I5+I6.LE.NMAX)THEN
            ICOUNT4=ICOUNT4+1
            IF(IND.GT.0)THEN
              IRL4(ICOUNT4,1)=I3+1
              IRL4(ICOUNT4,2)=I
            END IF
          END IF
        END DO
      END DO
C**RETURN WITH ICOUNT4
      IF(IND.LT.0)RETURN
700   CONTINUE
      NMAX1=MAX0(MAXSUM(1,1)+1,MAXSUM(2,1)+2,MAXSUM(3,1)+3,
     1MAXSUM(4,1)+4,MAXSUM(5,1)+5)
      NMAX2=MAX0(MAXSUM(1,2)+1,MAXSUM(2,2)+2,MAXSUM(3,2)+3,
     1MAXSUM(4,2)+4,MAXSUM(5,2)+5)
      NMAX=MAX0(NMAX1,NMAX2)
      ICOUNT5=0
      DO I=1,ICOUNT4
        I3=IRL4(I,1)-1
        K=IRL4(I,2)
        I4=IRL3(K,1)-1
        L=IRL3(K,2)
        I5=IRL2(L,1)-1
        I6=IRL2(L,2)-1
        DO I2=0,JCI2-1
          IF(I2+I3+I4+I5+I6.LE.NMAX)THEN
            ICOUNT5=ICOUNT5+1
            IF(IND.EQ.0)THEN
              IRL5(ICOUNT5,1)=I2+1
              IRL5(ICOUNT5,2)=I
            END IF
          END IF
        END DO
      END DO
C**RETURN WITH ICOUNT5
      IF(IND.GT.0)RETURN
      DO I=1,NSIZE
        IP5(I)=0
        NR2=IP(I,MODE2)
        NR3=IP(I,MODE3)
        NR4=IP(I,MODE4)
        NR5=IP(I,MODE5)
        NR6=IP(I,MODE6)
        DO J=1,ICOUNT5
          IF(IRL5(J,1).NE.NR2)GO TO 1000
          K=IRL5(J,2)
          IF(IRL4(K,1).NE.NR3)GO TO 1000
          L=IRL4(K,2)
          IF(IRL3(L,1).NE.NR4)GO TO 1000
          M=IRL3(L,2)
          IF(IRL2(M,1).NE.NR5)GO TO 1000
          IF(IRL2(M,2).NE.NR6)GO TO 1000
          IP5(I)=J
1000      CONTINUE
        END DO
        IF(IP5(I).EQ.0)THEN
          WRITE(IOUT,*)'IP5 SET-UP ERROR FOR ELEMENT ',I
          STOP 'IP5 ERROR'
        END IF
      END DO
C**IRL2, IRL3, IRL4 & IRL5 CONTAIN POINTERS FOR LAST 5 INDICES 
C**OF IP(NSIZE,6)

      IFACTC=INTFAC(NMODE,ICOUPC,6)
      IFACTL=INTFAC(NMODE,ICOUPL,6)
      IF(MOLINC.GT.0)IFACTL=1
      IF(MOLINC.GT.0)IFACTC=1
      IF(IWHICH.EQ.0)IFACTL=1
      IF(IWHICH.LT.0.AND.MOLINC.LT.0)IFACTL=1

C***********************************************************

      MD1=MODINT(MOD1)
      MD2=MODINT(MOD2)
      MD3=MODINT(MOD3)
      MD4=MODINT(MOD4)
      MD5=MODINT(MOD5)
      MD6=MODINT(MOD6)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MOD1.EQ.ISYM(I,J))N1=I
          IF(MOD2.EQ.ISYM(I,J))N2=I
          IF(MOD3.EQ.ISYM(I,J))N3=I
          IF(MOD4.EQ.ISYM(I,J))N4=I
          IF(MOD5.EQ.ISYM(I,J))N5=I
          IF(MOD6.EQ.ISYM(I,J))N6=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N1.EQ.N5)MD5=1
      IF(N1.EQ.N6)MD6=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N2.EQ.N5)MD5=1
      IF(N2.EQ.N6)MD6=1
      IF(N3.EQ.N4)MD4=1
      IF(N3.EQ.N5)MD5=1
      IF(N3.EQ.N6)MD6=1
      IF(N4.EQ.N5)MD5=1
      IF(N4.EQ.N6)MD6=1
      IF(N5.EQ.N6)MD6=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      IF(N12.EQ.N5)MD5=1
      IF(N12.EQ.N6)MD6=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      IF(N13.EQ.N5)MD5=1
      IF(N13.EQ.N6)MD6=1
      N14=ISYMP(N1,N4)
      IF(N14.EQ.N5)MD5=1
      IF(N14.EQ.N6)MD6=1
      N15=ISYMP(N1,N5)
      IF(N15.EQ.N6)MD6=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      IF(N23.EQ.N5)MD5=1
      IF(N23.EQ.N6)MD6=1
      N24=ISYMP(N2,N4)
      IF(N24.EQ.N5)MD5=1
      IF(N24.EQ.N6)MD6=1
      N25=ISYMP(N2,N5)
      IF(N25.EQ.N6)MD6=1
      N34=ISYMP(N3,N4)
      IF(N34.EQ.N5)MD5=1
      IF(N34.EQ.N6)MD6=1
      N35=ISYMP(N3,N5)
      IF(N35.EQ.N6)MD6=1
      N45=ISYMP(N4,N5)
      IF(N45.EQ.N6)MD6=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      IF(N123.EQ.N5)MD5=1
      IF(N123.EQ.N6)MD6=1
      N124=ISYMP(N12,N4)
      IF(N124.EQ.N5)MD5=1
      IF(N124.EQ.N6)MD6=1
      N125=ISYMP(N12,N5)
      IF(N125.EQ.N6)MD6=1
      N134=ISYMP(N13,N4)
      IF(N134.EQ.N5)MD5=1
      IF(N134.EQ.N6)MD6=1
      N135=ISYMP(N13,N5)
      IF(N135.EQ.N6)MD6=1
      N145=ISYMP(N14,N5)
      IF(N145.EQ.N6)MD6=1
      N234=ISYMP(N23,N4)
      IF(N234.EQ.N5)MD5=1
      IF(N234.EQ.N6)MD6=1
      N235=ISYMP(N23,N5)
      IF(N235.EQ.N6)MD6=1
      N245=ISYMP(N24,N5)
      IF(N245.EQ.N6)MD6=1
      N345=ISYMP(N34,N5)
      IF(N345.EQ.N6)MD6=1
      N1234=ISYMP(N12,N34)
      IF(N1234.EQ.N5)MD5=1
      IF(N1234.EQ.N6)MD6=1
      N1235=ISYMP(N12,N35)
      IF(N1235.EQ.N6)MD6=1
      N1245=ISYMP(N12,N45)
      IF(N1245.EQ.N6)MD6=1
      N1345=ISYMP(N13,N45)
      IF(N1345.EQ.N6)MD6=1
      N2345=ISYMP(N23,N45)
      IF(N2345.EQ.N6)MD6=1
      N12345=ISYMP(N123,N45)
      IF(N12345.EQ.N6)MD6=1
      MD=MD1*MD2*MD3*MD4*MD5*MD6

C***********************************************************

      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(I76)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(I76)VPR
      END IF

C***********************************************************

C**FORM INDIVIDUAL INTEGRATION TERMS (START)
      DO M1=1,MM1
        DO NR1=1,JCI1
C         X=H1(NR1,M1,1)*IFACTL*MD
          X(1)=H1(NR1,M1,2)*MD
          X(2)=H1(NR1,M1,1)*MD
          X(3)=X(1)
          X(4)=X(2)
          X(5)=X(1)
          X(6)=X(2)
          X(7)=X(1)
          X(8)=X(2)
          X(9)=X(1)
          X(10)=X(2)
          X(11)=X(1)
          X(12)=X(2)
          X(13)=X(2)
          X(14)=X(2)
          X(15)=X(2)
          X(16)=X(2)
          X(17)=X(2)
          X(18)=X(2)
          X(19)=X(2)
          X(20)=X(2)
          X(21)=X(2)
          X(22)=X(2)
          X(23)=X(2)
          X(24)=X(2)
          X(25)=X(2)
          X(26)=X(2)
          X(27)=X(2)
          X(28)=X(2)
          X(29)=X(2)
          X(30)=X(2)
          X(31)=X(2)
          X(32)=X(2)
          X(33)=X(2)
          X(34)=X(2)
          X(35)=X(2)
          X(36)=X(2)
          X(37)=X(2)
          DO NL1=1,JCI1
C           Y=H1(NL1,M1,1)
C           X0(NL1,NR1,M1)=Y*X
            Y(1)=H1(NL1,M1,2)
            Y(2)=Y(1)
            Y(3)=H1(NL1,M1,1)
            Y(4)=Y(1)
            Y(5)=Y(3)
            Y(6)=Y(1)
            Y(7)=Y(3)
            Y(8)=Y(1)
            Y(9)=Y(3)
            Y(10)=Y(1)
            Y(11)=Y(3)
            Y(12)=Y(3)
            Y(13)=Y(3)
            Y(14)=Y(3)
            Y(15)=Y(3)
            Y(16)=Y(3)
            Y(17)=Y(3)
            Y(18)=Y(3)
            Y(19)=Y(3)
            Y(20)=Y(3)
            Y(21)=Y(3)
            Y(22)=Y(3)
            Y(23)=Y(3)
            Y(24)=Y(3)
            Y(25)=Y(3)
            Y(26)=Y(3)
            Y(27)=Y(3)
            Y(28)=Y(3)
            Y(29)=Y(3)
            Y(30)=Y(3)
            Y(31)=Y(3)
            Y(32)=Y(3)
            Y(33)=Y(3)
            Y(34)=Y(3)
            Y(35)=Y(3)
            Y(36)=Y(3)
            Y(37)=Y(3)
            DO K=1,I37
              X0(K,NL1,NR1,M1)=Y(38-K)*X(38-K)
            END DO
          END DO
        END DO
      END DO
      DO M2=1,MM2
        DO NR2=1,JCI2
C         X=H2(NR2,M2,1)
          X(1)=H2(NR2,M2,1)
          X(2)=H2(NR2,M2,2)
          X(3)=X(1)
          X(4)=X(1)
          X(5)=X(1)
          X(6)=X(1)
          X(7)=X(1)
          X(8)=X(1)
          X(9)=X(1)
          X(10)=X(1)
          X(11)=X(1)
          X(12)=X(2)
          X(13)=X(1)
          X(14)=X(2)
          X(15)=X(1)
          X(16)=X(2)
          X(17)=X(1)
          X(18)=X(2)
          X(19)=X(1)
          X(20)=X(2)
          X(21)=X(1)
          X(22)=X(1)
          X(23)=X(1)
          X(24)=X(1)
          X(25)=X(1)
          X(26)=X(1)
          X(27)=X(1)
          X(28)=X(1)
          X(29)=X(1)
          X(30)=X(1)
          X(31)=X(1)
          X(32)=X(1)
          X(33)=X(1)
          X(34)=X(1)
          X(35)=X(1)
          X(36)=X(1)
          X(37)=X(1)
          DO NL2=1,JCI2
C           Y=H2(NL2,M2,1)
C           Y0(NL2,NR2,M2)=Y*X
            Y(1)=H2(NL2,M2,1)
            Y(2)=Y(1)
            Y(3)=H2(NL2,M2,2)
            Y(4)=Y(1)
            Y(5)=Y(1)
            Y(6)=Y(1)
            Y(7)=Y(1)
            Y(8)=Y(1)
            Y(9)=Y(1)
            Y(10)=Y(1)
            Y(11)=Y(1)
            Y(12)=Y(3)
            Y(13)=Y(3)
            Y(14)=Y(1)
            Y(15)=Y(3)
            Y(16)=Y(1)
            Y(17)=Y(3)
            Y(18)=Y(1)
            Y(19)=Y(3)
            Y(20)=Y(1)
            Y(21)=Y(1)
            Y(22)=Y(1)
            Y(23)=Y(1)
            Y(24)=Y(1)
            Y(25)=Y(1)
            Y(26)=Y(1)
            Y(27)=Y(1)
            Y(28)=Y(1)
            Y(29)=Y(1)
            Y(30)=Y(1)
            Y(31)=Y(1)
            Y(32)=Y(1)
            Y(33)=Y(1)
            Y(34)=Y(1)
            Y(35)=Y(1)
            Y(36)=Y(1)
            Y(37)=Y(1)
            DO K=1,I37
              Y0(K,NL2,NR2,M2)=Y(38-K)*X(38-K)
            END DO
          END DO
        END DO
      END DO
      DO M3=1,MM3
        DO NR3=1,JCI3
C         X=H3(NR3,M3,1)
          X(1)=H3(NR3,M3,1)
          X(2)=X(1)
          X(3)=X(1)
          X(4)=H3(NR3,M3,2)
          X(5)=X(1)
          X(6)=X(1)
          X(7)=X(1)
          X(8)=X(1)
          X(9)=X(1)
          X(10)=X(1)
          X(11)=X(1)
          X(12)=X(1)
          X(13)=X(4)
          X(14)=X(1)
          X(15)=X(1)
          X(16)=X(1)
          X(17)=X(1)
          X(18)=X(1)
          X(19)=X(1)
          X(20)=X(1)
          X(21)=X(4)
          X(22)=X(1)
          X(23)=X(4)
          X(24)=X(1)
          X(25)=X(4)
          X(26)=X(1)
          X(27)=X(4)
          X(28)=X(1)
          X(29)=X(1)
          X(30)=X(1)
          X(31)=X(1)
          X(32)=X(1)
          X(33)=X(1)
          X(34)=X(1)
          X(35)=X(1)
          X(36)=X(1)
          X(37)=X(1)
          DO NL3=1,JCI3
C           Y=H3(NL3,M3,1)
C           Z0(NL3,NR3,M3)=Y*X
            Y(1)=H3(NL3,M3,1)
            Y(2)=Y(1)
            Y(3)=Y(1)
            Y(4)=Y(1)
            Y(5)=H3(NL3,M3,2)
            Y(6)=Y(1)
            Y(7)=Y(1)
            Y(8)=Y(1)
            Y(9)=Y(1)
            Y(10)=Y(1)
            Y(11)=Y(1)
            Y(12)=Y(1)
            Y(13)=Y(1)
            Y(14)=Y(5)
            Y(15)=Y(1)
            Y(16)=Y(1)
            Y(17)=Y(1)
            Y(18)=Y(1)
            Y(19)=Y(1)
            Y(20)=Y(1)
            Y(21)=Y(5)
            Y(22)=Y(5)
            Y(23)=Y(1)
            Y(24)=Y(5)
            Y(25)=Y(1)
            Y(26)=Y(5)
            Y(27)=Y(1)
            Y(28)=Y(1)
            Y(29)=Y(1)
            Y(30)=Y(1)
            Y(31)=Y(1)
            Y(32)=Y(1)
            Y(33)=Y(1)
            Y(34)=Y(1)
            Y(35)=Y(1)
            Y(36)=Y(1)
            Y(37)=Y(1)
            DO K=1,I37
              Z0(K,NL3,NR3,M3)=Y(38-K)*X(38-K)
            END DO
          END DO
        END DO
      END DO
      DO M4=1,MM4
        DO NR4=1,JCI4
C         X=H4(NR4,M4,1)
          X(1)=H4(NR4,M4,1)
          X(2)=X(1)
          X(3)=X(1)
          X(4)=X(1)
          X(5)=X(1)
          X(6)=H4(NR4,M4,2)
          X(7)=X(1)
          X(8)=X(1)
          X(9)=X(1)
          X(10)=X(1)
          X(11)=X(1)
          X(12)=X(1)
          X(13)=X(1)
          X(14)=X(1)
          X(15)=X(6)
          X(16)=X(1)
          X(17)=X(1)
          X(18)=X(1)
          X(19)=X(1)
          X(20)=X(1)
          X(21)=X(1)
          X(22)=X(6)
          X(23)=X(1)
          X(24)=X(1)
          X(25)=X(1)
          X(26)=X(1)
          X(27)=X(1)
          X(28)=X(6)
          X(29)=X(1)
          X(30)=X(6)
          X(31)=X(1)
          X(32)=X(6)
          X(33)=X(1)
          X(34)=X(1)
          X(35)=X(1)
          X(36)=X(1)
          X(37)=X(1)
          DO NL4=1,JCI4
C           Y=H4(NL4,M4,1)
C           W0(NL4,NR4,M4)=Y*X
            Y(1)=H4(NL4,M4,1)
            Y(2)=Y(1)
            Y(3)=Y(1)
            Y(4)=Y(1)
            Y(5)=Y(1)
            Y(6)=Y(1)
            Y(7)=H4(NL4,M4,2)
            Y(8)=Y(1)
            Y(9)=Y(1)
            Y(10)=Y(1)
            Y(11)=Y(1)
            Y(12)=Y(1)
            Y(13)=Y(1)
            Y(14)=Y(1)
            Y(15)=Y(1)
            Y(16)=Y(7)
            Y(17)=Y(1)
            Y(18)=Y(1)
            Y(19)=Y(1)
            Y(20)=Y(1)
            Y(21)=Y(1)
            Y(22)=Y(1)
            Y(23)=Y(7)
            Y(24)=Y(1)
            Y(25)=Y(1)
            Y(26)=Y(1)
            Y(27)=Y(1)
            Y(28)=Y(7)
            Y(29)=Y(7)
            Y(30)=Y(1)
            Y(31)=Y(7)
            Y(32)=Y(1)
            Y(33)=Y(1)
            Y(34)=Y(1)
            Y(35)=Y(1)
            Y(36)=Y(1)
            Y(37)=Y(1)
            DO K=1,I37
              W0(K,NL4,NR4,M4)=Y(38-K)*X(38-K)
            END DO
          END DO
        END DO
      END DO
      DO M5=1,MM5
        DO NR5=1,JCI5
C         X=H5(NR5,M5,1)
          X(1)=H5(NR5,M5,1)
          X(2)=X(1)
          X(3)=X(1)
          X(4)=X(1)
          X(5)=X(1)
          X(6)=X(1)
          X(7)=X(1)
          X(8)=H5(NR5,M5,2)
          X(9)=X(1)
          X(10)=X(1)
          X(11)=X(1)
          X(12)=X(1)
          X(13)=X(1)
          X(14)=X(1)
          X(15)=X(1)
          X(16)=X(1)
          X(17)=X(8)
          X(18)=X(1)
          X(19)=X(1)
          X(20)=X(1)
          X(21)=X(1)
          X(22)=X(1)
          X(23)=X(1)
          X(24)=X(8)
          X(25)=X(1)
          X(26)=X(1)
          X(27)=X(1)
          X(28)=X(1)
          X(29)=X(8)
          X(30)=X(1)
          X(31)=X(1)
          X(32)=X(1)
          X(33)=X(8)
          X(34)=X(1)
          X(35)=X(8)
          X(36)=X(1)
          X(37)=X(1)
          DO NL5=1,JCI5
C           Y=H5(NL5,M5,1)
C           U0(NL5,NR5,M5)=Y*X
            Y(1)=H5(NL5,M5,1)
            Y(2)=Y(1)
            Y(3)=Y(1)
            Y(4)=Y(1)
            Y(5)=Y(1)
            Y(6)=Y(1)
            Y(7)=Y(1)
            Y(8)=Y(1)
            Y(9)=H5(NL5,M5,2)
            Y(10)=Y(1)
            Y(11)=Y(1)
            Y(12)=Y(1)
            Y(13)=Y(1)
            Y(14)=Y(1)
            Y(15)=Y(1)
            Y(16)=Y(1)
            Y(17)=Y(1)
            Y(18)=Y(9)
            Y(19)=Y(1)
            Y(20)=Y(1)
            Y(21)=Y(1)
            Y(22)=Y(1)
            Y(23)=Y(1)
            Y(24)=Y(1)
            Y(25)=Y(9)
            Y(26)=Y(1)
            Y(27)=Y(1)
            Y(28)=Y(1)
            Y(29)=Y(1)
            Y(30)=Y(9)
            Y(31)=Y(1)
            Y(32)=Y(1)
            Y(33)=Y(9)
            Y(34)=Y(9)
            Y(35)=Y(1)
            Y(36)=Y(1)
            Y(37)=Y(1)
            DO K=1,I37
              U0(K,NL5,NR5,M5)=Y(38-K)*X(38-K)
            END DO
          END DO
        END DO
      END DO
      DO M6=1,MM6
        DO NR6=1,JCI6
C         X=H6(NR6,M6,1)
          X(1)=H6(NR6,M6,1)
          X(2)=X(1)
          X(3)=X(1)
          X(4)=X(1)
          X(5)=X(1)
          X(6)=X(1)
          X(7)=X(1)
          X(8)=X(1)
          X(9)=X(1)
          X(10)=H6(NR6,M6,2)
          X(11)=X(1)
          X(12)=X(1)
          X(13)=X(1)
          X(14)=X(1)
          X(15)=X(1)
          X(16)=X(1)
          X(17)=X(1)
          X(18)=X(1)
          X(19)=X(10)
          X(20)=X(1)
          X(21)=X(1)
          X(22)=X(1)
          X(23)=X(1)
          X(24)=X(1)
          X(25)=X(1)
          X(26)=X(10)
          X(27)=X(1)
          X(28)=X(1)
          X(29)=X(1)
          X(30)=X(1)
          X(31)=X(10)
          X(32)=X(1)
          X(33)=X(1)
          X(34)=X(10)
          X(35)=X(1)
          X(36)=X(10)
          X(37)=X(1)
          DO NL6=1,JCI6
C           Y=H6(NL6,M6,1)
C           V0(NL6,NR6,M6)=Y*X
            Y(1)=H6(NL6,M6,1)
            Y(2)=Y(1)
            Y(3)=Y(1)
            Y(4)=Y(1)
            Y(5)=Y(1)
            Y(6)=Y(1)
            Y(7)=Y(1)
            Y(8)=Y(1)
            Y(9)=Y(1)
            Y(10)=Y(1)
            Y(11)=H6(NL6,M6,2)
            Y(12)=Y(1)
            Y(13)=Y(1)
            Y(14)=Y(1)
            Y(15)=Y(1)
            Y(16)=Y(1)
            Y(17)=Y(1)
            Y(18)=Y(1)
            Y(19)=Y(1)
            Y(20)=Y(11)
            Y(21)=Y(1)
            Y(22)=Y(1)
            Y(23)=Y(1)
            Y(24)=Y(1)
            Y(25)=Y(1)
            Y(26)=Y(1)
            Y(27)=Y(11)
            Y(28)=Y(1)
            Y(29)=Y(1)
            Y(30)=Y(1)
            Y(31)=Y(1)
            Y(32)=Y(11)
            Y(33)=Y(1)
            Y(34)=Y(1)
            Y(35)=Y(11)
            Y(36)=Y(11)
            Y(37)=Y(1)
            DO K=1,I37
              V0(K,NL6,NR6,M6)=Y(38-K)*X(38-K)
            END DO
          END DO
        END DO
      END DO
C**FORM INDIVIDUAL INTEGRATION TERMS (END)
C**START 6-MODE INTEGRATION
      IF(IWHICH.GE.0)THEN
        DO M1=1,MM1
          DO IRH=1,ICOUNT5
            DO ILH=1,ICOUNT5
              DO K=1,I37
                TEMP5(K,ILH,IRH)=0
              END DO
            END DO
          END DO
C**START 5-MODE INTEGRATION
          DO M2=1,MM2
C**
            IF(JCOUPC.GE.0)THEN
C             IF(J21.GT.1.AND.ICOUPC.GT.5)READ(I66)VR
              IF(ICOUPC.GT.5)READ(I86)VC
            ELSE
C             IF(J21.GT.1.AND.ICOUPC.GT.5)READ(I66)VRR
              IF(ICOUPC.GT.5)READ(I86)VCR
            END IF
C**
            DO IRH=1,ICOUNT4
              DO ILH=1,ICOUNT4
                DO K=1,I37
                  TEMP4(K,ILH,IRH)=0
                END DO
              END DO
            END DO
C**START 4-MODE INTEGRATION
            DO M3=1,MM3
              DO IRH=1,ICOUNT3
                DO ILH=1,ICOUNT3
                  DO K=1,I37
                    TEMP3(K,ILH,IRH)=0
                  END DO
                END DO
              END DO
C**START 3-MODE INTEGRATION
              DO M4=1,MM4
                DO IRH=1,ICOUNT2
                  DO ILH=1,ICOUNT2
                    DO K=1,I37
                      TEMP2(K,ILH,IRH)=0
                    END DO
                  END DO
                END DO
C**START 2-MODE INTEGRATION
                DO M5=1,MM5
                  DO IRHS6=1,JCI6
                    DO ILHS6=1,JCI6
                      DO K=1,I37
                        TEMP1(K,ILHS6,IRHS6)=0
                      END DO
                    END DO
                  END DO
C**START 1-MODE INTEGRATION
                  DO M6=1,MM6
                    DO I=1,37
                      C(I)=0
                    END DO
                    IF(JCOUPL.GT.0)THEN
                      IF(ICOUPC.GT.5)THEN
                        C(1)=VC(M6,M5,M4,M3,1)*IFACTC
                        C(2)=VC(M6,M5,M4,M3,2)*IFACTC
                        C(3)=VC(M6,M5,M4,M3,2)*IFACTC
                        C(4)=VC(M6,M5,M4,M3,3)*IFACTC
                        C(5)=VC(M6,M5,M4,M3,3)*IFACTC
                        C(6)=VC(M6,M5,M4,M3,4)*IFACTC
                        C(7)=VC(M6,M5,M4,M3,4)*IFACTC
                        C(8)=VC(M6,M5,M4,M3,5)*IFACTC
                        C(9)=VC(M6,M5,M4,M3,5)*IFACTC
                        C(10)=VC(M6,M5,M4,M3,6)*IFACTC
                        C(11)=VC(M6,M5,M4,M3,6)*IFACTC
                        C(12)=VC(M6,M5,M4,M3,7)*IFACTC
                        C(13)=VC(M6,M5,M4,M3,8)*IFACTC
                        C(14)=VC(M6,M5,M4,M3,8)*IFACTC
                        C(15)=VC(M6,M5,M4,M3,9)*IFACTC
                        C(16)=VC(M6,M5,M4,M3,9)*IFACTC
                        C(17)=VC(M6,M5,M4,M3,10)*IFACTC
                        C(18)=VC(M6,M5,M4,M3,10)*IFACTC
                        C(19)=VC(M6,M5,M4,M3,11)*IFACTC
                        C(20)=VC(M6,M5,M4,M3,11)*IFACTC
                        C(21)=VC(M6,M5,M4,M3,12)*IFACTC
                        C(22)=VC(M6,M5,M4,M3,13)*IFACTC
                        C(23)=VC(M6,M5,M4,M3,13)*IFACTC
                        C(24)=VC(M6,M5,M4,M3,14)*IFACTC
                        C(25)=VC(M6,M5,M4,M3,14)*IFACTC
                        C(26)=VC(M6,M5,M4,M3,15)*IFACTC
                        C(27)=VC(M6,M5,M4,M3,15)*IFACTC
                        C(28)=VC(M6,M5,M4,M3,16)*IFACTC
                        C(29)=VC(M6,M5,M4,M3,17)*IFACTC
                        C(30)=VC(M6,M5,M4,M3,17)*IFACTC
                        C(31)=VC(M6,M5,M4,M3,18)*IFACTC
                        C(32)=VC(M6,M5,M4,M3,18)*IFACTC
                        C(33)=VC(M6,M5,M4,M3,19)*IFACTC
                        C(34)=VC(M6,M5,M4,M3,20)*IFACTC
                        C(35)=VC(M6,M5,M4,M3,20)*IFACTC
                        C(36)=VC(M6,M5,M4,M3,21)*IFACTC
                        C(37)=VC(M6,M5,M4,M3,22)*IFACTC
C                       IF(J21.GT.1)
C    1                  C(37)=C(26)+VR(KROT,M6,M5,M4,M3,M2,M1)*IFACTC
                      END IF
                      IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1                C(37)=C(37)+VP(M6,M5,M4,M3,M2,M1)*IFACTL
                    ELSE
                      IF(ICOUPC.GT.5)THEN
                        C(1)=VCR(M6,M5,M4,M3,1)*IFACTC
                        C(2)=VCR(M6,M5,M4,M3,2)*IFACTC
                        C(3)=VCR(M6,M5,M4,M3,2)*IFACTC
                        C(4)=VCR(M6,M5,M4,M3,3)*IFACTC
                        C(5)=VCR(M6,M5,M4,M3,3)*IFACTC
                        C(6)=VCR(M6,M5,M4,M3,4)*IFACTC
                        C(7)=VCR(M6,M5,M4,M3,4)*IFACTC
                        C(8)=VCR(M6,M5,M4,M3,5)*IFACTC
                        C(9)=VCR(M6,M5,M4,M3,5)*IFACTC
                        C(10)=VCR(M6,M5,M4,M3,6)*IFACTC
                        C(11)=VCR(M6,M5,M4,M3,6)*IFACTC
                        C(12)=VCR(M6,M5,M4,M3,7)*IFACTC
                        C(13)=VCR(M6,M5,M4,M3,8)*IFACTC
                        C(14)=VCR(M6,M5,M4,M3,8)*IFACTC
                        C(15)=VCR(M6,M5,M4,M3,9)*IFACTC
                        C(16)=VCR(M6,M5,M4,M3,9)*IFACTC
                        C(17)=VCR(M6,M5,M4,M3,10)*IFACTC
                        C(18)=VCR(M6,M5,M4,M3,10)*IFACTC
                        C(19)=VCR(M6,M5,M4,M3,11)*IFACTC
                        C(20)=VCR(M6,M5,M4,M3,11)*IFACTC
                        C(21)=VCR(M6,M5,M4,M3,12)*IFACTC
                        C(22)=VCR(M6,M5,M4,M3,13)*IFACTC
                        C(23)=VCR(M6,M5,M4,M3,13)*IFACTC
                        C(24)=VCR(M6,M5,M4,M3,14)*IFACTC
                        C(25)=VCR(M6,M5,M4,M3,14)*IFACTC
                        C(26)=VCR(M6,M5,M4,M3,15)*IFACTC
                        C(27)=VCR(M6,M5,M4,M3,15)*IFACTC
                        C(28)=VCR(M6,M5,M4,M3,16)*IFACTC
                        C(29)=VCR(M6,M5,M4,M3,17)*IFACTC
                        C(30)=VCR(M6,M5,M4,M3,17)*IFACTC
                        C(31)=VCR(M6,M5,M4,M3,18)*IFACTC
                        C(32)=VCR(M6,M5,M4,M3,18)*IFACTC
                        C(33)=VCR(M6,M5,M4,M3,19)*IFACTC
                        C(34)=VCR(M6,M5,M4,M3,20)*IFACTC
                        C(35)=VCR(M6,M5,M4,M3,20)*IFACTC
                        C(36)=VCR(M6,M5,M4,M3,21)*IFACTC
                        C(37)=VCR(M6,M5,M4,M3,22)*IFACTC
C                       IF(J21.GT.1)
C    1                  C(37)=C(26)+VR(KROT,M6,M5,M4,M3,M2,M1)*IFACTC
                      END IF
                      IF(IWHICH.GE.0.OR.MOLINC.EQ.0)
     1                C(37)=C(37)+VPR(M6,M5,M4,M3,M2,M1)*IFACTL
                    END IF
                    DO IRHS6=1,JCI6
                      DO ILHS6=1,JCI6
                        DO K=1,I37
                          TEMP1(K,ILHS6,IRHS6)=TEMP1(K,ILHS6,IRHS6)+
     1                    V0(K,ILHS6,IRHS6,M6)*C(38-K)
                        END DO
                      END DO
                    END DO
                  END DO
C**END 1-MODE INTEGRATION
                  DO IRH=1,ICOUNT2
                    IRHS5=IRL2(IRH,1)
                    IRHS6=IRL2(IRH,2)
                    DO ILH=1,ICOUNT2
                      ILHS5=IRL2(ILH,1)
                      ILHS6=IRL2(ILH,2)
                      DO K=1,I37
                        TEMP2(K,ILH,IRH)=
     1                  TEMP2(K,ILH,IRH)+
     2                  U0(K,ILHS5,IRHS5,M5)*TEMP1(K,ILHS6,IRHS6)
                      END DO
                    END DO
                  END DO
                END DO
C**END 2-MODE INTEGRATION
                DO IRH=1,ICOUNT3
                  IRHS4=IRL3(IRH,1)
                  IR=IRL3(IRH,2)
                  DO ILH=1,ICOUNT3
                    ILHS4=IRL3(ILH,1)
                    IL=IRL3(ILH,2)
                    DO K=1,I37
                      TEMP3(K,ILH,IRH)=
     1                TEMP3(K,ILH,IRH)+
     2                W0(K,ILHS4,IRHS4,M4)*TEMP2(K,IL,IR)
                    END DO
                  END DO
                END DO
              END DO
C**END 3-MODE INTEGRATION
              DO IRH=1,ICOUNT4
                IRHS3=IRL4(IRH,1)
                IR=IRL4(IRH,2)
                DO ILH=1,ICOUNT4
                  ILHS3=IRL4(ILH,1)
                  IL=IRL4(ILH,2)
                  DO K=1,I37
                    TEMP4(K,ILH,IRH)=
     1              TEMP4(K,ILH,IRH)+
     2              Z0(K,ILHS3,IRHS3,M3)*TEMP3(K,IL,IR)
                  END DO
                END DO
              END DO
            END DO
C**END 4-MODE INTEGRATION
            DO IRH=1,ICOUNT5
              IRHS2=IRL5(IRH,1)
              IR=IRL5(IRH,2)
              DO ILH=1,ICOUNT5
                ILHS2=IRL5(ILH,1)
                IL=IRL5(ILH,2)
                DO K=1,I37
                  TEMP5(K,ILH,IRH)=
     1            TEMP5(K,ILH,IRH)+
     2            Y0(K,ILHS2,IRHS2,M2)*TEMP4(K,IL,IR)
                END DO
              END DO
            END DO
          END DO
C**END 5-MODE INTEGRATION
C**NSIZE IS NO. UNIQUE INTEGRALS (5-DIM)
          DO IRHS=1,NSIZE
            IR=IP5(IRHS)
            IRHS1=IP(IRHS,MODE1)
            J0=IRHS*(IRHS-1)/2
            DO ILHS=1,IRHS
              IL=IP5(ILHS)
              ILHS1=IP(ILHS,MODE1)
              DO K=1,I37
                XA(ILHS+J0)=XA(ILHS+J0)+
     1          TEMP5(K,IL,IR)*
     2          X0(K,ILHS1,IRHS1,M1)
              END DO
            END DO
          END DO
        END DO
      END IF

C**END 6-MODE INTEGRATION
      IF(ITIM6A.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM6A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE VCI6(NMODE,MODE1,MODE2,MODE3,MODE4,MODE5,MODE6,
     1XA,XK,NSIZE,IP,ISIZMX,ISIZE,IP6,ISIZE6,ISTART,IEND,ILR,IRL,
     2LANIND,XL,LAN12D,XD,ZL,ICOUNT,ISIZEX)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      LOGICAL LANCZ,LANZA,LANZB
      DIMENSION IP(ISIZMX,NMODE)
C**
      COMMON/VCIVN/IARRAY(50)
C**
      DIMENSION ILR(ISIZEX),IRL(ISIZEX)
C**TEMPORARY - HERMITIAN
C     DIMENSION XA(ISIZE,1),XK(1),IP6(ISIZE6,6)
C**TEMPORARY - HERMITIAN
      DIMENSION XA(1),XK(1),XL(LAN12D,ISIZE),XD(ISIZEX),
     1ZL(LAN12D,ICOUNT)
C**
      DIMENSION IP6(ISIZE6,6)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/LANCZO/LANCZ,LANZA,LANZB
      COMMON/WHICH/IWHICH
      COMMON/ILAST/ILAST
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      IF(ITIM6A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating VCI6'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

      DO K=1,NMODE
        IARRAY(K)=0
        IF(K.EQ.MODE1)GO TO 6000
        IF(K.EQ.MODE2)GO TO 6000
        IF(K.EQ.MODE3)GO TO 6000
        IF(K.EQ.MODE4)GO TO 6000
        IF(K.EQ.MODE5)GO TO 6000
        IF(K.NE.MODE6)GO TO 5000
6000    CONTINUE
        IARRAY(K)=1
5000    CONTINUE
      END DO

C**ORIGINAL ALGORITHM AND 1 AND 2-DIM MATRIX
      IF(LANIND.EQ.0.OR.LANIND.EQ.1)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=1,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
          NR4=IP(IRHS,MODE4)
          NR5=IP(IRHS,MODE5)
          NR6=IP(IRHS,MODE6)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP6(IR,1))GO TO 2000
            IF(NR2.NE.IP6(IR,2))GO TO 2000
            IF(NR3.NE.IP6(IR,3))GO TO 2000
            IF(NR4.NE.IP6(IR,4))GO TO 2000
            IF(NR5.NE.IP6(IR,5))GO TO 2000
            IF(NR6.EQ.IP6(IR,6))GO TO 1000
2000        CONTINUE
          END DO
C**TEMPORARY
      WRITE(IOUT,*)'NO MATCH IN VCI6 FOR BASIS'
      WRITE(IOUT,*)'ELEMENT:',NR1,NR2,NR3,NR4,NR5,NR6
      STOP 'VCI6 BASIS BUG'
C**TEMPORARY
1000      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
C**TEMPORARY - HERMITIAN
C         DO ILHS=ISTART,IEND
C**TEMPORARY - HERMITIAN
          DO ILHS=1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE
              IF(IARRAY(K).NE.0)GO TO 4000
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3000
4000          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            Y=0
C**TEMPORARY - HERMITIAN
C           XA(ILHS,IRHS)=XA(ILHS,IRHS)+(X+Y)
C**TEMPORARY - HERMITIAN
            XA(ILHS+J0)=XA(ILHS+J0)+(X+Y)
3000        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
        GO TO 7000
      END IF

C**SET UP MATRIX XL(LAN12D,ISIZE-LAN12D) IN CORE (XL AND XA ARE SAME
C**ARRAY - CF LANMAX)  ALSO SET UP DIAGONAL ELEMENTS IN XD(ISIZE)
      IF(LANIND.EQ.2)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (RHS)
        DO IRHS=ISTART,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
          NR4=IP(IRHS,MODE4)
          NR5=IP(IRHS,MODE5)
          NR6=IP(IRHS,MODE6)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP6(IR,1))GO TO 2001
            IF(NR2.NE.IP6(IR,2))GO TO 2001
            IF(NR3.NE.IP6(IR,3))GO TO 2001
            IF(NR4.NE.IP6(IR,4))GO TO 2001
            IF(NR5.NE.IP6(IR,5))GO TO 2001
            IF(NR6.EQ.IP6(IR,6))GO TO 1001
2001        CONTINUE
          END DO
1001      CONTINUE
          IRL(IRHS)=IR
        END DO
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS (LHS)
        DO ILHS=1,LAN12D
          NL1=IP(ILHS,MODE1)
          NL2=IP(ILHS,MODE2)
          NL3=IP(ILHS,MODE3)
          NL4=IP(ILHS,MODE4)
          NL5=IP(ILHS,MODE5)
          NL6=IP(ILHS,MODE6)
C**FIND LHS INDEX
          DO IL=1,NSIZE
            IF(NL1.NE.IP6(IL,1))GO TO 2002
            IF(NL2.NE.IP6(IL,2))GO TO 2002
            IF(NL3.NE.IP6(IL,3))GO TO 2002
            IF(NL4.NE.IP6(IL,4))GO TO 2002
            IF(NL5.NE.IP6(IL,5))GO TO 2002
            IF(NL6.EQ.IP6(IL,6))GO TO 1002
2002        CONTINUE
          END DO
1002      CONTINUE
          ILR(ILHS)=IL
        END DO

        DO IRHS=ISTART,IEND
          IR=IRL(IRHS)
          DO ILHS=1,LAN12D
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE
              IF(IARRAY(K).NE.0)GO TO 4002
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3002
4002          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XL(ILHS,IRHS-ISTART+1)=XL(ILHS,IRHS-ISTART+1)+X
3002        CONTINUE
          END DO
C**DIAGONAL ELEMENT
          IL=IR
          I=IR*(IR-1)/2+IL
          X=XK(I)
          XD(IRHS)=XD(IRHS)+X
        END DO
      END IF

C**SET UP ARRAY XA((ISIZE-LAN12D)*(ISIZE-LAN12D+1)/2)
C**TRUNCATE IF ROW/COLUMN IN IFLAG(ISIZE)=0
      IF(LANIND.EQ.3)THEN
C**GET INDICES FIRST FOR ALL POSSIBLE ELEMENTS
        DO IRHS=LAN12D+1,IEND
          NR1=IP(IRHS,MODE1)
          NR2=IP(IRHS,MODE2)
          NR3=IP(IRHS,MODE3)
          NR4=IP(IRHS,MODE4)
          NR5=IP(IRHS,MODE5)
          NR6=IP(IRHS,MODE6)
C**FIND RHS INDEX
          DO IR=1,NSIZE
            IF(NR1.NE.IP6(IR,1))GO TO 2004
            IF(NR2.NE.IP6(IR,2))GO TO 2004
            IF(NR3.NE.IP6(IR,3))GO TO 2004
            IF(NR4.NE.IP6(IR,4))GO TO 2004
            IF(NR5.NE.IP6(IR,5))GO TO 2004
            IF(NR6.EQ.IP6(IR,6))GO TO 1004
2004        CONTINUE
          END DO
1004      CONTINUE
          ILR(IRHS)=IR
        END DO

        J0=0
        DO IRHS=ISTART,IEND
          IR=ILR(IRHS)
          DO ILHS=LAN12D+1,IRHS
C**OVERLAP OF REMAINING STATES
            DO K=1,NMODE
              IF(IARRAY(K).NE.0)GO TO 4004
              IF(IP(IRHS,K).NE.IP(ILHS,K))GO TO 3004
4004          CONTINUE
            END DO
C**OVERLAP OF REMAINING STATES
            IL=ILR(ILHS)
C**GET MATRIX ELEMENT
            MR=IR
            ML=IL
            IF(IR.LT.IL)THEN
              MR=IL
              ML=IR
            END IF
            I=MR*(MR-1)/2+ML
            X=XK(I)
            XA(ILHS+J0)=XA(ILHS+J0)+X
3004        CONTINUE
          END DO
          J0=J0+IRHS
        END DO
      END IF

7000  CONTINUE
      IF(ITIM6A.EQ.0)THEN
        CALL TIMIT(3)
        CALL FLUSH(IOUT)
        ITIM6A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE CIKE(NMODE,MODE,HL,HR,XQ,S,XK,ISIZE,MM,OMEGA,ILHS,
     1IRHS)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION XK(ISIZE,1),HL(MM,3),HR(MM,3),XQ(MM),S(NMODE)
      COMMON/WHICH/IWHICH
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM1A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating CIKE'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

C**ZERO ORDER KINETIC ENERGY TERM
      TERM=0
      DO M=1,MM
        Q=XQ(M)
        IF(IWHICH.EQ.0)THEN
          VHARM=OMEGA*OMEGA*Q*Q/2
        ELSE
          VHARM=0
        END IF
        X=-HR(M,3)/2+VHARM*HR(M,1)
        Y=HL(M,1)
        TERM=TERM+Y*X
      END DO
      DO K=1,NMODE
        IF(K.NE.MODE)THEN
          TERM=TERM*S(K)
        END IF
      END DO
      XK(ILHS,IRHS)=XK(ILHS,IRHS)+TERM
      IF(ITIM1A.EQ.0)THEN
        CALL TIMIT(3)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE CI0(NMODE,S,XK,ISIZE,ILHS,IRHS,VK,VKR,J21,KROT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 V,VM(6),VK(J21)
      REAL*4 VR,VMR(6),VKR(J21)
      DIMENSION XK(ISIZE,1),S(NMODE)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6),FACTS(6)
      COMMON/MUREF/V,VM,VR,VMR
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      FACT=1
      DO I=1,ICOUPC
        FACT=FACT-FACTOR(I)*FACTS(I)
      END DO
      DO K=1,NMODE
        FACT=FACT*S(K)
      END DO
C**WATSON
      IF(JCOUPC.GE.0)XK(ILHS,IRHS)=XK(ILHS,IRHS)+V*FACT
      IF(JCOUPC.LT.0)XK(ILHS,IRHS)=XK(ILHS,IRHS)+VR*FACT
C**ROTATION
      IF(J21.GT.1)THEN
        IF(JCOUPC.GE.0)XK(ILHS,IRHS)=XK(ILHS,IRHS)+VK(KROT)*FACT
        IF(JCOUPC.LT.0)XK(ILHS,IRHS)=XK(ILHS,IRHS)+VKR(KROT)*FACT
      END IF
      RETURN 
      END
C****************************************************************
C****************************************************************
      SUBROUTINE CV0(NMODE,HLTAU,HRTAU,XQTAU,S,XK,ISIZE,
     1MMTAU,ILHS,IRHS,VC,VCR,VR,VRR,J21,KROT,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP,VC(3),VR(J21)
      REAL*4 VPR,VCR(3),VRR(J21)
      DIMENSION X(3),MODINT(NMODE)
      DIMENSION HLTAU(MMTAU,3),HRTAU(MMTAU,3),XQTAU(MMTAU)
      DIMENSION S(NMODE),XK(ISIZE,1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM.EQ.0)THEN
        WRITE(IOUT,*)'Calculating CV0'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

      IFACTL=JNTFAC(NMODE,ICOUPL,0)
      IFACTC=JNTFAC(NMODE,ICOUPC,0)

      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      MDT=MODINT(NSMODE)
      TERM=0
C**LOOP ROUND TAU
      ITAU=INIT-INCTAU
      DO MTAU=1,MMTAU/MDT
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720
        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.0)READ(61)VR
          IF(ICOUPC.GE.0)READ(81)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.0)READ(61)VRR
          IF(ICOUPC.GE.0)READ(81)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(71)VP
        ELSE
          READ(71)VPR
        END IF
        Y1=HLTAU(MTAU,1)*HRTAU(MTAU,1)
        Y2=HLTAU(MTAU,1)*HRTAU(MTAU,2)
        Y3=HLTAU(MTAU,2)*HRTAU(MTAU,1)
        Y4=HLTAU(MTAU,2)*HRTAU(MTAU,2)
        IF(JCOUPL.GT.0)THEN
          VV=VP*IFACTL
          VV=VV+VR(KROT)*FACTRC
          DO I=1,3
            X(I)=VC(I)*IFACTC
          END DO
          X(3)=X(3)+VV
        ELSE
          VV=VPR*IFACTL
          VV=VV+VRR(KROT)*FACTRC
          DO I=1,3
            X(I)=VCR(I)*IFACTC
          END DO
          X(3)=X(3)+VV
        END IF
        TERM=TERM+(X(1)*(Y2+Y3)+X(2)*Y4+X(3)*Y1)*DSTAU(ITAU)
      END DO
      DO K=1,NMODE
        TERM=TERM*S(K)
      END DO
      XK(ILHS,IRHS)=XK(ILHS,IRHS)+TERM*MDT
      IF(ITIM.EQ.0)THEN
        CALL TIMIT(3)
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE CI1(NMODE,MODE,HL,HR,XQ,S,XK,ISIZE,MM,ILHS,IRHS,
     1VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM),VC(MM),VR(J21,MM)
      REAL*4 VPR(MM),VCR(MM),VRR(J21,MM)
      DIMENSION MODINT(NMODE)
      DIMENSION HL(MM,3),HR(MM,3),XQ(MM),S(NMODE),XK(ISIZE,1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MD=MODINT(MODE)
      CALL DCI1(NMODE,MODE,HL,HR,XQ,S,XK,ISIZE,MM,MM/MD,ILHS,IRHS,
     1VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DCI1(NMODE,MODE,HL,HR,XQ,S,XK,ISIZE,MH,MM,ILHS,IRHS,
     1VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM),VC(MM),VR(J21,MM)
      REAL*4 VPR(MM),VCR(MM),VRR(J21,MM)
      DIMENSION MODINT(NMODE)
CCCC  DIMENSION HL(MM,3),HR(MM,3)
      DIMENSION HL(MH,3),HR(MH,3)
      DIMENSION XQ(MM),S(NMODE),XK(ISIZE,1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM1A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating CI1'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,1)
      IFACTL=INTFAC(NMODE,ICOUPL,1)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1

C***********************************************************

      MD=MODINT(MODE)

C***********************************************************

      IF(JCOUPC.GE.0)THEN
        IF(J21.GT.1.AND.ICOUPC.GT.0)READ(61)VR
        IF(ICOUPC.GT.0)READ(81)VC
      ELSE
        IF(J21.GT.1.AND.ICOUPC.GT.0)READ(61)VRR
        IF(ICOUPC.GT.0)READ(81)VCR
      END IF
      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(71)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(71)VPR
      END IF

C***********************************************************
      TERM=0
CCCC  DO M=1,MM/MD
      DO M=1,MM
        IF(JCOUPL.GT.0)THEN
          VV=VP(M)*IFACTL
          VV=VV+VC(M)*IFACTC
          IF(J21.GT.1)VV=VV+VR(KROT,M)*IFACTC
        ELSE
          VV=VPR(M)*IFACTL
          VV=VV+VCR(M)*IFACTC
          IF(J21.GT.1)VV=VV+VRR(KROT,M)*IFACTC
        END IF
C**THINK ABOUT DO IRHS=1,ICI (WHAT ABOUT READ(50) THOUGH ?)
        X=VV*HR(M,1)
C**THINK ABOUT DO ILHS=1,IRHS
        Y=HL(M,1)
        TERM=TERM+Y*X
      END DO
      DO K=1,NMODE
        IF(K.NE.MODE)THEN
          TERM=TERM*S(K)
        END IF
      END DO
C**NEEDS CONDITION (0 OR 1) FOR ASYMM FNS.
      XK(ILHS,IRHS)=XK(ILHS,IRHS)+TERM*MD
      IF(ITIM1A.EQ.0)THEN
        CALL TIMIT(3)
        ITIM1A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE CV1(NMODE,MODE,HL,HR,XQ,HLTAU,HRTAU,XQTAU,S,XK,ISIZE,
     1MM,MMTAU,ILHS,IRHS,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM),VC(MM,6),VR(J21,MM)
      REAL*4 VPR(MM),VCR(MM,6),VRR(J21,MM)
      DIMENSION X(6)
      DIMENSION MODINT(NMODE)
      DIMENSION HLTAU(MMTAU,3),HRTAU(MMTAU,3),XQTAU(MMTAU)
      DIMENSION HL(MM,3),HR(MM,3),XQ(MM),S(NMODE),XK(ISIZE,1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE.EQ.ISYM(I,J))N1=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      CALL DCV1(NMODE,MODE,HL,HR,XQ,HLTAU,HRTAU,XQTAU,S,XK,ISIZE,
     1MM,MM/MD1,MMTAU,ILHS,IRHS,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DCV1(NMODE,MODE,HL,HR,XQ,HLTAU,HRTAU,XQTAU,S,XK,ISIZE,
     1MH,MM,MMTAU,ILHS,IRHS,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM),VC(MM,6),VR(J21,MM)
      REAL*4 VPR(MM),VCR(MM,6),VRR(J21,MM)
      DIMENSION X(6)
      DIMENSION MODINT(NMODE)
      DIMENSION HLTAU(MMTAU,3),HRTAU(MMTAU,3),XQTAU(MMTAU)
CCCC  DIMENSION HL(MM,3),HR(MM,3),XQ(MM),S(NMODE),XK(ISIZE,1)
      DIMENSION HL(MH,3),HR(MH,3),XQ(MM),S(NMODE),XK(ISIZE,1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM1A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating CV1'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

      IFACTL=JNTFAC(NMODE,ICOUPL,1)
      IFACTC=JNTFAC(NMODE,ICOUPC,1)

      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE.EQ.ISYM(I,J))N1=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      MD=MD1*MDT
      TERM=0
C**LOOP ROUND TAU
      ITAU=INIT-INCTAU
      DO MTAU=1,MMTAU/MDT
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.1)READ(61)VR
          IF(ICOUPC.GE.1)READ(81)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.1)READ(61)VRR
          IF(ICOUPC.GE.1)READ(81)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(71)VP
        ELSE
          READ(71)VPR
        END IF

C***********************************************************

        Y1=HLTAU(MTAU,1)*HRTAU(MTAU,1)
        Y2=HLTAU(MTAU,1)*HRTAU(MTAU,2)
        Y3=HLTAU(MTAU,2)*HRTAU(MTAU,1)
        Y4=HLTAU(MTAU,2)*HRTAU(MTAU,2)
C**START INTEGRATION OVER SINGLE MODE
CCCC    DO M=1,MM/MD1
        DO M=1,MM
          X1=HL(M,1)*HR(M,1)
          X2=HL(M,1)*HR(M,2)
          X3=HL(M,2)*HR(M,1)
          X4=HL(M,2)*HR(M,2)
          IF(JCOUPL.GT.0)THEN
            VV=VP(M)*IFACTL
            VV=VV+VR(KROT,M)*FACTRC
            DO I=1,6
              X(I)=VC(M,I)*IFACTC
            END DO
          ELSE
            VV=VPR(M)*IFACTL
            VV=VV+VRR(KROT,M)*FACTRC
            DO I=1,6
              X(I)=VCR(M,I)*IFACTC
            END DO
          END IF
          TERM=TERM+X(1)*Y1*(X2+X3)+X(2)*X1*(Y2+Y3)+X(3)*Y1*X4+
     1    X(4)*(Y2*X3+Y3*X2)+X(5)*Y4*X1+(X(6)+VV)*Y1*X1
        END DO
C**END INTEGRATION OVER SINGLE MODE
      END DO
      DO K=1,NMODE
        IF(K.NE.MODE)THEN
          TERM=TERM*S(K)
        END IF
      END DO
C**NEEDS CONDITION (0 OR 1) FOR ASYMM FNS.
      XK(ILHS,IRHS)=XK(ILHS,IRHS)+TERM*MD
      IF(ITIM1A.EQ.0)THEN
        CALL TIMIT(3)
        ITIM1A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE CI2(NMODE,MODE1,MODE2,HL1,HR1,XQ1,HL2,HR2,XQ2,MM1,MM2,
     1S,XK,ISIZE,NATOM,QQ,XZ,AB,B,AA,BB,RR,XX,X0,XL,XM,ILHS,IRHS,NPOT,
     2IPOT,JPOT,CPOT,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,6),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,6),VRR(J21,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION HL1(MM1,3),HR1(MM1,3),HL2(MM2,3),HR2(MM2,3)
      DIMENSION XQ1(MM1),XQ2(MM2),S(NMODE)
      DIMENSION QQ(NMODE),XZ(NMODE,NMODE,3),AB(NMODE,3),RR(NATOM,NATOM)
      DIMENSION B(NMODE,NMODE),AA(NMODE,3,3),BB(NMODE),XK(ISIZE,1)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      DIMENSION G1(3,3),XIN(3,3),XMU(3,3),SUP1(3,3),SUP2(3,3),SUP3(10)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      CALL DCI2(NMODE,MODE1,MODE2,HL1,HR1,XQ1,HL2,HR2,XQ2,MM1,MM1/MD1,
     1MM2,MM2/MD2,S,XK,ISIZE,NATOM,QQ,XZ,AB,B,AA,BB,RR,XX,X0,XL,XM,
     2ILHS,IRHS,NPOT,IPOT,JPOT,CPOT,VP,VPR,VC,VCR,VR,VRR,J21,KROT,
     3MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DCI2(NMODE,MODE1,MODE2,HL1,HR1,XQ1,HL2,HR2,XQ2,MH1,
     1MM1,MH2,MM2,S,XK,ISIZE,NATOM,QQ,XZ,AB,B,AA,BB,RR,XX,X0,XL,XM,
     2ILHS,IRHS,NPOT,IPOT,JPOT,CPOT,VP,VPR,VC,VCR,VR,VRR,J21,KROT,
     3MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,6),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,6),VRR(J21,MM2,MM1)
      DIMENSION MODINT(NMODE)
CCCC  DIMENSION HL1(MM1,3),HR1(MM1,3),HL2(MM2,3),HR2(MM2,3)
      DIMENSION HL1(MH1,3),HR1(MH1,3),HL2(MH2,3),HR2(MH2,3)
      DIMENSION XQ1(MM1),XQ2(MM2),S(NMODE)
      DIMENSION QQ(NMODE),XZ(NMODE,NMODE,3),AB(NMODE,3),RR(NATOM,NATOM)
      DIMENSION B(NMODE,NMODE),AA(NMODE,3,3),BB(NMODE),XK(ISIZE,1)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      DIMENSION G1(3,3),XIN(3,3),XMU(3,3),SUP1(3,3),SUP2(3,3),SUP3(10)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM2A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating CI2'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,2)
      IFACTL=INTFAC(NMODE,ICOUPL,2)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      MD=MD1*MD2

C***********************************************************

      IF(JCOUPC.GE.0)THEN
        IF(J21.GT.1.AND.ICOUPC.GT.1)READ(62)VR
        IF(ICOUPC.GT.1)READ(82)VC
      ELSE
        IF(J21.GT.1.AND.ICOUPC.GT.1)READ(62)VRR
        IF(ICOUPC.GT.1)READ(82)VCR
      END IF
      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(72)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(72)VPR
      END IF

C***********************************************************
      TERM=0
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X1=0
        X2=0
        X3=0
        Z1=HR1(M1,1)
        Z2=HR1(M1,2)
        Z3=HR1(M1,3)
C**INTEGRATE OVER SINGLE STATE (START)
        IF(JCOUPL.GT.0)THEN
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
            Y0=HL2(M2,1)
            Y1=Y0*HR2(M2,1)*IFACTC
            YY1=Y0*HR2(M2,1)*IFACTL
            Y2=Y0*HR2(M2,2)*IFACTC
            Y3=Y0*HR2(M2,3)*IFACTC
            X1=X1+VP(M2,M1)*YY1
            X1=X1-VC(M2,M1,2)*Y2-VC(M2,M1,5)*Y3
            X1=X1+VC(M2,M1,6)*Y1
            IF(J21.GT.1)
     1      X1=X1+VR(KROT,M2,M1)*Y1
            X2=X2-VC(M2,M1,1)*Y1-2*VC(M2,M1,4)*Y2
            X3=X3-VC(M2,M1,3)*Y1
          END DO
        ELSE
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
            Y0=HL2(M2,1)
            Y1=Y0*HR2(M2,1)*IFACTC
            YY1=Y0*HR2(M2,1)*IFACTL
            Y2=Y0*HR2(M2,2)*IFACTC
            Y3=Y0*HR2(M2,3)*IFACTC
            X1=X1+VPR(M2,M1)*YY1
            X1=X1-VCR(M2,M1,2)*Y2-VCR(M2,M1,5)*Y3
            X1=X1+VCR(M2,M1,6)*Y1
            IF(J21.GT.1)
     1      X1=X1+VRR(KROT,M2,M1)*Y1
            X2=X2-VCR(M2,M1,1)*Y1-2*VCR(M2,M1,4)*Y2
            X3=X3-VCR(M2,M1,3)*Y1
          END DO
        END IF
C**INTEGRATE OVER SINGLE STATE (END)
        Y=HL1(M1,1)
        TERM=TERM+Y*(X1*Z1+X2*Z2+X3*Z3)
      END DO
      DO K=1,NMODE
        IF(K.NE.MODE1.AND.K.NE.MODE2)THEN
          TERM=TERM*S(K)
        END IF
      END DO
C**NEEDS CONDITION (0 OR 1) FOR ASYMM FNS.
      XK(ILHS,IRHS)=XK(ILHS,IRHS)+TERM*MD
      IF(ITIM2A.EQ.0)THEN
        CALL TIMIT(3)
        ITIM2A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE CV2(NMODE,MODE1,MODE2,HL1,HR1,XQ1,HL2,HR2,XQ2,HLTAU,
     1HRTAU,XQTAU,MM1,MM2,MMTAU,S,XK,ISIZE,ILHS,IRHS,VP,VPR,VC,VCR,VR,
     2VRR,J21,KROT,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,10),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,10),VRR(J21,MM2,MM1)
      DIMENSION X(10)
      DIMENSION MODINT(NMODE)
      DIMENSION HLTAU(MMTAU,3),HRTAU(MMTAU,3),XQTAU(MMTAU)
      DIMENSION HL1(MM1,3),HR1(MM1,3),HL2(MM2,3),HR2(MM2,3)
      DIMENSION XQ1(MM1),XQ2(MM2),S(NMODE),XK(ISIZE,1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      CALL DCV2(NMODE,MODE1,MODE2,HL1,HR1,XQ1,HL2,HR2,XQ2,HLTAU,
     1HRTAU,XQTAU,MM1,MM1/MD1,MM2,MM2/MD2,MMTAU,S,XK,ISIZE,ILHS,IRHS,
     2VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DCV2(NMODE,MODE1,MODE2,HL1,HR1,XQ1,HL2,HR2,XQ2,HLTAU,
     1HRTAU,XQTAU,MH1,MM1,MH2,MM2,MMTAU,S,XK,ISIZE,ILHS,IRHS,VP,VPR,VC,
     2VCR,VR,VRR,J21,KROT,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM2,MM1),VC(MM2,MM1,10),VR(J21,MM2,MM1)
      REAL*4 VPR(MM2,MM1),VCR(MM2,MM1,10),VRR(J21,MM2,MM1)
      DIMENSION X(10)
      DIMENSION MODINT(NMODE)
      DIMENSION HLTAU(MMTAU,3),HRTAU(MMTAU,3),XQTAU(MMTAU)
CCCC  DIMENSION HL1(MM1,3),HR1(MM1,3),HL2(MM2,3),HR2(MM2,3)
      DIMENSION HL1(MH1,3),HR1(MH1,3),HL2(MH2,3),HR2(MH2,3)
      DIMENSION XQ1(MM1),XQ2(MM2),S(NMODE),XK(ISIZE,1)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM2A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating CV2'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

      IFACTL=JNTFAC(NMODE,ICOUPL,2)
      IFACTC=JNTFAC(NMODE,ICOUPC,2)

      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      TERM=0
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      MD=MD1*MD2*MDT
C**LOOP ROUND TAU
      ITAU=INIT-INCTAU
      DO MTAU=1,MMTAU/MDT
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.2)READ(62)VR
          IF(ICOUPC.GE.2)READ(82)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.2)READ(62)VRR
          IF(ICOUPC.GE.2)READ(82)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(72)VP
        ELSE
          READ(72)VPR
        END IF

C***********************************************************

        Z1=HLTAU(MTAU,1)*HRTAU(MTAU,1)*DSTAU(ITAU)
        Z2=HLTAU(MTAU,1)*HRTAU(MTAU,2)*DSTAU(ITAU)
        Z3=HLTAU(MTAU,2)*HRTAU(MTAU,1)*DSTAU(ITAU)
        Z4=HLTAU(MTAU,2)*HRTAU(MTAU,2)*DSTAU(ITAU)
CCCC    DO M1=1,MM1/MD1
        DO M1=1,MM1
          X1=HL1(M1,1)*HR1(M1,1)
          X2=HL1(M1,1)*HR1(M1,2)
          X3=HL1(M1,2)*HR1(M1,1)
          X4=HL1(M1,2)*HR1(M1,2)
C**INTEGRATE OVER SINGLE STATE (START)
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
            Y1=HL2(M2,1)*HR2(M2,1)
            Y2=HL2(M2,1)*HR2(M2,2)
            Y3=HL2(M2,2)*HR2(M2,1)
            Y4=HL2(M2,2)*HR2(M2,2)
            IF(JCOUPL.GT.0)THEN
              VV=VP(M2,M1)*IFACTL
              VV=VV+VR(KROT,M2,M1)*FACTRC
              DO I=1,10
                X(I)=VC(M2,M1,I)*IFACTC
              END DO
            ELSE
              VV=VPR(M2,M1)*IFACTL
              VV=VV+VRR(KROT,M2,M1)*FACTRC
              DO I=1,10
                X(I)=VCR(M2,M1,I)*IFACTC
              END DO
            END IF
            TERM=TERM+X(1)*Y1*Z1*(X2+X3)+
     1                X(2)*X1*Z1*(Y2+Y3)+
     2                X(3)*X1*Y1*(Z2+Z3)+
     3                X(4)*Y1*Z1*X4+
     4                X(5)*Z1*(X3*Y2+X2*Y3)+
     5                X(6)*Y1*(X3*Z2+X2*Z3)+
     6                X(7)*X1*Z1*Y4+
     7                X(8)*X1*(Y3*Z2+Y2*Z3)+
     8                X(9)*X1*Y1*Z4+
     9                X(10)*X1*Y1*Z1
          END DO
C**INTEGRATE OVER SINGLE STATE (END)
        END DO
      END DO
      DO K=1,NMODE
        IF(K.NE.MODE1.AND.K.NE.MODE2)THEN
          TERM=TERM*S(K)
        END IF
      END DO
C**NEEDS CONDITION (0 OR 1) FOR ASYMM FNS.
      XK(ILHS,IRHS)=XK(ILHS,IRHS)+TERM*MD
      IF(ITIM2A.EQ.0)THEN
        CALL TIMIT(3)
        ITIM2A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE CI3(NMODE,MODE1,MODE2,MODE3,HL1,HR1,XQ1,HL2,HR2,XQ2,
     1HL3,HR3,XQ3,MM1,MM2,MM3,S,XK,ISIZE,NATOM,QQ,XZ,AB,B,AA,BB,RR,XX,
     2X0,XL,XM,ILHS,IRHS,NPOT,IPOT,JPOT,CPOT,VP,VPR,VC,VCR,VR,VRR,J21,
     3KROT,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,10),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,10),VRR(J21,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION HL1(MM1,3),HR1(MM1,3),HL2(MM2,3),HR2(MM2,3)
      DIMENSION HL3(MM3,3),HR3(MM3,3),XK(ISIZE,1)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),S(NMODE)
      DIMENSION QQ(NMODE),XZ(NMODE,NMODE,3),AB(NMODE,3),RR(NATOM,NATOM)
      DIMENSION B(NMODE,NMODE),AA(NMODE,3,3),BB(NMODE)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      DIMENSION G1(3,3),XIN(3,3),XMU(3,3),SUP1(3,3),SUP2(3,3),SUP3(10)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
        END DO
      END DO
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N2)MD2=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      CALL DCI3(NMODE,MODE1,MODE2,MODE3,HL1,HR1,XQ1,HL2,HR2,XQ2,
     1HL3,HR3,XQ3,MM1,MM1/MD1,MM2,MM2/MD2,MM3,MM3/MD3,S,XK,ISIZE,NATOM,
     2QQ,XZ,AB,B,AA,BB,RR,XX,X0,XL,XM,ILHS,IRHS,NPOT,IPOT,JPOT,CPOT,VP,
     3VPR,VC,VCR,VR,VRR,J21,KROT,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DCI3(NMODE,MODE1,MODE2,MODE3,HL1,HR1,XQ1,HL2,HR2,XQ2,
     1HL3,HR3,XQ3,MH1,MM1,MH2,MM2,MH3,MM3,S,XK,ISIZE,NATOM,QQ,XZ,AB,B,
     2AA,BB,RR,XX,X0,XL,XM,ILHS,IRHS,NPOT,IPOT,JPOT,CPOT,VP,VPR,VC,VCR,
     3VR,VRR,J21,KROT,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,10),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,10),VRR(J21,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
CCCC  DIMENSION HL1(MM1,3),HR1(MM1,3),HL2(MM2,3),HR2(MM2,3)
CCCC  DIMENSION HL3(MM3,3),HR3(MM3,3)
      DIMENSION HL1(MH1,3),HR1(MH1,3),HL2(MH2,3),HR2(MH2,3)
      DIMENSION HL3(MH3,3),HR3(MH3,3)
      DIMENSION XK(ISIZE,1)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),S(NMODE)
      DIMENSION QQ(NMODE),XZ(NMODE,NMODE,3),AB(NMODE,3),RR(NATOM,NATOM)
      DIMENSION B(NMODE,NMODE),AA(NMODE,3,3),BB(NMODE)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      DIMENSION G1(3,3),XIN(3,3),XMU(3,3),SUP1(3,3),SUP2(3,3),SUP3(10)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM3A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating CI3'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,3)
      IFACTL=INTFAC(NMODE,ICOUPL,3)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1

C***********************************************************

      IF(JCOUPC.GE.0)THEN
        IF(J21.GT.1.AND.ICOUPC.GT.2)READ(63)VR
        IF(ICOUPC.GT.2)READ(83)VC
      ELSE
        IF(J21.GT.1.AND.ICOUPC.GT.2)READ(63)VRR
        IF(ICOUPC.GT.2)READ(83)VCR
      END IF
      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(73)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(73)VPR
      END IF

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
        END DO
      END DO
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N2)MD2=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      MD=MD1*MD2*MD3

C***********************************************************

      TERM=0
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X1=0
        X2=0
        X3=0
        W1=HR1(M1,1)
        W2=HR1(M1,2)
        W3=HR1(M1,3)
C**INTEGRATE OVER SINGLE STATES (START)
CCCC    DO M2=1,MM2/MD2
        DO M2=1,MM2
          Y0=HL2(M2,1)
          Y1=Y0*HR2(M2,1)*IFACTC
          YY1=Y0*HR2(M2,1)*IFACTL
          Y2=Y0*HR2(M2,2)*IFACTC
          Y3=Y0*HR2(M2,3)*IFACTC
          IF(JCOUPL.GT.0)THEN
CCCC        DO M3=1,MM3/MD3
            DO M3=1,MM3
              Z0=HL3(M3,1)
              Z1=Z0*HR3(M3,1)
              Z2=Z0*HR3(M3,2)
              Z3=Z0*HR3(M3,3)
              X1=X1+VP(M3,M2,M1)*YY1*Z1
              X1=X1-VC(M3,M2,M1,2)*Y2*Z1-
     1        VC(M3,M2,M1,3)*Y1*Z2-VC(M3,M2,M1,7)*Y3*Z1-
     2        2*VC(M3,M2,M1,8)*Y2*Z2-
     3        VC(M3,M2,M1,9)*Y1*Z3
              X1=X1+VC(M3,M2,M1,10)*Y1*Z1
              IF(J21.GT.1)
     1        X1=X1+VR(KROT,M3,M2,M1)*Y1*Z1
              X2=X2-VC(M3,M2,M1,1)*Y1*Z1-2*VC(M3,M2,M1,5)*Y2*Z1-
     1        2*VC(M3,M2,M1,6)*Y1*Z2
              X3=X3-VC(M3,M2,M1,4)*Y1*Z1
            END DO
          ELSE
CCCC        DO M3=1,MM3/MD3
            DO M3=1,MM3
              Z0=HL3(M3,1)
              Z1=Z0*HR3(M3,1)
              Z2=Z0*HR3(M3,2)
              Z3=Z0*HR3(M3,3)
              X1=X1+VPR(M3,M2,M1)*YY1*Z1
              X1=X1-VCR(M3,M2,M1,2)*Y2*Z1-
     1        VCR(M3,M2,M1,3)*Y1*Z2-VCR(M3,M2,M1,7)*Y3*Z1-
     2        2*VCR(M3,M2,M1,8)*Y2*Z2-
     3        VCR(M3,M2,M1,9)*Y1*Z3
              X1=X1+VCR(M3,M2,M1,10)*Y1*Z1
              IF(J21.GT.1)
     1        X1=X1+VRR(KROT,M3,M2,M1)*Y1*Z1
              X2=X2-VCR(M3,M2,M1,1)*Y1*Z1-2*VCR(M3,M2,M1,5)*Y2*Z1-
     1        2*VCR(M3,M2,M1,6)*Y1*Z2
              X3=X3-VCR(M3,M2,M1,4)*Y1*Z1
            END DO
          END IF
        END DO
C**INTEGRATE OVER SINGLE STATES (END)
        Y=HL1(M1,1)
        TERM=TERM+Y*(X1*W1+X2*W2+X3*W3)
      END DO
      DO K=1,NMODE
        IF(K.NE.MODE1.AND.K.NE.MODE2.AND.K.NE.MODE3)THEN
          TERM=TERM*S(K)
        END IF
      END DO
C**NEEDS CONDITION (0 OR 1) FOR ASYMM FNS.
      XK(ILHS,IRHS)=XK(ILHS,IRHS)+TERM*MD
      IF(ITIM3A.EQ.0)THEN
        CALL TIMIT(3)
        ITIM3A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE CV3(NMODE,MODE1,MODE2,MODE3,HL1,HR1,XQ1,HL2,HR2,XQ2,
     1HL3,HR3,XQ3,HLTAU,HRTAU,XQTAU,MM1,MM2,MM3,MMTAU,S,XK,ISIZE,
     2ILHS,IRHS,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,15),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,15),VRR(J21,MM3,MM2,MM1)
      DIMENSION X(15)
      DIMENSION MODINT(NMODE)
      DIMENSION HLTAU(MMTAU,3),HRTAU(MMTAU,3),XQTAU(MMTAU)
      DIMENSION HL1(MM1,3),HR1(MM1,3),HL2(MM2,3),HR2(MM2,3)
      DIMENSION HL3(MM3,3),HR3(MM3,3),XK(ISIZE,1)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),S(NMODE)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N2)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      CALL DCV3(NMODE,MODE1,MODE2,MODE3,HL1,HR1,XQ1,HL2,HR2,XQ2,
     1HL3,HR3,XQ3,HLTAU,HRTAU,XQTAU,MM1,MM1/MD1,MM2,MM2/MD2,MM3,
     2MM3/MD3,MMTAU,S,XK,ISIZE,ILHS,IRHS,VP,VPR,VC,VCR,VR,VRR,J21,KROT,
     3MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DCV3(NMODE,MODE1,MODE2,MODE3,HL1,HR1,XQ1,HL2,HR2,XQ2,
     1HL3,HR3,XQ3,HLTAU,HRTAU,XQTAU,MH1,MM1,MH2,MM2,MH3,MM3,MMTAU,S,XK,
     2ISIZE,ILHS,IRHS,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM3,MM2,MM1),VC(MM3,MM2,MM1,15),VR(J21,MM3,MM2,MM1)
      REAL*4 VPR(MM3,MM2,MM1),VCR(MM3,MM2,MM1,15),VRR(J21,MM3,MM2,MM1)
      DIMENSION X(15)
      DIMENSION MODINT(NMODE)
      DIMENSION HLTAU(MMTAU,3),HRTAU(MMTAU,3),XQTAU(MMTAU)
CCCC  DIMENSION HL1(MM1,3),HR1(MM1,3),HL2(MM2,3),HR2(MM2,3)
CCCC  DIMENSION HL3(MM3,3),HR3(MM3,3),XK(ISIZE,1)
      DIMENSION HL1(MH1,3),HR1(MH1,3),HL2(MH2,3),HR2(MH2,3)
      DIMENSION HL3(MH3,3),HR3(MH3,3),XK(ISIZE,1)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),S(NMODE)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM3A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating CV3'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

      IFACTL=JNTFAC(NMODE,ICOUPL,3)
      IFACTC=JNTFAC(NMODE,ICOUPC,3)

      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      TERM=0
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N2)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      MD=MD1*MD2*MD3*MDT
C**LOOP ROUND TAU
      ITAU=INIT-INCTAU
      DO MTAU=1,MMTAU/MDT
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.3)READ(63)VR
          IF(ICOUPC.GE.3)READ(83)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.3)READ(63)VRR
          IF(ICOUPC.GE.3)READ(83)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(73)VP
        ELSE
          READ(73)VPR
        END IF

C***********************************************************

        Z1=HLTAU(MTAU,1)*HRTAU(MTAU,1)*DSTAU(ITAU)
        Z2=HLTAU(MTAU,1)*HRTAU(MTAU,2)*DSTAU(ITAU)
        Z3=HLTAU(MTAU,2)*HRTAU(MTAU,1)*DSTAU(ITAU)
        Z4=HLTAU(MTAU,2)*HRTAU(MTAU,2)*DSTAU(ITAU)
CCCC    DO M1=1,MM1/MD1
        DO M1=1,MM1
          X1=HL1(M1,1)*HR1(M1,1)
          X2=HL1(M1,1)*HR1(M1,2)
          X3=HL1(M1,2)*HR1(M1,1)
          X4=HL1(M1,2)*HR1(M1,2)
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
            Y1=HL2(M2,1)*HR2(M2,1)
            Y2=HL2(M2,1)*HR2(M2,2)
            Y3=HL2(M2,2)*HR2(M2,1)
            Y4=HL2(M2,2)*HR2(M2,2)
C**INTEGRATE OVER SINGLE STATES (START)
CCCC        DO M3=1,MM3/MD3
            DO M3=1,MM3
              W1=HL3(M3,1)*HR3(M3,1)
              W2=HL3(M3,1)*HR3(M3,2)
              W3=HL3(M3,2)*HR3(M3,1)
              W4=HL3(M3,2)*HR3(M3,2)
              IF(JCOUPL.GT.0)THEN
                VV=VP(M3,M2,M1)*IFACTL
                VV=VV+VR(KROT,M3,M2,M1)*FACTRC
                DO I=1,15
                  X(I)=VC(M3,M2,M1,I)*IFACTC
                END DO
              ELSE
                VV=VPR(M3,M2,M1)*IFACTL
                VV=VV+VRR(KROT,M3,M2,M1)*FACTRC
                DO I=1,15
                  X(I)=VCR(M3,M2,M1,I)*IFACTC
                END DO
              END IF
              TERM=TERM+X(1)*Y1*W1*Z1*(X2+X3)+
     1                  X(2)*X1*W1*Z1*(Y2+Y3)+
     2                  X(3)*X1*Y1*Z1*(W2+W3)+
     3                  X(4)*X1*Y1*W1*(Z2+Z3)+
     4                  X(5)*Y1*W1*Z1*X4+
     5                  X(6)*W1*Z1*(X3*Y2+X2*Y3)+
     6                  X(7)*Y1*Z1*(X3*W2+X2*W3)+
     7                  X(8)*Y1*W1*(X3*Z2+X2*Z3)+
     8                  X(9)*X1*W1*Z1*Y4+
     9                  X(10)*X1*Z1*(Y3*W2+Y2*W3)+
     &                  X(11)*X1*W1*(Y3*Z2+Y2*Z3)+
     1                  X(12)*X1*Y1*Z1*W4+
     2                  X(13)*X1*Y1*(W3*Z2+W2*Z3)+
     3                  X(14)*X1*Y1*W1*Z4+
     4                  X(15)*X1*Y1*W1*Z1
            END DO
C**INTEGRATE OVER SINGLE STATES (END)
          END DO
        END DO
      END DO
      DO K=1,NMODE
        IF(K.NE.MODE1.AND.K.NE.MODE2.AND.K.NE.MODE3)THEN
          TERM=TERM*S(K)
        END IF
      END DO
C**NEEDS CONDITION (0 OR 1) FOR ASYMM FNS.
      XK(ILHS,IRHS)=XK(ILHS,IRHS)+TERM*MD
      IF(ITIM3A.EQ.0)THEN
        CALL TIMIT(3)
        ITIM3A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE CI4(NMODE,MODE1,MODE2,MODE3,MODE4,HL1,HR1,XQ1,HL2,HR2,
     1XQ2,HL3,HR3,XQ3,HL4,HR4,XQ4,MM1,MM2,MM3,MM4,S,XK,ISIZE,NATOM,QQ,
     2XZ,AB,B,AA,BB,RR,XX,X0,XL,XM,ILHS,IRHS,NPOT,IPOT,JPOT,CPOT,VP,
     3VPR,VC,VCR,VR,VRR,J21,KROT,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,15),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,15),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION HL1(MM1,3),HR1(MM1,3),HL2(MM2,3),HR2(MM2,3)
      DIMENSION HL3(MM3,3),HR3(MM3,3),HL4(MM4,3),HR4(MM4,3)
      DIMENSION XK(ISIZE,1),XQ4(MM4)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),S(NMODE)
      DIMENSION QQ(NMODE),XZ(NMODE,NMODE,3),AB(NMODE,3),RR(NATOM,NATOM)
      DIMENSION B(NMODE,NMODE),AA(NMODE,3,3),BB(NMODE)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      DIMENSION G1(3,3),XIN(3,3),XMU(3,3),SUP1(3,3),SUP2(3,3),SUP3(10)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
        END DO
      END DO
      IF(N3.EQ.N4)MD4=1
      IF(N2.EQ.N4)MD4=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N2)MD2=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      CALL DCI4(NMODE,MODE1,MODE2,MODE3,MODE4,HL1,HR1,XQ1,HL2,
     1HR2,XQ2,HL3,HR3,XQ3,HL4,HR4,XQ4,MM1,MM1/MD1,MM2,MM2/MD2,MM3,
     2MM3/MD3,MM4,MM4/MD4,S,XK,ISIZE,NATOM,QQ,XZ,AB,B,AA,BB,RR,XX,X0,
     3XL,XM,ILHS,IRHS,NPOT,IPOT,JPOT,CPOT,VP,VPR,VC,VCR,VR,VRR,J21,
     4KROT,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DCI4(NMODE,MODE1,MODE2,MODE3,MODE4,HL1,HR1,XQ1,HL2,
     1HR2,XQ2,HL3,HR3,XQ3,HL4,HR4,XQ4,MH1,MM1,MH2,MM2,MH3,MM3,MH4,MM4,
     2S,XK,ISIZE,NATOM,QQ,XZ,AB,B,AA,BB,RR,XX,X0,XL,XM,ILHS,IRHS,NPOT,
     3IPOT,JPOT,CPOT,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      CHARACTER*3 CHSYM(8)
      CHARACTER*2 SYMBOL(100),SYMBAD
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,15),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,15),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION MODINT(NMODE)
      DIMENSION HL1(MH1,3),HR1(MH1,3),HL2(MH2,3),HR2(MH2,3)
      DIMENSION HL3(MH3,3),HR3(MH3,3),HL4(MH4,3),HR4(MH4,3)
      DIMENSION XK(ISIZE,1),XQ4(MM4)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),S(NMODE)
      DIMENSION QQ(NMODE),XZ(NMODE,NMODE,3),AB(NMODE,3),RR(NATOM,NATOM)
      DIMENSION B(NMODE,NMODE),AA(NMODE,3,3),BB(NMODE)
      DIMENSION XX(NATOM,3),X0(NATOM,3),XL(NATOM,NMODE,3),XM(NATOM)
      DIMENSION G1(3,3),XIN(3,3),XMU(3,3),SUP1(3,3),SUP2(3,3),SUP3(10)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/MOLPRO/MOLPRO,MOUT,MINP,SYMBOL,CHSYM,MOLINC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM4A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating CI4'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

      IFACTC=INTFAC(NMODE,ICOUPC,4)
      IFACTL=INTFAC(NMODE,ICOUPL,4)
      IF(MOLINC.GT.0)IFACTL=1
      IF(IWHICH.EQ.0)IFACTL=1

C***********************************************************

      IF(JCOUPC.GE.0)THEN
        IF(J21.GT.1.AND.ICOUPC.GT.3)READ(64)VR
        IF(ICOUPC.GT.3)READ(84)VC
      ELSE
        IF(J21.GT.1.AND.ICOUPC.GT.3)READ(64)VRR
        IF(ICOUPC.GT.3)READ(84)VCR
      END IF
      IF(JCOUPL.GT.0)THEN
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(74)VP
      ELSE
        IF(IWHICH.GE.0.OR.MOLINC.EQ.0)READ(74)VPR
      END IF

C***********************************************************

      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
        END DO
      END DO
      IF(N3.EQ.N4)MD4=1
      IF(N2.EQ.N4)MD4=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N2)MD2=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      MD=MD1*MD2*MD3*MD4

C***********************************************************

      TERM=0
CCCC  DO M1=1,MM1/MD1
      DO M1=1,MM1
        X1=0
        X2=0
        X3=0
        W1=HR1(M1,1)
        W2=HR1(M1,2)
        W3=HR1(M1,3)
C**INTEGRATE OVER SINGLE STATES (START)
CCCC    DO M2=1,MM2/MD2
        DO M2=1,MM2
          Y0=HL2(M2,1)
          Y1=Y0*HR2(M2,1)*IFACTC
          YY1=Y0*HR2(M2,1)*IFACTL
          Y2=Y0*HR2(M2,2)*IFACTC
          Y3=Y0*HR2(M2,3)*IFACTC
CCCC      DO M3=1,MM3/MD3
          DO M3=1,MM3
            Z0=HL3(M3,1)
            Z1=Z0*HR3(M3,1)
            Z2=Z0*HR3(M3,2)
            Z3=Z0*HR3(M3,3)
            IF(JCOUPL.GT.0)THEN
CCCC          DO M4=1,MM4/MD4
              DO M4=1,MM4
                V0=HL4(M4,1)
                V1=V0*HR4(M4,1)
                V2=V0*HR4(M4,2)
                V3=V0*HR4(M4,3)
                X1=X1+VP(M4,M3,M2,M1)*YY1*Z1*V1
                X1=X1-VC(M4,M3,M2,M1,2)*Y2*Z1*V1-
     1          VC(M4,M3,M2,M1,3)*Y1*Z2*V1-VC(M4,M3,M2,M1,4)*Y1*Z1*V2-
     2          VC(M4,M3,M2,M1,9)*Y3*Z1*V1-
     3          2*VC(M4,M3,M2,M1,10)*Y2*Z2*V1-
     3          2*VC(M4,M3,M2,M1,11)*Y2*Z1*V2-
     4          VC(M4,M3,M2,M1,12)*Y1*Z3*V1-
     5          2*VC(M4,M3,M2,M1,13)*Y1*Z2*V2-
     6          VC(M4,M3,M2,M1,14)*Y1*Z1*V3
                X1=X1+VC(M4,M3,M2,M1,15)*Y1*Z1*V1
                IF(J21.GT.1)
     1          X1=X1+VR(KROT,M4,M3,M2,M1)*Y1*Z1*V1
                X2=X2-VC(M4,M3,M2,M1,1)*Y1*Z1*V1-
     1          2*VC(M4,M3,M2,M1,6)*Y2*Z1*V1
     1          -2*VC(M4,M3,M2,M1,7)*Y1*Z2*V1
     2          -2*VC(M4,M3,M2,M1,8)*Y1*Z1*V2
                X3=X3-VC(M4,M3,M2,M1,5)*Y1*Z1*V1
              END DO
            ELSE
CCCC          DO M4=1,MM4/MD4
              DO M4=1,MM4
                V0=HL4(M4,1)
                V1=V0*HR4(M4,1)
                V2=V0*HR4(M4,2)
                V3=V0*HR4(M4,3)
                X1=X1+VPR(M4,M3,M2,M1)*Y1*Z1*V1
                X1=X1-VCR(M4,M3,M2,M1,2)*Y2*Z1*V1-
     1          VCR(M4,M3,M2,M1,3)*Y1*Z2*V1-
     2          VCR(M4,M3,M2,M1,4)*Y1*Z1*V2-
     2          VCR(M4,M3,M2,M1,9)*Y3*Z1*V1-
     3          2*VCR(M4,M3,M2,M1,10)*Y2*Z2*V1-
     3          2*VCR(M4,M3,M2,M1,11)*Y2*Z1*V2-
     4          VCR(M4,M3,M2,M1,12)*Y1*Z3*V1-
     5          2*VCR(M4,M3,M2,M1,13)*Y1*Z2*V2-
     6          VCR(M4,M3,M2,M1,14)*Y1*Z1*V3
                X1=X1+VCR(M4,M3,M2,M1,15)*Y1*Z1*V1
                IF(J21.GT.1)
     1          X1=X1+VRR(KROT,M4,M3,M2,M1)*Y1*Z1*V1
                X2=X2-VCR(M4,M3,M2,M1,1)*Y1*Z1*V1-
     1          2*VCR(M4,M3,M2,M1,6)*Y2*Z1*V1
     1          -2*VCR(M4,M3,M2,M1,7)*Y1*Z2*V1
     2          -2*VCR(M4,M3,M2,M1,8)*Y1*Z1*V2
                X3=X3-VCR(M4,M3,M2,M1,5)*Y1*Z1*V1
              END DO
            END IF
          END DO
        END DO
C**INTEGRATE OVER SINGLE STATES (END)
        Y=HL1(M1,1)
        TERM=TERM+Y*(X1*W1+X2*W2+X3*W3)
      END DO
      DO K=1,NMODE
        IF(K.NE.MODE1.AND.K.NE.MODE2.AND.K.NE.MODE3.AND.K.NE.MODE4)THEN
          TERM=TERM*S(K)
        END IF
      END DO
C**NEEDS CONDITION (0 OR 1) FOR ASYMM FNS.
      XK(ILHS,IRHS)=XK(ILHS,IRHS)+TERM*MD
      IF(ITIM4A.EQ.0)THEN
        CALL TIMIT(3)
        ITIM4A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE CV4(NMODE,MODE1,MODE2,MODE3,MODE4,HL1,HR1,XQ1,HL2,HR2,
     1XQ2,HL3,HR3,XQ3,HL4,HR4,XQ4,HLTAU,HRTAU,XQTAU,MM1,MM2,MM3,MM4,
     2MMTAU,S,XK,ISIZE,ILHS,IRHS,VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,21),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,21),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION X(21)
      DIMENSION MODINT(NMODE)
      DIMENSION HLTAU(MMTAU,3),HRTAU(MMTAU,3),XQTAU(MMTAU)
      DIMENSION HL1(MM1,3),HR1(MM1,3),HL2(MM2,3),HR2(MM2,3)
      DIMENSION HL3(MM3,3),HR3(MM3,3),HL4(MM4,3),HR4(MM4,3)
      DIMENSION XK(ISIZE,1),XQ4(MM4)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),S(NMODE)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.NE.1)MD4=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.NE.1)MD4=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.NE.1)MD4=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.NE.1)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.NE.1)MD4=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.NE.1)MD4=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.NE.1)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.NE.1)MD4=1
      CALL DCV4(NMODE,MODE1,MODE2,MODE3,MODE4,HL1,HR1,XQ1,HL2,
     1HR2,XQ2,HL3,HR3,XQ3,HL4,HR4,XQ4,HLTAU,HRTAU,XQTAU,MM1,MM1/MD1,
     2MM2,MM2/MD2,MM3,MM3/MD3,MM4,MM4/MD4,MMTAU,S,XK,ISIZE,ILHS,IRHS,
     3VP,VPR,VC,VCR,VR,VRR,J21,KROT,MODINT)
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE DCV4(NMODE,MODE1,MODE2,MODE3,MODE4,HL1,HR1,XQ1,HL2,
     1HR2,XQ2,HL3,HR3,XQ3,HL4,HR4,XQ4,HLTAU,HRTAU,XQTAU,MH1,MM1,MH2,
     2MM2,MH3,MM3,MH4,MM4,MMTAU,S,XK,ISIZE,ILHS,IRHS,VP,VPR,VC,VCR,VR,
     3VRR,J21,KROT,MODINT)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 VP(MM4,MM3,MM2,MM1),VC(MM4,MM3,MM2,MM1,21),
     1VR(J21,MM4,MM3,MM2,MM1)
      REAL*4 VPR(MM4,MM3,MM2,MM1),VCR(MM4,MM3,MM2,MM1,21),
     1VRR(J21,MM4,MM3,MM2,MM1)
      DIMENSION X(21)
      DIMENSION MODINT(NMODE)
      DIMENSION HLTAU(MMTAU,3),HRTAU(MMTAU,3),XQTAU(MMTAU)
CCCC  DIMENSION HL1(MM1,3),HR1(MM1,3),HL2(MM2,3),HR2(MM2,3)
CCCC  DIMENSION HL3(MM3,3),HR3(MM3,3),HL4(MM4,3),HR4(MM4,3)
      DIMENSION HL1(MH1,3),HR1(MH1,3),HL2(MH2,3),HR2(MH2,3)
      DIMENSION HL3(MH3,3),HR3(MH3,3),HL4(MH4,3),HR4(MH4,3)
      DIMENSION XK(ISIZE,1),XQ4(MM4)
      DIMENSION XQ1(MM1),XQ2(MM2),XQ3(MM3),S(NMODE)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
      COMMON/REACTN/IREACT,MDUM,INIT,INCTAU
CCCC  COMMON/SCOORD/DSTAU(362)
      COMMON/SCOORD/DSTAU(722)
      COMMON/VIBMOD/NSMODE,NVMODE,NNMODE
C**TEMPORARY (DIMENSIONS)
      COMMON/SYMM/NRSYM,NVSYM,NWSYM,NSYM(10),ISYM(10,100),NTOT(10)
      COMMON/SYMMP/ISYMP(10,10),ISYMPG,ISYMD(4,2)
      COMMON/TIMER/ITIM1A,ITIM1B,ITIM2A,ITIM2B,ITIM3A,ITIM3B,
     1ITIM4A,ITIM4B,ITIM5A,ITIM5B,ITIM6A,ITIM6B,ITIM
      COMMON/PRINT/IPRINT,JPRINT
      COMMON/FILASS/IOUT,INP

      IF(ITIM4A.EQ.0)THEN
        WRITE(IOUT,*)'Calculating CV4'
        CALL FLUSH(IOUT)
        CALL TIMIT(1)
      END IF

      IFACTL=JNTFAC(NMODE,ICOUPL,4)
      IFACTC=JNTFAC(NMODE,ICOUPC,4)

      FACTRC=0
      IF(J21.GT.1)FACTRC=IFACTC
      TERM=0
      MDT=MODINT(NSMODE)
      MD1=MODINT(MODE1)
      MD2=MODINT(MODE2)
      MD3=MODINT(MODE3)
      MD4=MODINT(MODE4)
      DO I=1,NWSYM
        DO J=1,NSYM(I)
          IF(MODE1.EQ.ISYM(I,J))N1=I
          IF(MODE2.EQ.ISYM(I,J))N2=I
          IF(MODE3.EQ.ISYM(I,J))N3=I
          IF(MODE4.EQ.ISYM(I,J))N4=I
          IF(NSMODE.EQ.ISYM(I,J))NT=I
        END DO
      END DO
      IF(N1.EQ.N2)MD2=1
      IF(N1.EQ.N3)MD3=1
      IF(N1.EQ.N4)MD4=1
      IF(N2.EQ.N3)MD3=1
      IF(N2.EQ.N4)MD4=1
      IF(N3.EQ.N4)MD4=1
      IF(N1.EQ.NT.AND.MDT.NE.1)MD1=1
      IF(N2.EQ.NT.AND.MDT.NE.1)MD2=1
      IF(N3.EQ.NT.AND.MDT.NE.1)MD3=1
      IF(N4.EQ.NT.AND.MDT.NE.1)MD4=1
      N1T=ISYMP(N1,NT)
      IF(N1T.EQ.N2.AND.MDT.NE.1)MD2=1
      IF(N1T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N1T.EQ.N4.AND.MDT.NE.1)MD4=1
      N2T=ISYMP(N2,NT)
      IF(N2T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N2T.EQ.N4.AND.MDT.NE.1)MD4=1
      N3T=ISYMP(N3,NT)
      IF(N3T.EQ.N4.AND.MDT.NE.1)MD4=1
      N12=ISYMP(N1,N2)
      IF(N12.EQ.N3)MD3=1
      IF(N12.EQ.N4)MD4=1
      N13=ISYMP(N1,N3)
      IF(N13.EQ.N4)MD4=1
      N23=ISYMP(N2,N3)
      IF(N23.EQ.N4)MD4=1
      N12T=ISYMP(N12,NT)
      IF(N12T.EQ.N3.AND.MDT.NE.1)MD3=1
      IF(N12T.EQ.N4.AND.MDT.NE.1)MD4=1
      N13T=ISYMP(N13,NT)
      IF(N13T.EQ.N4.AND.MDT.NE.1)MD4=1
      N23T=ISYMP(N23,NT)
      IF(N23T.EQ.N4.AND.MDT.NE.1)MD4=1
      N123=ISYMP(N12,N3)
      IF(N123.EQ.N4)MD4=1
      N123T=ISYMP(N123,NT)
      IF(N123T.EQ.N4.AND.MDT.NE.1)MD4=1
      MD=MD1*MD2*MD3*MD4*MDT
C**LOOP ROUND TAU
      ITAU=INIT-INCTAU
      DO MTAU=1,MMTAU/MDT
        ITAU=ITAU+INCTAU
CCCC    IF(ITAU.GT.362)ITAU=ITAU-360
        IF(ITAU.GT.722)ITAU=ITAU-720

C***********************************************************

        IF(JCOUPC.GE.0)THEN
          IF(J21.GT.1.AND.ICOUPC.GE.4)READ(64)VR
          IF(ICOUPC.GE.4)READ(84)VC
        ELSE
          IF(J21.GT.1.AND.ICOUPC.GE.4)READ(64)VRR
          IF(ICOUPC.GE.4)READ(84)VCR
        END IF
        IF(JCOUPL.GT.0)THEN
          READ(74)VP
        ELSE
          READ(74)VPR
        END IF

C***********************************************************

        Z1=HLTAU(MTAU,1)*HRTAU(MTAU,1)*DSTAU(ITAU)
        Z2=HLTAU(MTAU,1)*HRTAU(MTAU,2)*DSTAU(ITAU)
        Z3=HLTAU(MTAU,2)*HRTAU(MTAU,1)*DSTAU(ITAU)
        Z4=HLTAU(MTAU,2)*HRTAU(MTAU,2)*DSTAU(ITAU)
CCCC    DO M1=1,MM1/MD1
        DO M1=1,MM1
          X1=HL1(M1,1)*HR1(M1,1)
          X2=HL1(M1,1)*HR1(M1,2)
          X3=HL1(M1,2)*HR1(M1,1)
          X4=HL1(M1,2)*HR1(M1,2)
CCCC      DO M2=1,MM2/MD2
          DO M2=1,MM2
            Y1=HL2(M2,1)*HR2(M2,1)
            Y2=HL2(M2,1)*HR2(M2,2)
            Y3=HL2(M2,2)*HR2(M2,1)
            Y4=HL2(M2,2)*HR2(M2,2)
CCCC        DO M3=1,MM3/MD3
            DO M3=1,MM3
              W1=HL3(M3,1)*HR3(M3,1)
              W2=HL3(M3,1)*HR3(M3,2)
              W3=HL3(M3,2)*HR3(M3,1)
              W4=HL3(M3,2)*HR3(M3,2)
C**INTEGRATE OVER SINGLE STATES (START)
CCCC          DO M4=1,MM4/MD4
              DO M4=1,MM4
                P1=HL4(M4,1)*HR4(M4,1)
                P2=HL4(M4,1)*HR4(M4,2)
                P3=HL4(M4,2)*HR4(M4,1)
                P4=HL4(M4,2)*HR4(M4,2)
                IF(JCOUPL.GT.0)THEN
                  VV=VP(M4,M3,M2,M1)*IFACTL
                  VV=VV+VR(KROT,M4,M3,M2,M1)*FACTRC
                  DO I=1,21
                    X(I)=VC(M4,M3,M2,M1,I)*IFACTC
                  END DO
                ELSE
                  VV=VPR(M4,M3,M2,M1)*IFACTL
                  VV=VV+VRR(KROT,M4,M3,M2,M1)*FACTRC
                  DO I=1,21
                    X(I)=VCR(M4,M3,M2,M1,I)*IFACTC
                  END DO
                END IF
                TERM=TERM+X(1)*Y1*W1*P1*Z1*(X2+X3)+
     1                    X(2)*X1*W1*P1*Z1*(Y2+Y3)+
     2                    X(3)*X1*Y1*P1*Z1*(W2+W3)+
     3                    X(4)*X1*Y1*W1*Z1*(P2+P3)+
     4                    X(5)*X1*Y1*W1*P1*(Z2+Z3)+
     5                    X(6)*Y1*W1*P1*Z1*X4+
     6                    X(7)*W1*P1*Z1*(X3*Y2+X2*Y3)+
     7                    X(8)*Y1*P1*Z1*(X3*W2+X2*W3)+
     8                    X(9)*Y1*W1*Z1*(X3*P2+X2*P3)+
     9                    X(10)*Y1*W1*P1*(X3*Z2+X2*Z3)+
     &                    X(11)*X1*W1*P1*Z1*Y4+
     1                    X(12)*X1*P1*Z1*(Y3*W2+Y2*W3)+
     2                    X(13)*X1*W1*Z1*(Y3*P2+Y2*P3)+
     3                    X(14)*X1*W1*P1*(Y3*Z2+Y2*Z3)+
     4                    X(15)*X1*Y1*P1*Z1*W4+
     5                    X(16)*X1*Y1*Z1*(W3*P2+W2*P3)+
     6                    X(17)*X1*Y1*P1*(W3*Z2+W2*Z3)+
     7                    X(18)*X1*Y1*W1*Z1*P4+
     8                    X(19)*X1*Y1*W1*(P3*Z2+P2*Z3)+
     9                    X(20)*X1*Y1*W1*P1*Z4+
     &                    X(21)*X1*Y1*W1*P1*Z1
              END DO
C**INTEGRATE OVER SINGLE STATES (END)
            END DO
          END DO
        END DO
      END DO
      DO K=1,NMODE
        IF(K.NE.MODE1.AND.K.NE.MODE2.AND.K.NE.MODE3.AND.K.NE.MODE4)THEN
          TERM=TERM*S(K)
        END IF
      END DO
C**NEEDS CONDITION (0 OR 1) FOR ASYMM FNS.
      XK(ILHS,IRHS)=XK(ILHS,IRHS)+TERM*MD
      IF(ITIM4A.EQ.0)THEN
        CALL TIMIT(3)
        ITIM4A=1
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE MATIN(XA,XAR,N,INP)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 XA(N*(N+1)/2)
      REAL*4 XAR(N*(N+1)/2)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GE.0)THEN
        READ(INP)XA
      ELSE
        READ(INP)XAR
        DO I=1,N*(N+1)/2
          K=N*(N+1)/2+1-I
          XA(K)=XAR(K)
        END DO
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE MATOUT(XK,XKR,N,INP)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 XK(N*(N+1)/2)
      REAL*4 XKR(N*(N+1)/2)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GE.0)THEN
        WRITE(INP)XK
      ELSE
        DO I=1,N*(N+1)/2
          XKR(I)=XK(I)
        END DO
        WRITE(INP)XKR
        DO I=1,N*(N+1)/2
          K=N*(N+1)/2+1-I
          XK(K)=XKR(K)
        END DO
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE MTIN(XA,XAR,N,INP)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 XA(N)
      REAL*4 XAR(N)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GE.0)THEN
        READ(INP)XA
      ELSE
        READ(INP)XAR
        DO I=1,N
          K=N+1-I
          XA(K)=XAR(K)
        END DO
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE MTOUT(XK,XKR,N,INP)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      REAL*8 XK(N)
      REAL*4 XKR(N)
      COMMON/COUPLE/ICOUPL,JCOUPL,ICOUPC,JCOUPC
      IF(JCOUPL.GE.0)THEN
        WRITE(INP)XK
      ELSE
        DO I=1,N
          XKR(I)=XK(I)
        END DO
        WRITE(INP)XKR
      END IF
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE GETPT1(V,NPOT,IPOT,JPOT,CPOT,NMODE,QQ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT),QQ(1)
      COMMON/FILASS/IOUT
      V=0
      DO I=NMODE+1,NPOT
        TERM=1
C**MAXIMUM OF 6 MODES COUPLED
        IF(IPOT(I,2).EQ.0)THEN
          K=IPOT(I,1)
          L=JPOT(I,1)
          IF(L.NE.0)TERM=QQ(K)**L
          V=V+CPOT(I)*TERM
        END IF
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE GETPT2(V,NPOT,IPOT,JPOT,CPOT,NMODE,QQ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT),QQ(NMODE)
      V=0
      DO I=NMODE+1,NPOT
        TERM=1
C**MAXIMUM OF 6 MODES COUPLED
        IF(IPOT(I,2).NE.0.AND.IPOT(I,3).EQ.0)THEN
          DO J=1,2
            K=IPOT(I,J)
            L=JPOT(I,J)
            TERM=TERM*QQ(K)**L
          END DO
          V=V+CPOT(I)*TERM
        END IF
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE GETPT3(V,NPOT,IPOT,JPOT,CPOT,NMODE,QQ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT),QQ(NMODE)
      V=0
      DO I=NMODE+1,NPOT
        TERM=1
C**MAXIMUM OF 6 MODES COUPLED
        IF(IPOT(I,3).NE.0.AND.IPOT(I,4).EQ.0)THEN
          DO J=1,3
            K=IPOT(I,J)
            L=JPOT(I,J)
            TERM=TERM*QQ(K)**L
          END DO
          V=V+CPOT(I)*TERM
        END IF
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE GETPT4(V,NPOT,IPOT,JPOT,CPOT,NMODE,QQ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT),QQ(NMODE)
      V=0
      DO I=NMODE+1,NPOT
        TERM=1
C**MAXIMUM OF 6 MODES COUPLED
        IF(IPOT(I,4).NE.0)THEN
          DO J=1,4
            K=IPOT(I,J)
            L=JPOT(I,J)
            TERM=TERM*QQ(K)**L
          END DO
          V=V+CPOT(I)*TERM
        END IF
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE GETPT5(V,NPOT,IPOT,JPOT,CPOT,NMODE,QQ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT),QQ(NMODE)
      V=0
      DO I=NMODE+1,NPOT
        TERM=1
C**MAXIMUM OF 6 MODES COUPLED
        IF(IPOT(I,5).NE.0.AND.IPOT(I,6).EQ.0)THEN
          DO J=1,5
            K=IPOT(I,J)
            L=JPOT(I,J)
            TERM=TERM*QQ(K)**L
          END DO
          V=V+CPOT(I)*TERM
        END IF
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
      SUBROUTINE GETPT6(V,NPOT,IPOT,JPOT,CPOT,NMODE,QQ)
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION IPOT(NPOT,6),JPOT(NPOT,6),CPOT(NPOT),QQ(NMODE)
      V=0
      DO I=NMODE+1,NPOT
        TERM=1
C**MAXIMUM OF 6 MODES COUPLED
        IF(IPOT(I,6).NE.0)THEN
          DO J=1,6
            K=IPOT(I,J)
            L=JPOT(I,J)
            TERM=TERM*QQ(K)**L
          END DO
          V=V+CPOT(I)*TERM
        END IF
      END DO
      RETURN
      END
C****************************************************************
C****************************************************************
C**XINCHUAN
      integer function intfac(nmode,icoupl,j)
      implicit double precision (a-h,o-z)
      implicit integer (i-n)
      COMMON/WHICH/IWHICH

      IF(IWHICH.EQ.0)THEN
        INTFAC=1
        RETURN
      END IF

      intfac=0
      if(icoupl.lt.j)then
CC      write(*,*)'Error in INTFAC !'
CC      STOP
        RETURN
      end if

      if(icoupl.eq.j)then
        intfac=1
        goto 100
      end if

      do j1=0,icoupl-j
        intfac=intfac+(-1)**j1*icom(nmode-j,j1)
      end do

100   continue

      return
      end
C****************************************************************
C****************************************************************
      integer function icom(m,n)
      implicit double precision (a-h,o-z)
      implicit integer (i-n)

      i=m
      j=n
      k=m-n

      if(m.lt.n)then
        write(*,*)'Stop! m < n'
        stop
      end if

      if(n.eq.0.or.m.eq.n)then
        icom=1
        goto 100
      end if


      icom=1

      do jj=i,max(j,k)+1,-1
        icom=icom*jj
      end do

      do jj=1,min(j,k)
        icom=icom/jj
      end do

100   continue

      return
      end
C**XINCHUAN
C****************************************************************
C****************************************************************
      integer function jntfac(nmode,icoupl,jc)

      implicit double precision (a-h,o-z)
      implicit integer (i-n)
      COMMON/WHICH/IWHICH
      COMMON/FACTOR/FACTOR(6)
      COMMON/FILASS/IOUT

      IF(IWHICH.EQ.0)THEN
        JNTFAC=1
        RETURN
      END IF

      JNTFAC=0
      if(icoupl.lt.jc)then
CC      write(*,*)'Error in JNTFAC !'
CC      STOP
        RETURN
      end if

      IF(JC.EQ.0)THEN
        IF(ICOUPL.EQ.0)IFACT=1
        IF(ICOUPL.EQ.1)IFACT=-(NMODE-1)
        IF(ICOUPL.EQ.2)THEN
          IFACT=1-FACTOR(ICOUPL)
          IFACT=IFACT+NMODE*(NMODE-2)
          IFACT=IFACT+1
        END IF
        IF(ICOUPL.EQ.3)THEN
          IFACT=0
          DO I=2,NMODE-2
            IFACT=IFACT+I
          END DO
          IFACT=IFACT*(FACTOR(1)-1)
          IFACT=IFACT+1-FACTOR(ICOUPL)
          IFACT=IFACT+(FACTOR(2)-1)*(NMODE-3)
          IFACT=IFACT-(FACTOR(1)-1)*(NMODE-3)*(NMODE-1)
          IFACT=IFACT+1
        END IF
        IF(ICOUPL.EQ.4)THEN
          IFACT=1
          IFACT=IFACT+1-FACTOR(ICOUPL)
          IFACT=IFACT+(FACTOR(3)-1)*(NMODE-4)
          JUNK=(NMODE-4)*(NMODE-2)
          DO I=2,NMODE-3
            JUNK=JUNK-I
          END DO
          IFACT=IFACT-(FACTOR(2)-1)*JUNK
          JUNK=1
          MMMODE=NMODE
          DO I=1,NMODE-3
            DO J=1,MMMODE-3
              JUNK=JUNK-J
            END DO
            MMMODE=MMMODE-1
          END DO
          ITERM=(NMODE-4)*(NMODE-2)
          DO I=2,NMODE-3
            ITERM=ITERM-I
          END DO
          JUNK=JUNK-ITERM*(NMODE-1)
          ITERM=0
          DO I=1,NMODE-2
            ITERM=ITERM+I
          END DO
          JUNK=JUNK+ITERM*(NMODE-4)
          IFACT=IFACT-(FACTOR(1)-1)*JUNK
        END IF
        IF(ICOUPL.GE.5)IFACT=INTFAC(NMODE,ICOUPL,0)
      END IF
      IF(JC.EQ.1)THEN
        IF(ICOUPL.EQ.1)IFACT=1
        IF(ICOUPL.EQ.2)IFACT=-(NMODE-2)
        IF(ICOUPL.EQ.3)THEN
          IFACT=(NMODE-3)*(NMODE-1)
          DO I=2,NMODE-2
            IFACT=IFACT-I
          END DO
        END IF
        IF(ICOUPL.EQ.4)THEN
          IFACT=-(NMODE-4)*(NMODE-3)*(NMODE-1)
          DO I=1,NMODE-4
            IFACT=IFACT-I*(NMODE-3-I)
          END DO
          DO I=1,NMODE-4
            IFACT=IFACT+(NMODE-2)*I
          END DO
          DO I=2,NMODE-2
            IFACT=IFACT+(NMODE-4)*I
          END DO
        END IF
        IF(ICOUPL.GE.5)IFACT=INTFAC(NMODE,ICOUPL,1)
      END IF
      IF(JC.EQ.2)THEN
        IF(ICOUPL.EQ.2)IFACT=1
        IF(ICOUPL.EQ.3)IFACT=-(NMODE-3)
        IF(ICOUPL.EQ.4)THEN
          IFACT=(NMODE-4)*(NMODE-3)
          DO I=1,NMODE-4
            IFACT=IFACT-I
          END DO
        END IF
        IF(ICOUPL.GE.5)IFACT=INTFAC(NMODE,ICOUPL,2)
      END IF
      IF(JC.EQ.3)THEN
        IF(ICOUPL.EQ.3)IFACT=1
        IF(ICOUPL.EQ.4)IFACT=-(NMODE-4)
        IF(ICOUPL.GE.5)IFACT=INTFAC(NMODE,ICOUPL,3)
      END IF
      IF(JC.EQ.4)THEN
        IF(ICOUPL.EQ.4)IFACT=1
        IF(ICOUPL.GE.5)IFACT=INTFAC(NMODE,ICOUPL,4)
      END IF
      IF(JC.EQ.5)THEN
        IF(ICOUPL.EQ.5)IFACT=1
        IF(ICOUPL.GT.5)IFACT=INTFAC(NMODE,ICOUPL,5)
      END IF

      JNTFAC=IFACT

      return
      end
